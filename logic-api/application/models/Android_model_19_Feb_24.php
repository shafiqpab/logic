<?php
include 'grade_class.php';
include 'observation_class.php';
include 'company_class.php';
include 'source_class.php';
include 'common_class.php';
include 'defect_class.php';
include 'inch_class.php';
include 'qc_dtls_class.php'; 
 
class Android_model extends CI_Model {

	function __construct() {
		error_reporting(0);

		parent::__construct();
	}

	/**
	 * [get_max_value description]
	 * @param  [string] $tableName [defining name of the table]
	 * @param  [string] $fieldName [defining name of the table column]
	 * @return [integer]            [return max value of the table column]
	 */

     function writeFile($fileName,$txt){
		$file="note_url_script/objectData/".$fileName.'_'.date('d-m-Y').".txt";
		$current = $txt."\n..........".date('d-m-Y h:i:s a',time()).".........\n\n";
		$myfile = fopen($file, "a");
		fwrite($myfile, $current);
		fclose($myfile);	
	 }


	 function getDuration($user_id,$text){
		$file="note_url_script/objectData/user_activity_file_".$user_id.".txt";
		$myfile = fopen($file, "r");
		list($barcode,$time_stamp) = explode(',',fgets($myfile));
		$duration = time() - $time_stamp;
		fclose($myfile);

		$myfile = fopen($file, "w");
		fwrite($myfile, $text.','.time());
		fclose($myfile);
		$duration = ($barcode == $text)?$duration:50;
		return $duration;
	 }






	function get_max_value($tableName, $fieldName) {
		return $this->db->select_max($fieldName)->get($tableName)->row()->{$fieldName};
	}

	/**
	 * [insertDataWithReturn description]
	 * @param  [string] $tableName [defining name of the table]
	 * @param  [array] $post [defining data to be inserted]
	 * @return [boolean]            [TRUE/FALSE]
	 */
	function insertData($post, $tableName) {
		$this->db->trans_start();
		$this->db->insert($tableName, $post);
		$this->db->trans_complete();
		if ($this->db->trans_status() == TRUE) {
			return TRUE;
		} else {
			return FALSE;
		}
	}

	/**
	 * [updateData description]
	 * @param  [string] $tableName [defining name of the table]
	 * @param  [array] $data [defining data to be updated]
	 * @param  [type] $condition [defining the condition for update]
	 * @return [boolean]            [TRUE/FALSE]
	 */
	function updateData($tableName, $data, $condition) {
		$this->db->trans_start();
		$this->db->update($tableName, $data, $condition);
		$this->db->trans_complete();
		if ($this->db->trans_status() == TRUE) {
			return TRUE;
		} else {
			return FALSE;
		}
	}

	/**
	 * [deleteRowByAttribute description]
	 * @param  [string] $tableName [defining name of the table]
	 * @param  [array] $data [value by which row will be deleted]
	 * @return [boolean]            [TRUE/FALSE]
	 */
	function deleteRowByAttribute($tableName, $attribute) {
		$this->db->trans_start();
		$this->db->delete($tableName, $attribute);
		$this->db->trans_complete();
		if ($this->db->trans_status() == TRUE) {
			return TRUE;
		} else {
			return FALSE;
		}
	}
	/**
	 * [get_field_value_by_attribute description]
	 * @param  [type] $tableName [description]
	 * @param  [type] $fieldName [description]
	 * @param  [type] $attribute [description]
	 * @return [type]            [description]
	 */
	function get_field_value_by_attribute($tableName, $fieldName, $attribute) {
		if (($attribute * 1) > 0) {
			$query = $this->db->query('select ' . $tableName . '.' . $fieldName . ' from ' . $tableName . ' where id=' . $this->db->escape($attribute));
			$result = $query->row();
			if (!empty($result)):
				return $result->{$fieldName};
			else:
				return false;
			endif;
		}

		/*$result = $this->db->get_where($tableName, $attribute)->row();
			        if (!empty($result)):
			            return $result->{$fieldName};
			        else:
			            return false;
		*/
	}
	public function apps_login($phone) {
		$data_array = array();
		$sql = "SELECT phone,status from apps_user where phone='$phone'";
		$data_sql = sql_select($sql);
		if (count($data_sql)) {
			foreach ($data_sql as $v) {
				$data_array["phone"] = $v->phone;
				$data_array["status"] = $v->status;
			}

		}
		return $data_array;

	}
	// ***********Akh Test ********
	function findAllRow($tableName) {
		return $this->db->get($tableName)->result();
	}

	function findByAttribute($tableName, $attribute) {
		return $this->db->get_where($tableName, $attribute)->row();
	}

	function getFieldsByAttribute($tableName, $fields, $attribute) {
		$this->db->select("$fields");
		return $this->db->get_where($tableName, $attribute)->row();
	}

	function getAllFieldsByAttribute($tableName, $fields, $attribute) {
		$this->db->select("$fields");
		return $this->db->get_where($tableName, $attribute)->result();
	}

	public function login($user_id, $password, $device_id="",$fcm_token ="",$device_type ="") {
		$empty_arrr = [];
		$query = $this->db->query('SELECT user_passwd.id AS "ID",user_passwd.password "PASSWORD" from user_passwd where user_name=' . $this->db->escape($user_id));
		if ($query->num_rows() == 1) {
			$user_info = $query->row();
			if(!empty($fcm_token) && !empty($device_id))
			{
				
				$token = $this->insert_fcm_token($user_info->ID,$device_id,$fcm_token,$device_type);
				if($token !=1)
				{
					return $token;
				}
			}
			
			$sewing_qc_config_data = $this->db->query("SELECT F.FLOOR_NAME, d.LINE_NUMBER, A.DEVICE_ID,B.ITEM_NAME, A.PO_NUMBER,A.JOB_NO,A.INTERNAL_REF
			from tabwise_sewing_line a,lib_garment_item b, prod_resource_mst d,lib_prod_floor f
			where a.status_active=1 and a.item_number_id=b.id and a.sewing_line=d.id and a.floor_id=f.id and a.inserted_by=$user_info->ID")->row();

			if(!empty($sewing_qc_config_data) && ($device_id!=$sewing_qc_config_data->DEVICE_ID))
			{
				$line_library = return_library_array("SELECT ID,LINE_NAME from lib_sewing_line", "id", "line_name");
				$line_numbers = explode(",", $sewing_qc_config_data->LINE_NUMBER);
				$line_names = "";
				foreach($line_numbers as $line)
				{
					$line_names .= $line_library[$line] . ", ";
				}
				$line_names = rtrim($line_names, ", ");
				$ref_data = "IR Number:$sewing_qc_config_data->INTERNAL_REF**Item:$sewing_qc_config_data->ITEM_NAME**Floor:$sewing_qc_config_data->FLOOR_NAME**Line:$line_names";
				return array("status" => "Failed", "module" => $empty_arrr, "msg"=> "This account is already logged in on another device. Please sign out from other device to login here.", "reference_data" => $ref_data);
			}

			$find = " ";
			$replace = "%20";
			$password = str_replace($find, $replace, $password);

			if ($user_info->PASSWORD == $this->encrypt($password)) {
				return $this->get_menu_by_privilege($user_info->ID);
			} else {
				return false;
			}
		}
	}

	public function logout($user_id) {
		$query = $this->db->query('update planning_board_status set board_status=0 where user_id=' . $this->db->escape($user_id));
	}

	public function encrypt($string) {

		$key = "logic_erp_2011_2012_platform";
		$result = '';
		for ($i = 0; $i < strlen($string); $i++) {
			$char = substr($string, $i, 1);
			$keychar = substr($key, ($i % strlen($key)) - 1, 1);
			$char = chr(ord($char) + ord($keychar));
			$result .= $char;
		}
		return base64_encode($result);
	}

	public function get_menu_by_privilege($user_id){

		$module_sql = "select c.id user_id,a.menu_name menu,a.m_menu_id menu_id,c.user_full_name full_name,c.user_name user_login_id,slno from main_menu a, user_priv_mst b,user_passwd c where b.user_id=? and a.m_menu_id=b.main_menu_id and b.user_id=c.id and a.status=1 and a.is_mobile_menu=1 and root_menu=0 order by slno asc";
		$module_result = $this->db->query($module_sql,array($user_id))->result();

		$menu_sql = "select c.id user_id,a.menu_name menu,a.f_location,a.root_menu,a.m_menu_id menu_id,c.user_full_name full_name,c.user_name user_login_id,slno from main_menu a, user_priv_mst b,user_passwd c where b.user_id=? and a.m_menu_id=b.main_menu_id and b.user_id=c.id and a.status=1 and a.is_mobile_menu=1 and root_menu>0 order by slno asc";
		$menu_result = $this->db->query($menu_sql,array($user_id))->result();

		$query_pro_variable = "SELECT COMPANY_NAME,BATCH_MAINTAINED as REJECT_OPERATION,BULLETIN_TYPE as ALTER_OPERATION,CAPACITY_ALLOCATION as SPOT_OPERATION, COLOR_MIXING_IN_KNITTING_PLAN as REJECT_DEFECT,CUT_PANEL_DELEVERY as ALTER_DEFECT,CUTTING_INPUT as SPOT_DEFECT FROM VARIABLE_SETTINGS_PRODUCTION WHERE VARIABLE_LIST = 81 and STATUS_ACTIVE = 1 and IS_DELETED =0";
		$pro_variable_table = $this->db->query($query_pro_variable)->result();

		$lib_pro_variable = array();
		foreach($pro_variable_table as $row){
			$lib_pro_variable[] = [
				"COMPANY_ID" => $row->COMPANY_NAME,
				"REJECT" => [
					"OPERATION" => $row->REJECT_OPERATION,
					"DEFECT" => $row->REJECT_DEFECT,
				],
				"ALTER" => [
					"OPERATION" => $row->ALTER_OPERATION,
					"DEFECT" => $row->ALTER_DEFECT,
				],
				"SPOT" => [
					"OPERATION" => $row->SPOT_OPERATION,
					"DEFECT" => $row->SPOT_DEFECT,
				],
			];
		}
		
		$menu_arr = array();
		if(!empty($menu_result))
		{
			$i=0;
			foreach($menu_result as $menu)
			{
				$menu_arr[$menu->ROOT_MENU][$i]['MENU'] = $menu->MENU;
				$menu_arr[$menu->ROOT_MENU][$i]['MENU_LINK'] = $menu->F_LOCATION;
				$menu_arr[$menu->ROOT_MENU][$i]['MENU_ID'] = $menu->MENU_ID;
				$menu_arr[$menu->ROOT_MENU][$i]['FULL_NAME'] = $menu->FULL_NAME;
				$menu_arr[$menu->ROOT_MENU][$i]['USER_LOGIN_ID'] = $menu->USER_ID;
				$menu_arr[$menu->ROOT_MENU][$i]['SLNO'] = $menu->SLNO;
				$i++;
			}
		}

		$result = array();
		$result["user_id"] = $user_id;
		if(!empty($module_result))
		{
			$j=0;		
			foreach($module_result as $module)
			{
				$result["module"][$j]["module_name"] = $module->MENU;
				$result["module"][$j]["module_wise_menu"] = array_values($menu_arr[$module->MENU_ID]);
				$j++;
			}
		}
		//print_r($lib_pro_variable);die;
		$result["pro_variable"] = $lib_pro_variable;

		return $result;
	}

	public function sewing_line_data_v1($company_id = 0, $location = 0, $floor = 0, $issue_date = "") {
		if ($this->db->dbdriver == 'mysqli') {
			$db_type = 0;
		} else {
			$db_type = 2;

		}
		$new_arr = array();
		$line_array_new = array();

		$nameArray = sql_select("SELECT ID, AUTO_UPDATE from variable_settings_production where company_name='$company_id' and variable_list=23 and status_active=1 and is_deleted=0");
		$prod_reso_allocation = 0;

		foreach ($nameArray as $v) {
			$prod_reso_allocation = $v->AUTO_UPDATE;
		}

		$cond = "";
		if ($prod_reso_allocation == 1) {
			$line_library = return_library_array("SELECT ID,LINE_NAME from lib_sewing_line", "id", "line_name");
			$line_array = array();

			if ($location != 0) {
				$cond = " and a.location_id= $location";
			}

			if ($floor != 0) {
				$cond = " and a.floor_id= $floor";
			}

			$issue_date = " and b.pr_date='".change_date_format(date("Y-m-d", strtotime($issue_date)), '', '', 1, $db_type)."'";
			//$issue_date = "";
			$line_data = sql_select("SELECT A.ID, A.LINE_NUMBER from prod_resource_mst a, prod_resource_dtls b where a.id=b.mst_id and a.is_deleted=0 and b.is_deleted=0 $cond $issue_date group by a.id, a.line_number,a.prod_resource_num,b.pr_date  order by a.prod_resource_num asc, a.id asc");

			$line_merge = 9999;
			foreach ($line_data as $row) {
				$line = '';
				$line_number = explode(",", $row->LINE_NUMBER);
				foreach ($line_number as $val) {
					if (count($line_number) > 1) {
						$line_merge++;
						$new_arr[$line_merge] = $row->ID;
					} else {
						$new_arr[$line_library[$val]] = $row->ID;
					}

					if ($line == '') {
						$line = $line_library[$val];
					} else {
						$line .= "," . $line_library[$val];
						echo $row->pr_date;
					}

				}
				$line_array[$row->ID] = $line;
			}

			if (!empty($new_arr)) {
				ksort($new_arr);
			}

			$i=0;
			foreach ($new_arr as $key => $val) {
				$line_array_new["MasterPart"][$i]["ID"] = $val;
				$line_array_new["MasterPart"][$i]["LINE_NUMBER"] = $key;
				$i++;
			}

			return $line_array_new;

		}

	}

	public function loc_wise_floor_data_v1($location = 0, $production_process=5) {
		$data_array = array();
		$floor_sql = "SELECT ID,FLOOR_NAME from lib_prod_floor where status_active =1 and is_deleted=0 and location_id='$location' and production_process=$production_process order by floor_name";
		$floor_data = $this->db->query($floor_sql)->result();
		$i=0;
		foreach ($floor_data as $val) {
			$data_array["MasterPart"][$i]["ID"] = $val->ID;
			$data_array["MasterPart"][$i]["FLOOR_NAME"] = $val->FLOOR_NAME;
			$i++;
		}
		return $data_array;

	}

	public function get_machine_arr_v1()
	{
		$machine_sql="select id, (machine_no || '-' || brand) as machine_name from lib_machine_name where category_id=4 and status_active=1 and is_deleted=0 and is_locked=0";
		$machine_rs = $this->db->query($machine_sql)->result();

		$i=0;
		$machine_arr = array();
		foreach ($machine_rs as $machine_data) {
			$machine_arr[$i]["ID"] = $machine_data->ID;
			$machine_arr[$i]["MACHINE_NAME"] = $machine_data->MACHINE_NAME;
			$i++;
		}
		return $machine_arr;
	}

	public function company_wise_loc_data_v1($company = 0) {
		$data_array = array();
		$loc_sql = "SELECT ID,LOCATION_NAME from lib_location where status_active =1 and is_deleted=0 and company_id='$company' order by location_name";
		$location_data = $this->db->query($loc_sql)->result();
		$i=0;
		foreach ($location_data as $val) {
			$data_array["MasterPart"][$i]["ID"] = $val->ID;
			$data_array["MasterPart"][$i]["LOCATION_NAME"] = $val->LOCATION_NAME;
			$i++;
		}
		return $data_array;

	}

	public function get_menu_by_privilege2($user_id) {
		$comp_sql = "select ID,COMPANY_NAME from lib_company comp where status_active =1 and is_deleted=0  order by company_name";
		$com_res = $this->db->query($comp_sql)->result();
		$data_arr['company_info'] = $com_res;
		//$data_arr['financial_parameter'] = $this->get_financial_parameter_setup();
		$data_arr['user_id'] = $user_id;
		return $data_arr;
	}
	public function get_menu_by_privilege1($user_id) {
		$comp_sql = "select ID,COMPANY_NAME from lib_company comp where status_active =1 and is_deleted=0  order by company_name";
		$com_res = $this->db->query($comp_sql)->result();
		$data_arr['company_rowo'] = $com_res;
		$data_arr['user_id'] = $user_id;

		return $com_res;
	}


	public function get_financial_parameter_setup() {
		$variableSql = "SELECT COMPANY_NAME,YARN_ISS_WITH_SERV_APP  FROM VARIABLE_ORDER_TRACKING WHERE VARIABLE_LIST=67";
		$variableSqlRes = $this->db->query($variableSql)->result();
		$currentDate=date('d-M-Y');
		$dataArr=array();$sql='';
		foreach($variableSqlRes as $rows){
			$company_id=$rows->COMPANY_NAME;
			if($sql!=''){$sql.=' union all ';}
			if($rows->YARN_ISS_WITH_SERV_APP==1){
				$sql .= "select a.COMPANY_ID ,b.LOCATION_ID,b.WORKING_HOUR from lib_standard_cm_entry a,LIB_STANDARD_CM_ENTRY_DTLS b where a.id=b.mst_id  and b.IS_DELETED=0 and b.STATUS_ACTIVE=1 and a.id in(select max(id) from lib_standard_cm_entry where COMPANY_ID = $company_id and '$currentDate' between APPLYING_PERIOD_DATE and APPLYING_PERIOD_TO_DATE group by COMPANY_ID)";	
			}
			else{
				$sql .= "select COMPANY_ID, 0 as LOCATION_ID,WORKING_HOUR  from lib_standard_cm_entry where id in(select max(id) from lib_standard_cm_entry where   COMPANY_ID = $company_id and '$currentDate' between APPLYING_PERIOD_DATE and APPLYING_PERIOD_TO_DATE group by COMPANY_ID)";
			}
		}
		
		$dataArr=$this->db->query($sql)->result();
		return $dataArr;
	}



	public function task_details_data($user_id) {
		$data_array = array();
		$db_type = return_db_type();
		$target_date = date('06/21/2019');

		if ($db_type == 0) {
			$target_date = date("Y-m-d", strtotime($target_date));
		} else {
			$target_date = change_date_format(date("Y-m-d", strtotime($target_date)), '', '', 1, $db_type);
		}

		$sql = "SELECT * from tna_process_mst where task_number IN(84,86) and target_date ='$target_date'";
		$data_sql = sql_select($sql);

		if (count($data_sql)) {
			foreach ($data_sql as $value) {
				$data_array[] = array('id' => $value->ID, 'po_number_id' => $value->PO_NUMBER_ID, 'target_date' => $value->TARGET_DATE);
			}
		}
		return $data_array;
	}

	public function company_and_source_data() {
		$data_arr = array();
		$comp = $this->company_list();
		$supplier = $this->supplier_list();
		$db_type = return_db_type();
		$machine_array = array();
		if ($db_type == 0) {
			$machine_array = return_library_array("SELECT id, concat(machine_no,'-',brand) as machine_name from lib_machine_name where category_id=4 and status_active=1 and is_deleted=0 and is_locked=0", "id", "machine_name");
		} else {
			$machine_array = return_library_array("SELECT id, (machine_no || '-' || brand) as machine_name from lib_machine_name where category_id=4 and status_active=1 and is_deleted=0 and is_locked=0", "id", "machine_name");
		}

		$knitting_source = array(1 => "In-house", 3 => "Out-bound Subcontract");
		$shift_name = array(1 => "A", 2 => "B", 3 => "C");
		$knitting_source_arr = array();
		foreach ($knitting_source as $kk => $vv) {
			$obj = new Source($kk, $vv);
			$knitting_source_arr[] = $obj;
		}

		$shift_arr = array();
		foreach ($shift_name as $kk => $vv) {
			$obj = new Source($kk, $vv);
			$shift_arr[] = $obj;
		}

		$machine_arr = array();
		foreach ($machine_array as $kk => $vv) {
			$obj = new Source($kk, $vv);
			$machine_arr[] = $obj;
		}

		$data_arr["company"] = $comp;
		$data_arr["supplier"] = $supplier;
		$data_arr["source"] = $knitting_source_arr;
		$data_arr["shift_name"] = $shift_arr;
		$data_arr["machine"] = $machine_arr;
		return $data_arr;

	}
	


	public function company_list() {
		$data_array = array();
		$comp_sql = "select ID,COMPANY_NAME from lib_company comp where status_active = 1 and is_deleted=0 and CORE_BUSINESS = 1  order by company_name";
		foreach (sql_select($comp_sql) as $val) {
			$obj = new Company($val->ID, $val->COMPANY_NAME);
			$data_array[] = $obj;
		}
		return $data_array;
	}
	public function company_wise_loc_data($company = 0) {
		$data_array = array();
		$loc_sql = "SELECT ID,LOCATION_NAME from lib_location where status_active =1 and is_deleted=0 and company_id='$company' order by location_name";
		foreach (sql_select($loc_sql) as $val) {
			$obj = new Source($val->ID, $val->LOCATION_NAME);
			$data_array[] = $obj;
		}
		return $data_array;

	}

	public function loc_wise_floor_data($location = 0) {
		$data_array = array();
		$floor_sql = "SELECT ID,FLOOR_NAME from lib_prod_floor where status_active =1 and is_deleted=0 and location_id='$location' and production_process=5 order by floor_name";
		foreach (sql_select($floor_sql) as $val) {
			$obj = new Source($val->ID, $val->FLOOR_NAME);
			$data_array[] = $obj;

		}
		return $data_array;

	}
	
	public function company_floor_wise_mc_data($floor = 0) {
		$data_array = array();
		  $mc_sql = "SELECT ID,MACHINE_NO || '-' || BRAND AS MACHINE_NAME from lib_machine_name where status_active =1 and is_deleted=0  and  floor_id=$floor and category_id=2  order by MACHINE_NO";
		
		foreach (sql_select($mc_sql) as $val) {
			$obj = new Source($val->ID, $val->MACHINE_NAME);
			$data_array[] = $obj;

		}
		return $data_array;

	}
	//===========*********Finish Prod:->Slitting,Stentering,Compacting =============
	public function finish_prod_dtls_list_view_data($batch_id = 0,$entry_form_no = 0) { 
		//Finish start
		//LISTAGG(CAST(a.yarn_lot AS VARCHAR2(4000)),',') WITHIN GROUP ( ORDER BY a.yarn_lot) as yarn_lot
		//$grp="LISTAGG(CAST(b.const_composition AS VARCHAR2(4000)),',') WITHIN GROUP ( ORDER BY b.const_composition) as const_composition,LISTAGG(CAST(b.gsm AS VARCHAR2(4000)),',') WITHIN GROUP ( ORDER BY b.gsm) as gsm,LISTAGG(CAST(b.dia_width AS VARCHAR2(4000)),',') WITHIN GROUP ( ORDER BY b.dia_width) as dia_width";
	
		  $sql_dtls = "SELECT A.ID,A.BATCH_ID,B.ROLL_NO AS ROLL_NO,B.CONST_COMPOSITION AS CONST_COMPOSITION,B.BARCODE_NO, B.GSM AS GSM ,B.DIA_WIDTH AS DIA_WIDTH,B.WIDTH_DIA_TYPE AS WIDTH_DIA_TYPE, B.ROLL_ID AS ROLL_ID,SUM(B.BATCH_QTY) AS BATCH_QTY,SUM(B.PRODUCTION_QTY) AS PRODUCTION_QTY,SUM(B.NO_OF_ROLL) AS NO_OF_ROLL from pro_fab_subprocess a,pro_fab_subprocess_dtls b where a.id=b.mst_id and a.batch_id=$batch_id and entry_form=$entry_form_no and b.status_active=1 and b.is_deleted=0 and a.status_active=1 and a.is_deleted=0 group by a.id,a.batch_id,b.roll_no,b.const_composition, b.gsm,b.barcode_no,b.dia_width,b.width_dia_type, b.roll_id order by b.roll_no";
		
		$result_dtls = sql_select($sql_dtls);
		$i=0;$data_array=array();$dtls_arr=array();
		foreach($result_dtls as $rows)
		{
			$batch_id=$rows->BATCH_ID;
			//echo $batch_id;die;
			$mst_id=$rows->ID;
			$roll_no=$rows->ROLL_NO;
			$const_composition=$rows->CONST_COMPOSITION;
			$barcode_no=$rows->BARCODE_NO;
			$gsm=$rows->GSM;
			$dia_width=$rows->DIA_WIDTH;
			$width_dia_type=$rows->WIDTH_DIA_TYPE;
			$roll_id=$rows->ROLL_ID;
			$batch_qty=$rows->BATCH_QTY;
			$production_qty=$rows->PRODUCTION_QTY;
			$no_of_roll=$rows->NO_OF_ROLL;
			
			//$data_array_dtls_index[$i]["PROD_ID"] =$PROD_ID;
			
			$dtls_arr[$i]['mst_id'] = $mst_id;
			$dtls_arr[$i]['roll_no']=$roll_no;
			$dtls_arr[$i]['const_composition']= $const_composition;
			$dtls_arr[$i]['dia_width']= $dia_width;
			$dtls_arr[$i]['width_dia_type']= $width_dia_type;
			$dtls_arr[$i]['roll_no']= $roll_no;
			$dtls_arr[$i]['barcode']= $barcode_no;
			$dtls_arr[$i]['batch_qty']+= $BATCH_QTY;
			$dtls_arr[$i]['prod_qty']+= $production_qty;
			
			$i++;
			
			
		}
		$data_array["dtls_index"]= array_values($dtls_arr);
		return $data_array;
	
	
	}
	public function finish_prod_company_defualt_data($entry_form_no = 0) { //Finish start
		$data_arr = array();
		
		//echo $entry_form_no;die;
		$next_process_arr = array(12 => 'Next process Stentering',13 => 'Next process Dryer',14 => 'Next process Compacting',15 => 'Next process Brush',16 => 'Next process Peach');
		$result_process_arr = array( 4 => 'Incomplete/Running',11 => 'Complete',17 => 'Waiting for Fastness',18 => 'Waiting for Shrinkage',19 => 'Waiting for Decision',100 => 'Others');
		
		$production_typeArr = array(1 => "After Brush", 2 => "After Peach", 3 => "Chemical Finish", 4 => "After AOP", 5 => "Before peach", 6 => "Before Brush", 7 => "Before AOP", 8 => "Dry");
		//$responsibility_dept_arr = array(1 =>"Knitting",2 => "Dyeing",3 =>"Finishing", 4 =>"Others");
		//30=Slitting ,48=Stentering,33=Compacting
		if($entry_form_no==30)// 30=Slitting
		{
		$modify_process_array=array(63=>"Slitting/Squeezing"); 
		}
		else if($entry_form_no==48) //48=Stentering
		{
		$modify_process_array=array(33=>"Heat Setting",65=>"Stentering",171=>"Drying");
		}
		else if($entry_form_no==33) //33=Compacting
		{
		$modify_process_array=array(156=>"Compacting",240=>"Sanforizing Finish");
		}
		
		$comp = $this->company_list();
		$db_type = return_db_type();
		
		
		$knitting_source = array(1 => "In-house");
		$shift_name = array(1 => "A", 2 => "B", 3 => "C");
		$knitting_source_arr = array();
		foreach ($knitting_source as $kk => $vv) {
			$obj = new Source($kk, $vv);
			$knitting_source_arr[] = $obj;
		}
		
		$shift_name_arr = array();
		foreach ($shift_name as $kk => $vv) {
			$obj = new Source($kk, $vv);
			$shift_name_arr[] = $obj;
		}

		
		$conversion_cost_head_array_arr = array();
		foreach ($modify_process_array as $kk => $vv) {
			$obj = new Source($kk, $vv);
			$conversion_cost_head_array_arr[] = $obj;
		}
		$fin_next_process_arr = array();
		foreach ($next_process_arr as $kk => $vv) {
			$obj = new Source($kk, $vv);
			$fin_next_process_arr[] = $obj;
		}
		$fin_result_process_arr = array();
		foreach ($result_process_arr as $kk => $vv) {
			$obj = new Source($kk, $vv);
			$fin_result_process_arr[] = $obj;
		}
		$fin_production_typeArr = array();
		foreach ($production_typeArr as $kk => $vv) {
			$obj = new Source($kk, $vv);
			$fin_production_typeArr[] = $obj;
		}
		$entry_form_noArr[] = $entry_form_no;

		$data_arr["entry_form_no"] = $entry_form_noArr;
		$data_arr["production_type"] = $fin_production_typeArr;
		$data_arr["company"] = $comp;
		$data_arr["source"] = $knitting_source_arr;
		$data_arr["service_company"] = $comp;
		$data_arr["process_name"] = $conversion_cost_head_array_arr;
		$data_arr["next_process"] = $fin_next_process_arr;
		$data_arr["result"] = $fin_result_process_arr;
		$data_arr["shift_name"] = $shift_name_arr;
		//$data_arr["fabric_type"] = $fabric_type_for_dyeing_arr;
		//$data_arr["responsibility"] = $responsibility_dept_arr_unload;
		return $data_arr;

	}
	public function company_wise_fin_floor_data($company = 0) {
		$data_array = array();
		 $floor_sql = "SELECT ID,FLOOR_NAME from lib_prod_floor where status_active =1 and is_deleted=0 and company_id='$company' and production_process=4 order by floor_name";
		
		foreach (sql_select($floor_sql) as $val) {
			$obj = new Source($val->ID, $val->FLOOR_NAME);
			$data_array[] = $obj;

		}
		return $data_array;

	}
	public function company_floor_wise_fin_mc_data($floor = 0) {
		$data_array = array();
		  $mc_sql = "SELECT ID,MACHINE_NO || '-' || BRAND AS MACHINE_NAME from lib_machine_name where status_active =1 and is_deleted=0  and  floor_id=$floor and category_id=4  order by MACHINE_NO";
		
		foreach (sql_select($mc_sql) as $val) {
			$obj = new Source($val->ID, $val->MACHINE_NAME);
			$data_array[] = $obj;

		}
		return $data_array;

	}
	//===============********Fin Batch No Scan************===================
	public function fin_prod_batch_scan_data($batch_no = 0,$entry_form_no=0) {
		$data_array = array();
		  $batch_chk_sql = sql_select("select ID, ENTRY_FORM,BATCH_NO,TOTAL_TRIMS_WEIGHT,COMPANY_ID,WORKING_COMPANY_ID AS SERVICE_COMPANY,DOUBLE_DYEING from pro_batch_create_mst where batch_no='" . trim($batch_no) . "' and entry_form in(0,136) and is_deleted=0 and status_active=1  order by id desc");
		// echo "select ID, ENTRY_FORM,BATCH_NO,COMPANY_ID,WORKING_COMPANY_ID AS SERVICE_COMPANY,DOUBLE_DYEING from pro_batch_create_mst where batch_no='" . trim($batch_no) . "' and entry_form in(0,136) and is_deleted=0 and status_active=1  order by id desc";die;
		if(count($batch_chk_sql)<=0)
		{
			return $resultset["status"] = "<b>Batch Not Found</b>";
		}
		 $sql_dyeing="select id, batch_id,batch_no,result from pro_fab_subprocess where batch_no='".trim($batch_no)."' and  entry_form in(35,38) and load_unload_id in(2) and result in(2,3,4,5,6)  and is_deleted=0 and status_active=1";
		$data_array_prod=sql_select($sql_dyeing,1);
		$dyeing_result = array(1 => 'Shade Matched', 2 => 'Re-Dyeing Needed', 3 => 'Fabric Damaged', 4 => 'Incomplete/Running', 5 => 'Under Trial', 6 => 'Re-Wash Needed',11 => 'Complete',12 => 'Next process Stentering',13 => 'Next process Dryer',14 => 'Next process Compacting',15 => 'Next process Brush',16 => 'Next process Peach',17 => 'Waiting for Fastness',18 => 'Waiting for Shrinkage',19 => 'Waiting for Decision',
100 => 'Others');
		if(count($data_array_prod)>0)
		{
			$result_msg="Result=".$dyeing_result[$data_array_prod[0][csf("result")]].' Found';
			return $resultset["status"] = $result_msg;
		}
		$load_sql="select id, batch_id,batch_no from pro_fab_subprocess where batch_no='".trim($batch_no)."' and  entry_form in(35,38) and load_unload_id in(1) and is_deleted=0 and status_active=1";
		$data_array_prod_load=sql_select($load_sql,1);
		
		if(count($data_array_prod_load)<=0)
		{
			return $resultset["status"] = "Without Dyeing production should not Allow";
		}
		// echo "A";die;
		$prodData=sql_select("select ID,DETARMINATION_ID, PRODUCT_NAME_DETAILS,LOT,GSM,YARN_COUNT_ID,BRAND, DIA_WIDTH from product_details_master where item_category_id=13");
		foreach($prodData as $row)
		{
			$PROD_ID=$row->ID;
			$fabric_desc_arr[$PROD_ID]['desc']=$row->PRODUCT_NAME_DETAILS;
			$fabric_desc_arr[$PROD_ID]['gsm']=$row->GSM;
			$fabric_desc_arr[$PROD_ID]['dia']=$row->DIA_WIDTH;
			$fabric_desc_arr[$PROD_ID]['detarmination_id']=$row->DETARMINATION_ID;
		}
		 
		$color_arr = return_library_array("select id, color_name from lib_color where status_active=1", "id", "color_name");
		$buyer_arr = return_library_array("select id, buyer_name from lib_buyer", 'id', 'buyer_name');
		$company_arr = return_library_array("select id, company_name from lib_company", 'id', 'company_name');
			
		$data_array=array();
		 foreach($batch_chk_sql as $rows){
			 
			$company_id=$rows->COMPANY_ID;
			$service_company=$rows->SERVICE_COMPANY;
			$entry_form_id=$rows->ENTRY_FORM;
			$trims_wgt=$rows->TOTAL_TRIMS_WEIGHT;
			$batch_no=$rows->BATCH_NO;
			$batch_id=$rows->ID;
			$double_dyeing=$rows->DOUBLE_DYEING;
			if($trims_wgt=="") $trims_wgt="";
			//if($double_dyeing==0 || $double_dyeing==2) $multi_dyeing=2;else $multi_dyeing=$double_dyeing;
			$data_array['input_area_index']["BATCH_ID"] = $rows->ID;
			$data_array['input_area_index']["ENTRY_FORM"] = $rows->ENTRY_FORM;
			$data_array['input_area_index']["TRIMS_WGT"] = $trims_wgt;
			$data_array['input_area_index']["COMPANY_ID"] = $rows->COMPANY_ID;
			$data_array['input_area_index']["SERVICE_COMPANY"] = $rows->SERVICE_COMPANY;
			$data_array['input_area_index']["BATCH_NO"] = $rows->BATCH_NO;
			$data_array['input_area_index']["entry_form_no"] = $entry_form_no;
			 
			}
			
			//entry_form_no
			 //return $data_array;
			
			
			 $roll_maintained = return_field_value("fabric_roll_level", "variable_settings_production", "company_name ='$company_id' and item_category_id=50 and variable_list=3 and is_deleted=0 and status_active=1","fabric_roll_level");
			// echo  $roll_maintained.'sad';die;
			$page_upto_id = return_field_value("page_upto_id", "variable_settings_production", "company_name ='$company_id' and item_category_id=50 and variable_list=3 and is_deleted=0 and status_active=1","page_upto_id");
			 
				$sql_sales_job=sql_select("select F.BUYER_ID,F.PO_BUYER,A.BOOKING_NO,f.PO_JOB_NO,F.BOOKING_WITHOUT_ORDER,F.JOB_NO AS SALES_ORDER_NO,F.WITHIN_GROUP from pro_batch_create_mst a,fabric_sales_order_mst f where a.sales_order_no=f.job_no and a.status_active=1 and a.is_deleted=0 and f.status_active=1 and f.is_deleted=0 and a.id=$batch_id  group by f.PO_JOB_NO,f.buyer_id,a.booking_no,f.job_no,f.within_group,f.booking_without_order,f.po_buyer");
				foreach ($sql_sales_job as $row) {
					//$sales_order_no=$row['SALES_ORDER_NO'];
					$sales_order_no=$row->SALES_ORDER_NO;
					$WITHIN_GROUP=$row->WITHIN_GROUP;
					$PO_BUYER=$row->PO_BUYER;
					$BUYER_ID=$row->BUYER_ID;
					$BOOKING_WITHOUT_ORDER=$row->BOOKING_WITHOUT_ORDER;
					//$sales_job_arr[$booking_no]["job_no_mst"] = $sales_job_row[csf('job_no_mst')];
					if($sales_order_no=="") $sales_order_no="";
					if($WITHIN_GROUP=="") $WITHIN_GROUP="";
					if($PO_BUYER=="") $PO_BUYER="";	
					if($BUYER_ID=="") $BUYER_ID="";
					$sales_job_arr[$sales_order_no]["SALES_ORDER_NO"] =$sales_order_no;
					$sales_job_arr[$sales_order_no]["BUYER_ID"] = $BUYER_ID;
					$sales_job_arr[$sales_order_no]["PO_JOB_NO"] =$row->PO_JOB_NO;
					$sales_job_arr[$sales_order_no]["WITHIN_GROUP"] =$WITHIN_GROUP;
					$sales_job_arr[$sales_order_no]["PO_BUYER"] = $PO_BUYER;
					$sales_job_arr[$sales_order_no]["BOOKING_WITHOUT_ORDER"] = $BOOKING_WITHOUT_ORDER;
				}
			 //echo $company_id.'DS';die;
			 $select_group_row="group by a.entry_form,a.batch_no,a.batch_weight,a.color_id, 
			a.booking_without_order,a.batch_date,a.color_range_id,a.company_id,a.process_id,a.booking_no,a.total_trims_weight ";	
			  $pop_batch=" group by a.batch_no,a.is_sales,a.entry_form,a.batch_date,a.company_id,a.total_trims_weight, 
a.batch_weight,a.process_id,a.color_id,a.color_range_id,a.booking_without_order,a.sales_order_no,a.booking_no";
			  $select_list=" LISTAGG(B.PO_ID,',') WITHIN GROUP (ORDER BY B.PO_ID) AS PO_ID";
			
			$sql_re="SELECT MAX(A.ID) AS ID,A.BATCH_NO,A.IS_SALES,A.ENTRY_FORM,A.BATCH_DATE,A.COMPANY_ID,A.TOTAL_TRIMS_WEIGHT, A.BATCH_WEIGHT,MAX(A.EXTENTION_NO) AS EXTENTION_NO,A.PROCESS_ID AS PROCESS_ID_BATCH,A.COLOR_ID,A.COLOR_RANGE_ID,MAX(A.INSERT_DATE) AS INSERT_DATE,a.SALES_ORDER_NO, A.BOOKING_WITHOUT_ORDER,A.BOOKING_NO, SUM(B.BATCH_QNTY) AS BATCH_QNTY, $select_list from pro_batch_create_mst a,pro_batch_create_dtls b where a.id='$batch_id' and a.entry_form in(0,36)  and a.id=b.mst_id  and b.status_active=1 $pop_batch    ";
			$batch_data_array=sql_select($sql_re);
			 foreach ($batch_data_array as $row)
				{
					$entry_form= $row->ENTRY_FORM;
					$booking_without_order= $row->BOOKING_WITHOUT_ORDER;
					$batch_no= $row->BATCH_NO;
					$trim_wgt= $row->TOTAL_TRIMS_WEIGHT;
				//	$sales_order_no=$row->SALES_ORDER_NO;
					$batch_wgt= $row->BATCH_WEIGHT;
					$batch_qty= $row->BATCH_QNTY;
					$batch_date= $row->BATCH_DATE;
					$booking_no= $row->BOOKING_NO;
					$extention_no= $row->EXTENTION_NO;
					$salesOrder= $row->IS_SALES;
					if($extention_no=="") $extention_no="";
					if($sales_order_no=="") $sales_order_no="";
					if($salesOrder=="") $salesOrder="";
					if($booking_no=="") $booking_no="";
					 
					 
					$PO_ID= $row->PO_ID;
					$COLOR_ID= $row->COLOR_ID;
					$color_range= $row->COLOR_RANGE_ID;
					$PROCESS_ID_BATCH= $row->PROCESS_ID_BATCH;
					$INSERT_DATE= $row->INSERT_DATE;
					$sales_order_no= $row->SALES_ORDER_NO;
					$data_array["reference_index"]["BATCH_ID"] = $row->ID;
					$data_array["reference_index"]["EXTENTION_NO"] = $extention_no;
					$data_array["reference_index"]["COLOR"] = $color_arr[$COLOR_ID];
				//	$data_array["reference_index"]["SALES_ORDER"] = $sales_order_no;
				}
				//echo $booking_without_order.'DD';die;
		
		//$salesOrder= $row->IS_SALES;
		if($entry_form==36)
		{
			$pro_id = implode(",", array_unique(explode(",", $PO_ID)));
			$pro_cond=" and a.id in(" . $pro_id . ")";
		}
		else if($entry_form==0)
		{
			$pro_id = implode(",", array_unique(explode(",", $PO_ID)));
			$pro_cond=" and a.id in(".$pro_id.")";
			if($salesOrder==1) //PO_JOB_NO
			{
				$PO_JOB_NO=$sales_job_arr[$sales_order_no]["PO_JOB_NO"];
				// echo $PO_JOB_NO.'AxA';die;
				$pro_cond="";
				$pro_cond=" and a.job_no_mst in('".$PO_JOB_NO."')";
			}
		}
		else
		{
			 
			$job_no= $row->JOB_NO;
			 if($job_no=="") $job_nos="";
			$pro_cond=" and a.job_no_mst in('".$job_no."')";
		}
		$select_f_group = "group by a.job_no_mst, b.buyer_name";
 $select_listagg = "listagg(cast(A.PO_NUMBER as varchar(500)),',') within group (order by A.PO_NUMBER) as PO_NO,listagg(cast(A.FILE_NO as varchar(500)),',') within group (order by A.FILE_NO) as FILE_NO,listagg(cast(A.GROUPING as varchar(500)),',') within group (order by A.GROUPING) as REF_NO";
  $select_listagg_subcon="listagg(cast(a.order_no as varchar2(4000)),',') within group (order by a.order_no) as po_no";
 
		if ($entry_form == 36) {

			//$batch_type = "SUBCONTRACT ORDER BATCH";
			$result_job = sql_select("select $select_listagg_subcon, B.SUBCON_JOB AS JOB_NO_MST, B.PARTY_ID AS BUYER_NAME from  subcon_ord_dtls a,
				subcon_ord_mst b where a.job_no_mst=b.subcon_job  and b.status_active=1 and b.is_deleted=0 and a.status_active=1
				and a.is_deleted=0 $pro_cond group by b.subcon_job, b.party_id");
		}
		 else {
			//$batch_type = " SELF ORDER BATCH ";
			//wo_non_ord_samp_booking_mst
			if($booking_without_order==1)
			{
				$result_job = sql_select("select  B.BUYER_ID as BUYER_NAME from pro_batch_create_mst a,
				wo_non_ord_samp_booking_mst b where a.booking_no=b.booking_no  and b.status_active=1 and b.is_deleted=0 and a.status_active=1
				and a.is_deleted=0  and a.id=$batch_id  group by B.BUYER_ID");
				 
			}
			else
			{
			$result_job = sql_select("select $select_listagg, A.JOB_NO_MST, B.BUYER_NAME from wo_po_break_down a,
				wo_po_details_master b where a.job_no_mst=b.job_no  and b.status_active=1 and b.is_deleted=0 and a.status_active=1
				and a.is_deleted=0  $pro_cond $select_f_group");
			}
				
		}
		$within_group=$sales_job_arr[$sales_order_no]["WITHIN_GROUP"];
		//echo $salesOrder.'='.$within_group.'<br>';die;
		$order_no="";
		if ($salesOrder == 1) {
			if($within_group == 1){
					$buyer_name=$buyer_arr[$sales_job_arr[$sales_order_no]["PO_BUYER"]];
					$PO_JOB_NO=$sales_job_arr[$sales_order_no]["PO_JOB_NO"];
					//$sales_order_no=$sales_job_arr[$booking_no]["sales_order_no"];
			 }
			 else
			 {
				 $buyer_name=$buyer_arr[$sales_job_arr[$sales_order_no]["buyer_id"]];
				 $job_no='';
				// $sales_order_no=$sales_job_arr[$booking_no]["sales_order_no"];
			 }
			 $job_no=$sales_order_no;
			
		}
		else
		{
			foreach ($result_job as $val) {
			
			 $order_no=$val->PO_NO;
			 if($order_no=="") $order_no="";
			 $buyer_name=$buyer_arr[$val->BUYER_NAME];
			  if($buyer_name=="") $buyer_name="";
			 $job_no=$val->JOB_NO_MST;
			 
		}
		 if($job_no=="") $job_no="";
		  if($order_no=="") $order_no="";
		   if($buyer_name=="") $buyer_name="";
		
			// $buyer_name=$buyer_arr[$result_job[0][csf("buyer_name")]];
			
		}
		$data_array["reference_index"]["JOB_NO"] = $job_no;
		$data_array["reference_index"]["PO_NO"] = $order_no;
		//$data_array["reference_index"]["FILE_NO"] = $file_no;
		//$data_array["reference_index"]["REF_NO"] = $ref_no;
		$data_array["reference_index"]["BUYER"] = $buyer_name;
		
		$sql_batch_d = sql_select("select ID,SERVICE_SOURCE,SYSTEM_NO,SERVICE_COMPANY,RECEIVED_CHALAN,LOAD_UNLOAD_ID,ISSUE_CHALAN,ISSUE_CHALLAN_MST_ID,COMPANY_ID,BATCH_ID,BATCH_NO,PROCESS_END_DATE,END_HOURS,END_MINUTES,MACHINE_ID,FLOOR_ID,PROCESS_ID,LTB_BTB_ID,REMARKS,DYEING_TYPE_ID,HOUR_LOAD_METER from
			pro_fab_subprocess where batch_id='$batch_id' and entry_form=35 and load_unload_id in(1,2) and status_active=1 and is_deleted=0 ");
		foreach ($sql_batch_d as $dyeing_d) {//$minute=str_pad($r_batch[csf("end_minutes")],2,'0',STR_PAD_LEFT);
		
			$load_unload=$dyeing_d->LOAD_UNLOAD_ID;
			if($load_unload==1)
			{
			$PROCESS_END_DATE=$dyeing_d->PROCESS_END_DATE;
			$LOAD_PROCESS_END_DATE=$PROCESS_END_DATE;
			
			$END_HOURS=$dyeing_d->END_HOURS;
			$END_MINUTES=$dyeing_d->END_MINUTES;
			$end_hour_min=str_pad($END_HOURS, 2, '0', STR_PAD_LEFT) . ':' . str_pad($END_MINUTES, 2, '0', STR_PAD_LEFT);
			$load_end_hour_min=$end_hour_min;
			}
			
			if ($load_unload == 2) {
				 $UNLOAD_PROCESS_END_DATE=$dyeing_d->PROCESS_END_DATE;
				$UNLOAD_PROCESS_END_DATE=$UNLOAD_PROCESS_END_DATE;
				 
				$UN_END_HOURS=$dyeing_d->END_HOURS;
				$UN_END_MINUTES=$dyeing_d->END_MINUTES;
				$un_end_hour_min=str_pad($UN_END_HOURS, 2, '0', STR_PAD_LEFT) . ':' . str_pad($UN_END_MINUTES, 2, '0', STR_PAD_LEFT);
			}
		}
		if($LOAD_PROCESS_END_DATE=="") $LOAD_PROCESS_END_DATE="";
		//if($funtional_batch_no=="") $funtional_batch_no="";
		$data_array["reference_index"]["loading_date"] = $LOAD_PROCESS_END_DATE;
		if($end_hour_min=="") $end_hour_min="";
		$data_array["reference_index"]["loading_time"] = $end_hour_min;
		
		$data_array["reference_index"]["un_loading_date"] = $UNLOAD_PROCESS_END_DATE;
		if($un_end_hour_min=="") $un_end_hour_min="";
		$data_array["reference_index"]["un_loading_time"] = $un_end_hour_min;
		//echo $page_upto_id.'=='.$roll_maintained.'=D';die;
		 $i=1;	$data_array_dtls_index=array();
		if(($page_upto_id==3 || $page_upto_id>3) && $roll_maintained==1)
		{
			$sql_insert_roll=sql_select("SELECT b.roll_id as ROLL_ID from  pro_fab_subprocess a, pro_fab_subprocess_dtls b where a.id=b.mst_id and a.batch_id=$batch_id and a.entry_form=$entry_form_no and a.status_active=1 and b.status_active=1 and b.is_deleted=0 and a.is_deleted=0");
			$inserted_roll=array();
			foreach($sql_insert_roll as $in_row)
			{
				$ROLL_ID=$in_row->ROLL_ID;
				$inserted_roll[]=$ROLL_ID;
			}
			$roll_id_cond="";
			if(count($inserted_roll)>0) $roll_id_cond=" and b.roll_id not in (".implode(",",$inserted_roll).")";
			$sql_result=sql_select("SELECT A.ENTRY_FORM,B.WIDTH_DIA_TYPE,B.GSM,B.FIN_DIA,A.COMPANY_ID,B.ITEM_DESCRIPTION,B.PROD_ID,B.BARCODE_NO,B.ROLL_NO,B.ROLL_ID,B.PO_ID,  B.BATCH_QNTY AS BATCH_QNTY from pro_batch_create_dtls b,pro_batch_create_mst a where b.mst_id='$batch_id'  and a.id=b.mst_id and  a.entry_form in(0,36) and b.status_active=1 and b.is_deleted=0  and a.status_active=1 and a.is_deleted=0");//$roll_id_cond
			 foreach($sql_result as $row)
			{ 
				$entry_form=$row->ENTRY_FORM;
				$dia_type=$row->WIDTH_DIA_TYPE;
				$gsm=$row->GSM;
				$desc=$row->ITEM_DESCRIPTION;
				$PROD_ID=$row->PROD_ID;
				$FIN_DIA=$row->FIN_DIA;
				$BARCODE_NO=$row->BARCODE_NO;
				$ROLL_NO=$row->ROLL_NO;
				$ROLL_ID=$row->ROLL_ID;
				$PO_ID=$row->PO_ID;
				$BATCH_QNTY=$row->BATCH_QNTY;
				$barcode_no=$row->BARCODE_NO;
				if($FIN_DIA=="") $FIN_DIA="";
				if($gsm=="") $gsm="";
				if($PO_ID=="") $PO_ID="";
				if($dia_type=="") $dia_type="";
				if($ROLL_NO=="") $ROLL_NO="";
				if($ROLL_ID=="") $ROLL_ID="";
				if($barcode_no=="") $barcode_no="";
				$NO_OF_ROLL="";
				
				$checked=1; 
				if($entry_form==36)
				{
					$desc=explode(",",$desc);
					$cons_comps=$desc[0].','.$desc[1];
					$gsm=$gsm;
					$dia_width=$FIN_DIA;
				}
				else
				{
					$cons_comps_data=explode(",",$fabric_desc_arr[$PROD_ID]['desc']);
					$cons_comps=$cons_comps_data[0].' '.$cons_comps_data[1];
					$gsm=$fabric_desc_arr[$PROD_ID]['gsm'];
					$dia_width=$fabric_desc_arr[$PROD_ID]['dia'];	
				}
				$data_array_dtls_index[$i]["CHECKED"] = $checked;
				$data_array_dtls_index[$i]["PROD_ID"] =$PROD_ID;
				$data_array_dtls_index[$i]["FIN_DIA"] =$FIN_DIA;
				$data_array_dtls_index[$i]["ROLL_NO"] =$ROLL_NO;
				$data_array_dtls_index[$i]["ROLL_ID"] =$ROLL_ID;
				$data_array_dtls_index[$i]["NO_OF_ROLL"] =$NO_OF_ROLL;
				$data_array_dtls_index[$i]["BATCH_QNTY"] =$BATCH_QNTY;
				$data_array_dtls_index[$i]["PROD_QTY"] =$BATCH_QNTY;
				$data_array_dtls_index[$i]["BARCODE_NO"] =$barcode_no;
				$data_array_dtls_index[$i]["DIA_TYPE"] =$dia_type;
				$data_array_dtls_index[$i]["DIA_WIDTH"] =$dia_width;
				$data_array_dtls_index[$i]["GSM"] =$gsm;
				$data_array_dtls_index[$i]["CONS_COMP"] =$desc;
				$i++;
			}
		
		}
		else
		{
						$result=sql_select("SELECT A.ENTRY_FORM,B.WIDTH_DIA_TYPE,B.GSM,B.FIN_DIA,B.ITEM_DESCRIPTION, SUM(B.BATCH_QNTY) AS BATCH_QTY,COUNT(B.ROLL_NO) AS NO_OF_ROLL,B.PROD_ID from pro_batch_create_dtls b,pro_batch_create_mst a  where b.mst_id='$batch_id'  and b.width_dia_type in(1,2,3) and a.id=b.mst_id and  a.entry_form in(0,36) and b.status_active=1 and b.is_deleted=0 group by a.entry_form,b.width_dia_type,b.gsm,b.fin_dia,b.item_description,b.prod_id order by b.item_description asc");	
						
						$i=1;
						foreach($result as $row)
						{
								$entry_form=$row->ENTRY_FORM;
								$dia_type=$row->WIDTH_DIA_TYPE;
								$gsm=$row->GSM;
								$desc=$row->ITEM_DESCRIPTION;
								$PROD_ID=$row->PROD_ID;
								$FIN_DIA=$row->FIN_DIA;
								$BARCODE_NO=$row->BARCODE_NO;
								$ROLL_NO='';
								$NO_OF_ROLL=$row->NO_OF_ROLL;
								$ROLL_ID="";$BARCODE_NO="";
								$PO_ID=$row->PO_ID;
								$BATCH_QNTY=$row->BATCH_QTY;
								$barcode_no=$row->BARCODE_NO;
								if($FIN_DIA=="") $FIN_DIA="";
								if($gsm=="") $gsm="";
							 
								if($dia_type=="") $dia_type="";
								if($ROLL_NO=="") $ROLL_NO="";
								if($ROLL_ID=="") $ROLL_ID="";
								if($NO_OF_ROLL=="") $NO_OF_ROLL="";
								if($barcode_no=="") $barcode_no="";
								
								$checked=1; 
								if($entry_form==36)
								{
									$desc=explode(",",$desc);
									$cons_comps=$desc[0].','.$desc[1];
									$gsm=$gsm;
									$dia_width=$FIN_DIA;
								}
								else
								{
									$cons_comps_data=explode(",",$fabric_desc_arr[$PROD_ID]['desc']);
									$cons_comps=$cons_comps_data[0].' '.$cons_comps_data[1];
									$gsm=$fabric_desc_arr[$PROD_ID]['gsm'];
									$dia_width=$fabric_desc_arr[$PROD_ID]['dia'];	
								}
								
								
								$data_array_dtls_index[$i]["CHECKED"] = $checked;
								$data_array_dtls_index[$i]["PROD_ID"] =$PROD_ID;
								$data_array_dtls_index[$i]["FIN_DIA"] =$FIN_DIA;
								$data_array_dtls_index[$i]["NO_OF_ROLL"] =$NO_OF_ROLL;
								$data_array_dtls_index[$i]["ROLL_NO"] =$ROLL_NO;
								$data_array_dtls_index[$i]["ROLL_ID"] =$ROLL_ID;
								$data_array_dtls_index[$i]["BATCH_QNTY"] =$BATCH_QNTY;
								$data_array_dtls_index[$i]["PROD_QTY"] =$BATCH_QNTY;
								$data_array_dtls_index[$i]["BARCODE_NO"] =$barcode_no;
								$data_array_dtls_index[$i]["DIA_TYPE"] =$dia_type;
								$data_array_dtls_index[$i]["DIA_WIDTH"] =$dia_width;
								$data_array_dtls_index[$i]["GSM"] =$gsm;
								$data_array_dtls_index[$i]["CONS_COMP"] =$desc;	
								$i++;
						}
				
		}
	  
		$data_array["dtls_index"]= array_values($data_array_dtls_index);
		return $data_array;

}

	 //========Fin Batch scan=========End===================

function save_update_fin_production($save_obj) { //Finish Production ===Save Only=====
	
	$db_type = return_db_type(); 
    
	
		$response_obj = json_decode($save_obj);
		//  print_r($save_obj);die;
		$batch_id = $response_obj->data->index->BATCH_ID;
		$batch_no = $response_obj->data->index->BATCH_NO;
		// echo $batch_id.'==';die;
		$prod_type = $response_obj->data->index->PRODUCTION_TYPE;
		$company_id = $response_obj->data->index->COMPANY_ID;
		$entry_form_no = $response_obj->data->index->ENTRY_FORM_NO;
		$service_company = $response_obj->data->index->SERVICE_COMPANY;
		$process_id = $response_obj->data->index->PROCESS_ID;
		$next_process = $response_obj->data->index->NEXT_PROCESS_ID;
		$trims_wgt = $response_obj->data->index->TRIMS_WGT;
		if($trims_wgt=="") $trims_wgt='';
		$result = $response_obj->data->index->RESULT;
		if($result=="") $result=0;
		 
		$extention_no = $response_obj->data->index->EXTENTION_NO;
		if($extention_no=="") $extention_no='';
		$chemical_name = $response_obj->data->index->CHEMICAL_NAME;
		if($chemical_name=="") $chemical_name='';
		$temparature = $response_obj->data->index->TEMPARATURE;
		if($temparature=="") $temparature='';
		$over_feed = $response_obj->data->index->OVER_FEED;
		if($over_feed=="") $over_feed='';
		$steam  = $response_obj->data->index->STEAM;
		if($steam =="") $steam ='';
		$speed = $response_obj->data->index->SPEED;
		if($speed=="") $speed='';
		
		$stretch = $response_obj->data->index->STRETCH;
		if($stretch=="") $stretch='';
		$feed_id = $response_obj->data->index->FEED_IN;
		if($feed_id=="") $feed_id='';
		$pinning = $response_obj->data->index->PINNING;
		if($pinning=="") $pinning='';
		
		//For Compacting=33
		$length_shrinkage = $response_obj->data->index->LENGTH_SHRINKAGE;
		$width_shrinkage = $response_obj->data->index->WIDTH_SHRINKAGE;
		$spirality = $response_obj->data->index->SPIRALITY;
		if($length_shrinkage=="") $length_shrinkage='';
		if($width_shrinkage=="") $width_shrinkage='';
		if($spirality=="") $spirality='';
		
		
		
		$sql_batch=sql_select("select DOUBLE_DYEING,ENTRY_FORM,BATCH_NO,BATCH_DATE,BATCH_AGAINST from pro_batch_create_mst where id =$batch_id and is_deleted=0 and status_active=1");
	//echo "select DOUBLE_DYEING,ENTRY_FORM,BATCH_NO,BATCH_DATE from pro_batch_create_mst where id =$batch_id and is_deleted=0 and status_active=1";die;
		foreach($sql_batch as $row)
		{
			$batch_no_saved=$row->BATCH_NO;
			$multi_dyeing=$row->DOUBLE_DYEING;
			$entry_form=$row->ENTRY_FORM;
			$batch_aganist_id=$row->BATCH_AGAINST;
			$batch_date=strtotime($row->BATCH_DATE);
			$batch_date_chk=$row->BATCH_DATE;
		}
		if($batch_no!=$batch_no_saved)
		{
			//echo "23**Please write the correct batch no";
			 
			return $resultset[] =array("save_msg"=>"Please Write The correct BatchNo");
		}
		$re_dying_check =0;
		if($batch_aganist_id==2)
		{
			$re_dying_check =1;
		}
		
		//$process_id = $response_obj->data->index->PROCESS_NAME;
		$shift_name = $response_obj->data->index->SHIFT_NAME;
		if($shift_name=="") $shift_name=0;
		$start_hours = $response_obj->data->index->START_HOURS;
		if($start_hours=="") $start_hours='';
		$start_minutes = $response_obj->data->index->START_MINUTES;
		if($start_minutes=="") $start_minutes='';
		
		$end_hours = $response_obj->data->index->END_HOURS;
		$end_minutes = $response_obj->data->index->END_MINUTES;
		if($end_hours=="") $end_hours='';
		if($end_minutes=="") $end_minutes='';
		
		$process_start_date = $response_obj->data->index->PROCESS_START_DATE;
		if($process_start_date=="") $process_start_date='';
	
		$production_date = $response_obj->data->index->PRODUCTION_DATE;
		$process_end_date = $response_obj->data->index->PROCESS_END_DATE;
		// echo $process_start_date.'DDD';die;
		if($production_date=="") $production_date='';
		if($process_end_date=="") $process_end_date='';
		
		
		$advanced_prod_qty = $response_obj->data->index->ADVANCED_PROD_QTY;
		if($advanced_prod_qty=="") $advanced_prod_qty='';
		$floor_id = $response_obj->data->index->FLOOR;
		$machine_id = $response_obj->data->index->MACHINE_NAME;
		$remark = $response_obj->data->index->REMARK;
		if($remark=="") $remark='';
		$user_id = $response_obj->data->index->USER_ID;
		$is_re_dyeing = $response_obj->data->index->IS_RE_DYEING;
		//$inserted_by = $response_obj->data->index->inserted_by;
		$dtls_data = $response_obj->data->list_data;
		//print_r($dtls_data);die;
		
		//$batch_no = str_replace("'", "", $txt_batch_no);
	 //$batch_id = 16071;
	$load_process_start_date = str_replace("'", "", $process_start_date);
	$load_process_start_date_chk = strtotime($load_process_start_date);
	
	$unload_process_end_date = str_replace("'", "", $production_date);
	$unload_process_start_date_chk = strtotime($unload_process_end_date);
	
	//$batch_no_saved = return_field_value("batch_no", "pro_batch_create_mst", "id =$batch_id and is_deleted=0 and status_active=1","batch_no");
	
		if ($db_type == 0) {
			//$pc_date_time = date("Y-m-d H:i:s", time());
			$process_start_date = date("Y-m-d", strtotime($process_start_date));
			$production_date = date("Y-m-d", strtotime($production_date));
			$process_end_date = date("Y-m-d", strtotime($process_end_date));
		} else {
			$process_start_date = date("d-M-Y", strtotime($process_start_date));
			$production_date = date("d-M-Y", strtotime($production_date));
			$process_end_date = date("d-M-Y", strtotime($process_end_date));

		}
			
	//if($multi_dyeing=="" || $multi_dyeing==0 || $multi_dyeing==2) $multi_dyeing=2;else $multi_dyeing=$multi_dyeing;
	$batch_prod=sql_select("select A.BATCH_ID,MAX(A.ID) AS MST_ID from pro_fab_subprocess a where  a.batch_id=$batch_id and a.company_id=$company_id and a.status_active=1  group by a.batch_id ");
		//echo "10**select A.BATCH_ID,MAX(A.ID) AS MST_ID from pro_fab_subprocess a where  a.batch_id=$batch_id and a.company_id=$company_id and a.status_active=1  group by a.batch_id ";die;
		$last_mst_id=0;
		foreach($batch_prod as $row)
		{
			$last_mst_id= $row->MST_ID;
		}
		$process_enddate=str_replace("'","",$process_end_date);
		$end_hours=str_replace("'","",$end_hours);
		$end_minutes=str_replace("'","",$end_minutes);
		
		$end_hours=(int)$end_hours;
		$end_minutes=(int)$end_minutes;
		$batch_last_process=sql_select("select A.BATCH_ID,A.END_HOURS,A.END_MINUTES,A.PROCESS_END_DATE,A.PRODUCTION_DATE from pro_fab_subprocess a where  a.batch_id=$batch_id and a.company_id=$company_id and a.id in($last_mst_id) and a.status_active=1  ");
	//	echo "select A.BATCH_ID,A.END_HOURS,A.END_MINUTES,A.PROCESS_END_DATE,A.PRODUCTION_DATE from pro_fab_subprocess a where  a.batch_id=$batch_id and a.company_id=$company_id and a.id in($last_mst_id) and a.status_active=1  ";die;
		foreach($batch_last_process as $row)
		{
			$previ_process_end_date=$row->PRODUCTION_DATE;
			$previ_end_hours= $row->END_HOURS;
			$previ_end_minutes= $row->END_MINUTES;
		}
		$previ_end_hours=(int)$previ_end_hours;
		$previ_end_minutes=(int)$previ_end_minutes;
		 
		
		
		$end_date_time=$process_enddate.'.'.$end_hours.'.'.$end_minutes; 
		$curr_prod_end_date_time=strtotime($end_date_time);
		$previ_end_date_time=$previ_process_end_date.'.'.$previ_end_hours.'.'.$previ_end_minutes; 
		$previ_prod_end_date_time=strtotime($previ_end_date_time);
		//echo "10**".$previ_prod_end_date_time.'='.$curr_prod_end_date_time;die;
		$msg_txt="Current process date and time cannot be less than previous date and time";
		if($curr_prod_end_date_time<=$previ_prod_end_date_time && $previ_process_end_date!="")
		{
			//echo "13**".$msg_txt."**".$end_date_time."**".$previ_end_date_time;
		//	return $resultset["status"] = "Current process date and time cannot be less than previous date and time=".$curr_prod_end_date_time.'='.$previ_prod_end_date_time;
			return $resultset[] =array("save_msg"=>"Current process date and time cannot be less than previous date and time=");
			//disconnect($con);die;
		}
		
	
		
	
	if ($response_obj->status == true) 
	{
			
			
			$mst_tbl_id = 0;
			$dtls_tbl_id = 0;
			$this->db->trans_start();
			
			$pc_date_time = date("d-M-Y h:i:s A", time());
			if ($db_type == 0) {
				$pc_date_time = date("Y-m-d H:i:s", time());
			}
			$mst_tbl = "PRO_FAB_SUBPROCESS";
			$mst_id = return_next_id("id", $mst_tbl, "", "", $db_type);
			
	if ($response_obj->mode == "save") {
				
		
		$page_upto_id = return_field_value("page_upto_id as page_upto_id", "variable_settings_production", "company_name =$company_id and item_category_id=50 and variable_list=3 and is_deleted=0 and status_active=1","page_upto_id");
		 $roll_maintained = return_field_value("fabric_roll_level", "variable_settings_production", "company_name ='$company_id' and item_category_id=50 and variable_list=3 and is_deleted=0 and status_active=1","fabric_roll_level");
		// $re_stenter_no=0;
		 if($entry_form_no==48) //Stentering
		 {
		 $re_stenter_no=return_field_value("max(re_stenter_no) as re_stenter_no"," pro_fab_subprocess","company_id =$company_id and batch_id=$batch_id and is_deleted=0 and status_active=1 and entry_form=48","re_stenter_no");
		// echo "select max(re_stenter_no) as re_stenter_no from  pro_fab_subprocess where company_id =$company_id and batch_id=$batch_id and is_deleted=0 and status_active=1 and entry_form=48";die;
		//echo "=".$re_stenter_no;die;
		 }
		  if($entry_form_no==33) //Compacting
		 {
		 $re_stenter_no=return_field_value("max(re_stenter_no) as re_stenter_no"," pro_fab_subprocess","company_id =$company_id and batch_id=$batch_id and is_deleted=0 and status_active=1 and entry_form=33","re_stenter_no");
		//if($re_stenter_no==0) $re_stenter_no=$re_stenter_no+1;else $re_stenter_no=$re_stenter_no;
		 }
		  if($entry_form_no==30) //Slitting
		 {
		 $re_stenter_no=return_field_value("max(re_stenter_no) as re_stenter_no"," pro_fab_subprocess","company_id =$company_id and batch_id=$batch_id and is_deleted=0 and status_active=1 and entry_form=30","re_stenter_no");
		//if($re_stenter_no==0) $re_stenter_no=$re_stenter_no+1;else $re_stenter_no=$re_stenter_no;
		 }
		 if($re_stenter_no=="") $re_stenter_no=0; 
		 else $re_stenter_no=$re_stenter_no+1; 
		  
		
		 	//echo "10**=DD=".$re_stenter_no.'='.$entry_form_no;die;
		
		// echo $re_stenter_no.'=TT'.$roll_maintained;;die;
		//$mst_id = return_next_id("id", "pro_fab_subprocess", 1);
		$mst_tbl="PRO_FAB_SUBPROCESS";
		$mst_id = return_next_id("id", $mst_tbl, "", "", $db_type);
		$mst_arr=array();
		$dtls_data_array=array();
		
					$mst_arr = array(
					'ID' => $mst_id,
					'COMPANY_ID' => $company_id,
					'SERVICE_COMPANY' => $service_company,
					'RE_STENTER_NO' => $re_stenter_no,
					'SERVICE_SOURCE' => 1,
					'BATCH_NO' => $batch_no,
					'BATCH_ID' => $batch_id,
					'BATCH_EXT_NO' => $extention_no,
					'ENTRY_FORM' => $entry_form_no,
					'PREVIOUS_PROCESS' => $prod_type,
					'PROCESS_ID' => $process_id,
					'NEXT_PROCESS_ID' => $next_process,
					'RESULT' => $result,
					'PROCESS_END_DATE' => $production_date,
					'PRODUCTION_DATE' => $process_end_date,
					'PROCESS_START_DATE' => $process_start_date,
					'END_HOURS' => $end_hours,
					'END_MINUTES' => $end_minutes,
					'START_HOURS' => $start_hours,
					'START_MINUTES' => $start_minutes, //START_HOURS,START_MINUTES
					'FLOOR_ID' => $floor_id,
					'MACHINE_ID' => $machine_id,
					'TEMPARATURE' => $temparature,
					'OVER_FEED' => $over_feed,
					'CHEMICAL_NAME' => $chemical_name,
					'STEAM' => $steam,
					'FEED_IN' => $feed_id,
					'PINNING' => $pinning,
					'SPEED_MIN' => $speed,
					'LENGTH_SHRINKAGE' => $length_shrinkage,
					'WIDTH_SHRINKAGE' => $width_shrinkage,
					'SPIRALITY' => $spirality,
					'ADVANCED_PROD_QTY' => $advanced_prod_qty,
					'IS_RE_DYEING' => $is_re_dyeing,
					'SHIFT_NAME' => $shift_name,
					'REMARKS' => $remark,
					'INSERTED_BY' => $user_id,
					'INSERT_DATE' => $pc_date_time,
					'STATUS_ACTIVE' => 1,
					'IS_DELETED' =>0,
				);
				$mst_arr['ID'] = $mst_id;
				$mst_RID =$this->insertData($mst_arr, $mst_tbl);
			
			//echo $mst_RID.'=TT';;die;
			//echo $this->db->last_query();die();	//echo "10**=".$this->insertData($mst_arr, $mst_tbl); 
				if($mst_RID) $flag=1;else $flag=0;
			//	echo "10**=".$flag.'D';
					$dtls_tbl = "PRO_FAB_SUBPROCESS_DTLS";
					$id_dtls = return_next_id("id", $dtls_tbl, "", "", $db_type);
						foreach ($dtls_data as $val) {
						
							$dtls_data_array[] = array(
								'ID' => $id_dtls,
								'MST_ID' => $mst_id,
								'PROD_ID' => $val->PROD_ID,
								'ENTRY_PAGE' => $entry_form_no,
								'BARCODE_NO' => $val->BARCODE_NO,
								'ROLL_ID' => $val->ROLL_ID,
								'ROLL_NO' => $val->ROLL_NO,
								'NO_OF_ROLL' => $val->NO_OF_ROLL,
								'BATCH_QTY' => $val->BATCH_QNTY,
								'PRODUCTION_QTY' => $val->PROD_QTY,
								'CONST_COMPOSITION' => $val->CONS_COMP,
								'DIA_WIDTH' => $val->DIA_WIDTH,
								'WIDTH_DIA_TYPE' => $val->DIA_TYPE,
								'GSM' => $val->GSM,
								'INSERTED_BY' => $user_id,
								'INSERT_DATE' => $pc_date_time,
							);
							
							$id_dtls = $id_dtls + 1;
						
					}
					if($flag==1)
					{
					$dtls_RID = $this->db->insert_batch("PRO_FAB_SUBPROCESS_DTLS",$dtls_data_array);
					// echo $this->db->last_query();die();
					 if($dtls_RID) $flag=1;else $flag=0;
					}
					
				 //Slitting End
				//echo $page_upto_id.'=X'.$roll_maintained;;die;
			 		 
			if ($this->db->trans_status() == TRUE) {
				if ($flag==1) {
					$this->db->trans_commit();
					$this->db->trans_complete();
					 $resultset["batch_id"] = $batch_id;
					 $resultset["entry_form_no"] = $entry_form_no; 
					 $resultset["mst_id"] = $mst_id;
					 $resultset["save_msg"] = "Successful Done";
					 return  $resultset;
					//return $resultset["resultset"] = true;
					//return $resultset["status"] = "Successful Done";
				} else {
					$this->db->trans_rollback();
					$this->db->trans_complete();
					return $resultset["save_msg"] = "Failed";
				}

			} else {
				$resultset["save_msg"] = "Failed";
				$this->db->trans_complete();
			}

		} //=======Save End===========
		else if ($response_obj->mode == "update") {
			
			return $resultset["save_msg"] = "Update not allowed";
		}
   }
   else 
   {
			return $resultset["save_msg"] = "Failed";
   }
   //====Response Status End=


}
	
	//Finish Prod End
	
	//===========*********Dyeing=============
public function dying_company_source_load_data() { //Dying start
		$data_arr = array();
		
		$loading_unloading = array(1 => 'Loading', 2 => 'Un-loading');
		$dyeing_type_array = array(1 => 'Exhaust Dyeing', 2 => 'CPB Dyeing');
		$yes_no = array(1 => "Yes", 2 => "No"); 
		$ltb_btb = array(1 => 'BTB', 2 => 'LTB');
		$shift_name = array(1 => "A", 2 => "B", 3 => "C");
		$dyeing_result = array(1 => 'Shade Matched', 2 => 'Re-Dyeing Needed', 3 => 'Fabric Damaged', 4 => 'Incomplete/Running', 5 => 'Under Trial', 6 => 'Re-Wash Needed',11 => 'Complete',12 => 'Next process Stentering',13 => 'Next process Dryer',14 => 'Next process Compacting',15 => 'Next process Brush',16 => 'Next process Peach',17 => 'Waiting for Fastness',18 => 'Waiting for Shrinkage',19 => 'Waiting for Decision',
100 => 'Others');
$fabric_type_for_dyeing = array(1 => 'Cotton', 2 => 'Polyster', 3 => 'Lycra', 4 => 'Both Part', 5 => 'White', 6 => 'Wash', 7 => 'Melange', 8 => 'Viscose', 9 => 'CVC 1 Part', 10 => 'Scouring', 11 => 'AOP Wash', 12 => 'Y/D Wash');
$responsibility_dept_arr = array(1 =>"Knitting",2 => "Dyeing",3 =>"Finishing", 4 =>"Others");

		$conversion_cost_head_array=array(1=>"Knitting",2=>"Weaving",30=>"Yarn Dyeing",31=>"Fabric Dyeing",32=>"Tube Opening",33=>"Heat Setting",34=>"Stiching Back To Tube",35=>"All Over Printing",36=>"Stripe Printing",37=>"Cross Over Printing",60=>"Scouring",61=>"Color Dosing",62=>"Neutralization",63=>"Squeezing",64=>"Washing",65=>"Stentering",66=>"Compacting",67=>"Peach Finish",68=>"Brush",69=>"Peach+Brush",70=>"Heat+Peach",71=>"Peach+Brush+Heat",72=>"UV Prot",73=>"Odour Finish",74=>"Teflon Coating",75=>"Cool Touch",76=>"MM",77=>"Easy Care Finish",78=>"Water Repellent",79=>"Flame Resistant",80=>"Hydrophilics",81=>"Antistatic",82=>"Enzyme",83=>"Silicon", 84=>"Softener", 85=>"Brightener",86=>"Fixing/Binding Agent",87=>"Leveling Agent",101=>"Dyes & Chemical Cost",120 => "Cutting",121 => "Gmts. Printing",122 => "Gmt. Embroidery",123 => "Gmts. Washing");
		
		$comp = $this->company_list();
		$db_type = return_db_type();
		/*$machine_array = array();
		if ($db_type == 0) {
			$machine_array = return_library_array("SELECT id, concat(machine_no,'-',brand) as machine_name from lib_machine_name where category_id=2 and status_active=1 and is_deleted=0 and is_locked=0", "id", "machine_name");
		} else {
			$machine_array = return_library_array("SELECT id, (machine_no || '-' || brand) as machine_name from lib_machine_name where category_id=2 and status_active=1 and is_deleted=0 and is_locked=0", "id", "machine_name");
		}*/

		$loading_unloading_arr = array();
		foreach ($loading_unloading as $kk => $vv) {
			$obj = new Source($kk, $vv);
			$loading_unloading_arr[] = $obj;
		}
		$dyeing_type_arr = array();
		foreach ($dyeing_type_array as $kk => $vv) {
			$obj = new Source($kk, $vv);
			$dyeing_type_arr[] = $obj;
		}
		
		$knitting_source = array(1 => "In-house");
		$shift_name = array(1 => "A", 2 => "B", 3 => "C");
		$knitting_source_arr = array();
		foreach ($knitting_source as $kk => $vv) {
			$obj = new Source($kk, $vv);
			$knitting_source_arr[] = $obj;
		}
		
		$shift_name_arr = array();
		foreach ($shift_name as $kk => $vv) {
			$obj = new Source($kk, $vv);
			$shift_name_arr[] = $obj;
		}

		$multi_batch_arr = array();
		foreach ($yes_no as $kk => $vv) {
			$obj = new Source($kk, $vv);
			$multi_batch_arr[] = $obj;
		}
		$ltb_btb_arr = array();
		foreach ($ltb_btb as $kk => $vv) {
			$obj = new Source($kk, $vv);
			$ltb_btb_arr[] = $obj;
		}
		$conversion_cost_head_array_arr = array();
		foreach ($conversion_cost_head_array as $kk => $vv) {
			$obj = new Source($kk, $vv);
			$conversion_cost_head_array_arr[] = $obj;
		}
		$dyeing_result_arr = array();
		foreach ($dyeing_result as $kk => $vv) {
			$obj = new Source($kk, $vv);
			$dyeing_result_arr[] = $obj;
		}
		$fabric_type_for_dyeing_arr = array();
		foreach ($fabric_type_for_dyeing as $kk => $vv) {
			$obj = new Source($kk, $vv);
			$fabric_type_for_dyeing_arr[] = $obj;
		}
		$responsibility_dept_arr_unload = array();
		foreach ($responsibility_dept_arr as $kk => $vv) {
			$obj = new Source($kk, $vv);
			$responsibility_dept_arr_unload[] = $obj;
		}

		$data_arr["loading_unloading"] = $loading_unloading_arr;
		$data_arr["dyeing_type"] = $dyeing_type_arr;
		$data_arr["company"] = $comp;
		$data_arr["source"] = $knitting_source_arr;
		$data_arr["service_company"] = $comp;
		$data_arr["process"] = $conversion_cost_head_array_arr;
		$data_arr["ltb_btb"] = $ltb_btb_arr;
		$data_arr["multi_batch"] = $multi_batch_arr;
		$data_arr["result"] = $dyeing_result_arr;
		$data_arr["shift_name"] = $shift_name_arr;
		$data_arr["fabric_type"] = $fabric_type_for_dyeing_arr;
		$data_arr["responsibility"] = $responsibility_dept_arr_unload;
		return $data_arr;

	}
	//Dying End
	public function company_wise_floor_data($company = 0) {
		$data_array = array();
		 $floor_sql = "SELECT ID,FLOOR_NAME from lib_prod_floor where status_active =1 and is_deleted=0 and company_id='$company' and production_process=3 order by floor_name";
		
		foreach (sql_select($floor_sql) as $val) {
			$obj = new Source($val->ID, $val->FLOOR_NAME);
			$data_array[] = $obj;

		}
		return $data_array;

	}
	public function dying_prod_functional_batch_scan_data($load_unload=0,$functional_no=0) {
		 
		  $batch_chk_sql = sql_select("select A.ID, A.ENTRY_FORM,A.BATCH_NO,A.COMPANY_ID,B.SYSTEM_NO,B.PROCESS_END_DATE, SUM(C.PRODUCTION_QTY) AS PRODUCTION_QTY,SUM(C.BATCH_QTY) AS BATCH_QTY  from pro_batch_create_mst a,pro_fab_subprocess b,pro_fab_subprocess_dtls c where a.id=b.batch_id and b.id=c.mst_id and  b.system_no='" . trim($functional_no) . "' and a.entry_form in(0,136)  and b.entry_form in(35) and b.load_unload_id in($load_unload) and a.is_deleted=0 and a.status_active=1   and b.is_deleted=0 and b.status_active=1   and c.is_deleted=0 and c.status_active=1  group by  A.ID, A.ENTRY_FORM,A.BATCH_NO,A.COMPANY_ID,B.SYSTEM_NO,B.PROCESS_END_DATE  order by a.id desc");
		   
		if(count($batch_chk_sql)<=0)
		{
			echo "<b>Batch Not Found</b>";die;
		}
		$k=1;$data_array=array();$functional_batch_index=array();
		foreach($batch_chk_sql as $rows){
			 
			$company_id=$rows->COMPANY_ID;
			$service_company=$rows->SERVICE_COMPANY;
			$entry_form_id=$rows->ENTRY_FORM;
			$batch_no=$rows->BATCH_NO;
			$batch_id=$rows->ID;
			
				$functional_batch_index[$k]["BATCH_ID"] = $rows->ID;
				$functional_batch_index[$k]["SYSTEM_NO"] = $rows->SYSTEM_NO;
				$functional_batch_index[$k]["COMPANY_ID"] = $rows->COMPANY_ID;
				//$data_array['functional_batch_index'][$k]["SERVICE_COMPANY"] = $rows->SERVICE_COMPANY;
				$functional_batch_index[$k]["PROCESS_START_DATE"] = $rows->PROCESS_END_DATE;
				$functional_batch_index[$k]["BATCH_NO"] = $rows->BATCH_NO;
				$functional_batch_index[$k]["PRODUCTION_QTY"] += $rows->PRODUCTION_QTY;
				$functional_batch_index[$k]["BATCH_QTY"] += $rows->BATCH_QTY;
				$k++;
				
			}
			
			$data_array["functional_batch_index"]= array_values($functional_batch_index);
			return $data_array;
			
	}

	 
	//========Dying Prod================Batch Scan=======================
	public function dying_prod_batch_scan_load_data($batch_no = 0,$load_unload=0,$dyeing_type_id=0) {
		$data_array = array();
		  $batch_chk_sql = sql_select("select ID, ENTRY_FORM,BATCH_NO,COMPANY_ID,WORKING_COMPANY_ID AS SERVICE_COMPANY,DOUBLE_DYEING,DYEING_MACHINE,FLOOR_ID from pro_batch_create_mst where batch_no='" . trim($batch_no) . "' and entry_form in(0,136) and is_deleted=0 and status_active=1  order by id desc");
		//    echo "select ID, ENTRY_FORM,BATCH_NO,COMPANY_ID from pro_batch_create_mst where batch_no='" . trim($batch_no) . "' and entry_form in(0,136) and is_deleted=0 and status_active=1  order by id desc";die;
		if(count($batch_chk_sql)<=0)
		{
			echo "<b>Batch Not Found</b>";die;
		}
		//select id,machine_no || '-' || brand as machine_name from lib_machine_name where category_id=2 and
			//company_id=$com and floor_id=$floor and status_active=1 and is_deleted=0 and is_locked=0 order by machine_name
		$color_arr = return_library_array("select id, color_name from lib_color where status_active=1", "id", "color_name");
		$buyer_arr = return_library_array("select id, buyer_name from lib_buyer", 'id', 'buyer_name');
		$floor_arr = return_library_array("select id,floor_name from lib_prod_floor where status_active=1 and production_process=3", 'id', 'floor_name');
		$machine_arr = return_library_array("select id,machine_no || '-' || brand as machine_name from lib_machine_name where category_id=2 and status_active=1", 'id', 'machine_name');
		$fabric_type_for_dyeing = array(1 => 'Cotton', 2 => 'Polyster', 3 => 'Lycra', 4 => 'Both Part', 5 => 'White', 6 => 'Wash', 7 => 'Melange', 8 => 'Viscose', 9 => 'CVC 1 Part', 10 => 'Scouring', 11 => 'AOP Wash', 12 => 'Y/D Wash');
		$ltb_btb = array(1 => 'BTB', 2 => 'LTB');
			
			
		$data_array=array();
		 foreach($batch_chk_sql as $rows){
			 
			$company_id=$rows->COMPANY_ID;
			$service_company=$rows->SERVICE_COMPANY;
			$entry_form_id=$rows->ENTRY_FORM;
			$batch_no=$rows->BATCH_NO;
			$machine_id=$rows->DYEING_MACHINE;
			$floor_id=$rows->FLOOR_ID;
			$batch_id=$rows->ID;
			
			$double_dyeing=$rows->DOUBLE_DYEING;
			if($double_dyeing==0 || $double_dyeing==2) $multi_dyeing=2;else $multi_dyeing=$double_dyeing;
			 
			
				$data_array['input_area_index']["BATCH_ID"] = $rows->ID;
				$data_array['input_area_index']["ENTRY_FORM"] = $rows->ENTRY_FORM;
				$data_array['input_area_index']["COMPANY_ID"] = $rows->COMPANY_ID;
				$data_array['input_area_index']["SERVICE_COMPANY"] = $rows->SERVICE_COMPANY;
				$data_array['input_area_index']["BATCH_NO"] = $rows->BATCH_NO;
				$data_array['input_area_index']["MACHINE_ID"] = $rows->DYEING_MACHINE;
				$data_array['input_area_index']["FLOOR_ID"] = $rows->FLOOR_ID;
				$data_array['input_area_index']["MACHINE_NAME"] =$machine_arr[$machine_id];
				$data_array['input_area_index']["FLOOR_NAME"] =$floor_arr[$floor_id];
				//$data_array["double_dyeing"] = $rows->$multi_dyeing;
				
				//$data_array["reference_index"]["buyer"] = $rows->DOUBLE_DYEING;
			}
			$data_array['input_area_index']["load_unload"] = $load_unload;
			$data_array['input_area_index']["multi_dyeing"] = $multi_dyeing;
			//$multi_dyeing =$multi_dyeing;
			 //echo $batch_id.'=AAAAAA';die;
			//return $data_array;
			 
			
			
			 $roll_maintained = return_field_value("fabric_roll_level", "variable_settings_production", "company_name ='$company_id' and item_category_id=50 and variable_list=3 and is_deleted=0 and status_active=1","fabric_roll_level");
			// echo  $roll_maintained.'sad';die;
			$page_upto_id = return_field_value("page_upto_id", "variable_settings_production", "company_name ='$company_id' and item_category_id=50 and variable_list=3 and is_deleted=0 and status_active=1","page_upto_id");
			   $last_load="select BATCH_ID,RESULT,LOAD_UNLOAD_ID from pro_fab_subprocess where load_unload_id in(1,2) and entry_form=35 and status_active=1 and batch_id=$batch_id  order by id desc"; 
			$last_data=sql_select($last_load,1);
			$result_id=$load_unload_id=0;
			foreach ($last_data as $row)
			{
				$result_id=$row->RESULT ;
				$load_unload_id=$row->LOAD_UNLOAD_ID;
				
			}
			//echo $load_unload_id;die;
			$data_array['hidden_index']["LAST_RESULT"] = $result_id;
			$data_array['hidden_index']["LAST_LOAD_UNLOAD_ID"] = $load_unload_id;
			$data_array['hidden_index']["hidden_service_company"] = $service_company;
			 //echo $multi_dyeing.'DDD';die;
				
				$sql_load=sql_select("select BATCH_ID,RESULT,LOAD_UNLOAD_ID from pro_fab_subprocess where load_unload_id in(1,2) and entry_form=35 and status_active=1 and batch_id=$batch_id  order by id desc");
				if($multi_dyeing==2) //Multi is no
				{
					foreach ($sql_load as $row)
					{
						$BATCH_ID=$row->BATCH_ID;
						if($load_unload==1)
						{
							$load_unload_arr[$BATCH_ID]=$row->BATCH_ID;
							$load_unload_result_arr[$BATCH_ID]=$row->RESULT;
						}
						else
						{
							$load_unload_arr[$BATCH_ID]='';
							$load_unload_result_arr[$BATCH_ID]=$row->RESULT;
						}
					}
				}//f.po_job_no
				$sql_sales_job=sql_select("select F.PO_BUYER,F.BUYER_ID,F.PO_JOB_NO,A.BOOKING_NO,F.BOOKING_WITHOUT_ORDER,F.JOB_NO AS SALES_ORDER_NO,F.WITHIN_GROUP from pro_batch_create_mst a,fabric_sales_order_mst f where a.sales_order_no=f.job_no and a.status_active=1 and a.is_deleted=0 and f.status_active=1 and f.is_deleted=0 and a.id=$batch_id  group by f.po_buyer,f.buyer_id,f.po_job_no,a.booking_no,f.job_no,f.within_group,f.booking_without_order,f.po_buyer");
				foreach ($sql_sales_job as $row) {
					// $sales_order_no=$row['SALES_ORDER_NO'];
					// $PO_JOB_NO=$row['PO_JOB_NO']; 
					// $BUYER_ID=$row['PO_BUYER'];
					 $sales_order_no=$row->SALES_ORDER_NO;
					//$sales_order_no=$row->SALES_ORDER_NO;
					 //echo $row->PO_BUYER;die;
					//$sales_job_arr[$booking_no]["job_no_mst"] = $sales_job_row[csf('job_no_mst')];
					$sales_job_arr[$sales_order_no]["SALES_ORDER_NO"] =$row->SALES_ORDER_NO;
					$sales_job_arr[$sales_order_no]["PO_JOB_NO"] =$row->PO_JOB_NO;
					$sales_job_arr[$sales_order_no]["BUYER_ID"] = $row->BUYER_ID;
					$sales_job_arr[$sales_order_no]["WITHIN_GROUP"] =$row->WITHIN_GROUP;
					$sales_job_arr[$sales_order_no]["PO_BUYER"] = $row->PO_BUYER;
					$sales_job_arr[$sales_order_no]["BOOKING_WITHOUT_ORDER"] = $row->BOOKING_WITHOUT_ORDER;
				}
			 //echo $company_id.'DS';die;
			 
	   $select_field1 = " group by a.id,a.sales_order_no,a.double_dyeing,a.batch_no,a.batch_weight,a.color_id,a.company_id,a.working_company_id,a.process_id, a.booking_without_order,a.entry_form,a.booking_no,b.is_sales order by a.id";
	 $select_list = " listagg(B.PO_ID,',') within group (order by B.PO_ID) as PO_ID";
	//echo $entry_form.'XXX';
	//$booking_id=implode(",",array_unique(explode(",",$booking_id)));
	if ($load_unload == 1) {
	//and a.id not in(select batch_id from pro_fab_subprocess where load_unload_id in(1) and entry_form=35 and status_active=1)
		if ($batch_no != '') {
			if($entry_form!=136)
			{
			$sql_re = "select A.ID AS ID,A.DOUBLE_DYEING,A.BATCH_NO,B.IS_SALES, A.ENTRY_FORM,A.COMPANY_ID,A.WORKING_COMPANY_ID, A.BATCH_WEIGHT,MAX(A.EXTENTION_NO) AS EXTENTION_NO,A.PROCESS_ID AS PROCESS_ID_BATCH, A.COLOR_ID, A.BOOKING_WITHOUT_ORDER,A.BOOKING_NO, A.SALES_ORDER_NO,
SUM(B.BATCH_QNTY) AS BATCH_QNTY,  $select_list from pro_batch_create_mst a,pro_batch_create_dtls b where
				a.id='$batch_id'  and a.entry_form in(0,36) and a.id=b.mst_id and b.status_active=1 and b.is_deleted=0 and a.status_active=1  and a.is_deleted=0  $select_field1";
			}
			else //For Trim Batch
			{
				 $sql_re = "select A.ID AS ID,A.DOUBLE_DYEING,A.BATCH_NO,A.JOB_NO,0 AS IS_SALES, A.ENTRY_FORM,A.COMPANY_ID,A.WORKING_COMPANY_ID, A.BATCH_WEIGHT,MAX(A.EXTENTION_NO) AS EXTENTION_NO,A.PROCESS_ID AS PROCESS_ID_BATCH, A.COLOR_ID, A.BOOKING_WITHOUT_ORDER,A.BOOKING_NO, A.SALES_ORDER_NO,
SUM(B.TRIMS_WGT_QNTY) AS BATCH_QNTY from pro_batch_create_mst a,pro_batch_trims_dtls b where
				a.id='$batch_id'  and a.entry_form in(136) and a.id=b.mst_id and b.status_active=1 and b.is_deleted=0 and a.status_active=1  and a.is_deleted=0  group by a.id,a.double_dyeing ,a.batch_no,a.entry_form,a.company_id,a.working_company_id, a.batch_weight,a.process_id ,a.color_id,a.booking_without_order,a.job_no,a.booking_no,a.sales_order_no";
			}
		} else
		 {
			if($entry_form!=136)
			{
			$sql_re = "select A.ID AS ID,A.DOUBLE_DYEING,A.BATCH_NO,B.IS_SALES,A.ENTRY_FORM,A.COMPANY_ID,A.WORKING_COMPANY_ID, A.BATCH_WEIGHT,MAX(A.EXTENTION_NO) AS EXTENTION_NO,A.PROCESS_ID AS PROCESS_ID_BATCH, A.COLOR_ID, A.BOOKING_WITHOUT_ORDER, A.BOOKING_NO,A.SALES_ORDER_NO,
SUM(B.BATCH_QNTY) AS BATCH_QNTY, $select_list  from pro_batch_create_mst a,pro_batch_create_dtls b where
				a.id='$batch_id' and a.entry_form in(0,36) and a.id=b.mst_id  and b.status_active=1 and b.is_deleted=0 and a.status_active=1 and a.is_deleted=0   $select_field1";
			}
			else //For Trim Batch
			{
				$sql_re = "select A.ID AS ID,A.DOUBLE_DYEING,A.BATCH_NO,A.JOB_NO,0 AS IS_SALES, A.ENTRY_FORM,A.COMPANY_ID,A.WORKING_COMPANY_ID, A.BATCH_WEIGHT,MAX(A.EXTENTION_NO) AS EXTENTION_NO,A.PROCESS_ID AS PROCESS_ID_BATCH, A.COLOR_ID, A.BOOKING_WITHOUT_ORDER,A.BOOKING_NO, A.SALES_ORDER_NO,
SUM(B.TRIMS_WGT_QNTY) AS BATCH_QNTY from pro_batch_create_mst a,pro_batch_trims_dtls b where
				a.id='$batch_id'  and a.entry_form in(136) and a.id=b.mst_id and b.status_active=1 and b.is_deleted=0 and a.status_active=1  and a.is_deleted=0  group by a.id,a.double_dyeing ,a.batch_no,a.entry_form,a.company_id,a.working_company_id, a.batch_weight,a.process_id ,a.color_id,a.booking_without_order,a.booking_no,a.sales_order_no,a.job_no";
			}
		}
	} 
	else 
	{
		if ($batch_no != '')
		{
			//and a.id not in(select batch_id from pro_fab_subprocess where load_unload_id in(2) and  entry_form=35 and status_active=1)
			if($entry_form!=136)
			{
			$sql_re = "select A.ID AS ID,A.DOUBLE_DYEING,A.BATCH_NO,B.IS_SALES,A.ENTRY_FORM,A.COMPANY_ID,A.WORKING_COMPANY_ID, A.BATCH_WEIGHT,MAX(A.EXTENTION_NO) AS EXTENTION_NO,A.PROCESS_ID AS PROCESS_ID_BATCH, A.COLOR_ID, A.BOOKING_WITHOUT_ORDER, A.BOOKING_NO,A.SALES_ORDER_NO,
SUM(B.BATCH_QNTY) AS BATCH_QNTY,  $select_list from pro_batch_create_mst a,pro_batch_create_dtls b where
				a.id='$batch_id' and a.entry_form in(0,36) and a.id=b.mst_id and b.status_active=1 and b.is_deleted=0 and a.status_active=1  and a.is_deleted=0  $select_field1";
			}
			else
			{
				  $sql_re = "select A.ID AS ID,A.DOUBLE_DYEING,A.BATCH_NO,A.JOB_NO,0 AS IS_SALES, A.ENTRY_FORM,A.COMPANY_ID,A.WORKING_COMPANY_ID, A.BATCH_WEIGHT,MAX(A.EXTENTION_NO) AS EXTENTION_NO,A.PROCESS_ID AS PROCESS_ID_BATCH, A.COLOR_ID, A.BOOKING_WITHOUT_ORDER,A.BOOKING_NO, A.SALES_ORDER_NO,
SUM(B.TRIMS_WGT_QNTY) AS BATCH_QNTY from pro_batch_create_mst a,pro_batch_trims_dtls b where
				a.id='$batch_id'  and a.entry_form in(136) and a.id=b.mst_id and b.status_active=1 and b.is_deleted=0 and a.status_active=1  and a.is_deleted=0  group by a.id ,a.double_dyeing,a.batch_no,a.entry_form,a.company_id,a.working_company_id, a.batch_weight,a.process_id ,a.color_id,a.booking_without_order,a.booking_no,a.sales_order_no,a.job_no";
			}

		}
		else
		{
			if($entry_form!=136)
			{
				$sql_re = "SELECT A.ID AS ID,A.DOUBLE_DYEING,A.BATCH_NO,B.IS_SALES,A.ENTRY_FORM,A.COMPANY_ID,A.WORKING_COMPANY_ID, A.BATCH_WEIGHT,MAX(A.EXTENTION_NO) AS EXTENTION_NO,A.PROCESS_ID AS PROCESS_ID_BATCH, A.COLOR_ID, A.BOOKING_WITHOUT_ORDER, A.BOOKING_NO,A.SALES_ORDER_NO,
SUM(B.BATCH_QNTY) AS BATCH_QNTY, $select_list  from pro_batch_create_mst a,pro_batch_create_dtls b where
				a.id='$batch_id' and a.entry_form in(0,36) and a.id=b.mst_id  and b.status_active=1 and b.is_deleted=0 and a.status_active=1 and a.is_deleted=0    $select_field1";
			}
			else //For Trim Batch
			{
				  $sql_re = "select A.ID AS ID,A.DOUBLE_DYEING,A.BATCH_NO,A.COLOR_ID,A.JOB_NO,A.IS_SALES, A.ENTRY_FORM,A.COMPANY_ID,A.WORKING_COMPANY_ID, A.BATCH_WEIGHT,MAX(A.EXTENTION_NO) AS EXTENTION_NO,A.PROCESS_ID AS PROCESS_ID_BATCH, A.BOOKING_WITHOUT_ORDER,A.BOOKING_NO, A.SALES_ORDER_NO,
SUM(B.TRIMS_WGT_QNTY) AS BATCH_QNTY from pro_batch_create_mst a,pro_batch_trims_dtls b where
				a.id='$batch_id'  and a.entry_form in(136) and a.id=b.mst_id and b.status_active=1 and b.is_deleted=0 and a.status_active=1  and a.is_deleted=0  group by a.id,a.double_dyeing ,a.batch_no,a.entry_form,a.company_id,a.working_company_id, a.batch_weight,a.process_id ,a.color_id,a.booking_without_order,a.booking_no,a.sales_order_no,a.job_no";
			}
		}
	
   }
	//  echo $sql_re;die;
	$data_array_prod = sql_select($sql_re);
	
	 
$select_f_group = "group by a.job_no_mst, b.buyer_name";
 $select_listagg = "listagg(cast(A.PO_NUMBER as varchar(500)),',') within group (order by A.PO_NUMBER) as PO_NO,listagg(cast(A.FILE_NO as varchar(500)),',') within group (order by A.FILE_NO) as FILE_NO,listagg(cast(A.GROUPING as varchar(500)),',') within group (order by A.GROUPING) as REF_NO";
	
	foreach ($data_array_prod as $row) 
	{
			$batch_id=$row->ID;
			$entry_form= $row->ENTRY_FORM;
			$booking_no= $row->BOOKING_NO;
			$extention_no= $row->EXTENTION_NO;
			if($extention_no=="") $extention_no="";
			 
			$PO_ID= $row->PO_ID;
			$COLOR_ID= $row->COLOR_ID;
			$PROCESS_ID_BATCH= $row->PROCESS_ID_BATCH;
			$sales_order_no= $row->SALES_ORDER_NO;
			$data_array["reference_index"]["BATCH_ID"] = $row->ID;
			$data_array["reference_index"]["EXTENTION_NO"] = $extention_no;
			 // echo $load_unload_arr[$batch_id].'=AA';die;
		if($load_unload_arr[$batch_id]=="")
		{
			// echo $sales_order_no.'AA';die;
		 
		$salesOrder= $row->IS_SALES;
		if($entry_form==36)
		{
			$pro_id = implode(",", array_unique(explode(",", $PO_ID)));
			$pro_cond=" and a.id in(" . $pro_id . ")";
		}
		else if($entry_form==0)
		{
			$pro_id = implode(",", array_unique(explode(",", $PO_ID)));
			$pro_cond=" and a.id in(".$pro_id.")";
			if($salesOrder==1) //PO_JOB_NO
			{
				$PO_JOB_NO=$sales_job_arr[$sales_order_no]["PO_JOB_NO"];
				// echo $PO_JOB_NO.'AxA';die;
				$pro_cond="";
				$pro_cond=" and a.job_no_mst in('".$PO_JOB_NO."')";
			}
		}
		else
		{
			 
			$job_no= $row->$row[('JOB_NO')];
			$pro_cond=" and a.job_no_mst in('".$job_no."')";
		}
		if ($entry_form == 36) {

			$batch_type = "SUBCONTRACT ORDER BATCH";
			$result_job = sql_select("select $select_listagg_subcon, B.SUBCON_JOB AS JOB_NO_MST, B.PARTY_ID AS BUYER_NAME from  subcon_ord_dtls a,
				subcon_ord_mst b where a.job_no_mst=b.subcon_job  and b.status_active=1 and b.is_deleted=0 and a.status_active=1
				and a.is_deleted=0 $pro_cond group by b.subcon_job, b.party_id");
		}
		 else {
			$batch_type = " SELF ORDER BATCH ";
			$result_job = sql_select("select $select_listagg, A.JOB_NO_MST, B.BUYER_NAME from wo_po_break_down a,
				wo_po_details_master b where a.job_id=b.id  and b.status_active=1 and b.is_deleted=0 and a.status_active=1
				and a.is_deleted=0  $pro_cond $select_f_group");
			 
				 
				
		}
		
		$inhouse=1;
		if($entry_form_id==36) $working_company_id=$row->COMPANY_ID;
		else  $working_company_id=$row->WORKING_COMPANY_ID;
		
		//echo "document.getElementById('batch_type').innerHTML 			= '" . $batch_type . "';\n";

		$process_name_batch = '';
		$process_id_array = explode(",", $PROCESS_ID_BATCH);
		foreach ($result_job as $val) {
			 $PO_NO=$val->PO_NO;
			 $FILE_NO=$val->FILE_NO;
			 $REF_NO=$val->REF_NO;
			 $BUYER_NAME=$val->BUYER_NAME;
			 //echo  $BUYER_NAME;die;
			 $JOB_NO_MST=$val->JOB_NO_MST;
			
		}
		$process_ids = explode(",", $PROCESS_ID_BATCH);
		//$procssid=array(1=>'31');
		//print_r($process_ids);
		$procssid = in_array(31, $process_ids);
		//echo $procssid;
		if ($procssid == 31) {
			   $procssid=31;
		} else {
			 $procssid='0';
		}
			if($load_unload==2)
			{
				if($extention_no>0)
				{
					//echo "$('#cbo_responsibility').attr('disabled',false);\n";
					$responsibility=0;
				}
				else{
				 
					//echo "$('#cbo_responsibility').attr('disabled','disabled');\n";
					$responsibility=1;
					
				}
			}
				

		//echo "document.getElementById('txt_process_id').value 			= '31';\n";

		//echo "document.getElementById('txt_process_name').value 			= '".$process_name_batch."';\n";

		$po_nos = implode(",", array_unique(explode(",", $PO_NO)));
		$file_no = implode(",", array_unique(explode(",", $FILE_NO)));
		$ref_no = implode(",", array_unique(explode(",", $REF_NO)));
		$within_group=$sales_job_arr[$sales_order_no]["WITHIN_GROUP"];
		 

		if ($salesOrder == 1) {
			$po_nos="";//$ref_no="";
			if($within_group == 1){
			$po_buyer=$sales_job_arr[$sales_order_no]["PO_BUYER"];
			$PO_JOB_NO=$sales_job_arr[$sales_order_no]["PO_JOB_NO"];
			$booking_without_order=$sales_job_arr[$sales_order_no]["booking_without_order"];
			
			if($booking_without_order==0)
			{
				$job_nos = return_field_value("b.job_no as job_no", "wo_booking_mst a,wo_booking_dtls b", "a.booking_no=b.booking_no and b.booking_no ='".$booking_no."' and b.is_deleted=0 and b.status_active=1 group by b.job_no","job_no");
			}
			//echo $job_nos.'DDD';
			$buyer=$buyer_arr[$po_buyer];
			$job_nos=$sales_order_no;
			$sales_order_no=$sales_order_no;
			//$po_nos=$sales_order_no;
			}else{
					$buyer=$buyer_arr[$sales_job_arr[$sales_order_no]["BUYER_ID"]] ;
					$job_nos='';
					$sales_order_no=$sales_order_no;
					$po_nos=$sales_order_no;
			}
		}else{
				$buyer=$buyer_arr[$BUYER_NAME] ;
				$job_nos=$JOB_NO_MST;
				$po_nos=$po_nos;
				$file_no=$file_no;
				$ref_no=$ref_no;
				//echo $po_nos."D";die;
		}
		$data_array["reference_index"]["JOB_NO"] = $job_nos;
		$data_array["reference_index"]["PO_NO"] = $po_nos;
		$data_array["reference_index"]["FILE_NO"] = $file_no;
		$data_array["reference_index"]["REF_NO"] = $ref_no;
		$data_array["reference_index"]["BUYER"] = $buyer;
		 
		//echo $roll_maintained.'=='.$page_upto_id;
		// die;
			//echo "document.getElementById('txt_file').value 			= '" . $file_no . "';\n";
			//echo "document.getElementById('txt_ref').value 			= '" . $ref_no . "';\n";
		$sql_batch_d = sql_select("select ID,SERVICE_SOURCE,SYSTEM_NO,SERVICE_COMPANY,RECEIVED_CHALAN,ISSUE_CHALAN,ISSUE_CHALLAN_MST_ID,COMPANY_ID,BATCH_ID,BATCH_NO,PROCESS_END_DATE,END_HOURS,END_MINUTES,MACHINE_ID,FLOOR_ID,PROCESS_ID,LTB_BTB_ID,REMARKS,DYEING_TYPE_ID,HOUR_LOAD_METER from
			pro_fab_subprocess where batch_id='$batch_id' and entry_form=35 and load_unload_id=1 and status_active=1 and is_deleted=0 ");
		foreach ($sql_batch_d as $dyeing_d) {//$minute=str_pad($r_batch[csf("end_minutes")],2,'0',STR_PAD_LEFT);
		
			$PROCESS_END_DATE=$dyeing_d->PROCESS_END_DATE;
			$LTB_BTB_ID=$dyeing_d->LTB_BTB_ID;
			//$PROCESS_END_DATE=change_date_format($PROCESS_END_DATES,'','',1);
			$END_HOURS=$dyeing_d->END_HOURS;
			$END_MINUTES=$dyeing_d->END_MINUTES;
			$MACHINE_ID=$dyeing_d->MACHINE_ID;
			$FLOOR_ID=$dyeing_d->FLOOR_ID;
			$PROCESS_ID=$dyeing_d->PROCESS_ID;
			$LTB_BTB_ID=$dyeing_d->LTB_BTB_ID;
			$REMARKS=$dyeing_d->REMARKS;
			$service_source=$dyeing_d->SERVICE_SOURCE;
			$SERVICE_COMPANY=$dyeing_d->SERVICE_COMPANY;
			$funtional_batch_no=$dyeing_d->SYSTEM_NO;
			$LTB_BTB=$ltb_btb[$LTB_BTB_ID];
			$end_hour_min=str_pad($END_HOURS, 2, '0', STR_PAD_LEFT) . ':' . str_pad($END_MINUTES, 2, '0', STR_PAD_LEFT);
			$load_end_hour_min=$end_hour_min;
			
			if ($load_unload == 2) {
				//echo "process_check('31');\n";
			}
		}
		if($PROCESS_END_DATE=="") $PROCESS_END_DATE="";
		if($funtional_batch_no=="") $funtional_batch_no="";
		$data_array["reference_index"]["loading_date"] = $PROCESS_END_DATE;
		if($end_hour_min=="") $end_hour_min="";
		$data_array["reference_index"]["loading_time"] = $end_hour_min;
		
		
		//exit();
		//fabric_type_for_dyeing
		if($responsibility)
		{
			$responsibility=$responsibility;
		}
		else {$responsibility='';}
		if($row->EXTENTION_NO=="") $extention_no="";
		
		$data_array["input_area_index"]["funtional_batch_no"] = $funtional_batch_no;
		$data_array["input_area_index"]["PROCESS_ID"]=31;
		$data_array["input_area_index"]["SERVICE_SOURCE"] =$inhouse;
		$data_array["input_area_index"]["COMPANY_ID"] = $row->COMPANY_ID;
		$data_array["input_area_index"]["EXTENTION_NO"] = $extention_no;
		$data_array["input_area_index"]["WORKING_COMPANY_ID"] = $working_company_id;
		$data_array["input_area_index"]["SERVICE_SOURCE"]["is_disable"] = 1;
		$data_array["input_area_index"]["RESPONSIBILITY"]["is_disable"] = $responsibility;//Unload event
		 
		$data_array["reference_index"]["BATCH_ID"] =$batch_id;
		
		//$data_array["reference_index"]["EXTENTION_NO"] = $extention_no;
		$data_array["reference_index"]["COLOR_ID"] = $color_arr[$row->COLOR_ID];
		$data_array["reference_index"]["BATCH_TYPE"] = $batch_type;
		
		
		
		    }// Check Load/Unload
			
	} //Loop End
	

	$select_group_row1 = " and  rownum>=1 order by id desc";//order by id desc limit 0,1
	if ($load_unload == 1) {
 
		$sql_batch = sql_select(
			"select ID,BATCH_NO,COMPANY_ID,SYSTEM_NO,BATCH_ID,SERVICE_SOURCE,SERVICE_COMPANY,RECEIVED_CHALAN,ISSUE_CHALAN,ISSUE_CHALLAN_MST_ID,PROCESS_END_DATE,LOAD_UNLOAD_ID,END_HOURS,END_MINUTES,MACHINE_ID,FLOOR_ID,PROCESS_ID,
LTB_BTB_ID,WATER_FLOW_METER,RESULT,REMARKS,DYEING_TYPE_ID,HOUR_LOAD_METER,MULTI_BATCH_LOAD_ID	from pro_fab_subprocess where batch_id='$batch_id' and entry_form=35 and load_unload_id in(1) and status_active=1 and is_deleted=0  ");
	} else if ($load_unload == 2) {
		$sql_batch = sql_select("select ID,BATCH_NO,COMPANY_ID,SYSTEM_NO,SERVICE_SOURCE,SERVICE_COMPANY,RECEIVED_CHALAN,ISSUE_CHALAN,ISSUE_CHALLAN_MST_ID,BATCH_ID,PROCESS_END_DATE,LOAD_UNLOAD_ID,END_HOURS,END_MINUTES,MACHINE_ID,FLOOR_ID,PROCESS_ID,LTB_BTB_ID,WATER_FLOW_METER,RESULT,REMARKS,DYEING_TYPE_ID,HOUR_UNLOAD_METER,SHIFT_NAME,RESPONSIBILITY_ID,FABRIC_TYPE,PRODUCTION_DATE from pro_fab_subprocess where batch_id='$batch_id' and entry_form=35 and load_unload_id in(2,1) and status_active=1 and is_deleted=0 $select_group_row1");
		 
	}
	foreach ($sql_batch as $r_batch) {
		if ($load_unload == 1) //Load
		{
			$PROCESS_ID = $r_batch->PROCESS_ID;
			$END_HOURS = $r_batch->END_HOURS;
			$END_MINUTES = $r_batch->END_MINUTES;
			$END_HOURS = $r_batch->END_HOURS;
			$load_unload_id = $r_batch->load_unload_id;
			if($r_batch->HOUR_LOAD_METER) $hr_meter= $r_batch->HOUR_LOAD_METER;else $hr_meter="";
			
			$END_MINUTES = str_pad($END_MINUTES, 2, '0', STR_PAD_LEFT);
			$END_HOURS = str_pad($END_HOURS, 2, '0', STR_PAD_LEFT);
			
			$data_array["input_area_index"]["PROCESS_ID"] = $r_batch->PROCESS_ID;
			$data_array["input_area_index"]["COMPANY_ID"] = $r_batch->COMPANY_ID;
			$data_array["input_area_index"]["SERVICE_COMPANY"] = $r_batch->SERVICE_COMPANY;
			$data_array["input_area_index"]["BATCH_NO"] = $r_batch->BATCH_NO;
			$data_array["input_area_index"]["SERVICE_SOURCE"] = $r_batch->SERVICE_SOURCE;
			$data_array["input_area_index"]["LTB_BTB_ID"] = $r_batch->LTB_BTB_ID;
			$data_array["input_area_index"]["HOUR_LOAD_METER"] = $hr_meter;
		
			$data_array["input_area_index"]["FLOOR_ID"] = $r_batch->FLOOR_ID;
			$data_array["input_area_index"]["MACHINE_ID"] = $r_batch->MACHINE_ID;
			$data_array['input_area_index']["MACHINE_NAME"] =$machine_arr[$r_batch->MACHINE_ID];
			$data_array['input_area_index']["FLOOR_NAME"] =$floor_arr[$r_batch->FLOOR_ID];
			
			$data_array["input_area_index"]["REMARKS"] = $r_batch->REMARKS;
			$data_array["input_area_index"]["DYEING_TYPE_ID"] = $r_batch->DYEING_TYPE_ID;
			$data_array["input_area_index"]["MULTI_BATCH_LOAD_ID"] = $r_batch->MULTI_BATCH_LOAD_ID;
			$data_array["input_area_index"]["PROCESS_START_DATE"] = $r_batch->PROCESS_END_DATE;
			
			$data_array["input_area_index"]["END_HOURS"] = $END_HOURS;
			$data_array["input_area_index"]["END_MINUTES"] = $END_MINUTES;
			
		}
		else if ($load_unload == 2) //Unload
		{
			//if ($load_unload == 2) {
				
		//echo  $r_batch->FLOOR_ID.'==A';die;
		if($r_batch->HOUR_LOAD_METER) $hr_meter= $r_batch->HOUR_LOAD_METER;else $hr_meter="";
				$PROCESS_END_DATE=$r_batch->PROCESS_END_DATE;
				$PRODUCTION_DATE=$r_batch->PRODUCTION_DATE;
				$PROCESS_END_DATE=$load_unload_id== 1 ? "" : $PROCESS_END_DATE;
				//$PRODUCTION_DATE=$load_unload_id== 1 ? "" : change_date_format($r_batch->PRODUCTION_DATE,'','',1);
				$PRODUCTION_DATE=$load_unload_id== 1 ? "" : $PRODUCTION_DATE;
				$HOUR_UNLOAD_METER=$load_unload_id == 1 ? "" : $r_batch->HOUR_UNLOAD_METER;
				$WATER_FLOW_METER=$load_unload_id == 1 ? "" : $r_batch->WATER_FLOW_METER;
				if($r_batch->SHIFT_NAME) $shiftNam=$r_batch->SHIFT_NAME;else $shiftNam='';
				if($r_batch->FABRIC_TYPE) $fab_type=$r_batch->FABRIC_TYPE;else $fab_type='';
				
				$data_array["input_area_index"]["PROCESS_ID"] = $r_batch->PROCESS_ID;
				$data_array["input_area_index"]["COMPANY_ID"] = $r_batch->COMPANY_ID;
				$data_array["input_area_index"]["SERVICE_COMPANY"] = $r_batch->SERVICE_COMPANY;
				$data_array["input_area_index"]["BATCH_NO"] = $r_batch->BATCH_NO;
				$data_array["input_area_index"]["SERVICE_SOURCE"] = $r_batch->SERVICE_SOURCE;
				$data_array["input_area_index"]["SHIFT_NAME"] = $shiftNam;
				$data_array["input_area_index"]["PROCESS_END_DATE"] =$PRODUCTION_DATE;
				$data_array["input_area_index"]["PRODUCTION_DATE"] =$PROCESS_END_DATE;
				$data_array["input_area_index"]["RESPONSIBILITY_ID"] = $r_batch->RESPONSIBILITY_ID;
				$data_array["input_area_index"]["FABRIC_TYPE"] = $fab_type;
				$data_array["input_area_index"]["HOUR_UNLOAD_METER"] = $hr_meter;
				$data_array["input_area_index"]["WATER_FLOW_METER"] = $WATER_FLOW_METER;
				$data_array["input_area_index"]["LTB_BTB_ID"] = $r_batch->LTB_BTB_ID;
				$data_array["input_area_index"]["FLOOR_ID"] = $r_batch->FLOOR_ID;
				$data_array["input_area_index"]["MACHINE_ID"] = $r_batch->MACHINE_ID;
				$data_array['input_area_index']["MACHINE_NAME"] =$machine_arr[$r_batch->MACHINE_ID];
			    $data_array['input_area_index']["FLOOR_NAME"] =$floor_arr[$r_batch->FLOOR_ID];

				$data_array["input_area_index"]["RESULT"] = $r_batch->RESULT;
				
				$data_array["input_area_index"]["SERVICE_SOURCE"]["is_disable"] = 1;
				$data_array["input_area_index"]["SERVICE_COMPANY"]["is_disable"] = 1;
				$data_array["input_area_index"]["DYEING_TYPE_ID"]["is_disable"] = 1;
				//$data_array["input_area_index"]["FLOOR_ID"]["is_disable"] = 1;
				//$data_array["input_area_index"]["MACHINE_ID"]["is_disable"] = 1;
			
			//}
			
			 
		}
	}
	
	//=============For Dtls Part ========================//
	$fabricData = sql_select("select VARIABLE_LIST,FABRIC_ROLL_LEVEL from variable_settings_production where company_name ='$company_id' and variable_list in(3) and item_category_id=13 and is_deleted=0 and status_active=1");
	//echo "select variable_list,fabric_roll_level from variable_settings_production where company_name ='$company_id' and variable_list in(3) and item_category_id=13 and is_deleted=0 and status_active=1";
	foreach ($fabricData as $row) {
		$VARIABLE_LIST=$row->VARIABLE_LIST;
		if ($VARIABLE_LIST == 3) {
			$roll_maintained_id = $row->FABRIC_ROLL_LEVEL;
		}
	}
	//echo $roll_maintained.'='.$roll_maintained_id;
//die;
	$fabric_desc_arr = array();

	$prodData = sql_select("select C.ID,C.DETARMINATION_ID, C.ITEM_DESCRIPTION, C.LOT,C.GSM,C.YARN_COUNT_ID,C.BRAND, C.DIA_WIDTH, C.PRODUCT_NAME_DETAILS 
	from product_details_master c,pro_batch_create_dtls b where c.id=b.prod_id and b.mst_id ='$batch_id' and b.status_active=1 and c.item_category_id=13");
	
	 
	 
	foreach ($prodData as $row) {
		$PROD_ID=$row->ID;
		$DETARMINATION_ID=$row->DETARMINATION_ID;
		$ITEM_DESCRIPTION=$row->ITEM_DESCRIPTION;
		$LOT=$row->LOT;
		$GSM=$row->GSM;
		$YARN_COUNT_ID=$row->YARN_COUNT_ID;
		$BRAND=$row->BRAND;
		$DIA_WIDTH=$row->DIA_WIDTH;
		$PRODUCT_NAME_DETAILS=$row->PRODUCT_NAME_DETAILS;
		
		$fabric_desc_arr[$PROD_ID]['desc'] = $PRODUCT_NAME_DETAILS;
		$fabric_desc_arr[$PROD_ID]['gsm'] = $GSM;
		$fabric_desc_arr[$PROD_ID]['dia'] = $DIA_WIDTH;
		$fabric_desc_arr[$PROD_ID]['detarmination_id'] = $DETARMINATION_ID;
	}
	unset($prodData);
	//$yarn_lot_arr = array();
//echo $company_id.'=='.$double_dyeing.'='.$page_upto_id.'='.$roll_maintained_id;
		$max_load_id = return_field_value("MAX(ID) AS MAXLOAD_ID", "pro_fab_subprocess", "batch_id =$batch_id and entry_form=35  and load_unload_id in(1) and is_deleted=0 and status_active=1","MAXLOAD_ID");
		$max_unload_id = return_field_value("MAX(ID)  AS MAXLOAD_ID", "pro_fab_subprocess", "batch_id =$batch_id and entry_form=35  and load_unload_id in(2) and is_deleted=0 and status_active=1","MAXLOAD_ID");
		
		if($max_load_id!="")
		{
		 $load_insert = ("select A.LOAD_UNLOAD_ID,B.PRODUCTION_QTY,B.ROLL_ID,B.NO_OF_ROLL,B.PROD_ID,B.GSM,B.DIA_WIDTH,B.BARCODE_NO,B.WIDTH_DIA_TYPE from  pro_fab_subprocess a, pro_fab_subprocess_dtls b where a.id=b.mst_id and a.batch_id=$batch_id and a.entry_form=35  and a.load_unload_id in(1) and a.status_active=1 and b.status_active=1 and b.is_deleted=0 and a.is_deleted=0 and b.mst_id in($max_load_id) ");
		$load_result = sql_select($load_insert);
		foreach ($load_result as $row) {
				
					//if($row->BARCODE_NO=='') $BARCODE_NO=0;
					//if($row->BARCODE_NO=='') $BARCODE_NO=0;
					$LOAD_UNLOAD_ID=$row->LOAD_UNLOAD_ID;
					$PRODUCTION_QTY=$row->PRODUCTION_QTY;
					$ROLL_ID=$row->ROLL_ID;
					$NO_OF_ROLL=$row->NO_OF_ROLL;
					$PROD_ID=$row->PROD_ID;
					$GSM=$row->GSM;
					$DIA_WIDTH=$row->DIA_WIDTH;
					$BARCODE_NO=$row->BARCODE_NO;
					$WIDTH_DIA_TYPE=$row->WIDTH_DIA_TYPE;
					$load_qty_arr[$PROD_ID][$BARCODE_NO][$GSM][$WIDTH_DIA_TYPE]= $PRODUCTION_QTY;
					$load_qty_arr2[$PROD_ID][$GSM][$WIDTH_DIA_TYPE][$NO_OF_ROLL]= $PRODUCTION_QTY;
				
				
			}
		}
		if($max_unload_id!="")
		{
		 $unload_insert = ("select A.LOAD_UNLOAD_ID,B.PRODUCTION_QTY,B.ROLL_ID,B.PROD_ID,B.GSM,B.DIA_WIDTH,B.BARCODE_NO,B.WIDTH_DIA_TYPE from  pro_fab_subprocess a, pro_fab_subprocess_dtls b where a.id=b.mst_id and a.batch_id=$batch_id and a.entry_form=35  and a.load_unload_id in(2) and a.status_active=1 and b.status_active=1 and b.is_deleted=0 and a.is_deleted=0  ");//and b.mst_id in($max_unload_id)
		$unload_result = sql_select($unload_insert);
		foreach ($unload_result as $row) {
					$LOAD_UNLOAD_ID=$row->LOAD_UNLOAD_ID;
					$PRODUCTION_QTY=$row->PRODUCTION_QTY;
					$ROLL_ID=$row->ROLL_ID;
					$PROD_ID=$row->PROD_ID;
					$GSM=$row->GSM;
					$DIA_WIDTH=$row->DIA_WIDTH;
					$BARCODE_NO=$row->BARCODE_NO;
					$WIDTH_DIA_TYPE=$row->WIDTH_DIA_TYPE;
					
					$unload_qty_arr[$PROD_ID][$BARCODE_NO][$GSM][$WIDTH_DIA_TYPE]= $PRODUCTION_QTY;
					$unload_qty_arr2[$PROD_ID][$GSM][$WIDTH_DIA_TYPE]= $PRODUCTION_QTY;
				
			}
		}
		if ($load_unload == 1) $load_unload_cond = "and a.load_unload_id in(1)";
		else if ($load_unload == 2) $load_unload_cond = "and a.load_unload_id in(2)";
	
		 // echo $dyeing_type.'='.$page_upto_id.'='.$roll_maintained;die;
		 if($entry_form!=136)
		{
			if (($page_upto_id == 2 || $page_upto_id > 2) && $roll_maintained == 1) {
				  $sql_insert = ("select B.PRODUCTION_QTY,B.ROLL_ID,B.PROD_ID from  pro_fab_subprocess a, pro_fab_subprocess_dtls b where a.id=b.mst_id and a.batch_id=$batch_id and a.entry_form=35  and b.roll_id>0 $load_unload_cond and a.status_active=1 and b.status_active=1 and b.is_deleted=0 and a.is_deleted=0");
				$sql_insert_roll = sql_select($sql_insert);
				$inserted_roll = array();
				foreach ($sql_insert_roll as $in_row) {
					$ROLL_ID=$row->ROLL_ID;
					$inserted_roll[] = $ROLL_ID;
				}
					if($dyeing_type_id==2)//CBP dyeing
					{
						
						$roll_id_cond = "";
						//if (count($inserted_roll) > 0) $roll_id_cond = "  and b.roll_id not in (" . implode(",", $inserted_roll) . ")";
						
					}
					else
					{
						if($multi_dyeing==2)//multi is No
						{
						$roll_id_cond = "";
						if (count($inserted_roll) > 0) $roll_id_cond = "  and b.roll_id not in (" . implode(",", $inserted_roll) . ")";
						}
					}
	
			 $select_group = "group by b.id,b.item_description,b.width_dia_type,a.entry_form,b.prod_id,b.po_id,b.roll_no,b.roll_id,b.barcode_no,c.roll_no,c.barcode_no";
				   $result = "select A.ENTRY_FORM,B.WIDTH_DIA_TYPE,B.PROD_ID,B.PO_ID,B.BARCODE_NO AS BATCH_BARCODE,B.ROLL_NO AS BATCH_ROLLNO,B.ROLL_ID ,B.ITEM_DESCRIPTION,B.WIDTH_DIA_TYPE, SUM(B.BATCH_QNTY) AS BATCH_QNTY,C.ROLL_NO,C.BARCODE_NO from pro_batch_create_dtls b,pro_batch_create_mst a,pro_roll_details c where b.mst_id=$batch_id and a.id=b.mst_id and b.roll_id=c.id and  a.entry_form in(0,136) and b.status_active=1 and b.is_deleted=0  $roll_id_cond $select_group";
				$result_data = sql_select($result);
	
				$i = 1;
				$b_qty = 0;
				$tot_prod_qnty = 0;$data_array_dtls_index=array();
				foreach ($result_data as $row) {
					$ENTRY_FORM=$row->ENTRY_FORM;
					$PROD_ID=$row->PROD_ID;
					$PO_ID=$row->PO_ID;
					$BATCH_BARCODE=$row->BATCH_BARCODE;
					$WIDTH_DIA_TYPE=$row->WIDTH_DIA_TYPE;
					$BATCH_ROLLNO=$row->BATCH_ROLLNO;
					$ROLL_ID=$row->ROLL_ID;
					$ITEM_DESCRIPTION=$row->ITEM_DESCRIPTION;
					$BATCH_QNTY=$row->BATCH_QNTY;
					$ROLL_NO=$row->ROLL_NO;
					$BARCODE_NO=$row->BARCODE_NO;
					
					if ($ENTRY_FORM == 36) {
						$desc = explode(",", $row->item_description);
						$cons_comps = $desc[0];
						$gsm = $desc[1];
						$dia_width = $desc[2];
					} else {
						$cons_comps_data = explode(",", $fabric_desc_arr[$PROD_ID]['desc']);
						$cons_comps = $cons_comps_data[0] . ' ' . $cons_comps_data[1];
						$gsm = $fabric_desc_arr[$PROD_ID]['gsm'];
						$dia_width = $fabric_desc_arr[$PROD_ID]['dia'];
					}
					 
					
					
						//echo $load_unload.'='.$dyeing_type_id;
					if($load_unload==2)
					{
						if($dyeing_type_id==2) //CBP
						{
							$unload_prod_qnty=$unload_qty_arr[$PROD_ID][$BATCH_BARCODE][$gsm][$WIDTH_DIA_TYPE];
							//$load_prod_qnty=$load_qty_arr[$row[csf('prod_id')]][$row[csf('batch_barcode')]][$gsm][$row[csf('width_dia_type')]];
							$load_prod_qnty = $BATCH_QNTY-$unload_prod_qnty;
						}
						else
						{
							$load_prod_qnty=$load_qty_arr[$PROD_ID][$BATCH_BARCODE][$gsm][$WIDTH_DIA_TYPE];
						}
						
					}
					else
					{
						$load_prod_qnty = $BATCH_QNTY;
					}
					
				//echo $page_upto_id.'='.$roll_maintained;die;
					if (($page_upto_id == 2 || $page_upto_id > 2) && $roll_maintained == 1) {
						//$roll_no = $fabric_roll_arr[$row[csf('roll_id')]]['roll'];
	
						$roll_no = $ROLL_NO;
						$batch_qnty = $BATCH_QNTY;
						$tot_qty += $BATCH_QNTY;
						//echo $load_prod_qnty.'='.$roll_maintained.'XX';
						if ($load_unload == 2) {
							//echo $load_prod_qnty.'XX';
								$readdata = "readonly";
								$prod_qnty = $load_prod_qnty;
								$tot_prod_qnty += $load_prod_qnty;
							} else {
							//echo $load_prod_qnty.'BB';
								$readdata = "";
								$prod_qnty =  $load_prod_qnty;
								$tot_prod_qnty = $load_prod_qnty;
							}
					} else {
						$roll_no = $roll_no;
						$tot_qty += $BATCH_QNTY;
						//echo $load_prod_qnty.'B';
						if ($load_unload == 2) {
								$readdata = 1;
								$prod_qnty = $load_prod_qnty;
								//$tot_prod_qnty += $load_prod_qnty;
							} else {
								$readdata = 0;
								$prod_qnty = $load_prod_qnty;
								//$tot_prod_qnty += $load_prod_qnty;
							}
					}
					
					if($dyeing_type_id==2) //CBP
					{
						$readdata = "";
					}
					else
					{
						$readdata =$readdata;
					}
					//echo $prod_qnty.'DDD';die;
						if($prod_qnty>0) //zero Qty check start
						{
							 if($fabric_typee[$WIDTH_DIA_TYPE]=="") $fabric_typee[$WIDTH_DIA_TYPE]="";
							if($dia_width=="") $dia_width="";if($ROLL_ID=="") $ROLL_ID="";
							if($WIDTH_DIA_TYPE=="") $WIDTH_DIA_TYPE="";
							if($BATCH_ROLLNO=="") $BATCH_ROLLNO="";	
							if($ROLL_ID=="") $ROLL_ID="";
							if($gsm=="") $gsm="";if($BARCODE_NO=="") $BARCODE_NO="";
							
							$checked=1; 
							/*$data_array["dtls_index"][$i]["CHECKED"] = $checked;
							$data_array["dtls_index"][$i]["PROD_ID"] =$PROD_ID;
							$data_array["dtls_index"][$i]["CONS_COMPS"] = $cons_comps;
							$data_array["dtls_index"][$i]["GSM"] = $gsm;
							$data_array["dtls_index"][$i]["DIA_WIDTH"] = $dia_width;
							$data_array["dtls_index"][$i]["FABRIC_TYPEE"] =$fabric_typee[$WIDTH_DIA_TYPE];
							$data_array["dtls_index"][$i]["FABRIC_TYPEE_ID"] = $WIDTH_DIA_TYPE;
							$data_array["dtls_index"][$i]["ROLL_ID"] = $ROLL_ID;
							$data_array["dtls_index"][$i]["BARCODE_NO"] = $BARCODE_NO;
							$data_array["dtls_index"][$i]["BATCH_QNTY"] = $BATCH_QNTY;
							$data_array["dtls_index"][$i]["BATCH_ROLLNO"] = $BATCH_ROLLNO;
							$data_array["dtls_index"][$i]["PROD_QTY"] = $prod_qnty;
							$data_array["dtls_index"][$i]["PROD_QTY_READONLY"] = $readdata;*/
							//CHECKED,CONS_COMPS,GSM,DIA_WIDTH,FABRIC_TYPEE,FABRIC_TYPEE_ID,
							$data_array_dtls_index[$i]["CHECKED"] = $checked;
							$data_array_dtls_index[$i]["PROD_ID"] =$PROD_ID;
							$data_array_dtls_index[$i]["CONS_COMPS"] = $cons_comps;
							$data_array_dtls_index[$i]["GSM"] = $gsm;
							$data_array_dtls_index[$i]["DIA_WIDTH"] = $dia_width;
							$data_array_dtls_index[$i]["FABRIC_TYPEE"] =$fabric_typee[$WIDTH_DIA_TYPE];
							$data_array_dtls_index[$i]["FABRIC_TYPEE_ID"] = $WIDTH_DIA_TYPE;
							$data_array_dtls_index[$i]["ROLL_ID"] = $ROLL_ID;
							$data_array_dtls_index[$i]["BARCODE_NO"] = $BARCODE_NO;
							$data_array_dtls_index[$i]["BATCH_QNTY"] = $BATCH_QNTY;
							$data_array_dtls_index[$i]["BATCH_ROLLNO"] = $BATCH_ROLLNO;
							$data_array_dtls_index[$i]["PROD_QTY"] = $prod_qnty;
							$data_array_dtls_index[$i]["PROD_QTY_READONLY"] = $readdata;
							
					
					//$b_qty += $row[csf('batch_qnty')];
					///$total_prod_qnty += $load_prod_qnty;
					$i++;
						}
				}
				 
				 
			}   //Roll End
			else 
			{
				
					if($max_unload_id!="")
					{
					  $unload_insert = ("select A.LOAD_UNLOAD_ID,B.PRODUCTION_QTY,B.ROLL_ID,B.PROD_ID,B.GSM,B.DIA_WIDTH,B.BARCODE_NO,B.WIDTH_DIA_TYPE from  pro_fab_subprocess a, pro_fab_subprocess_dtls b where a.id=b.mst_id and a.batch_id=$batch_id and a.entry_form=35  and a.load_unload_id in(2) and a.status_active=1 and b.status_active=1 and b.is_deleted=0 and a.is_deleted=0 ");
					$unload_result = sql_select($unload_insert);
					foreach ($unload_result as $row) {
								//$unload_qty_arr[$row[csf('prod_id')]][$row[csf('barcode_no')]][$row[csf('gsm')]][$row[csf('width_dia_type')]]= $row[csf('production_qty')];
								$PROD_ID=$row->PROD_ID;
								$PRODUCTION_QTY=$row->PRODUCTION_QTY;
								$ROLL_ID=$row->ROLL_ID;
								$GSM=$row->GSM;
								$DIA_WIDTH=$row->DIA_WIDTH;
								$BARCODE_NO=$row->BARCODE_NO;
								$WIDTH_DIA_TYPE=$row->WIDTH_DIA_TYPE;
								$previ_unload_qty_arr[$PROD_ID][$GSM][$WIDTH_DIA_TYPE]+= $PRODUCTION_QTY;
							
						}
					}
			
				$batch_id_search = sql_select("select a.BATCH_ID from pro_fab_subprocess a,pro_fab_subprocess_dtls b where a.id=b.mst_id and a.batch_id=$batch_id and company_id=$company_id and entry_form=35 and a.status_active=1 and b.status_active=1 $load_unload_cond");
				 
				foreach ($batch_id_search as $row) {
					$batch_id_search=$row->BATCH_ID;
				}
				//echo "select a.batch_id from pro_fab_subprocess a,pro_fab_subprocess_dtls b where a.id=b.mst_id and a.batch_id=$batch_id and company_id=$company_id and entry_form=35 and a.status_active=1 and b.status_active=1 $load_unload_cond";
				if($dyeing_type_id==2)//CBP dyeing
					{
					$batch_insert_cond = "";
					}
					else
					{
						if($multi_dyeing==2)//multi is No
						{
						$batch_insert_cond = "";
						if (count($batch_id_search) > 0) $batch_insert_cond = " and a.id!=" . $batch_id_search . "";
						}
	
					}
	
			  $select_group = "group by b.item_description,b.width_dia_type,a.entry_form,b.prod_id,b.po_id";
				//echo "sdsd";
				  $sql_result = "select A.ENTRY_FORM,B.WIDTH_DIA_TYPE,B.PROD_ID,B.PO_ID,COUNT(B.ROLL_NO) AS NO_OF_ROLL ,B.ITEM_DESCRIPTION,B.WIDTH_DIA_TYPE, SUM(B.BATCH_QNTY) AS BATCH_QNTY from pro_batch_create_dtls b,pro_batch_create_mst a,pro_roll_details c where b.mst_id=$batch_id and a.id=b.mst_id and b.roll_id=c.id and  a.entry_form in(0,136) and b.status_active=1 and b.is_deleted=0 $batch_insert_cond $select_group";
				$result=sql_select($sql_result);
				if(count($result)==0)
				{
				  $select_group = "group by b.item_description,b.width_dia_type,a.entry_form,b.prod_id,b.po_id";
					 $sql_result ="select A.ENTRY_FORM,B.WIDTH_DIA_TYPE,B.PROD_ID,B.PO_ID,COUNT(B.ROLL_NO) AS NO_OF_ROLL ,B.ITEM_DESCRIPTION,B.WIDTH_DIA_TYPE, SUM(B.BATCH_QNTY) AS BATCH_QNTY,0 AS ROLL_NO, 0 AS BARCODE_NO from pro_batch_create_dtls b,pro_batch_create_mst a where b.mst_id=$batch_id and a.id=b.mst_id and  a.entry_form in(0,136) and b.status_active=1 and b.is_deleted=0 $batch_insert_cond $select_group";
					$result=sql_select($sql_result);
				}
				if (count($result) > 0) {
	
					$i = 1;
					$tot_prod_qty = 0;
					$tot_batch_qty = 0;$data_array_dtls_index=array();
					foreach ($result as $row) {
						//$desc=explode(",",$row[csf('item_description')]);
						$ENTRY_FORM=$row->ENTRY_FORM;
						$ITEM_DESCRIPTION=$row->ITEM_DESCRIPTION;
						$PROD_ID=$row->PROD_ID;
						$PO_ID=$row->PO_ID;
						$WIDTH_DIA_TYPE=$row->WIDTH_DIA_TYPE;
						$BATCH_QNTY=$row->BATCH_QNTY;
						$NO_OF_ROLL=$row->NO_OF_ROLL;
						
						if ($ENTRY_FORM == 36) {
							$desc = explode(",", $ITEM_DESCRIPTION);
							//print_r($desc);
							$cons_comps = $desc[0];
							$gsm = $desc[1];
							$dia_width = $desc[2];
						} else {
							//$cons_comps='';
							$cons_comps_data = explode(",", $fabric_desc_arr[$PROD_ID]['desc']);
	
							$cons_comps = $cons_comps_data[0] . ' ' . $cons_comps_data[1];
							
							$gsm = $fabric_desc_arr[$PROD_ID]['gsm'];
							$dia_width = $fabric_desc_arr[$PROD_ID]['dia'];
							//$lot=$fabric_desc_arr[$row[csf('prod_id')]]['lot'];
							//$yarn_count=$fabric_desc_arr[$row[csf('prod_id')]]['yarn_count'];
							//$brand=$fabric_desc_arr[$row[csf('prod_id')]]['brand'];
	
						}
						 
					
						if($dyeing_type_id==2)//CBP dyeing
						{
							if($load_unload == 2)
							{
								$load_prod_qnty=$load_qty_arr2[$PROD_ID][$gsm][$WIDTH_DIA_TYPE][$NO_OF_ROLL];
								//echo $row[csf('prod_id')].'='.$gsm.'='.$row[csf('width_dia_type')];
							}
							else
							{
								$unload_prod_qnty=$previ_unload_qty_arr[$PROD_ID][$gsm][$WIDTH_DIA_TYPE];
								//echo  $row[csf('batch_qnty')].'='.$unload_prod_qnty;
								$load_prod_qnty = $BATCH_QNTY-$unload_prod_qnty;
							}
							
						}
						else
						{
							if($load_unload == 2)
							{
								$load_prod_qnty=$load_qty_arr2[$PROD_ID][$gsm][$WIDTH_DIA_TYPE][$NO_OF_ROLL];
								//echo $row[csf('prod_id')].'='.$gsm.'='.$row[csf('width_dia_type')];
							}
							else
							{
								$load_prod_qnty = $BATCH_QNTY;
							}
						}
							//echo $dyeing_type_id.'='.$load_prod_qnty;
	
						if (($page_upto_id == 2 || $page_upto_id > 2) && $roll_maintained == 1) {
							//$roll_no = $fabric_roll_arr[$row[csf('roll_id')]]['roll'];
							$roll_no = $NO_OF_ROLL;
	
							$batch_qnty = $BATCH_QNTY;
							//$prod_qnty=$row[csf('batch_qnty')];
							//$tot_batch_qty+= $row[csf('batch_qnty')];
							//$tot_prod_qty+= $row[csf('batch_qnty')];
	
							if ($load_unload == 2) {
									$readdata = "readonly";
									//$batch_qnty=$row[csf('batch_qnty')];
									$prod_qnty = $BATCH_QNTY;
									//$tot_prod_qnty += $load_prod_qnty;
								} else {
									$readdata = "";
									$prod_qnty = $BATCH_QNTY;
									//$tot_prod_qnty += $load_prod_qnty;
								}
						} else {
							$roll_no = $NO_OF_ROLL;
							$batch_qnty = $BATCH_QNTY;
							//$tot_prod_qty="";
							//$tot_batch_qty+= $row[csf('batch_qnty')];
						//echo $load_prod_qnty.'XXXX'.$process_id;
							if ($load_unload == 2) {
									$readdata = 1;
									//$batch_qnty=$row[csf('batch_qnty')];
									$prod_qnty = $load_prod_qnty;
									//$tot_prod_qnty += $load_prod_qnty;
								} else {
									$readdata = 0;
									if($dyeing_type_id==2)//CBP dyeing
									{
										$prod_qnty = $load_prod_qnty;
									}
									else
									{
										$prod_qnty = $BATCH_QNTY;
									}
									//$tot_prod_qnty += $load_prod_qnty;
								}
	
						}
						if($dyeing_type_id==2)//CBP
						{
							$readdata = 0;
						}
						else
						{
							$readdata =$readdata;
						}
	
						if($prod_qnty>0) //zero Qty check start
						{
							if($fabric_typee[$WIDTH_DIA_TYPE]=="") $fabric_typee[$WIDTH_DIA_TYPE]="";
							if($ROLL_ID=="") $ROLL_ID="";
							if($WIDTH_DIA_TYPE=="") $WIDTH_DIA_TYPE="";
							if($BATCH_ROLLNO=="") $BATCH_ROLLNO="";
							if($BARCODE_NO=="") $BARCODE_NO="";
							if($gsm=="") $gsm="";
							 $checked=0;
							/*$checked=0;
							$data_array["dtls_index"][$i]["CHECKED"] = $checked;
							$data_array["dtls_index"][$i]["PROD_ID"] =$row->PROD_ID;
							$data_array["dtls_index"][$i]["CONS_COMPS"] = $cons_comps;
							$data_array["dtls_index"][$i]["GSM"] = $gsm;
							$data_array["dtls_index"][$i]["DIA_WIDTH"] = $dia_width;
							$data_array["dtls_index"][$i]["FABRIC_TYPEE"] =$fabric_typee[$WIDTH_DIA_TYPE];
							$data_array["dtls_index"][$i]["FABRIC_TYPEE_ID"] = $WIDTH_DIA_TYPE;
							$data_array["dtls_index"][$i]["ROLL_ID"] = $ROLL_ID;
							$data_array["dtls_index"][$i]["BARCODE_NO"] = $BARCODE_NO;
							$data_array["dtls_index"][$i]["BATCH_QNTY"] = $BATCH_QNTY;
							$data_array["dtls_index"][$i]["BATCH_ROLLNO"] = $BATCH_ROLLNO;
							$data_array["dtls_index"][$i]["PROD_QTY"] = $prod_qnty;
							$data_array["dtls_index"][$i]["PROD_QTY_READONLY"] = $readdata;*/
							$data_array_dtls_index[$i]["CHECKED"] = $checked;
							$data_array_dtls_index[$i]["PROD_ID"] =$row->PROD_ID;
							$data_array_dtls_index[$i]["CONS_COMPS"] = $cons_comps;
							$data_array_dtls_index[$i]["GSM"] = $gsm;
							$data_array_dtls_index[$i]["DIA_WIDTH"] = $dia_width;
							$data_array_dtls_index[$i]["FABRIC_TYPEE"] =$fabric_typee[$WIDTH_DIA_TYPE];
							$data_array_dtls_index[$i]["FABRIC_TYPEE_ID"] = $WIDTH_DIA_TYPE;
							$data_array_dtls_index[$i]["ROLL_ID"] = $ROLL_ID;
							$data_array_dtls_index[$i]["BARCODE_NO"] = $BARCODE_NO;
							$data_array_dtls_index[$i]["BATCH_QNTY"] = $BATCH_QNTY;
							$data_array_dtls_index[$i]["BATCH_ROLLNO"] = $BATCH_ROLLNO;
							$data_array_dtls_index[$i]["PROD_QTY"] = $prod_qnty;
							$data_array_dtls_index[$i]["PROD_QTY_READONLY"] = $readdata;
						 
						//$tot_batch_qty += $row[csf('batch_qnty')];
						//$tot_prod_qnty += $prod_qnty;
						//$tot_batch_qty+= $row[csf('batch_qnty')];
						$i++;
						}
					}
				} 
				
			} //=====Gross End====
		}
		else //Trim Batch Start.
		{
				$batch_id_search = sql_select("select A.BATCH_ID from pro_fab_subprocess a,pro_fab_subprocess_dtls b where a.id=b.mst_id and a.batch_id=$batch_id and company_id=$company_id and entry_form=35 and a.status_active=1 and b.status_active=1 $load_unload_cond");
					foreach ($result as $row)
					 {
						 $BATCH_ID=$row->BATCH_ID;
					 }
					if($dyeing_type_id==2)//multi is No //CBP Dyeing
					{
						$batch_insert_cond = "";
					}
					else
					{
						if($multi_dyeing==2)//multi is No //CBP Dyeing
						{
						$batch_insert_cond = "";
						if (count($batch_id_search) > 0) $batch_insert_cond = " and a.id!=" . $BATCH_ID . "";
						}
					}
	
				 $select_group = "group by b.item_description,b.width_dia_type,a.entry_form,b.prod_id,b.po_id";
					$sql_result ="select A.ENTRY_FORM, 0 AS PROD_ID,0 AS PO_ID,0 AS NO_OF_ROLL,B.REMARKS,B.ITEM_DESCRIPTION, 0 AS WIDTH_DIA_TYPE, SUM(B.TRIMS_WGT_QNTY) AS BATCH_QNTY,0 AS ROLL_NO, 0 AS BARCODE_NO from pro_batch_trims_dtls b,pro_batch_create_mst a where a.id=b.mst_id and   b.mst_id=$batch_id and a.entry_form in(136) and b.status_active=1 and b.is_deleted=0 $batch_insert_cond group by a.entry_form,b.remarks,b.item_description";
					$result=sql_select($sql_result);
	
			//	echo count($result).'DD';//trims_wgt_qnty,remarks,item_description
				if (count($result) > 0) {
	
					$i = 1;
					$tot_prod_qty = 0;$data_array_dtls_index=array();
					$tot_batch_qty = 0;
					foreach ($result as $row)
					 {
						//$desc=explode(",",$row[csf('item_description')]);
						
						$PROD_ID=$row->PROD_ID;
						$cons_comps=$row->ITEM_DESCRIPTION;
						$NO_OF_ROLL=$row->NO_OF_ROLL;
						$REMARKS=$row->REMARKS;
						$WIDTH_DIA_TYPE=$row->WIDTH_DIA_TYPE;
						$BATCH_QNTY=$row->BATCH_QNTY;
						$ROLL_NO=$row->ROLL_NO;
						$ENTRY_FORM=$row->ENTRY_FORM;
						$BARCODE_NO=$row->BARCODE_NO;
						$roll_no = $ROLL_NO;
						$batch_qnty = $BATCH_QNTY;
							//$tot_prod_qty="";
							//$tot_batch_qty+= $row[csf('batch_qnty')];
							if ($load_unload == 2) {
									$readdata = 1;
									//$batch_qnty=$row[csf('batch_qnty')];
									$prod_qnty = $BATCH_QNTY;
									$tot_prod_qnty += $BATCH_QNTY;
								} else {
									$readdata = 0;
									$prod_qnty = $BATCH_QNTY;
									$tot_prod_qnty += $BATCH_QNTY;
								}
						if($dyeing_type_id==2)//CBP
						{
							$readdata = "";
						}
						else
						{
							$readdata =1;
						}
						//echo $batch_filed_read.'DD';
						if (($page_upto_id == 2 || $page_upto_id > 2) && $roll_maintained == 1) {
							$checked=1;
							
						}
						else 	$checked=0;
							
							if($fabric_typee[$WIDTH_DIA_TYPE]=="") $fabric_typee[$WIDTH_DIA_TYPE]="";
							if($dia_width=="") $dia_width="";if($ROLL_ID=="") $ROLL_ID="";
							if($WIDTH_DIA_TYPE=="") $WIDTH_DIA_TYPE="";
							if($BATCH_ROLLNO=="") $BATCH_ROLLNO="";	if($BARCODE_NO=="") $BARCODE_NO="";	
							if($ROLL_ID=="") $ROLL_ID="";
							if($gsm=="") $gsm="";
							
							/*$data_array["dtls_index"][$i]["CHECKED"] = $checked;
							$data_array["dtls_index"][$i]["PROD_ID"] =$row->PROD_ID;
							$data_array["dtls_index"][$i]["CONS_COMPS"] = $cons_comps;
							$data_array["dtls_index"][$i]["GSM"] = $gsm;
							$data_array["dtls_index"][$i]["DIA_WIDTH"] = $dia_width;
							$data_array["dtls_index"][$i]["FABRIC_TYPEE"] =$fabric_typee[$WIDTH_DIA_TYPE];
							$data_array["dtls_index"][$i]["FABRIC_TYPEE_ID"] = $WIDTH_DIA_TYPE;
							$data_array["dtls_index"][$i]["ROLL_ID"] = $ROLL_ID;
							$data_array["dtls_index"][$i]["BARCODE_NO"] = $BARCODE_NO;
							$data_array["dtls_index"][$i]["BATCH_QNTY"] = $BATCH_QNTY;
							$data_array["dtls_index"][$i]["BATCH_ROLLNO"] = $BATCH_ROLLNO;
							$data_array["dtls_index"][$i]["PROD_QTY"] = $prod_qnty;
							$data_array["dtls_index"][$i]["PROD_QTY_READONLY"] = $readdata;*/
							
							$data_array_dtls_index[$i]["CHECKED"] = $checked;
							$data_array_dtls_index[$i]["PROD_ID"] =$row->PROD_ID;
							$data_array_dtls_index[$i]["CONS_COMPS"] = $cons_comps;
							$data_array_dtls_index[$i]["GSM"] = $gsm;
							$data_array_dtls_index[$i]["DIA_WIDTH"] = $dia_width;
							$data_array_dtls_index[$i]["FABRIC_TYPEE"] =$fabric_typee[$WIDTH_DIA_TYPE];
							$data_array_dtls_index[$i]["FABRIC_TYPEE_ID"] = $WIDTH_DIA_TYPE;
							$data_array_dtls_index[$i]["ROLL_ID"] = $ROLL_ID;
							$data_array_dtls_index[$i]["BARCODE_NO"] = $BARCODE_NO;
							$data_array_dtls_index[$i]["BATCH_QNTY"] = $BATCH_QNTY;
							$data_array_dtls_index[$i]["BATCH_ROLLNO"] = $BATCH_ROLLNO;
							$data_array_dtls_index[$i]["PROD_QTY"] = $prod_qnty;
							$data_array_dtls_index[$i]["PROD_QTY_READONLY"] = $readdata;
							
						//$tot_batch_qty += $row[csf('batch_qnty')];
						//$tot_batch_qty+= $row[csf('batch_qnty')];
						$i++;
					}
				} 
	
		}
				
			$data_array["dtls_index"]= array_values($data_array_dtls_index);
		return $data_array;

	}
	//Below not used
	public function dying_prod_batch_scan_load_data___old($batch_no = 0,$load_unload=0,$dyeing_type_id=0) {
		$data_array = array();
		  $batch_chk_sql = sql_select("select ID, ENTRY_FORM,BATCH_NO,COMPANY_ID,WORKING_COMPANY_ID AS SERVICE_COMPANY,DOUBLE_DYEING from pro_batch_create_mst where batch_no='" . trim($batch_no) . "' and entry_form in(0,136) and is_deleted=0 and status_active=1  order by id desc");
		  //echo "select ID, ENTRY_FORM,BATCH_NO,COMPANY_ID from pro_batch_create_mst where batch_no='" . trim($batch_no) . "' and entry_form in(0,136) and is_deleted=0 and status_active=1  order by id desc";die;
		if(count($batch_chk_sql)<=0)
		{
			echo "<b>Batch Not Found</b>";die;
		}
		$color_arr = return_library_array("select id, color_name from lib_color where status_active=1", "id", "color_name");
		$buyer_arr = return_library_array("select id, buyer_name from lib_buyer", 'id', 'buyer_name');
		$fabric_type_for_dyeing = array(1 => 'Cotton', 2 => 'Polyster', 3 => 'Lycra', 4 => 'Both Part', 5 => 'White', 6 => 'Wash', 7 => 'Melange', 8 => 'Viscose', 9 => 'CVC 1 Part', 10 => 'Scouring', 11 => 'AOP Wash', 12 => 'Y/D Wash');
		$ltb_btb = array(1 => 'BTB', 2 => 'LTB');
			
			
		$data_array=array();
		 foreach($batch_chk_sql as $rows){
			 
			$company_id=$rows->COMPANY_ID;
			$service_company=$rows->SERVICE_COMPANY;
			$entry_form_id=$rows->ENTRY_FORM;
			$batch_no=$rows->BATCH_NO;
			$batch_id=$rows->ID;
			
			$double_dyeing=$rows->DOUBLE_DYEING;
			if($double_dyeing==0 || $double_dyeing==2) $multi_dyeing=2;else $multi_dyeing=$double_dyeing;
			 
			
				$data_array['input_area_index']["BATCH_ID"] = $rows->ID;
				$data_array['input_area_index']["ENTRY_FORM"] = $rows->ENTRY_FORM;
				$data_array['input_area_index']["COMPANY_ID"] = $rows->COMPANY_ID;
				$data_array['input_area_index']["SERVICE_COMPANY"] = $rows->SERVICE_COMPANY;
				$data_array['input_area_index']["BATCH_NO"] = $rows->BATCH_NO;
				//$data_array["double_dyeing"] = $rows->$multi_dyeing;
				
				//$data_array["reference_index"]["buyer"] = $rows->DOUBLE_DYEING;
			}
			$data_array['input_area_index']["load_unload"] = $load_unload;
			$data_array['input_area_index']["multi_dyeing"] = $multi_dyeing;
			//$multi_dyeing =$multi_dyeing;
			//echo $multi_dyeing;die;
			//return $data_array;
			 
			
			
			 $roll_maintained = return_field_value("fabric_roll_level", "variable_settings_production", "company_name ='$company_id' and item_category_id=50 and variable_list=3 and is_deleted=0 and status_active=1","fabric_roll_level");
			// echo  $roll_maintained.'sad';die;
			$page_upto_id = return_field_value("page_upto_id", "variable_settings_production", "company_name ='$company_id' and item_category_id=50 and variable_list=3 and is_deleted=0 and status_active=1","page_upto_id");
			$last_load="select BATCH_ID,RESULT,LOAD_UNLOAD_ID from pro_fab_subprocess where load_unload_id in(1,2) and entry_form=35 and status_active=1 and batch_id=$batch_id  order by id desc";
			$last_data=sql_select($last_load,1);
			$result_id=$load_unload_id=0;
			foreach ($last_data as $row)
			{
				$result_id=$row->RESULT ;
				$load_unload_id=$row->LOAD_UNLOAD_ID;
				
			}
			$data_array['hidden_index']["LAST_RESULT"] = $result_id;
			$data_array['hidden_index']["LAST_LOAD_UNLOAD_ID"] = $load_unload_id;
			$data_array['hidden_index']["hidden_service_company"] = $service_company;
			//	echo $multi_dyeing.'DDD';die;
				
				$sql_load=sql_select("select BATCH_ID,RESULT,LOAD_UNLOAD_ID from pro_fab_subprocess where load_unload_id in(1,2) and entry_form=35 and status_active=1 and batch_id=$batch_id  order by id desc");
				if($multi_dyeing==2) //Multi is no
				{
					foreach ($sql_load as $row)
					{
						$BATCH_ID=$row->BATCH_ID;
						if($load_unload==1)
						{
							$load_unload_arr[$BATCH_ID]=$row->BATCH_ID;
							$load_unload_result_arr[$BATCH_ID]=$row->RESULT;
						}
						else
						{
							$load_unload_arr[$BATCH_ID]='';
							$load_unload_result_arr[$BATCH_ID]=$row->RESULT;
						}
					}
				}
				$sql_sales_job=sql_select("select F.BUYER_ID,F.PO_BUYER,A.BOOKING_NO,F.PO_JOB_NO,F.BOOKING_WITHOUT_ORDER,F.JOB_NO AS SALES_ORDER_NO,F.WITHIN_GROUP from pro_batch_create_mst a,fabric_sales_order_mst f where a.sales_order_no=f.job_no and a.status_active=1 and a.is_deleted=0 and f.status_active=1 and f.is_deleted=0 and a.id=$batch_id  group by f.buyer_id,f.po_job_no,a.booking_no,f.job_no,f.within_group,f.booking_without_order,f.po_buyer");
				foreach ($sql_sales_job as $row) {
					//$sales_order_no=$row['SALES_ORDER_NO'];
					$sales_order_no=$row->SALES_ORDER_NO;
					//$sales_order_no=$row->SALES_ORDER_NO;
					//$sales_job_arr[$booking_no]["job_no_mst"] = $sales_job_row[csf('job_no_mst')];
					$sales_job_arr[$sales_order_no]["SALES_ORDER_NO"] =$row->SALES_ORDER_NO;
					$sales_job_arr[$sales_order_no]["PO_JOB_NO"] =$row->PO_JOB_NO;
					$sales_job_arr[$sales_order_no]["BUYER_ID"] = $row->BUYER_ID;
					$sales_job_arr[$sales_order_no]["WITHIN_GROUP"] =$row->WITHIN_GROUP;
					$sales_job_arr[$sales_order_no]["PO_BUYER"] = $row->PO_BUYER;
					$sales_job_arr[$sales_order_no]["BOOKING_WITHOUT_ORDER"] = $row->BOOKING_WITHOUT_ORDER;
				}
			 //echo $company_id.'DS';die;
			 
	   $select_field1 = " group by a.id,a.sales_order_no,a.double_dyeing,a.batch_no,a.batch_weight,a.color_id,a.company_id,a.working_company_id,a.process_id, a.booking_without_order,a.entry_form,a.booking_no,b.is_sales order by a.id";
	 $select_list = " listagg(B.PO_ID,',') within group (order by B.PO_ID) as PO_ID";
	//echo $entry_form.'XXX';
	//$booking_id=implode(",",array_unique(explode(",",$booking_id)));
	if ($load_unload == 1) {
	//and a.id not in(select batch_id from pro_fab_subprocess where load_unload_id in(1) and entry_form=35 and status_active=1)
		if ($batch_no != '') {
			if($entry_form!=136)
			{
			$sql_re = "select A.ID AS ID,A.DOUBLE_DYEING,A.BATCH_NO,B.IS_SALES, A.ENTRY_FORM,A.COMPANY_ID,A.WORKING_COMPANY_ID, A.BATCH_WEIGHT,MAX(A.EXTENTION_NO) AS EXTENTION_NO,A.PROCESS_ID AS PROCESS_ID_BATCH, A.COLOR_ID, A.BOOKING_WITHOUT_ORDER,A.BOOKING_NO, A.SALES_ORDER_NO,
SUM(B.BATCH_QNTY) AS BATCH_QNTY,  $select_list from pro_batch_create_mst a,pro_batch_create_dtls b where
				a.id='$batch_id'  and a.entry_form in(0,36) and a.id=b.mst_id and b.status_active=1 and b.is_deleted=0 and a.status_active=1  and a.is_deleted=0  $select_field1";
			}
			else //For Trim Batch
			{
				 $sql_re = "select A.ID AS ID,A.DOUBLE_DYEING,A.BATCH_NO,A.JOB_NO,0 AS IS_SALES, A.ENTRY_FORM,A.COMPANY_ID,A.WORKING_COMPANY_ID, A.BATCH_WEIGHT,MAX(A.EXTENTION_NO) AS EXTENTION_NO,A.PROCESS_ID AS PROCESS_ID_BATCH, A.COLOR_ID, A.BOOKING_WITHOUT_ORDER,A.BOOKING_NO, A.SALES_ORDER_NO,
SUM(B.TRIMS_WGT_QNTY) AS BATCH_QNTY from pro_batch_create_mst a,pro_batch_trims_dtls b where
				a.id='$batch_id'  and a.entry_form in(136) and a.id=b.mst_id and b.status_active=1 and b.is_deleted=0 and a.status_active=1  and a.is_deleted=0  group by a.id,a.double_dyeing ,a.batch_no,a.entry_form,a.company_id,a.working_company_id, a.batch_weight,a.process_id ,a.color_id,a.booking_without_order,a.job_no,a.booking_no,a.sales_order_no";
			}
		} else
		 {
			if($entry_form!=136)
			{
			$sql_re = "select A.ID AS ID,A.DOUBLE_DYEING,A.BATCH_NO,B.IS_SALES,A.ENTRY_FORM,A.COMPANY_ID,A.WORKING_COMPANY_ID, A.BATCH_WEIGHT,MAX(A.EXTENTION_NO) AS EXTENTION_NO,A.PROCESS_ID AS PROCESS_ID_BATCH, A.COLOR_ID, A.BOOKING_WITHOUT_ORDER, A.BOOKING_NO,A.SALES_ORDER_NO,
SUM(B.BATCH_QNTY) AS BATCH_QNTY, $select_list  from pro_batch_create_mst a,pro_batch_create_dtls b where
				a.id='$batch_id' and a.entry_form in(0,36) and a.id=b.mst_id  and b.status_active=1 and b.is_deleted=0 and a.status_active=1 and a.is_deleted=0   $select_field1";
			}
			else //For Trim Batch
			{
				$sql_re = "select A.ID AS ID,A.DOUBLE_DYEING,A.BATCH_NO,A.JOB_NO,0 AS IS_SALES, A.ENTRY_FORM,A.COMPANY_ID,A.WORKING_COMPANY_ID, A.BATCH_WEIGHT,MAX(A.EXTENTION_NO) AS EXTENTION_NO,A.PROCESS_ID AS PROCESS_ID_BATCH, A.COLOR_ID, A.BOOKING_WITHOUT_ORDER,A.BOOKING_NO, A.SALES_ORDER_NO,
SUM(B.TRIMS_WGT_QNTY) AS BATCH_QNTY from pro_batch_create_mst a,pro_batch_trims_dtls b where
				a.id='$batch_id'  and a.entry_form in(136) and a.id=b.mst_id and b.status_active=1 and b.is_deleted=0 and a.status_active=1  and a.is_deleted=0  group by a.id,a.double_dyeing ,a.batch_no,a.entry_form,a.company_id,a.working_company_id, a.batch_weight,a.process_id ,a.color_id,a.booking_without_order,a.booking_no,a.sales_order_no,a.job_no";
			}
		}
	} 
	else 
	{
		if ($batch_no != '')
		{
			//and a.id not in(select batch_id from pro_fab_subprocess where load_unload_id in(2) and  entry_form=35 and status_active=1)
			if($entry_form!=136)
			{
			$sql_re = "select A.ID AS ID,A.DOUBLE_DYEING,A.BATCH_NO,B.IS_SALES,A.ENTRY_FORM,A.COMPANY_ID,A.WORKING_COMPANY_ID, A.BATCH_WEIGHT,MAX(A.EXTENTION_NO) AS EXTENTION_NO,A.PROCESS_ID AS PROCESS_ID_BATCH, A.COLOR_ID, A.BOOKING_WITHOUT_ORDER, A.BOOKING_NO,A.SALES_ORDER_NO,
SUM(B.BATCH_QNTY) AS BATCH_QNTY,  $select_list from pro_batch_create_mst a,pro_batch_create_dtls b where
				a.id='$batch_id' and a.entry_form in(0,36) and a.id=b.mst_id and b.status_active=1 and b.is_deleted=0 and a.status_active=1  and a.is_deleted=0  $select_field1";
			}
			else
			{
				  $sql_re = "select A.ID AS ID,A.DOUBLE_DYEING,A.BATCH_NO,A.JOB_NO,0 AS IS_SALES, A.ENTRY_FORM,A.COMPANY_ID,A.WORKING_COMPANY_ID, A.BATCH_WEIGHT,MAX(A.EXTENTION_NO) AS EXTENTION_NO,A.PROCESS_ID AS PROCESS_ID_BATCH, A.COLOR_ID, A.BOOKING_WITHOUT_ORDER,A.BOOKING_NO, A.SALES_ORDER_NO,
SUM(B.TRIMS_WGT_QNTY) AS BATCH_QNTY from pro_batch_create_mst a,pro_batch_trims_dtls b where
				a.id='$batch_id'  and a.entry_form in(136) and a.id=b.mst_id and b.status_active=1 and b.is_deleted=0 and a.status_active=1  and a.is_deleted=0  group by a.id ,a.double_dyeing,a.batch_no,a.entry_form,a.company_id,a.working_company_id, a.batch_weight,a.process_id ,a.color_id,a.booking_without_order,a.booking_no,a.sales_order_no,a.job_no";
			}

		}
		else
		{
			if($entry_form!=136)
			{
				$sql_re = "SELECT A.ID AS ID,A.DOUBLE_DYEING,A.BATCH_NO,B.IS_SALES,A.ENTRY_FORM,A.COMPANY_ID,A.WORKING_COMPANY_ID, A.BATCH_WEIGHT,MAX(A.EXTENTION_NO) AS EXTENTION_NO,A.PROCESS_ID AS PROCESS_ID_BATCH, A.COLOR_ID, A.BOOKING_WITHOUT_ORDER, A.BOOKING_NO,A.SALES_ORDER_NO,
SUM(B.BATCH_QNTY) AS BATCH_QNTY, $select_list  from pro_batch_create_mst a,pro_batch_create_dtls b where
				a.id='$batch_id' and a.entry_form in(0,36) and a.id=b.mst_id  and b.status_active=1 and b.is_deleted=0 and a.status_active=1 and a.is_deleted=0    $select_field1";
			}
			else //For Trim Batch
			{
				  $sql_re = "select A.ID AS ID,A.DOUBLE_DYEING,A.BATCH_NO,A.COLOR_ID,A.JOB_NO,A.IS_SALES, A.ENTRY_FORM,A.COMPANY_ID,A.WORKING_COMPANY_ID, A.BATCH_WEIGHT,MAX(A.EXTENTION_NO) AS EXTENTION_NO,A.PROCESS_ID AS PROCESS_ID_BATCH, A.BOOKING_WITHOUT_ORDER,A.BOOKING_NO, A.SALES_ORDER_NO,
SUM(B.TRIMS_WGT_QNTY) AS BATCH_QNTY from pro_batch_create_mst a,pro_batch_trims_dtls b where
				a.id='$batch_id'  and a.entry_form in(136) and a.id=b.mst_id and b.status_active=1 and b.is_deleted=0 and a.status_active=1  and a.is_deleted=0  group by a.id,a.double_dyeing ,a.batch_no,a.entry_form,a.company_id,a.working_company_id, a.batch_weight,a.process_id ,a.color_id,a.booking_without_order,a.booking_no,a.sales_order_no,a.job_no";
			}
		}
	
   }
	// echo $sql_re;die;
	$data_array_prod = sql_select($sql_re);
	
	 
$select_f_group = "group by a.job_no_mst, b.buyer_name";
 $select_listagg = "listagg(cast(A.PO_NUMBER as varchar(500)),',') within group (order by A.PO_NUMBER) as PO_NO,listagg(cast(A.FILE_NO as varchar(500)),',') within group (order by A.FILE_NO) as FILE_NO,listagg(cast(A.GROUPING as varchar(500)),',') within group (order by A.GROUPING) as REF_NO";
	
	foreach ($data_array_prod as $row) 
	{
			$batch_id=$row->ID;
			$entry_form= $row->ENTRY_FORM;
			$booking_no= $row->BOOKING_NO;
			$extention_no= $row->EXTENTION_NO;
			if($extention_no=="") $extention_no="";
			 
			$PO_ID= $row->PO_ID;
			$COLOR_ID= $row->COLOR_ID;
			$PROCESS_ID_BATCH= $row->PROCESS_ID_BATCH;
			$sales_order_no= $row->SALES_ORDER_NO;
			$data_array["reference_index"]["BATCH_ID"] = $row->ID;
			$data_array["reference_index"]["EXTENTION_NO"] = $extention_no;
			//echo $batch_id.'DDD';die;
		if($load_unload_arr[$batch_id]=="")
		{
				
		 
		$salesOrder= $row->IS_SALES;
		if($entry_form==36)
		{
			$pro_id = implode(",", array_unique(explode(",", $PO_ID)));
			$pro_cond=" and a.id in(" . $pro_id . ")";
		}
		else if($entry_form==0)
		{
			$pro_id = implode(",", array_unique(explode(",", $PO_ID)));
			$pro_cond=" and a.id in(".$pro_id.")";
			if($salesOrder==1) //PO_JOB_NO
			{
				$PO_JOB_NO=$sales_job_arr[$sales_order_no]["PO_JOB_NO"];
				// echo $PO_JOB_NO.'AxA';die;
				$pro_cond="";
				$pro_cond=" and a.job_no_mst in('".$PO_JOB_NO."')";
			}
		}
		else
		{
			 
			$job_no= $row->$row[('JOB_NO')];
			$pro_cond=" and a.job_no_mst in('".$job_no."')";
		}
		if ($entry_form == 36) {

			$batch_type = "SUBCONTRACT ORDER BATCH";
			$result_job = sql_select("select $select_listagg_subcon, B.SUBCON_JOB AS JOB_NO_MST, B.PARTY_ID AS BUYER_NAME from  subcon_ord_dtls a,
				subcon_ord_mst b where a.job_no_mst=b.subcon_job  and b.status_active=1 and b.is_deleted=0 and a.status_active=1
				and a.is_deleted=0 $pro_cond group by b.subcon_job, b.party_id");
		}
		 else {
			$batch_type = " SELF ORDER BATCH ";
			$result_job = sql_select("select $select_listagg, A.JOB_NO_MST, B.BUYER_NAME from wo_po_break_down a,
				wo_po_details_master b where a.job_no_mst=b.job_no  and b.status_active=1 and b.is_deleted=0 and a.status_active=1
				and a.is_deleted=0  $pro_cond $select_f_group");
				
		}
		
		$inhouse=1;
		if($entry_form_id==36) $working_company_id=$row->COMPANY_ID;
		else  $working_company_id=$row->WORKING_COMPANY_ID;
		
		
		
		
		//echo "document.getElementById('batch_type').innerHTML 			= '" . $batch_type . "';\n";

		$process_name_batch = '';
		$process_id_array = explode(",", $PROCESS_ID_BATCH);
		foreach ($result_job as $val) {
			 $PO_NO=$val->PO_NO;
			 $FILE_NO=$val->FILE_NO;
			 $REF_NO=$val->REF_NO;
			 $BUYER_NAME=$val->BUYER_NAME;
			 $JOB_NO_MST=$val->JOB_NO_MST;
		}
		$process_ids = explode(",", $PROCESS_ID_BATCH);
		//$procssid=array(1=>'31');
		//print_r($process_ids);
		$procssid = in_array(31, $process_ids);
		//echo $procssid;
		if ($procssid == 31) {
			   $procssid=31;
		} else {
			 $procssid='0';
		}
			if($load_unload==2)
			{
				if($extention_no>0)
				{
					//echo "$('#cbo_responsibility').attr('disabled',false);\n";
					$responsibility=0;
				}
				else{
				 
					//echo "$('#cbo_responsibility').attr('disabled','disabled');\n";
					$responsibility=1;
					
				}
			}
				

		//echo "document.getElementById('txt_process_id').value 			= '31';\n";

		//echo "document.getElementById('txt_process_name').value 			= '".$process_name_batch."';\n";

		$po_nos = implode(",", array_unique(explode(",", $PO_NO)));
		$file_no = implode(",", array_unique(explode(",", $FILE_NO)));
		$ref_no = implode(",", array_unique(explode(",", $REF_NO)));
		$within_group=$sales_job_arr[$sales_order_no]["WITHIN_GROUP"];
		// echo $salesOrder.'==='.$within_group;die;

		if ($salesOrder == 1) {
			if($within_group == 1){
			$po_buyer=$sales_job_arr[$sales_order_no]["PO_BUYER"];
			$PO_JOB_NO=$sales_job_arr[$sales_order_no]["PO_JOB_NO"];
			$booking_without_order=$sales_job_arr[$sales_order_no]["booking_without_order"];
			if($booking_without_order==0)
			{
				$job_nos = return_field_value("b.job_no as job_no", "wo_booking_mst a,wo_booking_dtls b", "a.booking_no=b.booking_no and b.booking_no ='".$booking_no."' and b.is_deleted=0 and b.status_active=1 group by b.job_no","job_no");
			}
			//echo $job_nos.'DDD';
			$buyer=$buyer_arr[$po_buyer];
			$job_nos=$job_nos;
			$sales_order_no=$sales_order_no;
			$po_nos=$sales_order_no;
			}else{
					$buyer=$buyer_arr[$sales_job_arr[$sales_order_no]["BUYER_ID"]] ;
					$job_nos='';
					$sales_order_no=$sales_order_no;
					$po_nos=$sales_order_no;
			}
		}else{
				$buyer=$buyer_arr[$BUYER_NAME] ;
				$job_nos=$JOB_NO_MST;
				$po_nos=$po_nos;
				$file_no=$file_no;
				$ref_no=$ref_no;
				//echo $po_nos."D";die;
		}
		$data_array["reference_index"]["JOB_NO"] = $job_nos;
		$data_array["reference_index"]["PO_NO"] = $po_nos;
		$data_array["reference_index"]["FILE_NO"] = $file_no;
		$data_array["reference_index"]["REF_NO"] = $ref_no;
		$data_array["reference_index"]["BUYER"] = $buyer;
		 
		//echo $roll_maintained.'=='.$page_upto_id;
		// die;
			//echo "document.getElementById('txt_file').value 			= '" . $file_no . "';\n";
			//echo "document.getElementById('txt_ref').value 			= '" . $ref_no . "';\n";
		$sql_batch_d = sql_select("select ID,SERVICE_SOURCE,SYSTEM_NO,SERVICE_COMPANY,RECEIVED_CHALAN,ISSUE_CHALAN,ISSUE_CHALLAN_MST_ID,COMPANY_ID,BATCH_ID,BATCH_NO,PROCESS_END_DATE,END_HOURS,END_MINUTES,MACHINE_ID,FLOOR_ID,PROCESS_ID,LTB_BTB_ID,REMARKS,DYEING_TYPE_ID,HOUR_LOAD_METER from
			pro_fab_subprocess where batch_id='$batch_id' and entry_form=35 and load_unload_id=1 and status_active=1 and is_deleted=0 ");
		foreach ($sql_batch_d as $dyeing_d) {//$minute=str_pad($r_batch[csf("end_minutes")],2,'0',STR_PAD_LEFT);
		
			$PROCESS_END_DATE=$dyeing_d->PROCESS_END_DATE;
			$LTB_BTB_ID=$dyeing_d->LTB_BTB_ID;
			//$PROCESS_END_DATE=change_date_format($PROCESS_END_DATES,'','',1);
			$END_HOURS=$dyeing_d->END_HOURS;
			$END_MINUTES=$dyeing_d->END_MINUTES;
			$MACHINE_ID=$dyeing_d->MACHINE_ID;
			$FLOOR_ID=$dyeing_d->FLOOR_ID;
			$PROCESS_ID=$dyeing_d->PROCESS_ID;
			$LTB_BTB_ID=$dyeing_d->LTB_BTB_ID;
			$REMARKS=$dyeing_d->REMARKS;
			$service_source=$dyeing_d->SERVICE_SOURCE;
			$SERVICE_COMPANY=$dyeing_d->SERVICE_COMPANY;
			$funtional_batch_no=$dyeing_d->SYSTEM_NO;
			$LTB_BTB=$ltb_btb[$LTB_BTB_ID];
			$end_hour_min=str_pad($END_HOURS, 2, '0', STR_PAD_LEFT) . ':' . str_pad($END_MINUTES, 2, '0', STR_PAD_LEFT);
			$load_end_hour_min=$end_hour_min;
			
		 
		/*	echo "document.getElementById('txt_dying_started').value = '" . change_date_format($dyeing_d[("PROCESS_END_DATE")]) . "';\n";
			echo "document.getElementById('txt_dying_end_load').value = '" . str_pad($dyeing_d[csf("END_HOURS")], 2, '0', STR_PAD_LEFT) . ':' . str_pad($dyeing_d[csf("end_minutes")], 2, '0', STR_PAD_LEFT) . "';\n";
			//echo "$('#txt_issue_chalan').val('" . $dyeing_d[csf("issue_chalan")] . "');\n";
			//echo "$('#cbo_service_source').val(" . $dyeing_d[csf("service_source")] . ");\n";
			echo "document.getElementById('txt_recevied_chalan').value	= '" . $dyeing_d[csf('received_chalan')] . "';\n";
			echo "document.getElementById('txt_system_no').value	= '" . $dyeing_d[csf('system_no')] . "';\n";
			//echo "load_drop_down( 'requires/dyeing_production_controller', " . $dyeing_d[csf("service_source")] . "+'**'+" . $dyeing_d[csf("company_id")] . ", 'load_drop_down_knitting_com', 'dyeing_company_td' );\n";
			echo "$('#cbo_service_company').val(" . $dyeing_d[csf("service_company")] . ");\n";
			echo "load_drop_down( 'requires/dyeing_production_controller', '" . $dyeing_d[csf("service_company")] . "', 'load_drop_floor', 'floor_td' );\n";
			echo "document.getElementById('txt_ltb_btb').value	= '" . $ltb_btb[$dyeing_d[csf("ltb_btb_id")]] . "';\n";*/
			if ($load_unload == 2) {
				//echo "process_check('31');\n";
			}
		}
		if($PROCESS_END_DATE=="") $PROCESS_END_DATE="";
		if($funtional_batch_no=="") $funtional_batch_no="";
		$data_array["reference_index"]["loading_date"] = $PROCESS_END_DATE;
		if($end_hour_min=="") $end_hour_min="";
		$data_array["reference_index"]["loading_time"] = $end_hour_min;
		
		
		//exit();
		//fabric_type_for_dyeing
		if($responsibility)
		{
			$responsibility=$responsibility;
		}
		else {$responsibility='';}
		if($row->EXTENTION_NO=="") $extention_no="";
		
		$data_array["input_area_index"]["funtional_batch_no"] = $funtional_batch_no;
		$data_array["input_area_index"]["PROCESS_ID"]=$inhouse;
		$data_array["input_area_index"]["SERVICE_SOURCE"] =$inhouse;
		$data_array["input_area_index"]["COMPANY_ID"] = $row->COMPANY_ID;
		$data_array["input_area_index"]["EXTENTION_NO"] = $extention_no;
		$data_array["input_area_index"]["WORKING_COMPANY_ID"] = $working_company_id;
		$data_array["input_area_index"]["SERVICE_SOURCE"]["is_disable"] = 1;
		$data_array["input_area_index"]["RESPONSIBILITY"]["is_disable"] = $responsibility;//Unload event
		 
		$data_array["reference_index"]["BATCH_ID"] =$batch_id;
		
		//$data_array["reference_index"]["EXTENTION_NO"] = $extention_no;
		$data_array["reference_index"]["COLOR_ID"] = $color_arr[$row->COLOR_ID];
		$data_array["reference_index"]["BATCH_TYPE"] = $batch_type;
		
		
		
		    }// Check Load/Unload
			
	} //Loop End
	

	$select_group_row1 = " and  rownum>=1 order by id desc";//order by id desc limit 0,1
	if ($load_unload == 1) {

		$sql_batch = sql_select(
			"select ID,BATCH_NO,COMPANY_ID,SYSTEM_NO,BATCH_ID,SERVICE_SOURCE,SERVICE_COMPANY,RECEIVED_CHALAN,ISSUE_CHALAN,ISSUE_CHALLAN_MST_ID,PROCESS_END_DATE,LOAD_UNLOAD_ID,END_HOURS,END_MINUTES,MACHINE_ID,FLOOR_ID,PROCESS_ID,
LTB_BTB_ID,WATER_FLOW_METER,RESULT,REMARKS,DYEING_TYPE_ID,HOUR_LOAD_METER,MULTI_BATCH_LOAD_ID	from pro_fab_subprocess where batch_id='$batch_id' and entry_form=35 and load_unload_id in(1) and status_active=1 and is_deleted=0  ");
	} else if ($load_unload == 2) {
		$sql_batch = sql_select("select ID,BATCH_NO,COMPANY_ID,SYSTEM_NO,SERVICE_SOURCE,SERVICE_COMPANY,RECEIVED_CHALAN,ISSUE_CHALAN,ISSUE_CHALLAN_MST_ID,BATCH_ID,PROCESS_END_DATE,LOAD_UNLOAD_ID,END_HOURS,END_MINUTES,MACHINE_ID,FLOOR_ID,PROCESS_ID,LTB_BTB_ID,WATER_FLOW_METER,RESULT,REMARKS,DYEING_TYPE_ID,HOUR_UNLOAD_METER,SHIFT_NAME,RESPONSIBILITY_ID,FABRIC_TYPE,PRODUCTION_DATE from pro_fab_subprocess where batch_id='$batch_id' and entry_form=35 and load_unload_id in(2,1) and status_active=1 and is_deleted=0 $select_group_row1");
	}
	foreach ($sql_batch as $r_batch) {
		if ($load_unload == 1) //Load
		{
			$PROCESS_ID = $r_batch->PROCESS_ID;
			$END_HOURS = $r_batch->END_HOURS;
			$END_MINUTES = $r_batch->END_MINUTES;
			$END_HOURS = $r_batch->END_HOURS;
			$load_unload_id = $r_batch->load_unload_id;
			
			$END_MINUTES = str_pad($END_MINUTES, 2, '0', STR_PAD_LEFT);
			$END_HOURS = str_pad($END_HOURS, 2, '0', STR_PAD_LEFT);
			
			$data_array["input_area_index"]["PROCESS_ID"] = $r_batch->PROCESS_ID;
			$data_array["input_area_index"]["COMPANY_ID"] = $r_batch->COMPANY_ID;
			$data_array["input_area_index"]["SERVICE_COMPANY"] = $r_batch->SERVICE_COMPANY;
			$data_array["input_area_index"]["BATCH_NO"] = $r_batch->BATCH_NO;
			$data_array["input_area_index"]["SERVICE_SOURCE"] = $r_batch->SERVICE_SOURCE;
			$data_array["input_area_index"]["LTB_BTB_ID"] = $r_batch->LTB_BTB_ID;
			$data_array["input_area_index"]["HOUR_LOAD_METER"] = $r_batch->HOUR_LOAD_METER;
		
			$data_array["input_area_index"]["FLOOR_ID"] = $r_batch->FLOOR_ID;
			$data_array["input_area_index"]["MACHINE_ID"] = $r_batch->FLOOR_ID;
			
			$data_array["input_area_index"]["REMARKS"] = $r_batch->REMARKS;
			$data_array["input_area_index"]["DYEING_TYPE_ID"] = $r_batch->DYEING_TYPE_ID;
			$data_array["input_area_index"]["MULTI_BATCH_LOAD_ID"] = $r_batch->MULTI_BATCH_LOAD_ID;
			$data_array["input_area_index"]["PROCESS_START_DATE"] = $r_batch->PROCESS_END_DATE;
			
			$data_array["input_area_index"]["END_HOURS"] = $END_HOURS;
			$data_array["input_area_index"]["END_MINUTES"] = $END_MINUTES;
			
		}
		else if ($load_unload == 2) //Unload
		{
			if ($load_unload_id == 2) {
				
		
				$PROCESS_END_DATE=$r_batch->PROCESS_END_DATE;
				$PRODUCTION_DATE=$r_batch->PRODUCTION_DATE;
				$PROCESS_END_DATE=$load_unload_id== 1 ? "" : $PROCESS_END_DATE;
				//$PRODUCTION_DATE=$load_unload_id== 1 ? "" : change_date_format($r_batch->PRODUCTION_DATE,'','',1);
				$PRODUCTION_DATE=$load_unload_id== 1 ? "" : $PRODUCTION_DATE;
				$HOUR_UNLOAD_METER=$load_unload_id == 1 ? "" : $r_batch->HOUR_UNLOAD_METER;
				$WATER_FLOW_METER=$load_unload_id == 1 ? "" : $r_batch->WATER_FLOW_METER;
				
				$data_array["input_area_index"]["PROCESS_ID"] = $r_batch->PROCESS_ID;
				$data_array["input_area_index"]["COMPANY_ID"] = $r_batch->COMPANY_ID;
				$data_array["input_area_index"]["SERVICE_COMPANY"] = $r_batch->SERVICE_COMPANY;
				$data_array["input_area_index"]["BATCH_NO"] = $r_batch->BATCH_NO;
				$data_array["input_area_index"]["SERVICE_SOURCE"] = $r_batch->SERVICE_SOURCE;
				$data_array["input_area_index"]["SHIFT_NAME"] = $r_batch->SHIFT_NAME;
				$data_array["input_area_index"]["PROCESS_END_DATE"] =$PRODUCTION_DATE;
				$data_array["input_area_index"]["PRODUCTION_DATE"] =$PROCESS_END_DATE;
				$data_array["input_area_index"]["RESPONSIBILITY_ID"] = $r_batch->RESPONSIBILITY_ID;
				$data_array["input_area_index"]["FABRIC_TYPE"] = $r_batch->FABRIC_TYPE;
				$data_array["input_area_index"]["HOUR_UNLOAD_METER"] = $HOUR_UNLOAD_METER;
				$data_array["input_area_index"]["WATER_FLOW_METER"] = $WATER_FLOW_METER;
				$data_array["input_area_index"]["LTB_BTB_ID"] = $r_batch->LTB_BTB_ID;
				$data_array["input_area_index"]["FLOOR_ID"] = $r_batch->FLOOR_ID;
				$data_array["input_area_index"]["MACHINE_ID"] = $r_batch->FLOOR_ID;
				$data_array["input_area_index"]["RESULT"] = $r_batch->RESULT;
				
				$data_array["input_area_index"]["SERVICE_SOURCE"]["is_disable"] = 1;
				$data_array["input_area_index"]["SERVICE_COMPANY"]["is_disable"] = 1;
				$data_array["input_area_index"]["DYEING_TYPE_ID"]["is_disable"] = 1;
				$data_array["input_area_index"]["FLOOR_ID"]["is_disable"] = 1;
				$data_array["input_area_index"]["MACHINE_ID"]["is_disable"] = 1;
			
			}
			
			 
		}
	}
	
	//=============For Dtls Part ========================//
	$fabricData = sql_select("select VARIABLE_LIST,FABRIC_ROLL_LEVEL from variable_settings_production where company_name ='$company_id' and variable_list in(3) and item_category_id=13 and is_deleted=0 and status_active=1");
	//echo "select variable_list,fabric_roll_level from variable_settings_production where company_name ='$company_id' and variable_list in(3) and item_category_id=13 and is_deleted=0 and status_active=1";
	foreach ($fabricData as $row) {
		$VARIABLE_LIST=$row->VARIABLE_LIST;
		if ($VARIABLE_LIST == 3) {
			$roll_maintained_id = $row->FABRIC_ROLL_LEVEL;
		}
	}
	//echo $roll_maintained.'='.$roll_maintained_id;
//die;
	$fabric_desc_arr = array();

	$prodData = sql_select("select C.ID,C.DETARMINATION_ID, C.ITEM_DESCRIPTION, C.LOT,C.GSM,C.YARN_COUNT_ID,C.BRAND, C.DIA_WIDTH, C.PRODUCT_NAME_DETAILS 
	from product_details_master c,pro_batch_create_dtls b where c.id=b.prod_id and b.mst_id ='$batch_id' and b.status_active=1 and c.item_category_id=13");
	
	 
	 
	foreach ($prodData as $row) {
		$PROD_ID=$row->ID;
		$DETARMINATION_ID=$row->DETARMINATION_ID;
		$ITEM_DESCRIPTION=$row->ITEM_DESCRIPTION;
		$LOT=$row->LOT;
		$GSM=$row->GSM;
		$YARN_COUNT_ID=$row->YARN_COUNT_ID;
		$BRAND=$row->BRAND;
		$DIA_WIDTH=$row->DIA_WIDTH;
		$PRODUCT_NAME_DETAILS=$row->PRODUCT_NAME_DETAILS;
		
		$fabric_desc_arr[$PROD_ID]['desc'] = $PRODUCT_NAME_DETAILS;
		$fabric_desc_arr[$PROD_ID]['gsm'] = $GSM;
		$fabric_desc_arr[$PROD_ID]['dia'] = $DIA_WIDTH;
		$fabric_desc_arr[$PROD_ID]['detarmination_id'] = $DETARMINATION_ID;
	}
	unset($prodData);
	//$yarn_lot_arr = array();
//echo $company_id.'=='.$double_dyeing.'='.$page_upto_id.'='.$roll_maintained_id;
		$max_load_id = return_field_value("MAX(ID) AS MAXLOAD_ID", "pro_fab_subprocess", "batch_id =$batch_id and entry_form=35  and load_unload_id in(1) and is_deleted=0 and status_active=1","MAXLOAD_ID");
		$max_unload_id = return_field_value("MAX(ID)  AS MAXLOAD_ID", "pro_fab_subprocess", "batch_id =$batch_id and entry_form=35  and load_unload_id in(2) and is_deleted=0 and status_active=1","MAXLOAD_ID");
		
		if($max_load_id!="")
		{
		 $load_insert = ("select A.LOAD_UNLOAD_ID,B.PRODUCTION_QTY,B.ROLL_ID,B.NO_OF_ROLL,B.PROD_ID,B.GSM,B.DIA_WIDTH,B.BARCODE_NO,B.WIDTH_DIA_TYPE from  pro_fab_subprocess a, pro_fab_subprocess_dtls b where a.id=b.mst_id and a.batch_id=$batch_id and a.entry_form=35  and a.load_unload_id in(1) and a.status_active=1 and b.status_active=1 and b.is_deleted=0 and a.is_deleted=0 and b.mst_id in($max_load_id) ");
		$load_result = sql_select($load_insert);
		foreach ($load_result as $row) {
				
					//if($row->BARCODE_NO=='') $BARCODE_NO=0;
					//if($row->BARCODE_NO=='') $BARCODE_NO=0;
					$LOAD_UNLOAD_ID=$row->LOAD_UNLOAD_ID;
					$PRODUCTION_QTY=$row->PRODUCTION_QTY;
					$ROLL_ID=$row->ROLL_ID;
					$NO_OF_ROLL=$row->NO_OF_ROLL;
					$PROD_ID=$row->PROD_ID;
					$GSM=$row->GSM;
					$DIA_WIDTH=$row->DIA_WIDTH;
					$BARCODE_NO=$row->BARCODE_NO;
					$WIDTH_DIA_TYPE=$row->WIDTH_DIA_TYPE;
					$load_qty_arr[$PROD_ID][$BARCODE_NO][$GSM][$WIDTH_DIA_TYPE]= $PRODUCTION_QTY;
					$load_qty_arr2[$PROD_ID][$GSM][$WIDTH_DIA_TYPE][$NO_OF_ROLL]= $PRODUCTION_QTY;
				
				
			}
		}
		if($max_unload_id!="")
		{
		 $unload_insert = ("select A.LOAD_UNLOAD_ID,B.PRODUCTION_QTY,B.ROLL_ID,B.PROD_ID,B.GSM,B.DIA_WIDTH,B.BARCODE_NO,B.WIDTH_DIA_TYPE from  pro_fab_subprocess a, pro_fab_subprocess_dtls b where a.id=b.mst_id and a.batch_id=$batch_id and a.entry_form=35  and a.load_unload_id in(2) and a.status_active=1 and b.status_active=1 and b.is_deleted=0 and a.is_deleted=0  ");//and b.mst_id in($max_unload_id)
		$unload_result = sql_select($unload_insert);
		foreach ($unload_result as $row) {
					$LOAD_UNLOAD_ID=$row->LOAD_UNLOAD_ID;
					$PRODUCTION_QTY=$row->PRODUCTION_QTY;
					$ROLL_ID=$row->ROLL_ID;
					$PROD_ID=$row->PROD_ID;
					$GSM=$row->GSM;
					$DIA_WIDTH=$row->DIA_WIDTH;
					$BARCODE_NO=$row->BARCODE_NO;
					$WIDTH_DIA_TYPE=$row->WIDTH_DIA_TYPE;
					
					$unload_qty_arr[$PROD_ID][$BARCODE_NO][$GSM][$WIDTH_DIA_TYPE]= $PRODUCTION_QTY;
					$unload_qty_arr2[$PROD_ID][$GSM][$WIDTH_DIA_TYPE]= $PRODUCTION_QTY;
				
			}
		}
		if ($load_unload == 1) $load_unload_cond = "and a.load_unload_id in(1)";
		else if ($load_unload == 2) $load_unload_cond = "and a.load_unload_id in(2)";
	
		 // echo $dyeing_type.'='.$page_upto_id.'='.$roll_maintained;die;
		 if($entry_form!=136)
		{
			if (($page_upto_id == 2 || $page_upto_id > 2) && $roll_maintained == 1) {
				  $sql_insert = ("select B.PRODUCTION_QTY,B.ROLL_ID,B.PROD_ID from  pro_fab_subprocess a, pro_fab_subprocess_dtls b where a.id=b.mst_id and a.batch_id=$batch_id and a.entry_form=35  and b.roll_id>0 $load_unload_cond and a.status_active=1 and b.status_active=1 and b.is_deleted=0 and a.is_deleted=0");
				$sql_insert_roll = sql_select($sql_insert);
				$inserted_roll = array();
				foreach ($sql_insert_roll as $in_row) {
					$ROLL_ID=$row->ROLL_ID;
					$inserted_roll[] = $ROLL_ID;
				}
					if($dyeing_type_id==2)//CBP dyeing
					{
						
						$roll_id_cond = "";
						//if (count($inserted_roll) > 0) $roll_id_cond = "  and b.roll_id not in (" . implode(",", $inserted_roll) . ")";
						
					}
					else
					{
						if($multi_dyeing==2)//multi is No
						{
						$roll_id_cond = "";
						if (count($inserted_roll) > 0) $roll_id_cond = "  and b.roll_id not in (" . implode(",", $inserted_roll) . ")";
						}
					}
	
			 $select_group = "group by b.id,b.item_description,b.width_dia_type,a.entry_form,b.prod_id,b.po_id,b.roll_no,b.roll_id,b.barcode_no,c.roll_no,c.barcode_no";
				   $result = "select A.ENTRY_FORM,B.WIDTH_DIA_TYPE,B.PROD_ID,B.PO_ID,B.BARCODE_NO AS BATCH_BARCODE,B.ROLL_NO AS BATCH_ROLLNO,B.ROLL_ID ,B.ITEM_DESCRIPTION,B.WIDTH_DIA_TYPE, SUM(B.BATCH_QNTY) AS BATCH_QNTY,C.ROLL_NO,C.BARCODE_NO from pro_batch_create_dtls b,pro_batch_create_mst a,pro_roll_details c where b.mst_id=$batch_id and a.id=b.mst_id and b.roll_id=c.id and  a.entry_form in(0,136) and b.status_active=1 and b.is_deleted=0  $roll_id_cond $select_group";
				$result_data = sql_select($result);
	
				$i = 1;
				$b_qty = 0;
				$tot_prod_qnty = 0;$data_array_dtls_index=array();
				foreach ($result_data as $row) {
					$ENTRY_FORM=$row->ENTRY_FORM;
					$PROD_ID=$row->PROD_ID;
					$PO_ID=$row->PO_ID;
					$BATCH_BARCODE=$row->BATCH_BARCODE;
					$WIDTH_DIA_TYPE=$row->WIDTH_DIA_TYPE;
					$BATCH_ROLLNO=$row->BATCH_ROLLNO;
					$ROLL_ID=$row->ROLL_ID;
					$ITEM_DESCRIPTION=$row->ITEM_DESCRIPTION;
					$BATCH_QNTY=$row->BATCH_QNTY;
					$ROLL_NO=$row->ROLL_NO;
					$BARCODE_NO=$row->BARCODE_NO;
					
					if ($ENTRY_FORM == 36) {
						$desc = explode(",", $row->item_description);
						$cons_comps = $desc[0];
						$gsm = $desc[1];
						$dia_width = $desc[2];
					} else {
						$cons_comps_data = explode(",", $fabric_desc_arr[$PROD_ID]['desc']);
						$cons_comps = $cons_comps_data[0] . ' ' . $cons_comps_data[1];
						$gsm = $fabric_desc_arr[$PROD_ID]['gsm'];
						$dia_width = $fabric_desc_arr[$PROD_ID]['dia'];
					}
					 
					
					
						//echo $load_unload.'='.$dyeing_type_id;
					if($load_unload==2)
					{
						if($dyeing_type_id==2) //CBP
						{
							$unload_prod_qnty=$unload_qty_arr[$PROD_ID][$BATCH_BARCODE][$gsm][$WIDTH_DIA_TYPE];
							//$load_prod_qnty=$load_qty_arr[$row[csf('prod_id')]][$row[csf('batch_barcode')]][$gsm][$row[csf('width_dia_type')]];
							$load_prod_qnty = $BATCH_QNTY-$unload_prod_qnty;
						}
						else
						{
							$load_prod_qnty=$load_qty_arr[$PROD_ID][$BATCH_BARCODE][$gsm][$WIDTH_DIA_TYPE];
						}
						
					}
					else
					{
						$load_prod_qnty = $BATCH_QNTY;
					}
					
				//echo $page_upto_id.'='.$roll_maintained;die;
					if (($page_upto_id == 2 || $page_upto_id > 2) && $roll_maintained == 1) {
						//$roll_no = $fabric_roll_arr[$row[csf('roll_id')]]['roll'];
	
						$roll_no = $ROLL_NO;
						$batch_qnty = $BATCH_QNTY;
						$tot_qty += $BATCH_QNTY;
						//echo $load_prod_qnty.'='.$roll_maintained.'XX';
						if ($load_unload == 2) {
							//echo $load_prod_qnty.'XX';
								$readdata = "readonly";
								$prod_qnty = $load_prod_qnty;
								$tot_prod_qnty += $load_prod_qnty;
							} else {
							//echo $load_prod_qnty.'BB';
								$readdata = "";
								$prod_qnty =  $load_prod_qnty;
								$tot_prod_qnty = $load_prod_qnty;
							}
					} else {
						$roll_no = $roll_no;
						$tot_qty += $BATCH_QNTY;
						//echo $load_prod_qnty.'B';
						if ($load_unload == 2) {
								$readdata = 1;
								$prod_qnty = $load_prod_qnty;
								//$tot_prod_qnty += $load_prod_qnty;
							} else {
								$readdata = 0;
								$prod_qnty = $load_prod_qnty;
								//$tot_prod_qnty += $load_prod_qnty;
							}
					}
					
					if($dyeing_type_id==2) //CBP
					{
						$readdata = "";
					}
					else
					{
						$readdata =$readdata;
					}
					//echo $prod_qnty.'DDD';die;
						if($prod_qnty>0) //zero Qty check start
						{
							 if($fabric_typee[$WIDTH_DIA_TYPE]=="") $fabric_typee[$WIDTH_DIA_TYPE]="";
							if($dia_width=="") $dia_width="";if($ROLL_ID=="") $ROLL_ID="";
							if($WIDTH_DIA_TYPE=="") $WIDTH_DIA_TYPE="";
							if($BATCH_ROLLNO=="") $BATCH_ROLLNO="";	
							if($ROLL_ID=="") $ROLL_ID="";
							if($gsm=="") $gsm="";if($BARCODE_NO=="") $BARCODE_NO="";
							
							$checked=1; 
							/*$data_array["dtls_index"][$i]["CHECKED"] = $checked;
							$data_array["dtls_index"][$i]["PROD_ID"] =$PROD_ID;
							$data_array["dtls_index"][$i]["CONS_COMPS"] = $cons_comps;
							$data_array["dtls_index"][$i]["GSM"] = $gsm;
							$data_array["dtls_index"][$i]["DIA_WIDTH"] = $dia_width;
							$data_array["dtls_index"][$i]["FABRIC_TYPEE"] =$fabric_typee[$WIDTH_DIA_TYPE];
							$data_array["dtls_index"][$i]["FABRIC_TYPEE_ID"] = $WIDTH_DIA_TYPE;
							$data_array["dtls_index"][$i]["ROLL_ID"] = $ROLL_ID;
							$data_array["dtls_index"][$i]["BARCODE_NO"] = $BARCODE_NO;
							$data_array["dtls_index"][$i]["BATCH_QNTY"] = $BATCH_QNTY;
							$data_array["dtls_index"][$i]["BATCH_ROLLNO"] = $BATCH_ROLLNO;
							$data_array["dtls_index"][$i]["PROD_QTY"] = $prod_qnty;
							$data_array["dtls_index"][$i]["PROD_QTY_READONLY"] = $readdata;*/
							//CHECKED,CONS_COMPS,GSM,DIA_WIDTH,FABRIC_TYPEE,FABRIC_TYPEE_ID,
							$data_array_dtls_index[$i]["CHECKED"] = $checked;
							$data_array_dtls_index[$i]["PROD_ID"] =$PROD_ID;
							$data_array_dtls_index[$i]["CONS_COMPS"] = $cons_comps;
							$data_array_dtls_index[$i]["GSM"] = $gsm;
							$data_array_dtls_index[$i]["DIA_WIDTH"] = $dia_width;
							$data_array_dtls_index[$i]["FABRIC_TYPEE"] =$fabric_typee[$WIDTH_DIA_TYPE];
							$data_array_dtls_index[$i]["FABRIC_TYPEE_ID"] = $WIDTH_DIA_TYPE;
							$data_array_dtls_index[$i]["ROLL_ID"] = $ROLL_ID;
							$data_array_dtls_index[$i]["BARCODE_NO"] = $BARCODE_NO;
							$data_array_dtls_index[$i]["BATCH_QNTY"] = $BATCH_QNTY;
							$data_array_dtls_index[$i]["BATCH_ROLLNO"] = $BATCH_ROLLNO;
							$data_array_dtls_index[$i]["PROD_QTY"] = $prod_qnty;
							$data_array_dtls_index[$i]["PROD_QTY_READONLY"] = $readdata;
							
					
					//$b_qty += $row[csf('batch_qnty')];
					///$total_prod_qnty += $load_prod_qnty;
					$i++;
						}
				}
				 
				 
			}   //Roll End
			else 
			{
				
					if($max_unload_id!="")
					{
					  $unload_insert = ("select A.LOAD_UNLOAD_ID,B.PRODUCTION_QTY,B.ROLL_ID,B.PROD_ID,B.GSM,B.DIA_WIDTH,B.BARCODE_NO,B.WIDTH_DIA_TYPE from  pro_fab_subprocess a, pro_fab_subprocess_dtls b where a.id=b.mst_id and a.batch_id=$batch_id and a.entry_form=35  and a.load_unload_id in(2) and a.status_active=1 and b.status_active=1 and b.is_deleted=0 and a.is_deleted=0 ");
					$unload_result = sql_select($unload_insert);
					foreach ($unload_result as $row) {
								//$unload_qty_arr[$row[csf('prod_id')]][$row[csf('barcode_no')]][$row[csf('gsm')]][$row[csf('width_dia_type')]]= $row[csf('production_qty')];
								$PROD_ID=$row->PROD_ID;
								$PRODUCTION_QTY=$row->PRODUCTION_QTY;
								$ROLL_ID=$row->ROLL_ID;
								$GSM=$row->GSM;
								$DIA_WIDTH=$row->DIA_WIDTH;
								$BARCODE_NO=$row->BARCODE_NO;
								$WIDTH_DIA_TYPE=$row->WIDTH_DIA_TYPE;
								$previ_unload_qty_arr[$PROD_ID][$GSM][$WIDTH_DIA_TYPE]+= $PRODUCTION_QTY;
							
						}
					}
			
				$batch_id_search = sql_select("select a.BATCH_ID from pro_fab_subprocess a,pro_fab_subprocess_dtls b where a.id=b.mst_id and a.batch_id=$batch_id and company_id=$company_id and entry_form=35 and a.status_active=1 and b.status_active=1 $load_unload_cond");
				 
				foreach ($batch_id_search as $row) {
					$batch_id_search=$row->BATCH_ID;
				}
				//echo "select a.batch_id from pro_fab_subprocess a,pro_fab_subprocess_dtls b where a.id=b.mst_id and a.batch_id=$batch_id and company_id=$company_id and entry_form=35 and a.status_active=1 and b.status_active=1 $load_unload_cond";
				if($dyeing_type_id==2)//CBP dyeing
					{
					$batch_insert_cond = "";
					}
					else
					{
						if($multi_dyeing==2)//multi is No
						{
						$batch_insert_cond = "";
						if (count($batch_id_search) > 0) $batch_insert_cond = " and a.id!=" . $batch_id_search . "";
						}
	
					}
	
			  $select_group = "group by b.item_description,b.width_dia_type,a.entry_form,b.prod_id,b.po_id";
				//echo "sdsd";
				  $sql_result = "select A.ENTRY_FORM,B.WIDTH_DIA_TYPE,B.PROD_ID,B.PO_ID,COUNT(B.ROLL_NO) AS NO_OF_ROLL ,B.ITEM_DESCRIPTION,B.WIDTH_DIA_TYPE, SUM(B.BATCH_QNTY) AS BATCH_QNTY from pro_batch_create_dtls b,pro_batch_create_mst a,pro_roll_details c where b.mst_id=$batch_id and a.id=b.mst_id and b.roll_id=c.id and  a.entry_form in(0,136) and b.status_active=1 and b.is_deleted=0 $batch_insert_cond $select_group";
				$result=sql_select($sql_result);
				if(count($result)==0)
				{
				  $select_group = "group by b.item_description,b.width_dia_type,a.entry_form,b.prod_id,b.po_id";
					 $sql_result ="select A.ENTRY_FORM,B.WIDTH_DIA_TYPE,B.PROD_ID,B.PO_ID,COUNT(B.ROLL_NO) AS NO_OF_ROLL ,B.ITEM_DESCRIPTION,B.WIDTH_DIA_TYPE, SUM(B.BATCH_QNTY) AS BATCH_QNTY,0 AS ROLL_NO, 0 AS BARCODE_NO from pro_batch_create_dtls b,pro_batch_create_mst a where b.mst_id=$batch_id and a.id=b.mst_id and  a.entry_form in(0,136) and b.status_active=1 and b.is_deleted=0 $batch_insert_cond $select_group";
					$result=sql_select($sql_result);
				}
	
				
				if (count($result) > 0) {
	
					$i = 1;
					$tot_prod_qty = 0;
					$tot_batch_qty = 0;$data_array_dtls_index=array();
					foreach ($result as $row) {
						//$desc=explode(",",$row[csf('item_description')]);
						$ENTRY_FORM=$row->ENTRY_FORM;
						$ITEM_DESCRIPTION=$row->ITEM_DESCRIPTION;
						$PROD_ID=$row->PROD_ID;
						$PO_ID=$row->PO_ID;
						$WIDTH_DIA_TYPE=$row->WIDTH_DIA_TYPE;
						$BATCH_QNTY=$row->BATCH_QNTY;
						$NO_OF_ROLL=$row->NO_OF_ROLL;
						
						if ($ENTRY_FORM == 36) {
							$desc = explode(",", $ITEM_DESCRIPTION);
							//print_r($desc);
							$cons_comps = $desc[0];
							$gsm = $desc[1];
							$dia_width = $desc[2];
						} else {
							//$cons_comps='';
							$cons_comps_data = explode(",", $fabric_desc_arr[$PROD_ID]['desc']);
	
							$cons_comps = $cons_comps_data[0] . ' ' . $cons_comps_data[1];
							
							$gsm = $fabric_desc_arr[$PROD_ID]['gsm'];
							$dia_width = $fabric_desc_arr[$PROD_ID]['dia'];
							//$lot=$fabric_desc_arr[$row[csf('prod_id')]]['lot'];
							//$yarn_count=$fabric_desc_arr[$row[csf('prod_id')]]['yarn_count'];
							//$brand=$fabric_desc_arr[$row[csf('prod_id')]]['brand'];
	
						}
						 
					
						if($dyeing_type_id==2)//CBP dyeing
						{
							if($load_unload == 2)
							{
								$load_prod_qnty=$load_qty_arr2[$PROD_ID][$gsm][$WIDTH_DIA_TYPE][$NO_OF_ROLL];
								//echo $row[csf('prod_id')].'='.$gsm.'='.$row[csf('width_dia_type')];
							}
							else
							{
								$unload_prod_qnty=$previ_unload_qty_arr[$PROD_ID][$gsm][$WIDTH_DIA_TYPE];
								//echo  $row[csf('batch_qnty')].'='.$unload_prod_qnty;
								$load_prod_qnty = $BATCH_QNTY-$unload_prod_qnty;
							}
							
						}
						else
						{
							if($load_unload == 2)
							{
								$load_prod_qnty=$load_qty_arr2[$PROD_ID][$gsm][$WIDTH_DIA_TYPE][$NO_OF_ROLL];
								//echo $row[csf('prod_id')].'='.$gsm.'='.$row[csf('width_dia_type')];
							}
							else
							{
								$load_prod_qnty = $BATCH_QNTY;
							}
						}
							//echo $dyeing_type_id.'='.$load_prod_qnty;
	
						if (($page_upto_id == 2 || $page_upto_id > 2) && $roll_maintained == 1) {
							//$roll_no = $fabric_roll_arr[$row[csf('roll_id')]]['roll'];
							$roll_no = $NO_OF_ROLL;
	
							$batch_qnty = $BATCH_QNTY;
							//$prod_qnty=$row[csf('batch_qnty')];
							//$tot_batch_qty+= $row[csf('batch_qnty')];
							//$tot_prod_qty+= $row[csf('batch_qnty')];
	
							if ($load_unload == 2) {
									$readdata = "readonly";
									//$batch_qnty=$row[csf('batch_qnty')];
									$prod_qnty = $BATCH_QNTY;
									//$tot_prod_qnty += $load_prod_qnty;
								} else {
									$readdata = "";
									$prod_qnty = $BATCH_QNTY;
									//$tot_prod_qnty += $load_prod_qnty;
								}
						} else {
							$roll_no = $NO_OF_ROLL;
							$batch_qnty = $BATCH_QNTY;
							//$tot_prod_qty="";
							//$tot_batch_qty+= $row[csf('batch_qnty')];
						//echo $load_prod_qnty.'XXXX'.$process_id;
							if ($load_unload == 2) {
									$readdata = 1;
									//$batch_qnty=$row[csf('batch_qnty')];
									$prod_qnty = $load_prod_qnty;
									//$tot_prod_qnty += $load_prod_qnty;
								} else {
									$readdata = 0;
									if($dyeing_type_id==2)//CBP dyeing
									{
										$prod_qnty = $load_prod_qnty;
									}
									else
									{
										$prod_qnty = $BATCH_QNTY;
									}
									//$tot_prod_qnty += $load_prod_qnty;
								}
	
						}
						if($dyeing_type_id==2)//CBP
						{
							$readdata = 0;
						}
						else
						{
							$readdata =$readdata;
						}
	
						if($prod_qnty>0) //zero Qty check start
						{
							if($fabric_typee[$WIDTH_DIA_TYPE]=="") $fabric_typee[$WIDTH_DIA_TYPE]="";
							if($ROLL_ID=="") $ROLL_ID="";
							if($WIDTH_DIA_TYPE=="") $WIDTH_DIA_TYPE="";
							if($BATCH_ROLLNO=="") $BATCH_ROLLNO="";
							if($BARCODE_NO=="") $BARCODE_NO="";
							if($gsm=="") $gsm="";
							 $checked=0;
							/*$checked=0;
							$data_array["dtls_index"][$i]["CHECKED"] = $checked;
							$data_array["dtls_index"][$i]["PROD_ID"] =$row->PROD_ID;
							$data_array["dtls_index"][$i]["CONS_COMPS"] = $cons_comps;
							$data_array["dtls_index"][$i]["GSM"] = $gsm;
							$data_array["dtls_index"][$i]["DIA_WIDTH"] = $dia_width;
							$data_array["dtls_index"][$i]["FABRIC_TYPEE"] =$fabric_typee[$WIDTH_DIA_TYPE];
							$data_array["dtls_index"][$i]["FABRIC_TYPEE_ID"] = $WIDTH_DIA_TYPE;
							$data_array["dtls_index"][$i]["ROLL_ID"] = $ROLL_ID;
							$data_array["dtls_index"][$i]["BARCODE_NO"] = $BARCODE_NO;
							$data_array["dtls_index"][$i]["BATCH_QNTY"] = $BATCH_QNTY;
							$data_array["dtls_index"][$i]["BATCH_ROLLNO"] = $BATCH_ROLLNO;
							$data_array["dtls_index"][$i]["PROD_QTY"] = $prod_qnty;
							$data_array["dtls_index"][$i]["PROD_QTY_READONLY"] = $readdata;*/
							$data_array_dtls_index[$i]["CHECKED"] = $checked;
							$data_array_dtls_index[$i]["PROD_ID"] =$row->PROD_ID;
							$data_array_dtls_index[$i]["CONS_COMPS"] = $cons_comps;
							$data_array_dtls_index[$i]["GSM"] = $gsm;
							$data_array_dtls_index[$i]["DIA_WIDTH"] = $dia_width;
							$data_array_dtls_index[$i]["FABRIC_TYPEE"] =$fabric_typee[$WIDTH_DIA_TYPE];
							$data_array_dtls_index[$i]["FABRIC_TYPEE_ID"] = $WIDTH_DIA_TYPE;
							$data_array_dtls_index[$i]["ROLL_ID"] = $ROLL_ID;
							$data_array_dtls_index[$i]["BARCODE_NO"] = $BARCODE_NO;
							$data_array_dtls_index[$i]["BATCH_QNTY"] = $BATCH_QNTY;
							$data_array_dtls_index[$i]["BATCH_ROLLNO"] = $BATCH_ROLLNO;
							$data_array_dtls_index[$i]["PROD_QTY"] = $prod_qnty;
							$data_array_dtls_index[$i]["PROD_QTY_READONLY"] = $readdata;
							
						?>
						 
						<?
						//$tot_batch_qty += $row[csf('batch_qnty')];
						//$tot_prod_qnty += $prod_qnty;
						//$tot_batch_qty+= $row[csf('batch_qnty')];
						$i++;
						}
					}
				} 
				
			} //=====Gross End====
		}
		else //Trim Batch Start.
		{
	
	
				$batch_id_search = sql_select("select A.BATCH_ID from pro_fab_subprocess a,pro_fab_subprocess_dtls b where a.id=b.mst_id and a.batch_id=$batch_id and company_id=$company_id and entry_form=35 and a.status_active=1 and b.status_active=1 $load_unload_cond");
					foreach ($result as $row)
					 {
						 $BATCH_ID=$row->BATCH_ID;
					 }
					if($dyeing_type_id==2)//multi is No //CBP Dyeing
					{
						
						$batch_insert_cond = "";
						
					}
					else
					{
						if($multi_dyeing==2)//multi is No //CBP Dyeing
						{
						$batch_insert_cond = "";
						if (count($batch_id_search) > 0) $batch_insert_cond = " and a.id!=" . $BATCH_ID . "";
						}
					}
	
				 $select_group = "group by b.item_description,b.width_dia_type,a.entry_form,b.prod_id,b.po_id";
	
	
					$sql_result ="select A.ENTRY_FORM, 0 AS PROD_ID,0 AS PO_ID,0 AS NO_OF_ROLL,B.REMARKS,B.ITEM_DESCRIPTION, 0 AS WIDTH_DIA_TYPE, SUM(B.TRIMS_WGT_QNTY) AS BATCH_QNTY,0 AS ROLL_NO, 0 AS BARCODE_NO from pro_batch_trims_dtls b,pro_batch_create_mst a where a.id=b.mst_id and   b.mst_id=$batch_id and a.entry_form in(136) and b.status_active=1 and b.is_deleted=0 $batch_insert_cond group by a.entry_form,b.remarks,b.item_description";
					$result=sql_select($sql_result);
	
			//	echo count($result).'DD';//trims_wgt_qnty,remarks,item_description
				if (count($result) > 0) {
	
					$i = 1;
					$tot_prod_qty = 0;$data_array_dtls_index=array();
					$tot_batch_qty = 0;
					foreach ($result as $row)
					 {
						//$desc=explode(",",$row[csf('item_description')]);
						
						$PROD_ID=$row->PROD_ID;
						$cons_comps=$row->ITEM_DESCRIPTION;
						$NO_OF_ROLL=$row->NO_OF_ROLL;
						$REMARKS=$row->REMARKS;
						$WIDTH_DIA_TYPE=$row->WIDTH_DIA_TYPE;
						$BATCH_QNTY=$row->BATCH_QNTY;
						$ROLL_NO=$row->ROLL_NO;
						$ENTRY_FORM=$row->ENTRY_FORM;
						$BARCODE_NO=$row->BARCODE_NO;
						$roll_no = $ROLL_NO;
						$batch_qnty = $BATCH_QNTY;
							//$tot_prod_qty="";
							//$tot_batch_qty+= $row[csf('batch_qnty')];
							if ($load_unload == 2) {
									$readdata = 1;
									//$batch_qnty=$row[csf('batch_qnty')];
									$prod_qnty = $BATCH_QNTY;
									$tot_prod_qnty += $BATCH_QNTY;
								} else {
									$readdata = 0;
									$prod_qnty = $BATCH_QNTY;
									$tot_prod_qnty += $BATCH_QNTY;
								}
						if($dyeing_type_id==2)//CBP
						{
							$readdata = "";
						}
						else
						{
							$readdata =1;
						}
						//echo $batch_filed_read.'DD';
						if (($page_upto_id == 2 || $page_upto_id > 2) && $roll_maintained == 1) {
							$checked=1;
							
						}
						else 	$checked=0;
							
							if($fabric_typee[$WIDTH_DIA_TYPE]=="") $fabric_typee[$WIDTH_DIA_TYPE]="";
							if($dia_width=="") $dia_width="";if($ROLL_ID=="") $ROLL_ID="";
							if($WIDTH_DIA_TYPE=="") $WIDTH_DIA_TYPE="";
							if($BATCH_ROLLNO=="") $BATCH_ROLLNO="";	if($BARCODE_NO=="") $BARCODE_NO="";	
							if($ROLL_ID=="") $ROLL_ID="";
							if($gsm=="") $gsm="";
							
							/*$data_array["dtls_index"][$i]["CHECKED"] = $checked;
							$data_array["dtls_index"][$i]["PROD_ID"] =$row->PROD_ID;
							$data_array["dtls_index"][$i]["CONS_COMPS"] = $cons_comps;
							$data_array["dtls_index"][$i]["GSM"] = $gsm;
							$data_array["dtls_index"][$i]["DIA_WIDTH"] = $dia_width;
							$data_array["dtls_index"][$i]["FABRIC_TYPEE"] =$fabric_typee[$WIDTH_DIA_TYPE];
							$data_array["dtls_index"][$i]["FABRIC_TYPEE_ID"] = $WIDTH_DIA_TYPE;
							$data_array["dtls_index"][$i]["ROLL_ID"] = $ROLL_ID;
							$data_array["dtls_index"][$i]["BARCODE_NO"] = $BARCODE_NO;
							$data_array["dtls_index"][$i]["BATCH_QNTY"] = $BATCH_QNTY;
							$data_array["dtls_index"][$i]["BATCH_ROLLNO"] = $BATCH_ROLLNO;
							$data_array["dtls_index"][$i]["PROD_QTY"] = $prod_qnty;
							$data_array["dtls_index"][$i]["PROD_QTY_READONLY"] = $readdata;*/
							
							$data_array_dtls_index[$i]["CHECKED"] = $checked;
							$data_array_dtls_index[$i]["PROD_ID"] =$row->PROD_ID;
							$data_array_dtls_index[$i]["CONS_COMPS"] = $cons_comps;
							$data_array_dtls_index[$i]["GSM"] = $gsm;
							$data_array_dtls_index[$i]["DIA_WIDTH"] = $dia_width;
							$data_array_dtls_index[$i]["FABRIC_TYPEE"] =$fabric_typee[$WIDTH_DIA_TYPE];
							$data_array_dtls_index[$i]["FABRIC_TYPEE_ID"] = $WIDTH_DIA_TYPE;
							$data_array_dtls_index[$i]["ROLL_ID"] = $ROLL_ID;
							$data_array_dtls_index[$i]["BARCODE_NO"] = $BARCODE_NO;
							$data_array_dtls_index[$i]["BATCH_QNTY"] = $BATCH_QNTY;
							$data_array_dtls_index[$i]["BATCH_ROLLNO"] = $BATCH_ROLLNO;
							$data_array_dtls_index[$i]["PROD_QTY"] = $prod_qnty;
							$data_array_dtls_index[$i]["PROD_QTY_READONLY"] = $readdata;
							
						?>
						
						<?
						//$tot_batch_qty += $row[csf('batch_qnty')];
						//$tot_batch_qty+= $row[csf('batch_qnty')];
						$i++;
					}
				} 
	
		}
				
			$data_array["dtls_index"]= array_values($data_array_dtls_index);
		return $data_array;

	}
	function save_update_dyeing_production($save_obj) { 
		//Dyeing Production ===Save/Update=====
	
	$db_type = return_db_type(); 
  //  print_r($save_obj);die;
	
		$response_obj = json_decode($save_obj);
		//$prod_mst_arr = array();
		//$prod_dtls_arr = array();

		$batch_id = $response_obj->data->index->BATCH_ID;
		$batch_no = $response_obj->data->index->BATCH_NO;
		$functional_no = $response_obj->data->index->FUNCTIONAL_NO;
		// echo $batch_id.'sd';die;
		$dyeing_type = $response_obj->data->index->DYEING_TYPE;
		$company_id = $response_obj->data->index->COMPANY;
		$service_company = $response_obj->data->index->SERVICE_COMPANY;
		$load_unload = $response_obj->data->index->LOADING;
		$batch_no = $response_obj->data->index->BATCH_NO;
		$extention_no = $response_obj->data->index->EXTENTION_NO;
		$txt_system_no = $response_obj->data->index->FUNCTIONAL_NO;
		
		$process_id = $response_obj->data->index->PROCESS_NAME;
		$btb_ltb_id = $response_obj->data->index->BTB_LTB;
		if($btb_ltb_id=="") $btb_ltb_id=0;
	
		$end_hours = $response_obj->data->index->END_HOURS;
		$end_minutes = $response_obj->data->index->END_MINUTES;
		
		$process_start_date = $response_obj->data->index->PROCESS_END_DATE;
		$production_date = $response_obj->data->index->PRODUCTION_DATE;
		$process_end_date = $response_obj->data->index->PROCESS_END_DATE;
		// echo $process_start_date.'DDD';die;
		$result = $response_obj->data->index->RESULT;
		$shift_name = $response_obj->data->index->SHIFT_NAME;
		$water_flow = $response_obj->data->index->WATER_FLOW;
		$floor_id = $response_obj->data->index->FLOOR;
		$machine_id = $response_obj->data->index->MACHINE_NAME;
		$multi_batch_loading = $response_obj->data->index->MULTI_BATCH_LOADING;
		$hour_load_meter = $response_obj->data->index->HOUR_LOAD_METER;
		$fabric_type_id = $response_obj->data->index->FABRIC_TYPE;
		$responsibility_dept = $response_obj->data->index->RESPONSIBILITY_DEPT;
		$user_id = $response_obj->data->index->USER_ID;
		//$inserted_by = $response_obj->data->index->inserted_by;
		$dtls_data = $response_obj->data->list_data;
		//$fabric_type = $response_obj->data->index->fabric_type;
		//print_r($dtls_data);die;
			
		
		 
		//$batch_no = str_replace("'", "", $txt_batch_no);
	 //$batch_id = 16071;
	$load_process_start_date = str_replace("'", "", $process_start_date);
	$load_process_start_date_chk = strtotime($load_process_start_date);
	
	$unload_process_end_date = str_replace("'", "", $production_date);
	$unload_process_start_date_chk = strtotime($unload_process_end_date);
	
	//$batch_no_saved = return_field_value("batch_no", "pro_batch_create_mst", "id =$batch_id and is_deleted=0 and status_active=1","batch_no");
	$sql_batch=sql_select("select DOUBLE_DYEING,ENTRY_FORM,BATCH_NO,BATCH_DATE from pro_batch_create_mst where id =$batch_id and is_deleted=0 and status_active=1");
	//echo "select DOUBLE_DYEING,ENTRY_FORM,BATCH_NO,BATCH_DATE from pro_batch_create_mst where id =$batch_id and is_deleted=0 and status_active=1";die;
	foreach($sql_batch as $row)
	{
		$batch_no_saved=$row->BATCH_NO;
		$multi_dyeing=$row->DOUBLE_DYEING;
		$entry_form=$row->ENTRY_FORM;
		$batch_date=strtotime($row->BATCH_DATE);
		$batch_date_chk=$row->BATCH_DATE;
		 
		 
	}
			if ($db_type == 0) {
				//$pc_date_time = date("Y-m-d H:i:s", time());
				$process_start_date = date("Y-m-d", strtotime($process_start_date));
				$production_date = date("Y-m-d", strtotime($production_date));
				$process_end_date = date("Y-m-d", strtotime($process_end_date));
			} else {
				$process_start_date = date("d-M-Y", strtotime($process_start_date));
				$production_date = date("d-M-Y", strtotime($production_date));
				$process_end_date = date("d-M-Y", strtotime($production_date));

			}
			
	if($multi_dyeing=="" || $multi_dyeing==0 || $multi_dyeing==2) $multi_dyeing=2;else $multi_dyeing=$multi_dyeing;
	
	if($multi_dyeing==2)
	{
		$sql_unload = sql_select("select  batch_no from pro_fab_subprocess where  company_id='".$company_id."' and  batch_id=" . trim($batch_id) . " and load_unload_id=2 and entry_form=35 and is_deleted=0 and result=1 and status_active=1");
		if (count($sql_unload)> 0) {
				//echo "1" . "_" . $sql_unload[0]->batch_no;
				//alert('This Batch Shade Matched');
				return $resultset["status"] = "ThisBatchShadeMatched.";
			} 
	}
	
	
	if (str_replace("'", '', $load_unload) == 1) //Load
	{
		/*if($load_process_start_date_chk<$batch_date)
		{
			//echo "23**Prod start Date is found backdate  than batch date**".$batch_date.'='.$load_process_start_date_chk;
			//disconnect($con);
			//die;
			return $resultset["status"] = "ProdstartDateisfoundbackdatethanbatchdate=.".$batch_date_chk.'='.$load_process_start_date_chk;	
		}*/
		if($process_id!=31)
		{
			return $resultset["status"] = "OtherthenFabricDyeingProcessLoadingNotAllowed";
		}
		if($multi_batch_loading==1 && $txt_system_no!="")
		{
				$system_no=$txt_system_no;
			$new_process_start_date=date("Y-m-d",strtotime($process_start_date));
			$sql_date="select MIN(A.PROCESS_END_DATE) AS PROCESS_END_DATE,A.BATCH_NO from pro_fab_subprocess a,pro_fab_subprocess_dtls b where a.id=b.mst_id and a.load_unload_id=1 and a.entry_form=35 and a.status_active=1 and a.system_no=$system_no group by a.batch_no order by process_end_date";
			//echo $sql_date;die;
			$check_data_array=sql_select($sql_date,1);
			$data_array_date=sql_select($sql_date);
			foreach($data_array_date as $row)
			{
				
				$batch_no_chk=$row->BATCH_NO;
			$fnc_bach_start_arr[$batch_no_chk]=$batch_no_chk;
			
			}
		 
			if(count($fnc_bach_start_arr)==1 || count($fnc_bach_start_arr)>1)
			{
				$PROCESS_END_DATE_CHK=$check_data_array[0]->PROCESS_END_DATE;
				$load_process_start_date=date("Y-m-d",strtotime($PROCESS_END_DATE_CHK));
			//	echo $new_process_start_date.'='.$new_process_start_date;die;
				if($new_process_start_date!=$load_process_start_date && $load_process_start_date!='')
				{
					return $resultset["status"] = "ProcessStartDateMustbeSameinFunctionalBatchNo=$system_no";
				}
				
			}
			/*else if(count($fnc_bach_start_arr)>1)
			{
				//echo date("Y-m-d",strtotime($check_data_array[0]->PROCESS_END_DATE));die;
					//echo count($fnc_bach_start_arr).'='.$system_no;die;
					//echo "A";die;
				return $resultset["status"] = "Process Start Date Must be Same in Functional Batch No=$system_no";
			}*/
			//echo "DDD";die;
			 
		}
		//========End==================
		//==========Machine Check==================
			 $sql_mc = "select  A.BATCH_NO AS BATCH_NO,A.BATCH_ID from pro_fab_subprocess a,pro_fab_subprocess_dtls b  where  a.id=b.mst_id and a.service_company='" . $service_company. "'  and a.machine_id='$machine_id' and a.service_source in(1) and a.load_unload_id=1 and a.entry_form=35 and a.is_deleted=0 and a.status_active=1 and b.is_deleted=0 and b.status_active=1   group by  a.batch_no,a.batch_id";
			
			$data_array_mc = sql_select($sql_mc);
			$loaded_batch_id="";
			$loaded_batch_idarr = array();
			foreach ($data_array_mc as $row) {
				$batch_iddd=$row->BATCH_ID;
			$loaded_batch_idarr[$batch_iddd] = $batch_iddd;
			$loaded_batch_no[$batch_iddd] = $row->BATCH_ID;;
			$loaded_batch_id.=$batch_iddd.',';
			}
			
			
			
			if(!empty($loaded_batch_idarr)){
			
			$loaded_batch_ids=rtrim($loaded_batch_id,',');
			$BatIds=chop($loaded_batch_ids,','); $bat_cond_for_in="";
			$bat_ids=count(array_unique(explode(",",$loaded_batch_ids)));
			if($db_type==2 && $bat_ids>1000)
			{
			$bat_cond_for_in=" and (";
			$BatIdsArr=array_chunk(explode(",",$BatIds),999);
			foreach($BatIdsArr as $ids)
			{
			$ids=implode(",",$ids);
			$bat_cond_for_in.=" a.batch_id in($ids) or"; 
			}
			$bat_cond_for_in=chop($bat_cond_for_in,'or ');
			$bat_cond_for_in.=")";
			}
			else
			{
			$bat_cond_for_in=" and a.batch_id in($BatIds)";
			}
			
			$sql_batch_un = sql_select("select A.BATCH_ID,A.BATCH_NO from pro_fab_subprocess a,pro_fab_subprocess_dtls b    where  a.id=b.mst_id and a.service_company='" .trim($data[0]) . "'  and a.machine_id='$data[3]'  and a.service_source in(1) and a.load_unload_id=2 and a.entry_form=35 and a.is_deleted=0 and a.status_active=1 and b.is_deleted=0 and b.status_active=1   $bat_cond_for_in  group by  a.batch_no,a.batch_id");// and a.batch_id in(".implode(",",$loaded_batch_idarr).")
			}
			foreach ($sql_batch_un as $row) {
				$unload_batch_id=$row->BATCH_ID;
			$unloaded_batch_idarr[$unload_batch_id] = $unload_batch_id;
			}
			
			$loadedData =array_diff($loaded_batch_idarr,$unloaded_batch_idarr);
			
			foreach ($loadedData as $batchId) {
			$loaded_bathc_no .= $loaded_batch_no[$batchId].",";
			}
			
			//echo chop($loaded_bathc_no," , "); die();
			$loaded_bathc_noCk=chop($loaded_bathc_no," , ");
			
			if (count($loadedData) > 0) {
				return $resultset["status"] = "This Machine Currently Loaded By=$loaded_bathc_noCk";
			
			//echo "1" . "_" . chop($loaded_bathc_no," , ");
			}  
			
		
		if($load_process_start_date_chk<$batch_date)
		{
			//echo "23**Prod start Date is found backdate  than batch date**".$batch_date.'='.$load_process_start_date_chk;
			//disconnect($con);
			//die;
			return $resultset["status"] = "Prod start Date is found backdate  than batch date=$batch_date_chk.'='.$load_process_start_date_chk";	
		}
		
		
	}
	if (str_replace("'", '', $load_unload) == 2) //unLoad
	{
		if($unload_process_start_date_chk<$batch_date)
		{
			//return $resultset["status"] = "Failed";
			return $resultset["status"] = "ProdDateisfoundBackdatethanBatchDate";	
			//echo "23**Prod Date is found backdate  than batch date**".$batch_date.'='.$load_process_start_date_chk;
			 
		}
		$last_load="select  BATCH_ID,RESULT,LOAD_UNLOAD_ID from pro_fab_subprocess where load_unload_id in(1,2) and entry_form=35 and status_active=1 and batch_id=$batch_id  order by id desc";
		$last_data=sql_select($last_load,1);
		$result_id_chk=$last_load_unload_id=0;
		foreach ($last_data as $row)
		{
			// $batch_ids=$row->BATCH_ID;
					 $result_id_chk= $row->RESULT;
					 $last_load_unload_id= $row->LOAD_UNLOAD_ID;
				 
				
		}
		if($last_load_unload_id==2)
		{
			return $resultset["status"] = "Already Unload";	
		}
		if($extention_no>0 && $responsibility_dept==0)
		{
			return $resultset["status"] = "Please Select responsibility dept";
		}
		if($unload_process_start_date_chk<$batch_date)
		{
			//return $resultset["status"] = "Failed";
			return $resultset["status"] = "Prod Date is found backdate  than batch date";	
			//echo "23**Prod Date is found backdate  than batch date**".$batch_date.'='.$load_process_start_date_chk;
		}
		if($txt_system_no!="")
		{
				$system_no=$txt_system_no;
			//$new_process_start_date=date("Y-m-d",strtotime($process_start_date));
			//$sql_date="select MIN(A.PROCESS_END_DATE) AS PROCESS_END_DATE,A.BATCH_NO from pro_fab_subprocess a,pro_fab_subprocess_dtls b where a.id=b.mst_id and a.load_unload_id=2 and a.entry_form=35 and a.status_active=1 and a.system_no=$system_no group by a.batch_no order by process_end_date";
			$sql="select min(a.id) as id,min(a.process_end_date) as production_date,min(end_hours) as end_hours,min(end_minutes) as end_minutes, listagg(cast(a.batch_no AS VARCHAR2(4000)),',') within group (order by a.batch_no) as batch_no from pro_fab_subprocess a,pro_fab_subprocess_dtls b where a.id=b.mst_id and a.load_unload_id=2 and a.entry_form=35 and a.status_active=1 and a.system_no=$system_no order by id asc";
			//echo $sql_date;die;
			$check_data_array=sql_select($sql_date,1);
			$data_array_date=sql_select($sql_date);
			foreach($data_array_date as $row)
			{
				
				$batch_no_chk=$row->BATCH_NO;
			$fnc_bach_start_arr[$batch_no_chk]=$batch_no_chk;
			
			}
		 
			if(count($fnc_bach_start_arr)==1 || count($fnc_bach_start_arr)>1)
			{
				$unload_production_date=$check_data_array[0]->PROCESS_END_DATE;
				$load_process_start_date=date("Y-m-d",strtotime($PROCESS_END_DATE_CHK));
				$unload_prod_date_chk = strtotime($unload_process_end_date);
				$saved_unload_production_date = strtotime($unload_production_date);
			//	echo $new_process_start_date.'='.$new_process_start_date;die;
				if($saved_unload_production_date!=$unload_prod_date_chk && $unload_prod_date_chk!='')
				{
					return $resultset["status"] = "ProductuonDateMustbeSameinFunctionalBatchNo=$system_no";
				}
				
			}
			 
			//echo "DDD";die;
			 
		}
	}
	
	if($batch_no!=$batch_no_saved)
	{
		//echo "23**Please write the correct batch no";
		   $resultset["status"] = false;
		return $resultset[] =array("save_msg"=>"Without Load Unload Not Allow");
		 
	}
	
	if ($response_obj->status == true) 
	{
			
			
			$mst_tbl_id = 0;
			$dtls_tbl_id = 0;
			$this->db->trans_start();
			
			$pc_date_time = date("d-M-Y h:i:s A", time());
			if ($db_type == 0) {
				$pc_date_time = date("Y-m-d H:i:s", time());
			}
			$mst_tbl = "PRO_FAB_SUBPROCESS";
			$mst_id = return_next_id("id", $mst_tbl, "", "", $db_type);
			
	if ($response_obj->mode == "save") {
				
		
		//echo "10**=DD";die;
		if (str_replace("'", '', $load_unload) == 2) {
			//if (str_replace("'", '', $txt_process_id) == 31) {
				$sql_data = "select ID, BATCH_ID from pro_fab_subprocess where  company_id=" . $company_id . " and  batch_id=" . $batch_id . " and load_unload_id=1 and entry_form=35 and is_deleted=0 and status_active=1";
				$data_array = sql_select($sql_data);
				if (count($data_array) > 0) {
					//secho "1**" . $data_array[0][csf('batch_id')];
				} else {
					//return $resultset["status"] = "Without Load Unload Not Allow";
					return $resultset[] =array("save_msg"=>"Without Load Unload Not Allow");
					//echo "100**" . 'Without Load  Unload Not Allow';
					//disconnect($con);
					//die;
				}
			//}

					$sql_loadunload="select ID,LOAD_UNLOAD_ID, BATCH_ID from pro_fab_subprocess where  company_id=".$company_id." and  batch_id=".$batch_id." and entry_form=35 and is_deleted=0 and status_active=1   order by id desc";
					$loadunload_data_array=sql_select($sql_loadunload);
					$load_unload_id = $loadunload_data_array[0]->LOAD_UNLOAD_ID;
					//$load_unload_id=$loadunload_data_array[0][csf('load_unload_id')];
					if(count($loadunload_data_array)>0)
					{
						if($load_unload_id==2)
						{
						 	//return $resultset["status"] = "Already unload Found Please load";
							return $resultset[] =array("save_msg"=>"Already unload Found Please load");
						//$msg='Already unload Found,Please load';
						//echo "111**".$msg;
						//disconnect($con);
						//die;
						}
						 
						
					}
					
			if($multi_dyeing==2) // is Multi no
			{
				if($dyeing_type==1) //CBP Dyeing
				{
					$sql_unload="select id, batch_id from pro_fab_subprocess where  company_id=".$company_id." and  batch_id=".$batch_id." and load_unload_id=2 and entry_form=35 and is_deleted=0 and status_active=1";
					$unload_data_array=sql_select($sql_unload);
					if(count($unload_data_array)>0)
					{
						 
						return $resultset[] =array("save_msg"=>"Dublicate Unload Found");
						/*echo "11**".'Dublicate Unload Found';
						disconnect($con);
						die;*/
					}
				}
			}
		}
		//functional_batch
		
		if (str_replace("'", '', $load_unload) == 1) {
			
		//$load_unloadId=str_replace("'","",$cbo_load_unload);
		//$double_dyeing_id=str_replace("'","",$hidden_double_dyeing);
		//if($updateId) $up_id_cond="and a.id!=$updateId";else $up_id_cond="";
		
		
		if($multi_dyeing==2 && $dyeing_type==1) // is Multi no //CBP Dyeing
			{
				$sql_load="select id, batch_id from pro_fab_subprocess where  company_id=".$company_id." and  batch_id=".$batch_id." and load_unload_id=1 and entry_form=35 and is_deleted=0 and status_active=1";
				$load_data_array=sql_select($sql_load);
				if(count($load_data_array)>0)
				{
					//echo "13**".'Dublicate load Found';
					//$resultset[]=array("functional_batch"=>"");
					//$resultset['status']=false;
					return $resultset[] =array("save_msg"=>"Dublicate load Found");
					 
					//die;
				}
			}
					$sql_loadunload="select ID,LOAD_UNLOAD_ID, BATCH_ID,MACHINE_ID from pro_fab_subprocess where  company_id=".$company_id." and  batch_id=".$batch_id."  and entry_form=35 and is_deleted=0 and status_active=1   order by id desc";//and load_unload_id=1 
					$loadunload_data_array=sql_select($sql_loadunload);
					foreach($loadunload_data_array as $row)
					{
						$mst_id=$row->ID;
						$load_unload_id=$row->LOAD_UNLOAD_ID;
						$batch_id=$row->BATCH_ID;
						if($load_unload_id==1)
						{
						$load_unload_id= $load_unload_id;
						$machine_id= $row->machine_id;
						}
					}
					if(count($loadunload_data_array)>0)
					{
						if($cbo_machine_id!=$machine_id) //Validation for Different machine
						{
							//$msg='Please load correct machine which already loaded';
							//echo "101**".$msg;
							//$resultset['status']=false;
						//	return $resultset["status"] = "Please load correct machine which already loaded";
							return $resultset[] =array("save_msg"=>"Please load correct machine which already loaded");
							//disconnect($con);
							//die;
						}
					}
					
					
					$load_unload_id=$loadunload_data_array->LOAD_UNLOAD_ID;
					if(count($loadunload_data_array)>0)
					{
						if($load_unload_id==1)//Load
						{
						//$msg='Already load Found,Please unload';
						//echo "111**".$msg;
						//$resultset["status"] = false;
						//return $resultset["status"] = "Already load Found,Please unload";
						return $resultset[] =array("save_msg"=>"Already load Found,Please unload");
						//disconnect($con);
						 
						}
					}
		}
		$page_upto_id = return_field_value("page_upto_id as page_upto_id", "variable_settings_production", "company_name =$company_id and item_category_id=50 and variable_list=3 and is_deleted=0 and status_active=1","page_upto_id");
		 $roll_maintained = return_field_value("fabric_roll_level", "variable_settings_production", "company_name ='$company_id' and item_category_id=50 and variable_list=3 and is_deleted=0 and status_active=1","fabric_roll_level");
		// echo $company_id.'=TT'.$roll_maintained;;die;
		//$mst_id = return_next_id("id", "pro_fab_subprocess", 1);
		//$mst_tbl="pro_fab_subprocess";
		//$mst_id = return_next_id("id", $mst_tbl, "", "", $db_type);
		$mst_arr=array();
		$dtls_data_array=array();
		
		if ($load_unload == 1) {
			$txt_system_no = str_replace("'", "", $txt_system_no);
			$mst_update_id = str_replace("'", "", $mst_id);
			if ($txt_system_no == "") $system_no = $mst_update_id + 1; else $system_no = $txt_system_no;

				//$field_array = "id,company_id,system_no,service_source,service_company,batch_no,batch_id,batch_ext_no,process_id,ltb_btb_id,water_flow_meter,process_end_date,end_hours,end_minutes,machine_id,floor_id,load_unload_id,entry_form,multi_dyeing_id,remarks,dyeing_type_id,hour_load_meter,multi_batch_load_id,inserted_by,insert_date";
				//WATER_FLOW_METER,PROCESS_END_DATE,END_HOURS,END_MINUTES,MACHINE_ID,FLOOR_ID,LOAD_UNLOAD_ID,ENTRY_FORM,MULTI_DYEING_ID,REMARKS,DYEING_TYPE_ID,HOUR_LOAD_METER,MULTI_BATCH_LOAD_ID,INSERTED_BY,INSERT_DATE
				$mst_arr = array(
					'ID' => $mst_id,
					'COMPANY_ID' => $company_id,
					'SERVICE_COMPANY' => $service_company,
					'SYSTEM_NO' => $system_no,
					'SERVICE_SOURCE' => 1,
					'BATCH_NO' => $batch_no,
					'BATCH_ID' => $batch_id,
					'BATCH_EXT_NO' => $extention_no,
					'LOAD_UNLOAD_ID' => $load_unload,
					'ENTRY_FORM' => 35,
					'PROCESS_ID' => $process_id,
					'LTB_BTB_ID' => $btb_ltb_id,
					'WATER_FLOW_METER' => $water_flow,
					'PROCESS_END_DATE' => $process_end_date,
					'END_HOURS' => $end_hours,
					'END_MINUTES' => $end_minutes,
					'FLOOR_ID' => $floor_id,
					'MACHINE_ID' => $machine_id,
					'MULTI_DYEING_ID' => $multi_dyeing,
					'DYEING_TYPE_ID' => $dyeing_type,
					'HOUR_LOAD_METER' => $hour_load_meter,
					'MULTI_BATCH_LOAD_ID' => $multi_batch_loading,
					'INSERTED_BY' => $user_id,
					'INSERT_DATE' => $pc_date_time,
					'STATUS_ACTIVE' => 1,
					'IS_DELETED' =>0,
				);
				$mst_arr['ID'] = $mst_id;
				$mst_RID =$this->insertData($mst_arr, $mst_tbl);
				if($mst_RID) $flag=1;else $flag=0;
				//echo $mst_RID.'=TT';;die;
				// echo $this->db->last_query();die();
				
				$dtls_tbl = "PRO_FAB_SUBPROCESS_DTLS";
				$id_dtls = return_next_id("id", $dtls_tbl, "", "", $db_type);
			
				//$id_dtls = return_next_id("id", "pro_fab_subprocess_dtls", 1);
				//$dtls_tbl = "pro_fab_subprocess_dtls";
				//echo $page_upto_id.'=X'.$roll_maintained;;die;
			if (($page_upto_id == 2 || $page_upto_id > 2) && str_replace("'", "", $roll_maintained) == 1) {
				//$field_array_dtls = "ID, MST_ID,ENTRY_PAGE,PROD_ID,CONST_COMPOSITION,GSM,DIA_WIDTH,WIDTH_DIA_TYPE,BATCH_QTY,ROLL_NO,BARCODE_NO,LOAD_UNLOAD_ID,ROLL_ID,PRODUCTION_QTY,REMARKS,INSERTED_BY,INSERT_DATE";
				foreach ($dtls_data as $val) {
					
						$dtls_data_array[] = array(
							'ID' => $id_dtls,
							'MST_ID' => $mst_id,
							'PROD_ID' => $val->PROD_ID,
							'ENTRY_PAGE' => 35,
							'LOAD_UNLOAD_ID' => $load_unload,
							'BARCODE_NO' => $val->BARCODE_NO,
							'ROLL_ID' => $val->ROLL_ID,
							'ROLL_NO' => $val->BATCH_ROLLNO,
							'BATCH_QTY' => $val->BATCH_QNTY,
							'PRODUCTION_QTY' => $val->PROD_QTY,
							'CONST_COMPOSITION' => $val->CONS_COMPS,
							'DIA_WIDTH' => $val->DIA_WIDTH,
							'WIDTH_DIA_TYPE' => $val->FABRIC_TYPEE_ID,
							'GSM' => $val->GSM,
							'INSERTED_BY' => $user_id,
							'INSERT_DATE' => $pc_date_time,
						);
						
						$id_dtls = $id_dtls + 1;
					
				}
				if($flag==1)
				{
				$dtls_RID = $this->db->insert_batch("PRO_FAB_SUBPROCESS_DTLS",$dtls_data_array);
				// echo $this->db->last_query();die();
				 if($dtls_RID) $flag=1;else $flag=0;
				}
			
			}//Roll End
			else
			{	
					//ID, MST_ID,ENTRY_PAGE,PROD_ID,CONST_COMPOSITION,GSM,DIA_WIDTH,WIDTH_DIA_TYPE,BATCH_QTY,NO_OF_ROLL,LOAD_UNLOAD_ID,PRODUCTION_QTY,REMARKS,INSERTED_BY,INSERT_DATE
					 $dtls_data_array=array();
					foreach ($dtls_data as $val) {
					
					if($val->BARCODE_NO=='') $BARCODE_NO=0;
					if($val->ROLL_ID=='') $ROLL_ID=0; 
					
					 $dtls_data_array[] = array(
							'ID' => $id_dtls,
							'MST_ID' => $mst_id,
							'PROD_ID' => $val->PROD_ID,
							'ENTRY_PAGE' => 35,
							'LOAD_UNLOAD_ID' => $load_unload,
							'BARCODE_NO' => $val->BARCODE_NO,
							'ROLL_ID' => $val->ROLL_ID,
							'ROLL_NO' => $val->BATCH_ROLLNO,
							'BATCH_QTY' => $val->BATCH_QNTY,
							'PRODUCTION_QTY' => $val->PROD_QTY,
							'CONST_COMPOSITION' => $val->CONS_COMPS,
							'DIA_WIDTH' => $val->DIA_WIDTH,
							'WIDTH_DIA_TYPE' => $val->FABRIC_TYPEE_ID,
							'GSM' => $val->GSM,
							'INSERTED_BY' => $user_id,
							'INSERT_DATE' => $pc_date_time,
						);
						
						$id_dtls = $id_dtls + 1;
				
					
				}
				if($flag==1)
				{
				$dtls_RID = $this->db->insert_batch("PRO_FAB_SUBPROCESS_DTLS",$dtls_data_array);
				 // echo $this->db->last_query();die();
				 if($dtls_RID) $flag=1;else $flag=0;
				}
				
			}
			
		} //=======Load End====
		if($load_unload==2)//=======Un Load End====
		{
			
			
			$system_no = str_replace("'", "", $txt_system_no);
			$result_id = str_replace("'", "", $result);
			if($result_id==4) //incomplete
			{
				$field_arr=",incomplete_result,incomplete_date";
				$field_data_arr=",".$result_id.",".$txt_process_end_date;
				$incomplete_result_id=$result_id;
				$incomplete_process_end_date=$process_end_date;
			}
			elseif($result_id==2) //Redying Shade Match
			{
				$field_arr=",redyeing_needed";
				$field_data_arr=",".$result_id;
				$redyeing_result_id=$result_id;
			}
			elseif($result_id==1) //Shade Match
			{
				$field_arr=",shade_matched";
				$field_data_arr=",".$result_id;
				$matched_result_id=$result_id;
			}
			else
			{
				$field_arr="";
				$field_data_arr="";
				$matched_result_id=0;
				$incomplete_result_id=0;
				$redyeing_result_id=0;
				$matched_result_id=0;
				$incomplete_process_end_date='';
			}
			 
			$mst_arr = array(
					'ID' => $mst_id,
					'COMPANY_ID' => $company_id,
					'SERVICE_COMPANY' => $service_company,
					'SYSTEM_NO' => $system_no,
					'SERVICE_SOURCE' => 1,
					'BATCH_NO' => $batch_no,
					'BATCH_ID' => $batch_id,
					'BATCH_EXT_NO' => $extention_no,
					'LOAD_UNLOAD_ID' => $load_unload,
					'ENTRY_FORM' => 35,
					'PROCESS_ID' => $process_id,
					'LTB_BTB_ID' => $btb_ltb_id,
					'WATER_FLOW_METER' => $water_flow,
					'PRODUCTION_DATE' => $production_date,
					'PROCESS_END_DATE' => $process_end_date,
					'END_HOURS' => $end_hours,
					'END_MINUTES' => $end_minutes,
					'FLOOR_ID' => $floor_id,
					'MACHINE_ID' => $machine_id,
					'MULTI_DYEING_ID' => $multi_dyeing,
					'DYEING_TYPE_ID' => $dyeing_type,
					'HOUR_LOAD_METER' => $hour_load_meter,
					'SHIFT_NAME' => $shift_name,
					'FABRIC_TYPE' => $fabric_type_id,
					'RESPONSIBILITY_ID' => $responsibility_dept,
					'INCOMPLETE_RESULT' => $incomplete_result_id,
					'INCOMPLETE_DATE' => $incomplete_process_end_date,
					'REDYEING_NEEDED' => $redyeing_result_id,
					'SHADE_MATCHED' => $matched_result_id,
					'RESULT' => $result,
					'INSERTED_BY' => $user_id,
					'INSERT_DATE' => $pc_date_time,
					'STATUS_ACTIVE' => 1,
					'IS_DELETED' =>0,
				);
				$mst_arr['ID'] = $mst_id;
				$mst_RID =$this->insertData($mst_arr, $mst_tbl);
				if($mst_RID) $flag=1;else $flag=0;
				//echo $mst_RID.'=TT';;die;
				// echo $this->db->last_query();die();
				
				$dtls_tbl = "PRO_FAB_SUBPROCESS_DTLS";
				$id_dtls = return_next_id("id", $dtls_tbl, "", "", $db_type);
				
			if (($page_upto_id == 2 || $page_upto_id > 2) && str_replace("'", "", $roll_maintained) == 1) {
	
				 foreach ($dtls_data as $val) {
					
						$dtls_data_array[] = array(
							'ID' => $id_dtls,
							'MST_ID' => $mst_id,
							'PROD_ID' => $val->PROD_ID,
							'ENTRY_PAGE' => 35,
							'LOAD_UNLOAD_ID' => $load_unload,
							'BARCODE_NO' => $val->BARCODE_NO,
							'ROLL_ID' => $val->ROLL_ID,
							'ROLL_NO' => $val->BATCH_ROLLNO,
							'BATCH_QTY' => $val->BATCH_QNTY,
							'PRODUCTION_QTY' => $val->PROD_QTY,
							'CONST_COMPOSITION' => $val->CONS_COMPS,
							'DIA_WIDTH' => $val->DIA_WIDTH,
							'WIDTH_DIA_TYPE' => $val->FABRIC_TYPEE_ID,
							'GSM' => $val->GSM,
							'INSERTED_BY' => $user_id,
							'INSERT_DATE' => $pc_date_time,
						);
						
						$id_dtls = $id_dtls + 1;
					
				}
				if($flag==1)
				{
				$dtls_RID = $this->db->insert_batch("PRO_FAB_SUBPROCESS_DTLS",$dtls_data_array);
				// echo $this->db->last_query();die();
				 if($dtls_RID) $flag=1;else $flag=0;
				}
				

			} 
			else  //Unload Roll End
			{
				 
					foreach ($dtls_data as $val) {
					
					if($val->BARCODE_NO=='') $BARCODE_NO=0;
					if($val->ROLL_ID=='') $ROLL_ID=0; 
					
					 $dtls_data_array[] = array(
							'ID' => $id_dtls,
							'MST_ID' => $mst_id,
							'PROD_ID' => $val->PROD_ID,
							'ENTRY_PAGE' => 35,
							'LOAD_UNLOAD_ID' => $load_unload,
							'BARCODE_NO' => $val->BARCODE_NO,
							'ROLL_ID' => $val->ROLL_ID,
							'NO_OF_ROLL' => $val->BATCH_ROLLNO,
							'BATCH_QTY' => $val->BATCH_QNTY,
							'PRODUCTION_QTY' => $val->PROD_QTY,
							'CONST_COMPOSITION' => $val->CONS_COMPS,
							'DIA_WIDTH' => $val->DIA_WIDTH,
							'WIDTH_DIA_TYPE' => $val->FABRIC_TYPEE_ID,
							'GSM' => $val->GSM,
							'INSERTED_BY' => $user_id,
							'INSERT_DATE' => $pc_date_time,
						);
						$id_dtls = $id_dtls + 1;
				}
				if($flag==1)
				{
				$dtls_RID = $this->db->insert_batch("PRO_FAB_SUBPROCESS_DTLS",$dtls_data_array);
				 // echo $this->db->last_query();die();
				 if($dtls_RID) $flag=1;else $flag=0;
				}

			}

			//print_r($data_array);
		
		}
		 
		 
			if ($this->db->trans_status() == TRUE) {
				if ($flag==1) {
					$this->db->trans_commit();
					$this->db->trans_complete();
					 $resultset["functional_batch"] = $system_no;
					 $resultset["save_msg"] = "Successful Done";
					 return  $resultset;
					//return $resultset["resultset"] = true;
					//return $resultset["status"] = "Successful Done";
				} else {
					$this->db->trans_rollback();
					$this->db->trans_complete();
					return $resultset["save_msg"] = "Failed";
				}

			} else {
				$resultset["save_msg"] = "Failed";
				$this->db->trans_complete();
			}

		} //=======Save End===========
		else if ($response_obj->mode == "update") {
			
			return $resultset["save_msg"] = "Update not allowed";
		}
   }
   else 
   {
			return $resultset["save_msg"] = "Failed";
   }
   //====Response Status End=

}
//============End=====================

	function save_update_dyeing_production__old($save_obj) { //Dyeing Production ===Save/Update=====
	
	$db_type = return_db_type(); 
  //  print_r($save_obj);die;
	
		$response_obj = json_decode($save_obj);
		//$prod_mst_arr = array();
		//$prod_dtls_arr = array();

		$batch_id = $response_obj->data->index->BATCH_ID;
		$batch_no = $response_obj->data->index->BATCH_NO;
		$functional_no = $response_obj->data->index->FUNCTIONAL_NO;
		// echo $batch_id.'sd';die;
		$dyeing_type = $response_obj->data->index->DYEING_TYPE;
		$company_id = $response_obj->data->index->COMPANY;
		$service_company = $response_obj->data->index->SERVICE_COMPANY;
		$load_unload = $response_obj->data->index->LOADING;
		$batch_no = $response_obj->data->index->BATCH_NO;
		$extention_no = $response_obj->data->index->EXTENTION_NO;
		$txt_system_no = $response_obj->data->index->FUNCTIONAL_NO;
		
		$process_id = $response_obj->data->index->PROCESS_NAME;
		$btb_ltb_id = $response_obj->data->index->BTB_LTB;
		if($btb_ltb_id=="") $btb_ltb_id=0;
	
		$end_hours = $response_obj->data->index->END_HOURS;
		$end_minutes = $response_obj->data->index->END_MINUTES;
		
		$process_start_date = $response_obj->data->index->PROCESS_END_DATE;
		$production_date = $response_obj->data->index->PRODUCTION_DATE;
		$process_end_date = $response_obj->data->index->PROCESS_END_DATE;
		// echo $process_start_date.'DDD';die;
		$result = $response_obj->data->index->RESULT;
		$shift_name = $response_obj->data->index->SHIFT_NAME;
		$water_flow = $response_obj->data->index->WATER_FLOW;
		$floor_id = $response_obj->data->index->FLOOR;
		$machine_id = $response_obj->data->index->MACHINE_NAME;
		$multi_batch_loading = $response_obj->data->index->MULTI_BATCH_LOADING;
		$hour_load_meter = $response_obj->data->index->HOUR_LOAD_METER;
		$fabric_type_id = $response_obj->data->index->FABRIC_TYPE;
		$responsibility_dept = $response_obj->data->index->RESPONSIBILITY_DEPT;
		$user_id = $response_obj->data->index->USER_ID;
		//$inserted_by = $response_obj->data->index->inserted_by;
		$dtls_data = $response_obj->data->list_data;
		//$fabric_type = $response_obj->data->index->fabric_type;
		//print_r($dtls_data);die;
			
		
		 
		//$batch_no = str_replace("'", "", $txt_batch_no);
	 //$batch_id = 16071;
	$load_process_start_date = str_replace("'", "", $process_start_date);
	$load_process_start_date_chk = strtotime($load_process_start_date);
	
	$unload_process_end_date = str_replace("'", "", $production_date);
	$unload_process_start_date_chk = strtotime($unload_process_end_date);
	
	//$batch_no_saved = return_field_value("batch_no", "pro_batch_create_mst", "id =$batch_id and is_deleted=0 and status_active=1","batch_no");
	$sql_batch=sql_select("select DOUBLE_DYEING,ENTRY_FORM,BATCH_NO,BATCH_DATE from pro_batch_create_mst where id =$batch_id and is_deleted=0 and status_active=1");
	//echo "select DOUBLE_DYEING,ENTRY_FORM,BATCH_NO,BATCH_DATE from pro_batch_create_mst where id =$batch_id and is_deleted=0 and status_active=1";die;
	foreach($sql_batch as $row)
	{
		$batch_no_saved=$row->BATCH_NO;
		$multi_dyeing=$row->DOUBLE_DYEING;
		$entry_form=$row->ENTRY_FORM;
		$batch_date=strtotime($row->BATCH_DATE);
		$batch_date_chk=$row->BATCH_DATE;
		 
		 
	}
			if ($db_type == 0) {
				//$pc_date_time = date("Y-m-d H:i:s", time());
				$process_start_date = date("Y-m-d", strtotime($process_start_date));
				$production_date = date("Y-m-d", strtotime($production_date));
				$process_end_date = date("Y-m-d", strtotime($process_end_date));
			} else {
				$process_start_date = date("d-M-Y", strtotime($process_start_date));
				$production_date = date("d-M-Y", strtotime($production_date));
				$process_end_date = date("d-M-Y", strtotime($production_date));

			}
			
	if($multi_dyeing=="" || $multi_dyeing==0 || $multi_dyeing==2) $multi_dyeing=2;else $multi_dyeing=$multi_dyeing;
	
	if($multi_dyeing==2)
	{
		$sql_unload = sql_select("select  batch_no from pro_fab_subprocess where  company_id='".$company_id."' and  batch_id=" . trim($batch_id) . " and load_unload_id=2 and entry_form=35 and is_deleted=0 and result=1 and status_active=1");
		if (count($sql_unload)> 0) {
				//echo "1" . "_" . $sql_unload[0]->batch_no;
				//alert('This Batch Shade Matched');
				return $resultset["status"] = "ThisBatchShadeMatched.";
			} 
	}
	
	
	if (str_replace("'", '', $load_unload) == 1) //Load
	{
		/*if($load_process_start_date_chk<$batch_date)
		{
			//echo "23**Prod start Date is found backdate  than batch date**".$batch_date.'='.$load_process_start_date_chk;
			//disconnect($con);
			//die;
			return $resultset["status"] = "ProdstartDateisfoundbackdatethanbatchdate=.".$batch_date_chk.'='.$load_process_start_date_chk;	
		}*/
		if($process_id!=31)
		{
			return $resultset["status"] = "OtherthenFabricDyeingProcessLoadingNotAllowed";
		}
		if($multi_batch_loading==1 && $txt_system_no!="")
		{
				$system_no=$txt_system_no;
			$new_process_start_date=date("Y-m-d",strtotime($process_start_date));
			$sql_date="select MIN(A.PROCESS_END_DATE) AS PROCESS_END_DATE,A.BATCH_NO from pro_fab_subprocess a,pro_fab_subprocess_dtls b where a.id=b.mst_id and a.load_unload_id=1 and a.entry_form=35 and a.status_active=1 and a.system_no=$system_no group by a.batch_no order by process_end_date";
			//echo $sql_date;die;
			$check_data_array=sql_select($sql_date,1);
			$data_array_date=sql_select($sql_date);
			foreach($data_array_date as $row)
			{
				
				$batch_no_chk=$row->BATCH_NO;
			$fnc_bach_start_arr[$batch_no_chk]=$batch_no_chk;
			
			}
		 
			if(count($fnc_bach_start_arr)==1 || count($fnc_bach_start_arr)>1)
			{
				$PROCESS_END_DATE_CHK=$check_data_array[0]->PROCESS_END_DATE;
				$load_process_start_date=date("Y-m-d",strtotime($PROCESS_END_DATE_CHK));
			//	echo $new_process_start_date.'='.$new_process_start_date;die;
				if($new_process_start_date!=$load_process_start_date && $load_process_start_date!='')
				{
					return $resultset["status"] = "ProcessStartDateMustbeSameinFunctionalBatchNo=$system_no";
				}
				
			}
			/*else if(count($fnc_bach_start_arr)>1)
			{
				//echo date("Y-m-d",strtotime($check_data_array[0]->PROCESS_END_DATE));die;
					//echo count($fnc_bach_start_arr).'='.$system_no;die;
					//echo "A";die;
				return $resultset["status"] = "Process Start Date Must be Same in Functional Batch No=$system_no";
			}*/
			//echo "DDD";die;
			 
		}
		//========End==================
		//==========Machine Check==================
			 $sql_mc = "select  A.BATCH_NO AS BATCH_NO,A.BATCH_ID from pro_fab_subprocess a,pro_fab_subprocess_dtls b  where  a.id=b.mst_id and a.service_company='" . $service_company. "'  and a.machine_id='$machine_id' and a.service_source in(1) and a.load_unload_id=1 and a.entry_form=35 and a.is_deleted=0 and a.status_active=1 and b.is_deleted=0 and b.status_active=1   group by  a.batch_no,a.batch_id";
			
			$data_array_mc = sql_select($sql_mc);
			$loaded_batch_id="";
			$loaded_batch_idarr = array();
			foreach ($data_array_mc as $row) {
				$batch_iddd=$row->BATCH_ID;
			$loaded_batch_idarr[$batch_iddd] = $batch_iddd;
			$loaded_batch_no[$batch_iddd] = $row->BATCH_ID;;
			$loaded_batch_id.=$batch_iddd.',';
			}
			
			
			
			if(!empty($loaded_batch_idarr)){
			
			$loaded_batch_ids=rtrim($loaded_batch_id,',');
			$BatIds=chop($loaded_batch_ids,','); $bat_cond_for_in="";
			$bat_ids=count(array_unique(explode(",",$loaded_batch_ids)));
			if($db_type==2 && $bat_ids>1000)
			{
			$bat_cond_for_in=" and (";
			$BatIdsArr=array_chunk(explode(",",$BatIds),999);
			foreach($BatIdsArr as $ids)
			{
			$ids=implode(",",$ids);
			$bat_cond_for_in.=" a.batch_id in($ids) or"; 
			}
			$bat_cond_for_in=chop($bat_cond_for_in,'or ');
			$bat_cond_for_in.=")";
			}
			else
			{
			$bat_cond_for_in=" and a.batch_id in($BatIds)";
			}
			
			$sql_batch_un = sql_select("select A.BATCH_ID,A.BATCH_NO from pro_fab_subprocess a,pro_fab_subprocess_dtls b    where  a.id=b.mst_id and a.service_company='" .trim($data[0]) . "'  and a.machine_id='$data[3]'  and a.service_source in(1) and a.load_unload_id=2 and a.entry_form=35 and a.is_deleted=0 and a.status_active=1 and b.is_deleted=0 and b.status_active=1   $bat_cond_for_in  group by  a.batch_no,a.batch_id");// and a.batch_id in(".implode(",",$loaded_batch_idarr).")
			}
			foreach ($sql_batch_un as $row) {
				$unload_batch_id=$row->BATCH_ID;
			$unloaded_batch_idarr[$unload_batch_id] = $unload_batch_id;
			}
			
			$loadedData =array_diff($loaded_batch_idarr,$unloaded_batch_idarr);
			
			foreach ($loadedData as $batchId) {
			$loaded_bathc_no .= $loaded_batch_no[$batchId].",";
			}
			
			//echo chop($loaded_bathc_no," , "); die();
			$loaded_bathc_noCk=chop($loaded_bathc_no," , ");
			
			if (count($loadedData) > 0) {
				return $resultset["status"] = "This Machine Currently Loaded By=$loaded_bathc_noCk";
			
			//echo "1" . "_" . chop($loaded_bathc_no," , ");
			}  
			
		
		if($load_process_start_date_chk<$batch_date)
		{
			//echo "23**Prod start Date is found backdate  than batch date**".$batch_date.'='.$load_process_start_date_chk;
			//disconnect($con);
			//die;
			return $resultset["status"] = "Prod start Date is found backdate  than batch date=$batch_date_chk.'='.$load_process_start_date_chk";	
		}
		
		
	}
	if (str_replace("'", '', $load_unload) == 2) //unLoad
	{
		if($unload_process_start_date_chk<$batch_date)
		{
			//return $resultset["status"] = "Failed";
			return $resultset["status"] = "ProdDateisfoundBackdatethanBatchDate";	
			//echo "23**Prod Date is found backdate  than batch date**".$batch_date.'='.$load_process_start_date_chk;
			 
		}
		$last_load="select  BATCH_ID,RESULT,LOAD_UNLOAD_ID from pro_fab_subprocess where load_unload_id in(1,2) and entry_form=35 and status_active=1 and batch_id=$batch_id  order by id desc";
		$last_data=sql_select($last_load,1);
		$result_id_chk=$last_load_unload_id=0;
		foreach ($last_data as $row)
		{
			// $batch_ids=$row->BATCH_ID;
					 $result_id_chk= $row->RESULT;
					 $last_load_unload_id= $row->LOAD_UNLOAD_ID;
				 
				
		}
		if($last_load_unload_id==2)
		{
			return $resultset["status"] = "Already Unload";	
		}
		if($extention_no>0 && $responsibility_dept==0)
		{
			return $resultset["status"] = "Please Select responsibility dept";
		}
		if($unload_process_start_date_chk<$batch_date)
		{
			//return $resultset["status"] = "Failed";
			return $resultset["status"] = "Prod Date is found backdate  than batch date";	
			//echo "23**Prod Date is found backdate  than batch date**".$batch_date.'='.$load_process_start_date_chk;
		}
		if($txt_system_no!="")
		{
				$system_no=$txt_system_no;
			//$new_process_start_date=date("Y-m-d",strtotime($process_start_date));
			//$sql_date="select MIN(A.PROCESS_END_DATE) AS PROCESS_END_DATE,A.BATCH_NO from pro_fab_subprocess a,pro_fab_subprocess_dtls b where a.id=b.mst_id and a.load_unload_id=2 and a.entry_form=35 and a.status_active=1 and a.system_no=$system_no group by a.batch_no order by process_end_date";
			$sql="select min(a.id) as id,min(a.process_end_date) as production_date,min(end_hours) as end_hours,min(end_minutes) as end_minutes, listagg(cast(a.batch_no AS VARCHAR2(4000)),',') within group (order by a.batch_no) as batch_no from pro_fab_subprocess a,pro_fab_subprocess_dtls b where a.id=b.mst_id and a.load_unload_id=2 and a.entry_form=35 and a.status_active=1 and a.system_no=$system_no order by id asc";
			//echo $sql_date;die;
			$check_data_array=sql_select($sql_date,1);
			$data_array_date=sql_select($sql_date);
			foreach($data_array_date as $row)
			{
				
				$batch_no_chk=$row->BATCH_NO;
			$fnc_bach_start_arr[$batch_no_chk]=$batch_no_chk;
			
			}
		 
			if(count($fnc_bach_start_arr)==1 || count($fnc_bach_start_arr)>1)
			{
				$unload_production_date=$check_data_array[0]->PROCESS_END_DATE;
				$load_process_start_date=date("Y-m-d",strtotime($PROCESS_END_DATE_CHK));
				$unload_prod_date_chk = strtotime($unload_process_end_date);
				$saved_unload_production_date = strtotime($unload_production_date);
			//	echo $new_process_start_date.'='.$new_process_start_date;die;
				if($saved_unload_production_date!=$unload_prod_date_chk && $unload_prod_date_chk!='')
				{
					return $resultset["status"] = "ProductuonDateMustbeSameinFunctionalBatchNo=$system_no";
				}
				
			}
			 
			//echo "DDD";die;
			 
		}
	}
	
	if($batch_no!=$batch_no_saved)
	{
		//echo "23**Please write the correct batch no";
		return $resultset["status"] = "Please Write The correct BatchNo";
		 
	}
	
	if ($response_obj->status == true) 
	{
			
			
			$mst_tbl_id = 0;
			$dtls_tbl_id = 0;
			$this->db->trans_start();
			
			$pc_date_time = date("d-M-Y h:i:s A", time());
			if ($db_type == 0) {
				$pc_date_time = date("Y-m-d H:i:s", time());
			}
			$mst_tbl = "PRO_FAB_SUBPROCESS";
			$mst_id = return_next_id("id", $mst_tbl, "", "", $db_type);
			
	if ($response_obj->mode == "save") {
				
		
		//echo "10**=DD";die;
		if (str_replace("'", '', $load_unload) == 2) {
			//if (str_replace("'", '', $txt_process_id) == 31) {
				$sql_data = "select ID, BATCH_ID from pro_fab_subprocess where  company_id=" . $company_id . " and  batch_id=" . $batch_id . " and load_unload_id=1 and entry_form=35 and is_deleted=0 and status_active=1";
				$data_array = sql_select($sql_data);
				if (count($data_array) > 0) {
					//secho "1**" . $data_array[0][csf('batch_id')];
				} else {
					return $resultset["status"] = "Without Load Unload Not Allow";
					//echo "100**" . 'Without Load  Unload Not Allow';
					//disconnect($con);
					//die;
				}
			//}

					$sql_loadunload="select ID,LOAD_UNLOAD_ID, BATCH_ID from pro_fab_subprocess where  company_id=".$company_id." and  batch_id=".$batch_id." and entry_form=35 and is_deleted=0 and status_active=1   order by id desc";
					$loadunload_data_array=sql_select($sql_loadunload);
					$load_unload_id = $loadunload_data_array[0]->LOAD_UNLOAD_ID;
					//$load_unload_id=$loadunload_data_array[0][csf('load_unload_id')];
					if(count($loadunload_data_array)>0)
					{
						if($load_unload_id==2)
						{
							return $resultset["status"] = "Already unload Found Please load";
						//$msg='Already unload Found,Please load';
						//echo "111**".$msg;
						//disconnect($con);
						//die;
						}
						 
						
					}
					
			if($multi_dyeing==2) // is Multi no
			{
				if($dyeing_type==1) //CBP Dyeing
				{
					$sql_unload="select id, batch_id from pro_fab_subprocess where  company_id=".$company_id." and  batch_id=".$batch_id." and load_unload_id=2 and entry_form=35 and is_deleted=0 and status_active=1";
					$unload_data_array=sql_select($sql_unload);
					if(count($unload_data_array)>0)
					{
						return $resultset["status"] = "Duplicate Unload Found";
						/*echo "11**".'Duplicate Unload Found';
						disconnect($con);
						die;*/
					}
				}
			}
		}
		
		if (str_replace("'", '', $load_unload) == 1) {
			
		//$load_unloadId=str_replace("'","",$cbo_load_unload);
		//$double_dyeing_id=str_replace("'","",$hidden_double_dyeing);
		//if($updateId) $up_id_cond="and a.id!=$updateId";else $up_id_cond="";
		
		
		if($multi_dyeing==2 && $dyeing_type==1) // is Multi no //CBP Dyeing
			{
				$sql_load="select id, batch_id from pro_fab_subprocess where  company_id=".$company_id." and  batch_id=".$batch_id." and load_unload_id=1 and entry_form=35 and is_deleted=0 and status_active=1";
				$load_data_array=sql_select($sql_load);
				if(count($load_data_array)>0)
				{
					//echo "13**".'Duplicate load Found';
					return $resultset["status"] = "Duplicate load Found";
					//disconnect($con);
					//die;
				}
			}
					$sql_loadunload="select ID,LOAD_UNLOAD_ID, BATCH_ID,MACHINE_ID from pro_fab_subprocess where  company_id=".$company_id." and  batch_id=".$batch_id."  and entry_form=35 and is_deleted=0 and status_active=1   order by id desc";//and load_unload_id=1 
					$loadunload_data_array=sql_select($sql_loadunload);
					foreach($loadunload_data_array as $row)
					{
						$mst_id=$row->ID;
						$load_unload_id=$row->LOAD_UNLOAD_ID;
						$batch_id=$row->BATCH_ID;
						if($load_unload_id==1)
						{
						$load_unload_id= $load_unload_id;
						$machine_id= $row->machine_id;
						}
					}
					if(count($loadunload_data_array)>0)
					{
						if($cbo_machine_id!=$machine_id) //Validation for Different machine
						{
							//$msg='Please load correct machine which already loaded';
							//echo "101**".$msg;
							return $resultset["status"] = "Please load correct machine which already loaded";
							//disconnect($con);
							//die;
						}
					}
					
					
					$load_unload_id=$loadunload_data_array->LOAD_UNLOAD_ID;
					if(count($loadunload_data_array)>0)
					{
						if($load_unload_id==1)//Load
						{
						//$msg='Already load Found,Please unload';
						//echo "111**".$msg;
						return $resultset["status"] = "Already load Found,Please unload";
						//disconnect($con);
						 
						}
					}
		}
		$page_upto_id = return_field_value("page_upto_id as page_upto_id", "variable_settings_production", "company_name =$company_id and item_category_id=50 and variable_list=3 and is_deleted=0 and status_active=1","page_upto_id");
		 $roll_maintained = return_field_value("fabric_roll_level", "variable_settings_production", "company_name ='$company_id' and item_category_id=50 and variable_list=3 and is_deleted=0 and status_active=1","fabric_roll_level");
		// echo $company_id.'=TT'.$roll_maintained;;die;
		//$mst_id = return_next_id("id", "pro_fab_subprocess", 1);
		//$mst_tbl="pro_fab_subprocess";
		//$mst_id = return_next_id("id", $mst_tbl, "", "", $db_type);
		$mst_arr=array();
		$dtls_data_array=array();
		
		if ($load_unload == 1) {
			$txt_system_no = str_replace("'", "", $txt_system_no);
			$mst_update_id = str_replace("'", "", $mst_id);
			if ($txt_system_no == "") $system_no = $mst_update_id + 1; else $system_no = $txt_system_no;

				//$field_array = "id,company_id,system_no,service_source,service_company,batch_no,batch_id,batch_ext_no,process_id,ltb_btb_id,water_flow_meter,process_end_date,end_hours,end_minutes,machine_id,floor_id,load_unload_id,entry_form,multi_dyeing_id,remarks,dyeing_type_id,hour_load_meter,multi_batch_load_id,inserted_by,insert_date";
				//WATER_FLOW_METER,PROCESS_END_DATE,END_HOURS,END_MINUTES,MACHINE_ID,FLOOR_ID,LOAD_UNLOAD_ID,ENTRY_FORM,MULTI_DYEING_ID,REMARKS,DYEING_TYPE_ID,HOUR_LOAD_METER,MULTI_BATCH_LOAD_ID,INSERTED_BY,INSERT_DATE
				$mst_arr = array(
					'ID' => $mst_id,
					'COMPANY_ID' => $company_id,
					'SERVICE_COMPANY' => $service_company,
					'SYSTEM_NO' => $system_no,
					'SERVICE_SOURCE' => 1,
					'BATCH_NO' => $batch_no,
					'BATCH_ID' => $batch_id,
					'BATCH_EXT_NO' => $extention_no,
					'LOAD_UNLOAD_ID' => $load_unload,
					'ENTRY_FORM' => 35,
					'PROCESS_ID' => $process_id,
					'LTB_BTB_ID' => $btb_ltb_id,
					'WATER_FLOW_METER' => $water_flow,
					'PROCESS_END_DATE' => $process_end_date,
					'END_HOURS' => $end_hours,
					'END_MINUTES' => $end_minutes,
					'FLOOR_ID' => $floor_id,
					'MACHINE_ID' => $machine_id,
					'MULTI_DYEING_ID' => $multi_dyeing,
					'DYEING_TYPE_ID' => $dyeing_type,
					'HOUR_LOAD_METER' => $hour_load_meter,
					'MULTI_BATCH_LOAD_ID' => $multi_batch_loading,
					'INSERTED_BY' => $user_id,
					'INSERT_DATE' => $pc_date_time,
					'STATUS_ACTIVE' => 1,
					'IS_DELETED' =>0,
				);
				$mst_arr['ID'] = $mst_id;
				$mst_RID =$this->insertData($mst_arr, $mst_tbl);
				if($mst_RID) $flag=1;else $flag=0;
				//echo $mst_RID.'=TT';;die;
				// echo $this->db->last_query();die();
				
				$dtls_tbl = "PRO_FAB_SUBPROCESS_DTLS";
				$id_dtls = return_next_id("id", $dtls_tbl, "", "", $db_type);
			
				//$id_dtls = return_next_id("id", "pro_fab_subprocess_dtls", 1);
				//$dtls_tbl = "pro_fab_subprocess_dtls";
				//echo $page_upto_id.'=X'.$roll_maintained;;die;
			if (($page_upto_id == 2 || $page_upto_id > 2) && str_replace("'", "", $roll_maintained) == 1) {
				//$field_array_dtls = "ID, MST_ID,ENTRY_PAGE,PROD_ID,CONST_COMPOSITION,GSM,DIA_WIDTH,WIDTH_DIA_TYPE,BATCH_QTY,ROLL_NO,BARCODE_NO,LOAD_UNLOAD_ID,ROLL_ID,PRODUCTION_QTY,REMARKS,INSERTED_BY,INSERT_DATE";
				foreach ($dtls_data as $val) {
					
						$dtls_data_array[] = array(
							'ID' => $id_dtls,
							'MST_ID' => $mst_id,
							'PROD_ID' => $val->PROD_ID,
							'ENTRY_PAGE' => 35,
							'LOAD_UNLOAD_ID' => $load_unload,
							'BARCODE_NO' => $val->BARCODE_NO,
							'ROLL_ID' => $val->ROLL_ID,
							'ROLL_NO' => $val->BATCH_ROLLNO,
							'BATCH_QTY' => $val->BATCH_QNTY,
							'PRODUCTION_QTY' => $val->PROD_QTY,
							'CONST_COMPOSITION' => $val->CONS_COMPS,
							'DIA_WIDTH' => $val->DIA_WIDTH,
							'WIDTH_DIA_TYPE' => $val->FABRIC_TYPEE_ID,
							'GSM' => $val->GSM,
							'INSERTED_BY' => $user_id,
							'INSERT_DATE' => $pc_date_time,
						);
						
						$id_dtls = $id_dtls + 1;
					
				}
				if($flag==1)
				{
				$dtls_RID = $this->db->insert_batch("PRO_FAB_SUBPROCESS_DTLS",$dtls_data_array);
				// echo $this->db->last_query();die();
				 if($dtls_RID) $flag=1;else $flag=0;
				}
			
			}//Roll End
			else
			{	
					//ID, MST_ID,ENTRY_PAGE,PROD_ID,CONST_COMPOSITION,GSM,DIA_WIDTH,WIDTH_DIA_TYPE,BATCH_QTY,NO_OF_ROLL,LOAD_UNLOAD_ID,PRODUCTION_QTY,REMARKS,INSERTED_BY,INSERT_DATE
					 $dtls_data_array=array();
					foreach ($dtls_data as $val) {
					
					if($val->BARCODE_NO=='') $BARCODE_NO=0;
					if($val->ROLL_ID=='') $ROLL_ID=0; 
					
					 $dtls_data_array[] = array(
							'ID' => $id_dtls,
							'MST_ID' => $mst_id,
							'PROD_ID' => $val->PROD_ID,
							'ENTRY_PAGE' => 35,
							'LOAD_UNLOAD_ID' => $load_unload,
							'BARCODE_NO' => $val->BARCODE_NO,
							'ROLL_ID' => $val->ROLL_ID,
							'ROLL_NO' => $val->BATCH_ROLLNO,
							'BATCH_QTY' => $val->BATCH_QNTY,
							'PRODUCTION_QTY' => $val->PROD_QTY,
							'CONST_COMPOSITION' => $val->CONS_COMPS,
							'DIA_WIDTH' => $val->DIA_WIDTH,
							'WIDTH_DIA_TYPE' => $val->FABRIC_TYPEE_ID,
							'GSM' => $val->GSM,
							'INSERTED_BY' => $user_id,
							'INSERT_DATE' => $pc_date_time,
						);
						
						$id_dtls = $id_dtls + 1;
				
					
				}
				if($flag==1)
				{
				$dtls_RID = $this->db->insert_batch("PRO_FAB_SUBPROCESS_DTLS",$dtls_data_array);
				 // echo $this->db->last_query();die();
				 if($dtls_RID) $flag=1;else $flag=0;
				}
				
			}
			
		} //=======Load End====
		if($load_unload==2)//=======Un Load End====
		{
			
			
			$system_no = str_replace("'", "", $txt_system_no);
			$result_id = str_replace("'", "", $result);
			if($result_id==4) //incomplete
			{
				$field_arr=",incomplete_result,incomplete_date";
				$field_data_arr=",".$result_id.",".$txt_process_end_date;
				$incomplete_result_id=$result_id;
				$incomplete_process_end_date=$process_end_date;
			}
			elseif($result_id==2) //Redying Shade Match
			{
				$field_arr=",redyeing_needed";
				$field_data_arr=",".$result_id;
				$redyeing_result_id=$result_id;
			}
			elseif($result_id==1) //Shade Match
			{
				$field_arr=",shade_matched";
				$field_data_arr=",".$result_id;
				$matched_result_id=$result_id;
			}
			else
			{
				$field_arr="";
				$field_data_arr="";
				$matched_result_id=0;
				$incomplete_result_id=0;
				$redyeing_result_id=0;
				$matched_result_id=0;
				$incomplete_process_end_date='';
			}
			 
			$mst_arr = array(
					'ID' => $mst_id,
					'COMPANY_ID' => $company_id,
					'SERVICE_COMPANY' => $service_company,
					'SYSTEM_NO' => $system_no,
					'SERVICE_SOURCE' => 1,
					'BATCH_NO' => $batch_no,
					'BATCH_ID' => $batch_id,
					'BATCH_EXT_NO' => $extention_no,
					'LOAD_UNLOAD_ID' => $load_unload,
					'ENTRY_FORM' => 35,
					'PROCESS_ID' => $process_id,
					'LTB_BTB_ID' => $btb_ltb_id,
					'WATER_FLOW_METER' => $water_flow,
					'PRODUCTION_DATE' => $production_date,
					'PROCESS_END_DATE' => $process_end_date,
					'END_HOURS' => $end_hours,
					'END_MINUTES' => $end_minutes,
					'FLOOR_ID' => $floor_id,
					'MACHINE_ID' => $machine_id,
					'MULTI_DYEING_ID' => $multi_dyeing,
					'DYEING_TYPE_ID' => $dyeing_type,
					'HOUR_LOAD_METER' => $hour_load_meter,
					'SHIFT_NAME' => $shift_name,
					'FABRIC_TYPE' => $fabric_type_id,
					'RESPONSIBILITY_ID' => $responsibility_dept,
					'INCOMPLETE_RESULT' => $incomplete_result_id,
					'INCOMPLETE_DATE' => $incomplete_process_end_date,
					'REDYEING_NEEDED' => $redyeing_result_id,
					'SHADE_MATCHED' => $matched_result_id,
					'RESULT' => $result,
					'INSERTED_BY' => $user_id,
					'INSERT_DATE' => $pc_date_time,
					'STATUS_ACTIVE' => 1,
					'IS_DELETED' =>0,
				);
				$mst_arr['ID'] = $mst_id;
				$mst_RID =$this->insertData($mst_arr, $mst_tbl);
				if($mst_RID) $flag=1;else $flag=0;
				//echo $mst_RID.'=TT';;die;
				// echo $this->db->last_query();die();
				
				$dtls_tbl = "PRO_FAB_SUBPROCESS_DTLS";
				$id_dtls = return_next_id("id", $dtls_tbl, "", "", $db_type);
				
			if (($page_upto_id == 2 || $page_upto_id > 2) && str_replace("'", "", $roll_maintained) == 1) {
	
				 foreach ($dtls_data as $val) {
					
						$dtls_data_array[] = array(
							'ID' => $id_dtls,
							'MST_ID' => $mst_id,
							'PROD_ID' => $val->PROD_ID,
							'ENTRY_PAGE' => 35,
							'LOAD_UNLOAD_ID' => $load_unload,
							'BARCODE_NO' => $val->BARCODE_NO,
							'ROLL_ID' => $val->ROLL_ID,
							'ROLL_NO' => $val->BATCH_ROLLNO,
							'BATCH_QTY' => $val->BATCH_QNTY,
							'PRODUCTION_QTY' => $val->PROD_QTY,
							'CONST_COMPOSITION' => $val->CONS_COMPS,
							'DIA_WIDTH' => $val->DIA_WIDTH,
							'WIDTH_DIA_TYPE' => $val->FABRIC_TYPEE_ID,
							'GSM' => $val->GSM,
							'INSERTED_BY' => $user_id,
							'INSERT_DATE' => $pc_date_time,
						);
						
						$id_dtls = $id_dtls + 1;
					
				}
				if($flag==1)
				{
				$dtls_RID = $this->db->insert_batch("PRO_FAB_SUBPROCESS_DTLS",$dtls_data_array);
				// echo $this->db->last_query();die();
				 if($dtls_RID) $flag=1;else $flag=0;
				}
				

			} 
			else  //Unload Roll End
			{
				 
					foreach ($dtls_data as $val) {
					
					if($val->BARCODE_NO=='') $BARCODE_NO=0;
					if($val->ROLL_ID=='') $ROLL_ID=0; 
					
					 $dtls_data_array[] = array(
							'ID' => $id_dtls,
							'MST_ID' => $mst_id,
							'PROD_ID' => $val->PROD_ID,
							'ENTRY_PAGE' => 35,
							'LOAD_UNLOAD_ID' => $load_unload,
							'BARCODE_NO' => $val->BARCODE_NO,
							'ROLL_ID' => $val->ROLL_ID,
							'NO_OF_ROLL' => $val->BATCH_ROLLNO,
							'BATCH_QTY' => $val->BATCH_QNTY,
							'PRODUCTION_QTY' => $val->PROD_QTY,
							'CONST_COMPOSITION' => $val->CONS_COMPS,
							'DIA_WIDTH' => $val->DIA_WIDTH,
							'WIDTH_DIA_TYPE' => $val->FABRIC_TYPEE_ID,
							'GSM' => $val->GSM,
							'INSERTED_BY' => $user_id,
							'INSERT_DATE' => $pc_date_time,
						);
						$id_dtls = $id_dtls + 1;
				}
				if($flag==1)
				{
				$dtls_RID = $this->db->insert_batch("PRO_FAB_SUBPROCESS_DTLS",$dtls_data_array);
				 // echo $this->db->last_query();die();
				 if($dtls_RID) $flag=1;else $flag=0;
				}

			}

			//print_r($data_array);
		
		}
		 
		 
			if ($this->db->trans_status() == TRUE) {
				if ($flag==1) {
					$this->db->trans_commit();
					$this->db->trans_complete();
					 $resultset["functional_batch"] = $system_no;
					 $resultset["save_msg"] = "Successful Done";
					 return  $resultset;
					//return $resultset["resultset"] = true;
					//return $resultset["status"] = "Successful Done";
				} else {
					$this->db->trans_rollback();
					$this->db->trans_complete();
					return $resultset["save_msg"] = "Failed";
				}

			} else {
				$resultset["save_msg"] = "Failed";
				$this->db->trans_complete();
			}

		} //=======Save End===========
		else if ($response_obj->mode == "update") {
			
			return $resultset["save_msg"] = "Update not allowed";
		}
   }
   else 
   {
			return $resultset["save_msg"] = "Failed";
   }
   //====Response Status End=


}
	
	//================End Dyeing============


	//Sweater linking input output data...........................
	public function linking_input_output_by_barcode_data($company = 0, $barcode = "", $type) {
		$data_arr = array();

		$size_arr = return_library_array("select id, size_name from lib_size", 'id', 'size_name');
		$color_arr = return_library_array("select id, color_name from lib_color", "id", "color_name");
		$country_arr = return_library_array("select id, country_name from lib_country", 'id', 'country_name');
		$buyer_arr = return_library_array("select id, short_name from lib_buyer", 'id', 'short_name');
		$garments_item = return_library_array("select id,item_name from  lib_garment_item where status_active=1 and is_deleted=0 order by item_name", "id", "item_name");

		$year_field = "";
		if ($this->db->dbdriver == 'mysqli') {
			$year_field = "YEAR(f.insert_date)";
		} else {
			$year_field = "to_char(f.insert_date,'YYYY')";
		}

		$barcode = trim($barcode);
		$barcode_no_arr = sql_select("SELECT  COLOR_TYPE_ID,BUNDLE_NO from PPL_CUT_LAY_BUNDLE  where barcode_no='" . trim($barcode) . "'");

		
		if ($type == 55) {

			$input_sql = "SELECT BARCODE_NO,BUNDLE_NO from PRO_GARMENTS_PRODUCTION_DTLS where status_active=1 and production_type=55 and barcode_no='" . trim($barcode) . "'";
			$input_exist_data = sql_select($input_sql);
			if (count($input_exist_data) > 0) {
				return array(
					'message_bng' => 'বান্ডিল নং: ' . $input_exist_data[0]->BUNDLE_NO . ' ইতিমধ্যে স্ক্যান হয়েছে, দয়া করে অন্য একটি চেষ্টা করুন।',
					'message_eng' => 'Bundle No: ' . $input_exist_data[0]->BUNDLE_NO . ' is already scanned, please try another one',
					'bundle_no' => '',
					'barcode_no' => 0,
					'year' => 0,
					'color_size_id' => 0,
					'order_id' => 0,
					'item_id' => 0,
					'country_id' => 0,
					'size_id' => 0,
					'color_id' => 0,
					'cut_no' => '',
					'job_no' => 0,
					'buyer' => '',
					'order_no' => '',
					'item' => '',
					'country' => '',
					'color' => '',
					'size' => '',
					'qty' => 0,
					'is_rescan' => 0,
					'color_type_id' => 0,

				);
			}

		}
		else if ($type == 56) {


			 $output_sql_rescan = "SELECT barcode_no,sum(case when is_rescan=0 then (reject_qty+spot_qty+alter_qty)-replace_qty else 0 end )-sum(case when is_rescan > 0 then production_qnty else 0 end) as PRODUCTION_QNTY from PRO_GARMENTS_PRODUCTION_DTLS where status_active=1 and production_type=56 and barcode_no='$barcode' group by barcode_no";
			//echo $output_sql_rescan;die;
			
			$output_rescan_data = sql_select($output_sql_rescan);
			$balance_qty=0;
			foreach($output_rescan_data as $rows){
				$balance_qty+=$rows->PRODUCTION_QNTY;
			}



			if($balance_qty<=0 && count($output_rescan_data) > 0){
				return array(
					'message_bng' => 'বান্ডিল নং: ' . $barcode_no_arr[0]->BUNDLE_NO . ' ইতিমধ্যে স্ক্যান হয়েছে, দয়া করে অন্য একটি চেষ্টা করুন।',
					'message_eng' => 'Bundle No: ' . $barcode_no_arr[0]->BUNDLE_NO . ' is already scanned, please try another one',
					'bundle_no' => '',
					'barcode_no' => 0,
					'year' => 0,
					'color_size_id' => 0,
					'order_id' => 0,
					'item_id' => 0,
					'country_id' => 0,
					'size_id' => 0,
					'color_id' => 0,
					'cut_no' => '',
					'job_no' => 0,
					'buyer' => '',
					'order_no' => '',
					'item' => '',
					'country' => '',
					'color' => '',
					'size' => '',
					'qty' => 0,
					'is_rescan' => 0,
					'color_type_id' => 0,
				);

			}
			//reject_qty,alter_qty,spot_qty,replace_qty


			if (count($output_rescan_data) > 0) {

			$sqls = "SELECT c.COLOR_TYPE_ID, max(c.id) as prdid, d.id as COLORSIZEID, e.id as PO_ID,f.company_name as LC_COMPANY, f.JOB_NO_PREFIX_NUM, MAX($year_field) as YEAR, f.BUYER_NAME, d.ITEM_NUMBER_ID, d.COUNTRY_ID, d.SIZE_NUMBER_ID, d.COLOR_NUMBER_ID, c.cut_no,c.BUNDLE_NO, sum(case when is_rescan=0 then (c.reject_qty+c.spot_qty+c.alter_qty)-c.replace_qty else 0 end )-sum(case when is_rescan >0 then production_qnty else 0 end) as PRODUCTION_QNTY, e.PO_NUMBER,c.BARCODE_NO,1 as IS_RESCAN from PRO_GARMENTS_PRODUCTION_MST a,PRO_GARMENTS_PRODUCTION_DTLS c, WO_PO_COLOR_SIZE_BREAKDOWN d, WO_PO_BREAK_DOWN e, WO_PO_DETAILS_MASTER f where a.id=c.mst_id and c.color_size_break_down_id=d.id and d.po_break_down_id=e.id and e.job_id=f.id and c.production_type =56 and c.status_active=1 and c.is_deleted=0 and a.status_active=1 and a.is_deleted=0 and d.status_active in(1,2,3) and d.is_deleted=0 and e.status_active in(1,2,3) and e.is_deleted=0 and f.status_active=1 and f.is_deleted=0 and c.barcode_no='$barcode' group by c.COLOR_TYPE_ID,d.id, e.id,f.company_name, f.job_no_prefix_num, f.buyer_name, d.item_number_id, d.country_id, d.size_number_id, d.color_number_id,c.cut_no, c.bundle_no,c.barcode_no, e.po_number order by c.cut_no, length(c.bundle_no) asc, c.bundle_no asc";

				$result = sql_select($sqls);
				if (count($result) < 1) {
					return array(
						'message_bng' => 'বান্ডিল নং: ' . $barcode_no_arr[0]->BUNDLE_NO . ' এখনও আউটপুটের জন্য প্রস্তুত নয়।',
						'message_eng' => 'Bundle No: ' . $barcode_no_arr[0]->BUNDLE_NO . ' is not yet ready for output.',
						'bundle_no' => '',
						'barcode_no' => 0,
						'year' => 0,
						'color_size_id' => 0,
						'order_id' => 0,
						'item_id' => 0,
						'country_id' => 0,
						'size_id' => 0,
						'color_id' => 0,
						'cut_no' => '',
						'job_no' => 0,
						'buyer' => '',
						'order_no' => '',
						'item' => '',
						'country' => '',
						'color' => '',
						'size' => '',
						'replace_qty' => 0,
						'qty' => 0,
						'is_rescan' => 1,
						'color_type_id' => 0,
					);
				}

				$data_arr = array();
				foreach ($result as $v) {
					$data_arr["message_bng"] = '';
					$data_arr["message_eng"] = '';

					$data_arr["bundle_no"] = $v->BUNDLE_NO;
					$data_arr["barcode_no"] = $v->BARCODE_NO;

					$data_arr["year"] = $v->YEAR;

					$data_arr["color_size_id"] = $v->COLORSIZEID;
					$data_arr["order_id"] = $v->PO_ID;
					$data_arr["item_id"] = $v->ITEM_NUMBER_ID;
					$data_arr["country_id"] = $v->COUNTRY_ID;
					$data_arr["size_id"] = $v->SIZE_NUMBER_ID;
					$data_arr["color_id"] = $v->COLOR_NUMBER_ID;
					$data_arr["cut_no"] = $v->CUT_NO;

					$data_arr["job_no"] = $v->JOB_NO_PREFIX_NUM;

					if (isset($buyer_arr[$v->BUYER_NAME])) {
						$data_arr["buyer"] = $buyer_arr[$v->BUYER_NAME];
					} else {
						$data_arr["buyer"] = "";
					}

					$data_arr["order_no"] = "$v->PO_NUMBER "; //need always string

					if (isset($garments_item[$v->ITEM_NUMBER_ID])) {
						$data_arr["item"] = $garments_item[$v->ITEM_NUMBER_ID];
					} else {
						$data_arr["item"] = "";
					}

					if (isset($country_arr[$v->COUNTRY_ID])) {
						$data_arr["country"] = $country_arr[$v->COUNTRY_ID];
					} else {
						$data_arr["country"] = "";
					}

					if (isset($color_arr[$v->COLOR_NUMBER_ID])) {
						$data_arr["color"] = $color_arr[$v->COLOR_NUMBER_ID];
					} else {
						$data_arr["color"] = "";
					}

					if (isset($size_arr[$v->SIZE_NUMBER_ID])) {
						$data_arr["size"] = $size_arr[$v->SIZE_NUMBER_ID];
					} else {
						$data_arr["size"] = "";
					}
					$data_arr["qty"] = $v->PRODUCTION_QNTY;
					$data_arr["is_rescan"] = $v->IS_RESCAN;
					$data_arr["color_type_id"] = $v->COLOR_TYPE_ID;
				}

				return $data_arr;

			}

		}

		$col_size_seq = "SELECT color_size_break_down_id as IDS,CUT_NO from PRO_GARMENTS_PRODUCTION_DTLS where status_active=1 and is_deleted=0 and barcode_no='$barcode' group by color_size_break_down_id,cut_no";
		
		$col_size_seq_arr = array();
		$cut_arr = array();
		foreach (sql_select($col_size_seq) as $v) {
			$col_size_seq_arr[$v->IDS] = $v->IDS;
			$cut_arr[$v->CUT_NO] = $v->CUT_NO;
		}

		$ids = implode(",", $col_size_seq_arr);
		if (count($col_size_seq_arr) < 1) {$ids = 0;}
		//if(!$ids)$ids=0;

		$cut_nos = "'" . implode("','", $cut_arr) . "'";
		if (count($cut_arr) < 1) {$cut_nos = "'0'";}
		// if(!$cut_nos)$cut_nos="'0"."'";

		$source_sql = "SELECT PRECEDING_OP from pro_production_sequence where CURRENT_OPERATION='$type' and COL_SIZE_ID in($ids) and CUTTING_NO in($cut_nos) ";
		 
		$source_val = 0;
		foreach (sql_select($source_sql) as $vl) {
			$source_val = $vl->PRECEDING_OP;
		}
		$source_cond = $source_val;
		 
		 /*$production_squence=2;
		 $source_cond=gmt_production_validation_script( 55, 1,'', $cut_nos, $production_squence);
		print_r($source_cond);die;*/
		
		
		//52,53,54
		
		$libSqlArr = sql_select("SELECT ID, PRODUCTION_ENTRY from variable_settings_production where company_name='$company' and variable_list=65 and status_active=1 and is_deleted=0");
		$data_pick_type=3;
		foreach ($libSqlArr as $v) {
			if($v->PRODUCTION_ENTRY>0){$data_pick_type = $v->PRODUCTION_ENTRY;}
		}
		
		if($data_pick_type==1){
			
			$input_production_type=52;
		}
		else if($data_pick_type==2){
			$input_production_type=53;
		}
		else if($data_pick_type==3){
			$input_production_type=54;
		}
		
		
		
		
		
		$source_cond=($type==55)?$input_production_type:55;
		
		$sqls = "SELECT  c.COLOR_TYPE_ID,  0 as IS_RESCAN,max(c.id) as prdid, d.id as COLORSIZEID, e.id as PO_ID,f.company_name as LC_COMPANY, f.JOB_NO_PREFIX_NUM, MAX($year_field) as YEAR, f.BUYER_NAME, d.ITEM_NUMBER_ID, d.COUNTRY_ID, d.SIZE_NUMBER_ID, d.COLOR_NUMBER_ID, c.cut_no,c.BUNDLE_NO,  (c.production_qnty) as PRODUCTION_QNTY, e.PO_NUMBER,c.BARCODE_NO from PRO_GARMENTS_PRODUCTION_MST a,PRO_GARMENTS_PRODUCTION_DTLS c, wo_po_color_size_breakdown d, wo_po_break_down e, wo_po_details_master f where a.id=c.mst_id and c.color_size_break_down_id=d.id and d.po_break_down_id=e.id and e.job_id=f.id and c.production_type = $source_cond and c.status_active=1 and c.is_deleted=0 and a.status_active=1 and a.is_deleted=0 and d.status_active in(1,2,3) and d.is_deleted=0 and e.status_active in(1,2,3) and e.is_deleted=0 and f.status_active=1 and f.is_deleted=0 and c.barcode_no='$barcode'    group by c.COLOR_TYPE_ID, d.id, e.id,f.company_name, f.job_no_prefix_num, f.buyer_name, d.item_number_id, d.country_id, d.size_number_id, d.color_number_id,c.cut_no, c.bundle_no,c.barcode_no, e.po_number,c.production_qnty";
			 //echo $sqls;die;
		

		if ($type == 56) {
			$message_bng = 'বান্ডিল নং: ' . $barcode_no_arr[0]->BUNDLE_NO . ' এখনও আউটপুটের জন্য প্রস্তুত নয়।';
			$message_eng = 'Bundle No: ' . $barcode_no_arr[0]->BUNDLE_NO . ' is not yet ready for output.';
		} else if ($type == 55) {
			$message_bng = 'বান্ডিল নং: ' . $barcode_no_arr[0]->BUNDLE_NO . ' এখনও ইনপুটের জন্য প্রস্তুত নয়।';
			$message_eng = 'Bundle No: ' . $barcode_no_arr[0]->BUNDLE_NO . ' is not yet ready for input.';
		}

		$result = sql_select($sqls);
		if (count($result) == 0) {
			return array(
				'message_bng' => $message_bng,
				'message_eng' => $message_eng,
				'bundle_no' => '',
				'barcode_no' => 0,
				'year' => 0,
				'color_size_id' => 0,
				'order_id' => 0,
				'item_id' => 0,
				'country_id' => 0,
				'size_id' => 0,
				'color_id' => 0,
				'cut_no' => '',
				'job_no' => 0,
				'buyer' => '',
				'order_no' => '',
				'item' => '',
				'country' => '',
				'color' => '',
				'size' => 0,
				'qty' => 0,
				'is_rescan' => 0,
				'color_type_id' => 0,
			);
		}

		foreach ($result as $v) {

			$data_arr["message_bng"] = '';
			$data_arr["message_eng"] = '';
			$data_arr["bundle_no"] = $v->BUNDLE_NO;
			$data_arr["barcode_no"] = $v->BARCODE_NO;
			$data_arr["year"] = $v->YEAR;
			$data_arr["color_size_id"] = $v->COLORSIZEID;
			$data_arr["order_id"] = $v->PO_ID;
			$data_arr["item_id"] = $v->ITEM_NUMBER_ID;
			$data_arr["country_id"] = $v->COUNTRY_ID;
			$data_arr["size_id"] = $v->SIZE_NUMBER_ID;
			$data_arr["color_id"] = $v->COLOR_NUMBER_ID;
			$data_arr["cut_no"] = $v->CUT_NO;
			$data_arr["job_no"] = $v->JOB_NO_PREFIX_NUM;

			if (isset($buyer_arr[$v->BUYER_NAME])) {
				$data_arr["buyer"] = $buyer_arr[$v->BUYER_NAME];
			} else {
				$data_arr["buyer"] = "";
			}

			$data_arr["order_no"] = "$v->PO_NUMBER ";

			if (isset($garments_item[$v->ITEM_NUMBER_ID])) {
				$data_arr["item"] = $garments_item[$v->ITEM_NUMBER_ID];
			} else {
				$data_arr["item"] = "";
			}

			if (isset($country_arr[$v->COUNTRY_ID])) {
				$data_arr["country"] = $country_arr[$v->COUNTRY_ID];
			} else {
				$data_arr["country"] = "";
			}

			if (isset($color_arr[$v->COLOR_NUMBER_ID])) {
				$data_arr["color"] = $color_arr[$v->COLOR_NUMBER_ID];
			} else {
				$data_arr["color"] = "";
			}

			if (isset($size_arr[$v->SIZE_NUMBER_ID])) {
				$data_arr["size"] = $size_arr[$v->SIZE_NUMBER_ID];
			} else {
				$data_arr["size"] = 0;
			}

			$data_arr["qty"] = $v->PRODUCTION_QNTY;
			$data_arr["is_rescan"] = $v->IS_RESCAN;
			// $data_arr["color_type_id"]=$v->COLOR_TYPE_ID;

			if (isset($cut_lay_info[0]->COLOR_TYPE_ID)) {
				$data_arr["color_type_id"] = $cut_lay_info[0]->COLOR_TYPE_ID;
			} else {
				$data_arr["color_type_id"] = 0;
			}

		}
		return $data_arr;
	}
	
	// this data will come from variable settings to control production sequence

	function gmt_production_validation_script($opcode, $is_preceding, $colorSizeid, $cutting_no, $production_squence=2) {
		$last_operation = "";
		global $production_squence;
		if ($colorSizeid != '') {
			$colorS = " and col_size_id='" . $colorSizeid . "'";
		}

		if ($cutting_no != '') {
			$cutting = " and cutting_no='" . $cutting_no . "'";
		} else {
			return $last_operation;
		}

		if ($production_squence == 1) // precoting sequence
		{
			if ($cutting_no != '') {
				$cutting = " and cutting_no='" . $cutting_no . "'";
			} else {
				return $last_operation;
			}

			//$sql_check = sql_select("select preceding_op,succeding_op,embel_name,col_size_id from pro_production_sequence where current_operation=$opcode $colorS $cutting");
		} else {
			if ($is_preceding == 1) {
				$str = " and c.production_type=1 ";
			} else {
				$str = " and c.production_type=4 ";
			}

			//$last_operation[$str] = 0;
			return $str;
		}

	}
	//******Akh******
	public function norsel_print_response($response_obj)
	{
		$pc_date_time = date("d-M-Y h:i:s A",time());
		$this->db->trans_start();
		$response = json_decode($response_obj);
		$id = return_next_id_by_sequence("PRO_GREY_PROD_NORSEL_LOG_PK_SEQ", "pro_grey_prod_norsel_log");
		$log_data = array(
			'ID'        				=> $id,
			'PRINT_STATUS'   			=> $response->print_status,
			'PRINTER'   				=> $response->printer,
			'REFERENCE_VALUE' 			=> $response->reference_value,
			'RESPONSE_MSG' 				=> $response->response_msg,
			'INSERTED_BY' 				=> $response->operator_id,
			'INSERT_DATE' 				=> $pc_date_time, 
		);

		if(!empty($log_data)){
			$this->insertData($log_data, 'PRO_GREY_PROD_NORSEL_LOG');
		}

		$this->db->trans_complete();
		if ($this->db->trans_status() == TRUE) {
			return array("status" => "Success", "msg"=> "Reference value = $response->reference_value");
		} else {
			return array("status" => "Failed");
		}
	}
	
	public function knitting_qc_result_entry_scan($barcode_no)
	{
		$dataSql = "SELECT a.id, a.entry_form, a.company_id, a.receive_basis, a.booking_no, a.booking_id, a.knitting_source, a.knitting_company, b.id as dtls_id, b.prod_id, b.body_part_id, b.febric_description_id, b.machine_no_id, b.gsm, b.width, b.color_id, b.yarn_lot, b.yarn_count, c.barcode_no, c.id as roll_id, c.roll_no, c.qnty
		FROM inv_receive_master a, pro_grey_prod_entry_dtls b, pro_roll_details c 
		WHERE a.id=b.mst_id and b.id=c.dtls_id and a.entry_form in(2) and c.entry_form in(2) and c.status_active=1 and c.is_deleted=0 and c.barcode_no=$barcode_no";
		$data_array = $this->db->query($dataSql)->row();

		if(!empty($data_array)){
			return $data_array;
		}
		else
		{
			return array(array("status" => "Failed", "msg"=> "This Barcode is not valid. Please scan again."));
		}
	}
	public function finish_roll_rcv_save($issue_obj)
	{
		$response_obj = json_decode($issue_obj);
		$mst_row = $response_obj->resultset->MasterPart;
		$receivedate = date("Y-m-d", strtotime(str_replace("'", "", $mst_row->RECV_DATE)));
		$receive_date = date("d-M-Y", strtotime(str_replace("'", "", $mst_row->RECV_DATE)));
		$max_transaction_date = $this->db->query("select max(a.transaction_date) as max_date from inv_transaction a,inv_receive_master b where a.prod_id in ($mst_row->PRODUCT_IDS) and b.store_id=$mst_row->STORE_ID  and a.status_active = 1")->row();

		if($max_transaction_date->MAX_DATE != "")
		{

			$max_transaction_date = date("Y-m-d", strtotime($max_transaction_date->MAX_DATE));
			
			if ($receivedate < $max_transaction_date) 
			{
				return array("status" => "Failed", "msg"=> "Receive Date Can not Be Less Than Last Transaction Date Of This Lot");
				die;
			}
		}

		$pc_date_time = date("d-M-Y h:i:s A",time());
		
		$id=return_next_id_by_sequence( "INV_RECEIVE_MASTER_PK_SEQ","INV_RECEIVE_MASTER","","",0,"",0,0,0,0,0,0,0 );
		$new_mrr_number = explode("*", return_next_id_by_sequence("INV_RECEIVE_MASTER_PK_SEQ", "INV_RECEIVE_MASTER","",1,1,"FFRR",68,date("Y",time()),2 ));
		$receive_mrr = $new_mrr_number[0];

		$field_array="ID, RECV_NUMBER_PREFIX, RECV_NUMBER_PREFIX_NUM, RECV_NUMBER, ENTRY_FORM,RECEIVE_BASIS, ITEM_CATEGORY, COMPANY_ID, RECEIVE_DATE, CHALLAN_NO,KNITTING_SOURCE, KNITTING_COMPANY, FABRIC_NATURE,LOCATION_ID,STORE_ID, KNITTING_LOCATION_ID, INSERTED_BY, INSERT_DATE";

		$receive_mst_data = array(
			'ID'           => $id,
			'RECV_NUMBER_PREFIX'  => $new_mrr_number[1],
			'RECV_NUMBER_PREFIX_NUM'  => $new_mrr_number[2],
			'RECV_NUMBER'  => $receive_mrr,
			'ENTRY_FORM'  => 68,
			'ITEM_CATEGORY'  => 2,
			'RECEIVE_BASIS'  => 9,
			'COMPANY_ID'  => 1,
			'RECEIVE_DATE'  => $receive_date,
			'CHALLAN_NO'  => $mst_row->CHALLAN_NO,
			'STORE_ID'  => $mst_row->STORE_ID,
			'LOCATION_ID'  => $mst_row->LOCATION_ID,
			'KNITTING_SOURCE'  => 1,
			'KNITTING_COMPANY'  => 1,
			'KNITTING_LOCATION_ID'  => 0,
			'FABRIC_NATURE'  => 2,
			'INSERTED_BY'  => $mst_row->USER_ID,
			'INSERT_DATE'  => $pc_date_time
		);
		if(!empty($receive_mst_data)){
			$this->insertData($receive_mst_data, 'INV_RECEIVE_MASTER');
		}

		foreach ($response_obj->resultset->DtlsPart as $dtls_row)
		{

			$cons_rate=$dtls_row->GREY_RATE + $dtls_row->DYEING_CHARGE;
			$amount=$dtls_row->CURRENT_WEIGHT*$cons_rate;

			$id_trans = return_next_id_by_sequence("INV_TRANSACTION_PK_SEQ", "inv_transaction");
			$id_dtls = return_next_id_by_sequence("PRO_FIN_FAB_RCV_DTLS_PK_SEQ", "pro_finish_fabric_rcv_dtls");
			$id_roll = return_next_id_by_sequence("PRO_ROLL_DTLS_PK_SEQ", "pro_roll_details");
			$id_prop = return_next_id_by_sequence("ORDER_WISE_PROP_PK_SEQ", "order_wise_pro_details");


			$recv_trans_data = array(
				'ID'        => $id_trans,
				'MST_ID'   => $id,
				'BATCH_ID' => $mst_row->BATCH_ID,
				'COMPANY_ID' => 1,
				'PROD_ID' => $dtls_row->PROD_ID,
				'ITEM_CATEGORY' => 2,
				'TRANSACTION_TYPE' => 1,
				'TRANSACTION_DATE' => $receive_date,
				'STORE_ID' => $mst_row->STORE_ID,
				'CONS_QUANTITY' => $dtls_row->CURRENT_WEIGHT,
				'CONS_RATE' => $cons_rate,
				'CONS_AMOUNT' => $amount,
				'INSERTED_BY' => $dtls_row->INSERTED_BY,
				'INSERT_DATE' => $pc_date_time
			);

			$recv_dtls_data = array(
				'ID'        => $id_dtls,
				'MST_ID'   => $id,
				'TRANS_ID' => $id_trans,
				'BATCH_ID' => $dtls_row->BATCH_ID,
				'PROD_ID' => $dtls_row->PROD_ID,
				'COLOR_ID' => $dtls_row->COLOR_ID,
				'RECEIVE_QNTY' => $dtls_row->CURRENT_WEIGHT,
				'REJECT_QTY' => $dtls_row->REJECT_QNTY,
				'BODY_PART_ID' => $dtls_row->BODYPART_ID,
				'FABRIC_DESCRIPTION_ID' => $dtls_row->DETERMINATION_ID,
				'GSM' => $dtls_row->GSM,
				'WIDTH' => $dtls_row->DIA,
				'DIA_WIDTH_TYPE' => $dtls_row->WIDTH_TYPE,
				'ORDER_ID' => $dtls_row->PO_ID,
				'BARCODE_NO' => $dtls_row->BARCODE_NO,
				'RATE' => $cons_rate, 
				'AMOUNT' => $amount,
				'DYEING_CHARGE' => $dtls_row->DYEING_CHARGE,
				'GREY_FABRIC_RATE' => $dtls_row->GREY_RATE,
				'INSERTED_BY' => $dtls_row->INSERTED_BY,
				'INSERT_DATE' => $pc_date_time
			);

			$recv_roll_data = array(
				'ID'        => $id_roll,
				'MST_ID'   => $id,
				'DTLS_ID' => $id_dtls,
				'PO_BREAKDOWN_ID' => $dtls_row->PO_ID,
				'ENTRY_FORM' => 68,
				'QC_PASS_QNTY' => $dtls_row->CURRENT_WEIGHT,
				'QNTY' => $dtls_row->CONS_QUANTITY,
				'REJECT_QNTY' => $dtls_row->REJECT_QNTY,
				'RATE' => $cons_rate,
				'AMOUNT' => $amount,
				'ROLL_ID' => $dtls_row->ROLL_ID,
				'ROLL_NO' => $dtls_row->ROLL_NO,
				'BARCODE_NO' => $dtls_row->BARCODE_NO,
				'PREV_REPROCESS' => $dtls_row->PREV_REPROCESS,
				'REPROCESS' => $dtls_row->REPROCESS,
				'BOOKING_NO' => $dtls_row->BOOKING_NO,
				'BOOKING_WITHOUT_ORDER' => $dtls_row->BOOKING_WITHOUT_ORDER,
				'INSERTED_BY' => $dtls_row->INSERTED_BY,
				'INSERT_DATE' => $pc_date_time
			);

			$recv_prop_data = array(
				'ID'        => $id_prop,
				'TRANS_ID' => $id_trans,
				'TRANS_TYPE' => 2,
				'DTLS_ID' => $id_dtls,
				'ENTRY_FORM' => 68,
				'PO_BREAKDOWN_ID' => $dtls_row->PO_ID,
				'QUANTITY' => $dtls_row->CONS_QUANTITY,
				'PROD_ID' => $dtls_row->PROD_ID,
				'COLOR_ID' => $dtls_row->COLOR_ID,
				'INSERTED_BY' => $dtls_row->INSERTED_BY,
				'INSERT_DATE' => $pc_date_time
			);

			$productData = $this->db->query("SELECT id, company_id, detarmination_id, current_stock, gsm, dia_width, color from product_details_master where item_category_id=2 and status_active=1 and is_deleted=0 and id=$dtls_row->PROD_ID")->row();
			$current_stock = $productData->CURRENT_STOCK;

			$rcv_product_data = array(
				'CURRENT_STOCK' => $current_stock + $dtls_row->CONS_QUANTITY
			);

			if(!empty($recv_trans_data)){
				$this->insertData($recv_trans_data, 'INV_TRANSACTION');
			}

			if(!empty($recv_dtls_data)){
				$this->insertData($recv_dtls_data, 'PRO_FINISH_FABRIC_RCV_DTLS');
			}

			if(!empty($recv_roll_data)){
				$this->insertData($recv_roll_data, 'PRO_ROLL_DETAILS');
			}

			if(!empty($recv_prop_data)){
				$this->insertData($recv_prop_data, 'ORDER_WISE_PRO_DETAILS');
			}

			if(!empty($rcv_product_data)){
				$this->updateData('PRODUCT_DETAILS_MASTER', $rcv_product_data, array('ID' => $dtls_row->PROD_ID));
			}
		}

		$this->db->trans_complete();
		if ($this->db->trans_status() == TRUE) {
			return array("status" => "Success", "msg"=> "Receive No = $receive_mrr");
		} else {
			return array("status" => "Failed");
		}
	}

	public function finish_roll_rcv_scan_data($challan_no)
	{

		
		$color_sql = "select id, color_name from lib_color where status_active=1 and is_deleted=0";
		$color_data = $this->db->query($color_sql)->result();
		foreach ($color_data as $row) {
			$color_arr[$row->ID] = $row->COLOR_NAME;
		}

		$precost_exchange_rate_arr=array();
		$precost_exchange_rate_data = $this->db->query("select job_no,exchange_rate  from  wo_pre_cost_mst");
		if(!empty($precost_exchange_rate_data))
		{
			foreach ($precost_exchange_rate_data as $exrate) {
				$precost_exchange_rate_arr[$exrate->JOB_NO] = $exrate->EXCHANGE_RATE;
			}
		}

		$b_part_sql = $this->getAllFieldsByAttribute("LIB_BODY_PART", "ID, BODY_PART_FULL_NAME", array("STATUS_ACTIVE" => 1));
		foreach ($b_part_sql as $row) {
			$buyer_part_arr[$row->ID] = $row->BODY_PART_FULL_NAME;
		}

		$buyer_sql = $this->getAllFieldsByAttribute("LIB_BUYER", "ID, SHORT_NAME", array("STATUS_ACTIVE" => 1));
		foreach ($buyer_sql as $row) {
			$buyer_arr[$row->ID] = $row->SHORT_NAME;
		}

		$conversion_cost_sql="SELECT A.JOB_NO,B.LIB_YARN_COUNT_DETER_ID,B.ID,SUM(A.CHARGE_UNIT) AS CHARGE_UNIT FROM  WO_PRE_COST_FAB_CONV_COST_DTLS A,WO_PRE_COST_FABRIC_COST_DTLS B WHERE  A.FABRIC_DESCRIPTION=B.ID AND A.JOB_NO=B.JOB_NO  AND A.CONS_PROCESS IN(25,26,32,33,34,35,36,37,38,39, 40,60,61,62, 64,67,68, 69,70,71,72, 73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,92,93,94,100,125,127,128,129,132,133,134,135,136,137,138,63,65,66,76,90,91) GROUP BY A.JOB_NO,B.LIB_YARN_COUNT_DETER_ID,B.ID";
		$conversion_cost_data = $this->db->query($conversion_cost_sql)->result();
		$conversion_cost_arr=array();
		foreach($conversion_cost_data as $c_cost)
		{
			$conversion_cost_arr[$c_cost->JOB_NO][$c_cost->LIB_YARN_COUNT_DETER_ID]=$c_cost->CHARGE_UNIT;	
		}

		$fabricnyarn_dyeing_sql="SELECT A.JOB_NO,B.LIB_YARN_COUNT_DETER_ID, B.ID,A.COLOR_BREAK_DOWN FROM  WO_PRE_COST_FAB_CONV_COST_DTLS A,WO_PRE_COST_FABRIC_COST_DTLS B WHERE A.FABRIC_DESCRIPTION=B.ID AND A.JOB_NO=B.JOB_NO  AND A.CONS_PROCESS IN (30,31)";
		$fabricnyarn_dyeing_data = $this->db->query($fabricnyarn_dyeing_sql)->result();
		$color_dyeing_cost=array();
		foreach($fabricnyarn_dyeing_data as $inf)
		{
			$color_breakdown=explode("__",$inf->COLOR_BREAK_DOWN);
			foreach($color_breakdown as $color_data)
			{
				$color_cost=explode("_",$color_data);
				$color_dyeing_cost[$inf->JOB_NO][$inf->LIB_YARN_COUNT_DETER_ID][$color_cost[0]]=$color_cost[1];
			}
		}

		$composition=array();
		$composition_sql="select id,composition_name from lib_composition_array where status_active=1 and is_deleted=0 order by composition_name";
		$composition_dtaa=$this->db->query($composition_sql)->result();
		foreach( $composition_dtaa as $row )
		{
			$composition[$row->ID] = $row->COMPOSITION_NAME;
		}

		$fabric_typee = array(1 => "Open Width", 2 => "Tubular", 3 => "Needle Open");

		$composition_arr=array(); $constructtion_arr=array();
		$sql_deter="select a.id, a.construction, b.copmposition_id, b.percent from lib_yarn_count_determina_mst a, lib_yarn_count_determina_dtls b where a.id=b.mst_id";
		$deter_array=$this->db->query($sql_deter)->result();
		foreach( $deter_array as $row )
		{
			$constructtion_arr[$row->ID] = $row->CONSTRUCTION;
			$composition_arr[$row->ID]	.= $composition[$row->COPMPOSITION_ID]." ".$row->PERCENT."% ";
		}

		$data_sql = "SELECT 1 AS TYPE, B.ID AS DTLS_ID,B.PRODUCT_ID,B.COLOR_ID,B.BODYPART_ID,B.BATCH_ID,B.GREY_SYS_ID, B.SYS_DTLS_ID,B.GREY_SYS_NUMBER,B.DETERMINATION_ID, B.GSM,B.DIA,C.QNTY, B.WIDTH_TYPE,C.BARCODE_NO, C.PO_BREAKDOWN_ID,C.ROLL_ID, C.IS_SALES, C.ROLL_NO, C.REJECT_QNTY,MAX(C.REPROCESS) AS REPROCESS, C.PREV_REPROCESS, C.BOOKING_WITHOUT_ORDER, C.BOOKING_NO 
		from pro_grey_prod_delivery_mst a,pro_grey_prod_delivery_dtls b,pro_roll_details c 
		where  a.id=b.mst_id and b.id=c.dtls_id and  c.entry_form=67 and a.entry_form=67 and a.sys_number='$challan_no' and c.status_active=1 and c.is_deleted=0 and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0 
		group by b.id,b.product_id,b.color_id,b.bodypart_id,b.batch_id,b.grey_sys_id,b.sys_dtls_id,b.grey_sys_number,b.determination_id, b.gsm,b.dia,c.qnty,b.width_type, c.barcode_no,c.po_breakdown_id, c.roll_id, c.roll_no,c.is_sales, c.reject_qnty,c.prev_reprocess, c.booking_without_order, c.booking_no,a.id
		union all
		select 2 AS TYPE,B.ID AS DTLS_ID,B.PROD_ID AS PRODUCT_ID,D.COLOR AS COLOR_ID, B.BODY_PART_ID AS BODYPART_ID,  B.BATCH_ID, NULL AS GREY_SYS_ID,NULL AS SYS_DTLS_ID,NULL AS GREY_SYS_NUMBER, D.DETARMINATION_ID, CAST(D.GSM AS VARCHAR2(200)) AS GSM, CAST(D.DIA_WIDTH AS VARCHAR2(200))  AS DIA, C.QNTY, B.WIDTH_TYPE, C.BARCODE_NO,C.PO_BREAKDOWN_ID,C.ROLL_ID, C.IS_SALES,C.ROLL_NO,C.REJECT_QNTY,MAX(C.REPROCESS) AS REPROCESS, C.PREV_REPROCESS, C.BOOKING_WITHOUT_ORDER, C.BOOKING_NO 
		from inv_issue_master a, inv_finish_fabric_issue_dtls b, pro_roll_details c, product_details_master d
		where a.id = b.mst_id and b.id = c.dtls_id and a.id= c.mst_id  and b.prod_id = d.id  and a.entry_form = 318 and c.entry_form = 318 and a.issue_number ='$challan_no' and b.status_active =1 and c.status_active =1 and a.status_active =1 
		group by b.id ,b.prod_id ,d.color ,  b.body_part_id, b.batch_id,d.detarmination_id, d.gsm, d.dia_width, c.qnty, b.width_type, c.barcode_no,c.po_breakdown_id,c.roll_id, c.is_sales,c.roll_no,c.reject_qnty,c.prev_reprocess, c.booking_without_order, c.booking_no";
		$data_array = $this->db->query($data_sql)->result();
		// echo "<pre>";
		// print_r($data_array);die;
		if(!empty($data_array))
		{
			$i=0;
			$barcode_arr = $po_arr = $batch_arr = array();
			foreach ($data_array as $row) {
				$barcode_arr[$row->BARCODE_NO] 	= $row->BARCODE_NO;
				$po_arr[$row->PO_BREAKDOWN_ID] 	= $row->PO_BREAKDOWN_ID;
				$batch_arr[$row->BATCH_ID] 		= $row->BATCH_ID;
			}

			$batch_info=array();
			if(!empty($batch_arr)){
				$batch_name_array=$this->db->query("select id, batch_no from  pro_batch_create_mst where id in(".implode(",",$batch_arr).")")->result();
				foreach ($batch_name_array as $brow) {
					$batch_info[$brow->ID] = $brow->BATCH_NO;
				}
			}

			$inserted_roll_arr = $roll_details_rate = array();
			if(!empty($barcode_arr))
			{
				$inserted_roll_sql="select barcode_no,reprocess,entry_form,rate from pro_roll_details c where entry_form in(61,68)  and status_active=1 and is_deleted=0 and barcode_no in(".implode(",", $barcode_arr).")";
				$inserted_roll_data = $this->db->query($inserted_roll_sql)->result();

				
				foreach($inserted_roll_data as $inf)
				{
					if($inf->ENTRY_FORM == 68)
						$inserted_roll_arr[$inf->BARCODE_NO][$inf->REPROCESS]=$inf->BARCODE_NO;

					if($inf->ENTRY_FORM == 61)
						$roll_details_rate[$inf->BARCODE_NO]['RATE']=$inf->RATE;	
				}
			}

			$po_details_array=array();
			if(!empty($po_arr))
			{
				$po_sql="SELECT a.job_no_prefix_num,a.job_no, a.buyer_name, a.insert_date, b.po_number, a.style_ref_no, b.id as po_id FROM wo_po_details_master a, wo_po_break_down b WHERE a.job_no=b.job_no_mst and b.id in(".implode(",", $po_arr).")";
				$po_array = $this->db->query($po_sql)->result();

				
				foreach($po_array as $row)
				{
					$po_details_array[$row->PO_ID]['JOB_NO'] 		= $row->JOB_NO;
					$po_details_array[$row->PO_ID]['BUYER_NAME'] 	= $buyer_arr[$row->BUYER_NAME];
					$po_details_array[$row->PO_ID]['STYLE_REF_NO'] 	= $row->STYLE_REF_NO;
					$po_details_array[$row->PO_ID]['YEAR'] 			= date("Y",strtotime($row->INSERT_DATE));
					$po_details_array[$row->PO_ID]['PO_NUMBER'] 	= $row->PO_NUMBER;
					$po_details_array[$row->PO_ID]['BUYER_ID'] 		= $row->BUYER_NAME;
				}
			}

			foreach ($data_array as $row) {
				$roll_rowo[$i]['BARCODE_NO'] 	= $row->BARCODE_NO;
				$roll_rowo[$i]['BOOKING_NO'] 	= $row->BOOKING_NO;


				if ($row->KNITTING_SOURCE == 1) {
					$roll_rowo[$i]['KNITTING_COMPANY'] = $company_arr[$row->KNITTING_COMPANY];
				} else if ($row->KNITTING_SOURCE == 3) {
					$roll_rowo[$i]['KNITTING_COMPANY'] = $supplier_arr[$row->KNITTING_COMPANY];
				}
				
				$roll_rowo[$i]['GREY_SYS_ID'] 		= $row->GREY_SYS_ID;
				$roll_rowo[$i]['GREY_SYS_NUMBER'] 	= $row->GREY_SYS_NUMBER;
				$roll_rowo[$i]['DTLS_ID'] 			= $row->DTLS_ID;
				$roll_rowo[$i]['DETERMINATION_ID'] 	= $row->DETERMINATION_ID;
				$roll_rowo[$i]['CONSTRUCTION'] 		= $constructtion_arr[$row->DETERMINATION_ID];
				$roll_rowo[$i]['COMPOSITION'] 		= $composition_arr[$row->DETERMINATION_ID];
				$roll_rowo[$i]['PROD_ID'] 			= $row->PRODUCT_ID;
				$roll_rowo[$i]['GSM'] 				= $row->GSM;
				$roll_rowo[$i]['DIA'] 				= $row->DIA;
				$roll_rowo[$i]['ROLL_ID'] 			= $row->ROLL_ID;
				$roll_rowo[$i]['ROLL_NO'] 			= $row->ROLL_NO;
				$roll_rowo[$i]['QNTY'] 				= number_format($row->QNTY, 2, '.', '');
				$roll_rowo[$i]['REJECT_QNTY'] 		= number_format($row->REJECT_QNTY, 2, '.', '');
				$roll_rowo[$i]['BATCH_ID'] 			= $row->BATCH_ID;
				$roll_rowo[$i]['BATCH_NAME'] 		= $batch_info[$row->BATCH_ID];
				$roll_rowo[$i]['BODYPART_ID'] 		= $row->BODYPART_ID;
				$roll_rowo[$i]['BODY_PART_NAME'] 	= $buyer_part_arr[$row->BODYPART_ID];
				$roll_rowo[$i]['COLOR_ID'] 			= $row->COLOR_ID;
				$roll_rowo[$i]['PO_ID'] 			= $row->PO_BREAKDOWN_ID;
				$roll_rowo[$i]['COLOR_NAME'] 		= $color_arr[$row->COLOR_ID];
				$roll_rowo[$i]['WIDTH_TYPE'] 		= $fabric_typee[$row->WIDTH_TYPE];

				if($row->BOOKING_WITHOUT_ORDER !=1){
					$job_no_mst = $po_details_array[$row->PO_BREAKDOWN_ID]['JOB_NO'];
					$order_no   = $po_details_array[$row->PO_BREAKDOWN_ID]['PO_NUMBER'];
					$buyer_name = $po_details_array[$row->PO_BREAKDOWN_ID]['BUYER_NAME'];
					$year 		= $po_details_array[$row->PO_BREAKDOWN_ID]['YEAR'];
					$buyer_id   = $po_details_array[$row->PO_BREAKDOWN_ID]['BUYER_ID'];
				}else{
					$order_no 	= "";
					$buyer_name = "";
					$job_no_mst = "";
					$year 		= "";
					$buyer_id 	= "";
				}

				$roll_rowo[$i]['JOB_NO'] = $job_no_mst;
				$roll_rowo[$i]['PO_NUMBER'] = $order_no;
				$roll_rowo[$i]['BUYER_NAME'] = $buyer_name;
				$roll_rowo[$i]['BUYER_ID'] = $buyer_id;
				$roll_rowo[$i]['YEAR'] = $year;
				$roll_rowo[$i]['BOOKING_WITHOUT_ORDER'] = $row->BOOKING_WITHOUT_ORDER;


				$fabric_dyeing_charge 	= $color_dyeing_cost[$job_no_mst][$row->DETERMINATION_ID][$row->COLOR_ID];
				$other_charge 			= $conversion_cost_arr[$job_no][$row->DETERMINATION_ID];
				$dyeing_charge 			= ($fabric_dyeing_charge+$other_charge)*$precost_exchange_rate_arr[$job_no_mst];
				$grey_qty 				= $row->REJECT_QNTY + $row->QNTY;

				if($dyeing_charge_basis==1)
				{
					$grey_rate=($grey_qty/$row->QNTY)*$roll_details_rate[$row->BARCODE_NO]['RATE'];
				}
				else
				{
					$grey_rate=$roll_details_rate[$row->BARCODE_NO]['RATE'];
				}

				$roll_rowo[$i]['GREY_RATE'] = $grey_rate;
				$roll_rowo[$i]['DYEING_CHARGE'] = $dyeing_charge;
				$roll_rowo[$i]['REPROCESS'] = $row->REPROCESS;
				$roll_rowo[$i]['REPROCESS'] = $row->REPROCESS;
				$roll_rowo[$i]['PREV_REPROCESS'] = $row->PREV_REPROCESS;

				$i++;
			}
		}

		if(!empty($roll_rowo)){
			return $roll_rowo;
		}
		else
		{
			return array(array("status" => "Failed", "msg"=> "This Delivery Challan is not valid. Please scan again."));
		}
	}
	public function finish_roll_issue_save($issue_obj)
	{
		$response_obj = json_decode($issue_obj);

		$pc_date_time = date("d-M-Y h:i:s A",time());
		$issue_date = date("d-M-Y");

		$barcodenos = $response_obj->resultset->BarcodeNos;
		$barcode_no = $barcodenos->BARCODE_NO;

		$mst_row = $response_obj->resultset->MasterPart;
		
		$check_if_already_scanned_sql = "select a.issue_number, barcode_no,prev_reprocess from inv_issue_master a,pro_roll_details b where a.id=b.mst_id and b.entry_form=71 and b.is_returned!=1 and b.barcode_no in($barcode_no) and b.status_active=1 and b.is_deleted=0";
		$check_if_already_scanned_rs = $this->db->query($check_if_already_scanned_sql)->row();
		if(!empty($check_if_already_scanned_rs))
		{
			return array("status" => "Failed", "msg"=> "Barcode is already scanned. Issue Number = " . $check_if_already_scanned_rs->ISSUE_NUMBER);
			die;
		}

		$this->db->trans_start();
		
		if($mst_row)
		{
			$id=return_next_id_by_sequence( "INV_ISSUE_MASTER_PK_SEQ","INV_ISSUE_MASTER","","",0,"",0,0,0,0,0,0,0 );
			$new_mrr_number = explode("*", return_next_id_by_sequence("INV_ISSUE_MASTER_PK_SEQ", "INV_ISSUE_MASTER","",1,1,"FFRI",71,date("Y",time()) ));
			$issue_mrr = $new_mrr_number[0];

			$issue_mst_data = array(
				'ID'           => $id,
				'ISSUE_NUMBER_PREFIX'  => $new_mrr_number[1],
				'ISSUE_NUMBER_PREFIX_NUM'  => $new_mrr_number[2],
				'ISSUE_NUMBER'  => $issue_mrr,
				'ENTRY_FORM'  => 71,
				'ITEM_CATEGORY'  => 2,
				'ISSUE_PURPOSE'  => $mst_row->ISSUE_PURPOSE,
				'COMPANY_ID'  => 1,
				'ISSUE_DATE'  => $issue_date,
				'KNIT_DYE_SOURCE'  => 1,
				'KNIT_DYE_COMPANY'  => 1,
				'BATCH_NO'  => $mst_row->BATCH_ID,
				'STORE_ID'  => $mst_row->STORE_ID,
				'INSERTED_BY'  => $mst_row->USER_ID,
				'INSERT_DATE'  => $pc_date_time
			);

			if(!empty($issue_mst_data)){
				$this->insertData($issue_mst_data, 'INV_ISSUE_MASTER');
			}
		}

		foreach ($response_obj->resultset->DtlsPart as $dtls_row)
		{
			$id_trans = return_next_id_by_sequence("INV_TRANSACTION_PK_SEQ", "inv_transaction");
			$id_dtls = return_next_id_by_sequence("INV_GREY_FAB_ISS_DTLS_PK_SEQ", "inv_finish_fabric_issue_dtls");
			$id_roll = return_next_id_by_sequence("PRO_ROLL_DTLS_PK_SEQ", "pro_roll_details");
			$id_prop = return_next_id_by_sequence("ORDER_WISE_PROP_PK_SEQ", "order_wise_pro_details");

			$issue_trans_data = array(
				'ID'        => $id_trans,
				'MST_ID'   => $id,
				'RECEIVE_BASIS' => 9,
				'PI_WO_BATCH_NO' => $mst_row->BATCH_ID,
				'COMPANY_ID' => 1,
				'PROD_ID' => $dtls_row->PROD_ID,
				'ITEM_CATEGORY' => 2,
				'TRANSACTION_TYPE' => 2,
				'TRANSACTION_DATE' => $issue_date,
				'STORE_ID' => $dtls_row->STORE_ID,
				'CONS_QUANTITY' => $dtls_row->QNTY,
				'CONS_RATE' => $dtls_row->RATE,
				'CONS_AMOUNT' => $dtls_row->QNTY*$dtls_row->RATE,
				'INSERTED_BY' => $dtls_row->USER_ID,
				'INSERT_DATE' => $pc_date_time
			);

			$issue_dtls_data = array(
				'ID'        => $id_dtls,
				'MST_ID'   => $id,
				'TRANS_ID' => $id_trans,
				'PROD_ID' => $dtls_row->PROD_ID,
				'BASIS' => 9,
				'ISSUE_QNTY' => $dtls_row->QNTY,
				'BODY_PART_ID' => $dtls_row->BODY_PART_ID,
				'GMT_ITEM_ID' => $dtls_row->GMT_ITEM_ID,
				'ORDER_ID' => $dtls_row->PO_ID,
				'KNITTING_COMPANY' => 1,
				'INSERTED_BY' => $dtls_row->USER_ID,
				'INSERT_DATE' => $pc_date_time
			);

			$issue_roll_data = array(
				'ID'        => $id_roll,
				'MST_ID'   => $id,
				'DTLS_ID' => $id_dtls,
				'PO_BREAKDOWN_ID' => $dtls_row->PO_ID,
				'ENTRY_FORM' => 71,
				'QC_PASS_QNTY' => $dtls_row->QNTY,
				'QNTY' => $dtls_row->QNTY,
				'ROLL_ID' => $dtls_row->ROLL_ID,
				'ROLL_NO' => $dtls_row->ROLL_NO,
				'BARCODE_NO' => $dtls_row->BARCODE_NO,
				'BOOKING_NO' => $dtls_row->BOOKING_NO,
				'BOOKING_WITHOUT_ORDER' => $dtls_row->BOOKING_WITHOUT_ORDER,
				'INSERTED_BY' => $dtls_row->USER_ID,
				'INSERT_DATE' => $pc_date_time
			);

			if($dtls_row->BOOKING_WITHOUT_ORDER==0)
			{
				$issue_prop_data = array(
					'ID'        => $id_prop,
					'TRANS_ID' => $id_trans,
					'TRANS_TYPE' => 2,
					'DTLS_ID' => $id_dtls,
					'ENTRY_FORM' => 71,
					'PO_BREAKDOWN_ID' => $dtls_row->PO_ID,
					'QUANTITY' => $dtls_row->QNTY,
					'PROD_ID' => $dtls_row->PROD_ID,
					'COLOR_ID' => $dtls_row->COLOR_ID,
					'INSERTED_BY' => $dtls_row->USER_ID,
					'INSERT_DATE' => $pc_date_time
				);

			}


			$productData = $this->db->query("SELECT id, company_id, detarmination_id, current_stock, gsm, dia_width, color from product_details_master where item_category_id=2 and status_active=1 and is_deleted=0 and id=$dtls_row->PROD_ID")->row();
			$current_stock = $productData->CURRENT_STOCK;

			$issue_product_data = array(
				'CURRENT_STOCK' => $current_stock - $dtls_row->QNTY
			);

			if(!empty($issue_trans_data)){
				$this->insertData($issue_trans_data, 'INV_TRANSACTION');
			}
			if(!empty($issue_dtls_data)){
				$this->insertData($issue_dtls_data, 'INV_FINISH_FABRIC_ISSUE_DTLS');
			}
			if(!empty($issue_roll_data)){
				$this->insertData($issue_roll_data, 'PRO_ROLL_DETAILS');
			}
			if(!empty($issue_prop_data)){
				$this->insertData($issue_prop_data, 'ORDER_WISE_PRO_DETAILS');
			}

			if(!empty($issue_product_data)){
				$this->updateData('PRODUCT_DETAILS_MASTER', $issue_product_data, array('ID' => $dtls_row->PROD_ID));
			}
		}

		$this->db->trans_complete();
		if ($this->db->trans_status() == TRUE) {
			return array("status" => "Success", "msg"=> "Issue No = $issue_mrr");
		} else {
			return array("status" => "Failed");
		}

	}
	public function get_finish_fab_location()
	{
		$sql_location = "select id,location_name from lib_location where company_id=1 and status_active =1 and is_deleted=0 order by location_name";
		return $this->db->query($sql_location)->result();
	}

	public function get_finish_location_wise_store($location_id)
	{
		$sql_store = "select a.id, a.store_name from lib_store_location a, lib_store_location_category b where a.id= b.store_location_id and a.company_id=1 and a.status_active=1 and a.is_deleted=0 and b.category_type in(2) and a.id in($location_id) group by a.id, a.store_name order by a.store_name";
		return $this->db->query($sql_store)->result();
	}

	public function get_finish_fab_store()
	{
		$sql_store = "select id,store_name from lib_store_location where status_active=1 and is_deleted=0 and company_id=1  and (item_category_id  like '%,2,%' or item_category_id='2')";
		return $this->db->query($sql_store)->result();
	}
	public function finish_roll_issue_scan_data($barcode_no)
	{
		$check_if_already_scanned_sql = "select a.issue_number, barcode_no,prev_reprocess from inv_issue_master a,pro_roll_details b where a.id=b.mst_id and b.entry_form=71 and b.is_returned!=1 and b.barcode_no=$barcode_no and b.status_active=1 and b.is_deleted=0";
		$check_if_already_scanned_rs = $this->db->query($check_if_already_scanned_sql)->row();
		if(!empty($check_if_already_scanned_rs))
		{
			return array("status" => "Failed", "msg"=> "Barcode is already scanned. Issue Number = " . $check_if_already_scanned_rs->ISSUE_NUMBER);
			die;
		}

		$b_part_sql = $this->getAllFieldsByAttribute("LIB_BODY_PART", "ID, BODY_PART_FULL_NAME", array("STATUS_ACTIVE" => 1));
		foreach ($b_part_sql as $row) {
			$buyer_part_arr[$row->ID] = $row->BODY_PART_FULL_NAME;
		}

		$color_sql = "select id, color_name from lib_color where status_active=1 and is_deleted=0";
		$color_data = $this->db->query($color_sql)->result();
		foreach ($color_data as $row) {
			$color_arr[$row->ID] = $row->COLOR_NAME;
		}

		$receive_basis_arr = array(1 => "PI Based", 2 => "WO/Booking Based", 3 => "In-Bound Subcontract", 4 => "Independent", 5 => "Batch Based", 6 => "Opening Balance", 7 => "Requisition", 8 => "Recipe Based", 9 => "Production", 10 => "Delivery", 11 => "Service Booking Based", 12 => "Delivery Challan(Int.)", 13 => "Delivery Challan(Ext.)", 14 => "Sales Order Based", 15 => "Job Card",16=>"Delivery From Store");

		$knitting_source = array(1 => "In-house", 3 => "Out-bound Subcontract");

		$company_sql = "select id,company_name from lib_company";
		$company_data = $this->db->query($company_sql)->result();
		foreach ($company_data as $row) {
			$company_arr[$row->ID] = $row->COMPANY_NAME;
		}

		$supplier_sql = "select id, supplier_name from lib_supplier";
		$supplier_data = $this->db->query($supplier_sql)->result();
		foreach ($supplier_data as $row) {
			$supplier_arr[$row->ID] = $row->SUPPLIER_NAME;
		}

		$fabric_typee = array(1 => "Open Width", 2 => "Tubular", 3 => "Needle Open");

		$data_array_transfer_sql="SELECT barcode_no, po_breakdown_id, booking_without_order, entry_form from pro_roll_details where entry_form in(214,134,216,219) and status_active=1 and is_deleted=0 and re_transfer=0 and barcode_no=$barcode_no";
		$data_array_transfer = $this->db->query($data_array_transfer_sql)->result();
		$barcode_trans_nos="";
		foreach($data_array_transfer as $row) 
		{
			$barcode_trans_ref[$row->BARCODE_NO]["BARCODE_NO"]=$row->BARCODE_NO;
			$barcode_trans_ref[$row->BARCODE_NO]["PO_BREAKDOWN_ID"]=$row->PO_BREAKDOWN_ID;
			$barcode_trans_ref[$row->BARCODE_NO]["BOOKING_WITHOUT_ORDER"]=$row->BOOKING_WITHOUT_ORDER;
			$barcode_trans_ref[$row->BARCODE_NO]["ENTRY_FORM"]=$row->ENTRY_FORM;
		}

		$buyer_sql = $this->getAllFieldsByAttribute("LIB_BUYER", "ID, SHORT_NAME", array("STATUS_ACTIVE" => 1));
		foreach ($buyer_sql as $row) {
			$buyer_arr[$row->ID] = $row->SHORT_NAME;
		}

		$data_arr = array();
		$data_array_sql = "SELECT a.id, a.entry_form,a.recv_number, a.company_id, a.receive_basis, a.booking_no, a.booking_id, a.knitting_source, a.knitting_company, b.id as dtls_id, b.prod_id, b.body_part_id,b.trans_id, b.fabric_description_id, b.gsm, b.width,b.batch_id, b.color_id,c.barcode_no,b.dia_width_type, c.id as roll_id, c.roll_no, c.po_breakdown_id, c.qc_pass_qnty, c.roll_id as roll_id_prev,c.rate, c.booking_no as bwo, c.booking_without_order, c.is_transfer, c.transfer_criteria,c.is_sales,max(c.reprocess) as  reprocess FROM inv_receive_master a, pro_finish_fabric_rcv_dtls b, pro_roll_details c WHERE a.id=b.mst_id and b.id=c.dtls_id and b.trans_id<>0 and a.entry_form in(37,7,68) and c.entry_form in(37,7,68) and c.status_active=1 and c.is_deleted=0 and c.barcode_no=$barcode_no group by a.id, a.entry_form,a.recv_number, a.company_id, a.receive_basis, a.booking_no, a.booking_id, a.knitting_source, a.knitting_company, b.id, b.prod_id, b.body_part_id,b.trans_id, b.fabric_description_id, b.gsm, b.width,b.batch_id, b.color_id,c.barcode_no,b.dia_width_type, c.id, c.roll_no, c.po_breakdown_id, c.qc_pass_qnty, c.roll_id,c.rate, c.booking_no, c.booking_without_order, c.is_transfer, c.transfer_criteria,c.is_sales";
		$data_array = $this->db->query($data_array_sql)->row();
		if(empty($data_array))
		{
			return array("status" => "Failed", "msg"=> "Barcode is not valid");
			die;
		}
		else
		{

			/*$barcodedataarr[$ROW[CSF('BARCODE_NO')]]=$ROW[CSF("BARCODE_NO")]."**".$ROW[CSF("COMPANY_ID")]."**".$ROW[CSF("ROLL_NO")]."**".$ROLL_ID."**".$ROW[CSF("BODY_PART_ID")]."**".$BODY_PART[$ROW[CSF("BODY_PART_ID")]]."**".$ROW[CSF("BWO")]."**".$receive_basis."**".$receive_basis_id."**".$ROW[CSF("BOOKING_NO")]."**".$ROW[CSF("BOOKING_ID")]."**".$COLOR."**".$ROW[CSF("COLOR_ID")]."**".$ROW[CSF("KNITTING_SOURCE")]."**".$KNITTING_SOURCE[$ROW[CSF("KNITTING_SOURCE")]]."**".$ROW[CSF("KNITTING_COMPANY")]."**".$knit_company."**".$ROW[CSF("BATCH_ID")]."**".$ROW[CSF("DIA_WIDTH_TYPE")]."**".$fabric_typee[$ROW[CSF("DIA_WIDTH_TYPE")]]."**".$batch_name_array[$ROW[CSF("BATCH_ID")]]."**".$ROW[CSF("PROD_ID")]."**".$ROW[CSF("FABRIC_DESCRIPTION_ID")]."**".$ROW[CSF("GSM")]."**".$ROW[CSF("WIDTH")]."**".NUMBER_FORMAT($ROW[CSF("QC_PASS_QNTY")],2,'.','')."**".$rate."**".$booking_without_order."**".$ROW[CSF("REPROCESS")];*/
			if(!empty($data_array))
			{

				if($data_array->ENTRY_FORM==68)
				{
					$roll_id = $data_array->ROLL_ID_PREV;
					$data_arr["BOOKING_NO"] = $data_array->RECV_NUMBER;
					$data_arr["BOOKING_ID"] = $data_array->ID;
				}
				else
				{
					$roll_id = $data_array->ROLL_ID;
				}

				if($barcode_trans_ref[$data_array->BARCODE_NO]["BARCODE_NO"] != "")
				{
					$po_breakdown_id = $barcode_trans_ref[$data_array->BARCODE_NO]["PO_BREAKDOWN_ID"];
					$booking_without_order = $barcode_trans_ref[$data_array->BARCODE_NO]["BOOKING_WITHOUT_ORDER"];
				}
				else
				{
					$po_breakdown_id = $data_array->PO_BREAKDOWN_ID;
					$booking_without_order = $data_array->BOOKING_WITHOUT_ORDER;
				}

				if($data_array->BOOKING_WITHOUT_ORDER==1)
				{
					$po_id=$data_array->PO_BREAKDOWN_ID;
					$non_order_sql = "select buyer_id, id from wo_non_ord_samp_booking_mst where status_active=1 and id=$po_id";
					$non_order_data = $this->db->query($non_order_sql)->row();
					foreach ($non_order_data as  $val) 
					{
						$data_arr["BUYER_NAME"] = $buyer_arr[$val->BUYER_ID];
						$data_arr["JOB_NO"]="";
						$data_arr["PO_NUMBER"]="";
						$data_arr["STYLE_REF_NO"]="";
						$data_arr["PO_YEAR"]="";
					}
				}
				else
				{
					$po_id=$data_array->PO_BREAKDOWN_ID;
					$po_sql="SELECT a.job_no, a.job_no_prefix_num, a.buyer_name, a.insert_date, a.style_ref_no, b.po_number, b.id as po_id FROM wo_po_details_master a, wo_po_break_down b WHERE a.job_no=b.job_no_mst and b.id=$po_id";
					$po_data = $this->db->query($po_sql)->row();
					if(!empty($po_data))
					{
						$data_arr["JOB_NO"]=$po_data->JOB_NO;
						$data_arr["BUYER_NAME"]=$buyer_arr[$po_data->BUYER_NAME];
						$data_arr["PO_NUMBER"]=(string)$po_data->PO_NUMBER;
						$data_arr["PO_ID"]=$po_data->PO_ID;
						$data_arr["STYLE_REF_NO"]=$po_data->STYLE_REF_NO;
						$data_arr["PO_YEAR"]=date("Y",strtotime($po_data->INSERT_DATE));
					}
				}

				$data_arr["COMPANY_ID"] = $data_array->COMPANY_ID;
				$data_arr["BARCODE_NO"] = $data_array->BARCODE_NO;
				$data_arr["COLOR_ID"] = $data_array->COLOR_ID;
				$data_arr["COLOR_NAME"] = $color_arr[$data_array->COLOR_ID];
				$data_arr["ROLL_NO"] = $data_array->ROLL_NO;
				$data_arr["ROLL_ID"] = $roll_id;
				$data_arr["BODY_PART_ID"] = $data_array->BODY_PART_ID;
				$data_arr["BODY_PART_NAME"] = $buyer_part_arr[$data_array->BODY_PART_ID];
				$data_arr["BWO"] = $data_array->BWO;
				$data_arr["RECEIVE_BASIS_ID"] = $data_array->RECEIVE_BASIS;
				$data_arr["RECEIVE_BASIS"] = $receive_basis_arr[$data_array->RECEIVE_BASIS];
				$data_arr["KNITTING_SOURCE"] = $data_array->KNITTING_SOURCE;
				$data_arr["KNITTING_SOURCE_NAME"] = $knitting_source[$data_array->KNITTING_SOURCE];
				$data_arr["KNITTING_COMPANY"] = $data_array->KNITTING_COMPANY;
				if ($data_array->KNITTING_SOURCE == 1) {
					$data_arr['KNITTING_COMPANY_NAME'] = $company_arr[$data_array->KNITTING_COMPANY];
				} else if ($data_array->KNITTING_SOURCE == 3) {
					$data_arr['KNITTING_COMPANY_NAME'] = $supplier_arr[$data_array->KNITTING_COMPANY];
				}
				$data_arr["DIA_WIDTH_TYPE"] = $data_array->DIA_WIDTH_TYPE;
				$data_arr["DIA_WIDTH_TYPE_NAME"] = $fabric_typee[$data_array->DIA_WIDTH_TYPE];
				$data_arr["BATCH_ID"] = $data_array->BATCH_ID;
				$data_arr["PROD_ID"] = $data_array->PROD_ID;
				$data_arr["FABRIC_DESCRIPTION_ID"] = $data_array->FABRIC_DESCRIPTION_ID;
				$data_arr["GMT_ITEM_ID"] = 0;
				$data_arr["GSM"] = $data_array->GSM;
				$data_arr["WIDTH"] = $data_array->WIDTH;
				$data_arr["QC_PASS_QNTY"] = $data_array->QC_PASS_QNTY;
				$data_arr["RATE"] = $data_array->RATE;
				$data_arr["REPROCESS"] = $data_array->REPROCESS;
				$data_arr["BOOKING_WITHOUT_ORDER"] = $booking_without_order;

			}
		}

		return $data_arr;
	}
	
	public function fin_fab_barcode_result_entry_store($response_obj)
	{
		$pc_date_time = date("d-M-Y h:i:s A",time());
		$this->db->trans_start();

		$variable_setting_auto_qc_sql = "select auto_update from variable_settings_production where company_name = 1 and variable_list in(47) and item_category_id=13 and is_deleted=0 and status_active=1";
		$variable_setting_auto_qc_rs = $this->db->query($variable_setting_auto_qc_sql)->row();
		$variable_setting_auto_qc = $variable_settingAutoQC->auto_update;
		
		// CHECK ROLL LEVEL YES OR NO
		//$roll_maintained_sql="select fabric_roll_level from variable_settings_production where company_name=1 and variable_list=3 and is_deleted=0 and status_active=1";
		$roll_maintain = 1; //$this->db->query($roll_maintained_sql)->row()->fabric_roll_level;

		$response_json = json_decode($response_obj);
		$mst_row = $response_json->resultset->MasterPart;
		if($mst_row)
		{
			$company_id 	= $mst_row->COMPANY_ID;
			$prod_dtls_id 	= $mst_row->DTLS_ID;
			$prod_id 		= $mst_row->PROD_ID;
			$barcode_no 	= $mst_row->BARCODE_NO;
			$roll_id 		= $mst_row->ROLL_ID;
			$roll_no 		= $mst_row->ROLL_NO;
			$qnty 			= $mst_row->QNTY;
			$reject_qnty 	= $mst_row->REJECT_QNTY;
			$qc_date 		= date("d-M-Y", strtotime($mst_row->QC_DATE));
			$qc_name 		= $mst_row->QC_NAME;
			$ac_roll_width 	= $mst_row->AC_ROLL_WIDTH;
			$roll_wgt 		= $mst_row->ROLL_WGT;
			$roll_length 	= $mst_row->ROLL_LENGTH;
			$ac_gsm 		= $mst_row->AC_GSM;
			$roll_status 	= $mst_row->ROLL_STATUS;
			$total_panalty 	= $mst_row->TOTAL_PANALTY;
			$total_point 	= $mst_row->TOTAL_POINT;
			$fabric_grade 	= $mst_row->FABRIC_GRADE;
			$fabric_shade 	= $mst_row->FABRIC_SHADE;
			$comments 		= $mst_row->COMMENTS;

			if ($prod_dtls_id != "") 
			{
				if ($roll_maintain == 1) 
				{
					$pre_count_sql =  "select count(id) as count from pro_qc_result_mst where pro_dtls_id=$prod_dtls_id and entry_form=267 and barcode_no='$barcode_no' and status_active=1 and is_deleted=0";
					$pre_count_rs = $this->db->query($pre_count_sql)->row();
					if ($pre_count_rs->count > 0) 
					{
						return array("status" => "Failed", "msg"=> "Barcode Number is Already Exists");
						die;
					}
				} 
				else 
				{
					$pre_count_sql =  "select count(id) as count from pro_qc_result_mst where pro_dtls_id=$prod_dtls_id and status_active=1 and is_deleted=0 and entry_form=267";
					$pre_count_rs = $this->db->query($pre_count_sql)->row();
					if ($pre_count_rs->count > 0) 
					{
						return array("status" => "Failed", "msg"=> "Duplicate Fabric is Not Allow in Same QC");
						die;
					}
				}
			}

			$qc_qnty = ($roll_status!=2) ? ($qnty-$reject_qnty) : $qnty;

			$id=return_next_id_by_sequence( "PRO_QC_RESULT_MST_SEQ","PRO_QC_RESULT_MST");
			$new_mrr_number = explode("*", return_next_id_by_sequence("INV_RECEIVE_MASTER_PK_SEQ", "INV_RECEIVE_MASTER","",1,1,"FFPR",66,date("Y",time()),2 ));
			$receive_mrr = $new_mrr_number[0];
			$result_mst_data = array(
				'ID'           			=> $id,
				'PRO_DTLS_ID'  			=> $prod_dtls_id,
				'ENTRY_FORM'  			=> 267,
				'ROLL_MAINTAIN'  		=> $roll_maintain,
				'BARCODE_NO'  			=> $barcode_no,
				'ROLL_ID'  				=> $roll_id,
				'ROLL_NO'  				=> $roll_no,
				'QC_NAME'  				=> $qc_name,				
				'ROLL_WIDTH'  			=> $ac_roll_width,
				'ROLL_WEIGHT'  			=> $qc_qnty,
				'ROLL_LENGTH'  			=> $roll_length,
				'REJECT_QNTY'  			=> $reject_qnty,
				'QC_DATE'				=> $qc_date,
				'ROLL_STATUS'			=> $roll_status,
				'KNITTING_DENSITY' 		=> "",
				'TOTAL_PENALTY_POINT'	=> $total_panalty,
				'TOTAL_POINT'			=> $total_point, 
				'FABRIC_GRADE'			=> $fabric_grade, 
				'FABRIC_SHADE'			=> $fabric_shade, 
				'COMMENTS'				=> $comments, 
				'INSERTED_BY'			=> 999, 
				'INSERT_DATE'			=> $pc_date_time, 
			);
			if(!empty($result_mst_data)){
				$this->insertData($result_mst_data, 'PRO_QC_RESULT_MST');
			}

			foreach ($response_json->resultset->DtlsPart as $dtls_row)
			{
				$dtls_id = return_next_id_by_sequence("PRO_QC_RESULT_DTLS_SEQ", "pro_qc_result_dtls");
				$dtls_data = array(
					'ID'        			=> $dtls_id,
					'MST_ID'   				=> $id,
					'DEFECT_NAME' 			=> $dtls_row->DEFECT_ID,
					'DEFECT_COUNT' 			=> $dtls_row->DEFECT_COUNT,
					'FOUND_IN_INCH' 		=> $dtls_row->FOUND_IN_INCH,
					'FOUND_IN_INCH_POINT' 	=> $dtls_row->FOUND_IN_INCH_POINT,
					'PENALTY_POINT' 		=> $dtls_row->PENALTY_POINT,
					'INSERTED_BY' 			=> 999,
					'INSERT_DATE' 			=> $pc_date_time, 
				);
				if(!empty($dtls_data)){
					$this->insertData($dtls_data, 'PRO_QC_RESULT_DTLS');
				}
			}

			if($variable_setting_auto_qc == 1 && $roll_status!=2)
			{
				$update_roll_details = $this->db->query("UPDATE pro_roll_details SET qnty=$qc_qnty, reject_qnty='$reject_qnty' WHERE barcode_no = $barcode_no AND entry_form=66 and dtls_id=$prod_dtls_id");

				if($update_roll_details)
				{
					$roll_qc_rj_sql = "SELECT sum(qnty) as qc_qnty,sum(reject_qnty) as reject_qnty from pro_roll_details where dtls_id=$prod_dtls_id and status_active=1 and is_deleted=0 and entry_form=66";
					$roll_qc_rj_result = $this->db->query($roll_qc_rj_sql)->row();

					if(!empty($roll_qc_rj_result))
					{
						$receive_qnty = $roll_qc_rj_result->qc_qnty;
						$reject_qty   = $roll_qc_rj_result->reject_qnty;
						$pro_grey_prod_sql = $this->db->query("UPDATE pro_finish_fabric_rcv_dtls SET receive_qnty=$receive_qnty, reject_qty=$reject_qty WHERE id=$prod_dtls_id");
					}
				}

			}
		}
		$this->db->trans_complete();
		if ($this->db->trans_status() == TRUE) {
			return array("status" => "Success", "msg"=> "Receive ID = $id");
		} else {
			return array("status" => "Failed");
		}
	}
	public function fin_fab_grade()
	{
		$dataSql = "select fabric_grade, get_upto_first, get_upvalue_first, get_upto_second,company_name, get_upvalue_second from variable_settings_production where  variable_list=45 order by company_name,get_upvalue_first asc";
		$variable_data = $this->db->query($dataSql)->result();
		$exc_perc = array();
		$i = 0;
		$variable_data_count = count($variable_data);
		foreach ($variable_data as $row) {
			$exc_perc[$row->COMPANY_NAME][$i]['limit_from'] = $row->GET_UPVALUE_FIRST;
			$exc_perc[$row->COMPANY_NAME][$i]['limit_to'] = $row->GET_UPVALUE_SECOND;
			$exc_perc[$row->COMPANY_NAME][$i]['grade'] = $row->FABRIC_GRADE;
			$i++;
		}

		return $exc_perc;
	}
	public function fin_fab_barcode_scan_for_result($barcode_no)
	{
		$dataSql = "SELECT a.id, a.entry_form, a.company_id, a.receive_basis, a.booking_no, a.booking_id, a.knitting_source as  finish_production_source, a.knitting_company as finish_production_company, 
		b.id as dtls_id, b.prod_id, b.body_part_id, b.fabric_description_id as febric_description_id, b.machine_no_id, b.gsm, b.width, b.color_id, null as yarn_lot,null as yarn_count, b.receive_qnty as qnty2 ,c.barcode_no, 
		c.id as roll_id, c.roll_no, c.qnty
		FROM inv_receive_master a, pro_finish_fabric_rcv_dtls b ,pro_roll_details c
		WHERE a.id=b.mst_id and b.id=c.dtls_id and c.status_active=1 and b.status_active=1 and a.status_active=1 and a.entry_form in(66) 
		and c.roll_no=b.roll_no and c.barcode_no=$barcode_no";
		$data_array = $this->db->query($dataSql)->row();

		return $data_array;
	}

	public function finish_fabric_production_store($plan_obj)
	{
		$response_obj = json_decode($plan_obj);

		$pc_date_time = date("d-M-Y h:i:s A",time());
		$receive_date = date("d-M-Y");
		$company_id = 1;
		// CHECK IF BARCODES ARE ALREADY SCANNED

		foreach ($response_obj->resultset->DtlsPart as $dtls_row)
		{
			$barcode_no = $dtls_row->BARCODE_NO;

			$file = fopen("finish_production_barcode_check.txt", "r");
			$fread = fread($file,20);

			if($fread==$barcode_no)
			{
				//echo "420**Another action is runing. Please try after sometimes."; 
				return array("status" => "Failed", "msg"=> "Barcode already scanned.");
				die();
			}
			else
			{
				$file2 = fopen("finish_production_barcode_check.txt", "w");
				fwrite($file2,$barcode_no);
				fclose($file2);
				chmod($file2, 0777);
			}
			fclose($file);
		}

		$check_barcode = $this->check_if_barcode_already_qc($barcode_no);

		if(!empty($check_barcode))
		{
			return array("status" => "Failed", "msg"=> "Barcode already scanned. Receive No = " . $check_barcode->RECV_NUMBER);
			die;
		}

		$productDataArray = $stockArray = array();
		$productSql = "SELECT id, company_id, detarmination_id, current_stock, gsm, dia_width, color from product_details_master where item_category_id=2 and status_active=1 and is_deleted=0";
		$productData = $this->db->query($productSql)->row();
		foreach ($productData as $row) {
			$productDataArray[$row->COMPANY_ID][$row->DETARMINATION_ID][$row->GSM][$row->DIA_WIDTH][$row->COLOR] = $row->ID;
			$stockArray[$row->ID] = $row->CURRENT_STOCK;
		}

		$this->db->trans_start();
		$mst_row = $response_obj->resultset->MasterPart;
		if($mst_row)
		{
			$id=return_next_id_by_sequence( "INV_RECEIVE_MASTER_PK_SEQ","INV_RECEIVE_MASTER","","",0,"",0,0,0,0,0,0,0 );
			$new_mrr_number = explode("*", return_next_id_by_sequence("INV_RECEIVE_MASTER_PK_SEQ", "INV_RECEIVE_MASTER","",1,1,"FFPR",66,date("Y",time()),2 ));
			$receive_mrr = $new_mrr_number[0];
			$receive_mst_data = array(
				'ID'           				=> $id,
				'RECV_NUMBER_PREFIX'  		=> $new_mrr_number[1],
				'RECV_NUMBER_PREFIX_NUM'  	=> $new_mrr_number[2],
				'RECV_NUMBER'  				=> $receive_mrr,
				'RECEIVE_DATE'  			=> $receive_date,
				'COMPANY_ID'  				=> $company_id,
				'KNITTING_SOURCE'  			=> 1,
				'KNITTING_COMPANY'  		=> 1,				
				'ITEM_CATEGORY'  			=> 2,
				'ENTRY_FORM'  				=> 66,
				'INSERTED_BY'  				=> 999,
				'INSERT_DATE'  				=> $pc_date_time
			);
			if(!empty($receive_mst_data)){
				$this->insertData($receive_mst_data, 'INV_RECEIVE_MASTER');
			}
		}

		/*$dtl_row = $response_obj->resultset->DtlsPart;
		echo "<pre>";
		print_r($dtl_row);die;*/

		foreach ($response_obj->resultset->DtlsPart as $dtls_row)
		{
			$id_dtls = return_next_id_by_sequence("PRO_FIN_FAB_RCV_DTLS_PK_SEQ", "pro_finish_fabric_rcv_dtls","","",0,"",0,0,0,0,0,0,0 );
			$id_roll = return_next_id_by_sequence("PRO_ROLL_DTLS_PK_SEQ", "pro_roll_details","","",0,"",0,0,0,0,0,0,0 );
			$id_prop = return_next_id_by_sequence("ORDER_WISE_PROP_PK_SEQ", "order_wise_pro_details","","",0,"",0,0,0,0,0,0,0 );
			$id_prod = return_next_id_by_sequence("PRODUCT_DETAILS_MASTER_PK_SEQ", "product_details_master","","",0,"",0,0,0,0,0,0,0 );

			$receive_dtls_data = array(
				'ID'        			=> $id_dtls,
				'MST_ID'   				=> $id,
				'TRANS_ID' 				=> 0,
				'PROD_ID' 				=> $id_prod,
				'BATCH_ID' 				=> $dtls_row->BATCH_ID,
				'BODY_PART_ID' 			=> $dtls_row->BODY_PART_ID,
				'FABRIC_DESCRIPTION_ID' => $dtls_row->DETARMINATION_ID,
				'GSM' 					=> $dtls_row->GSM,
				'WIDTH' 				=> $dtls_row->WIDTH,
				'DIA_WIDTH_TYPE' 		=> $dtls_row->WIDTH_DIA_TYPE,
				'NO_OF_ROLL' 			=> $dtls_row->NO_OF_ROLL,
				'COLOR_ID' 				=> $dtls_row->COLOR_ID,
				'PRODUCTION_QTY' 		=> $dtls_row->QNTY,
				'RECEIVE_QNTY' 			=> $dtls_row->QC_PASS_QNTY,
				'REJECT_QTY' 			=> $dtls_row->REJECT_QNTY,
				'ORDER_ID' 				=> $dtls_row->PO_BREAKDOWN_ID,
				'MACHINE_NO_ID' 		=> $dtls_row->MACHINE_NO_ID,
				'SHIFT_NAME' 			=> $dtls_row->SHIFT_NAME,
				'ROLL_ID' 				=> $dtls_row->ROLL_ID,
				'ROLL_NO' 				=> $dtls_row->ROLL_NO,
				'BARCODE_NO' 			=> $dtls_row->BARCODE_NO,
				'IS_TAB' 				=> 1,
				'INSERTED_BY' 			=> 999,
				'INSERT_DATE' 			=> $pc_date_time
			);

			$receive_roll_data = array(
				'ID'        			=> $id_roll,
				'BARCODE_NO' 			=> $dtls_row->BARCODE_NO,
				'MST_ID'   				=> $id,
				'DTLS_ID' 				=> $id_dtls,
				'PO_BREAKDOWN_ID' 		=> $dtls_row->PO_BREAKDOWN_ID,
				'ENTRY_FORM' 			=> 66,				
				'QNTY' 					=> $dtls_row->QNTY,
				'REJECT_QNTY' 			=> $dtls_row->REJECT_QNTY,
				'QC_PASS_QNTY' 			=> $dtls_row->QC_PASS_QNTY,
				'ROLL_NO' 				=> $dtls_row->ROLL_NO,
				'ROLL_ID' 				=> $dtls_row->ROLL_ID,				
				'BOOKING_WITHOUT_ORDER' => $dtls_row->BOOKING_WITHOUT_ORDER,
				'INSERTED_BY' 			=> 999,
				'INSERT_DATE' 			=> $pc_date_time
			);

			$receive_prop_data = array(
				'ID'        		=> $id_prop,
				'TRANS_ID' 			=> 0,
				'TRANS_TYPE' 		=> 1,
				'ENTRY_FORM' 		=> 66,
				'DTLS_ID' 			=> $id_dtls,				
				'PO_BREAKDOWN_ID' 	=> $dtls_row->PO_BREAKDOWN_ID,
				'PROD_ID' 			=> $dtls_row->PROD_ID,
				'COLOR_ID' 			=> $dtls_row->COLOR_ID,
				'QUANTITY' 			=> $dtls_row->QC_PASS_QNTY,
				'RETURNABLE_QNTY' 	=> $dtls_row->REJECT_QNTY,				
				'INSERTED_BY' 		=> 999,
				'INSERT_DATE' 		=> $pc_date_time
			);

			$prod_id = $productDataArray[$company_id][$dtls_row->DETARMINATION_ID][$dtls_row->GSM][$dtls_row->WIDTH][$dtls_row->COLOR_ID];
			if($prod_id == "")
			{
				$field_array_prod = "ID, COMPANY_ID, ITEM_CATEGORY_ID, DETARMINATION_ID, ITEM_DESCRIPTION, PRODUCT_NAME_DETAILS, UNIT_OF_MEASURE, AVG_RATE_PER_UNIT, LAST_PURCHASED_QNTY, CURRENT_STOCK, STOCK_VALUE, COLOR, GSM, DIA_WIDTH, INSERTED_BY, INSERT_DATE";

				$product_details = $dtls_row->ITEM_DESCRIPTION . ", " . $dtls_row->GSM . ", " . $dtls_row->WIDTH;
				$prod_data = array(
					'ID'        			=> $id_prod,
					'COMPANY_ID' 			=> $company_id,
					'ITEM_CATEGORY_ID' 		=> 2,
					'DETARMINATION_ID' 		=> $dtls_row->DETARMINATION_ID,
					'ITEM_DESCRIPTION' 		=> $dtls_row->ITEM_DESCRIPTION,				
					'PRODUCT_NAME_DETAILS' 	=> $product_details,
					'UNIT_OF_MEASURE' 		=> 12,
					'AVG_RATE_PER_UNIT' 	=> 0,
					'LAST_PURCHASED_QNTY' 	=> 0,
					'CURRENT_STOCK' 		=> 0,
					'STOCK_VALUE' 			=> 0,
					'COLOR' 				=> $dtls_row->COLOR_ID,
					'GSM' 					=> $dtls_row->GSM,
					'DIA_WIDTH' 			=> $dtls_row->WIDTH,
					'INSERTED_BY' 			=> 999,
					'INSERT_DATE' 			=> $pc_date_time
				);
			}

			if(!empty($receive_dtls_data)){
				$this->insertData($receive_dtls_data, 'PRO_FINISH_FABRIC_RCV_DTLS');
			}
			if(!empty($receive_roll_data)){
				$this->insertData($receive_roll_data, 'PRO_ROLL_DETAILS');
			}
			if(!empty($receive_prop_data)){
				$this->insertData($receive_prop_data, 'ORDER_WISE_PRO_DETAILS');
			}
			if(!empty($prod_data)){
				$this->insertData($prod_data, 'PRODUCT_DETAILS_MASTER');
			}
		}

		$this->db->trans_complete();
		if ($this->db->trans_status() == TRUE) {
			return array("status" => "Success", "msg"=> "Receive ID = $receive_mrr");
		} else {
			return array("status" => "Failed");
		}
	}
	
	public function finish_fab_production_barcode_print_data($barcode_no, $batch_no="")
	{
		$barcode_cond 	= ($barcode_no !="")?" and b.barcode_no in($barcode_no)":"";
		$batch_cond 	= ($batch_no !="")?" and a.batch_no in('$batch_no')":"";
		$buyer_part_arr = $color_arr = [];

		$barcode_sql = "SELECT a.company_id,a.batch_no,a.color_id,b.mst_id batch_id,b.prod_id,c.detarmination_id,b.body_part_id,b.item_description as febric_description_id, b.gsm, b.width_dia_type as width, b.barcode_no,b.roll_id,b.roll_no,b.po_id as po_breakdown_id,b.batch_qnty as qnty,b.is_sales, b.roll_id as roll_origin_id,a.booking_without_order,a.booking_no, 1 as type FROM pro_batch_create_mst a, pro_batch_create_dtls b, product_details_master c WHERE a.id=b.mst_id and b.prod_id=c.id and a.entry_form in(0,66) and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0 and b.barcode_no>0 $barcode_cond $batch_cond";
		$barcode_data_rs = $this->db->query($barcode_sql)->result();
		if(!empty($barcode_data_rs))
		{
			$i=0;
			foreach ($barcode_data_rs as $barcode_data) {

				$febric_des_data = explode(",", $barcode_data->FEBRIC_DESCRIPTION_ID);
				$data_arr[$i]["BARCODE_NO"] 			= $barcode_data->BARCODE_NO;
				$data_arr[$i]["BATCH_ID"] 				= $barcode_data->BATCH_ID;
				$data_arr[$i]["COLOR_ID"] 				= $barcode_data->COLOR_ID;

				$color_sql = $this->getAllFieldsByAttribute("LIB_COLOR", "ID, COLOR_NAME", array("STATUS_ACTIVE" => 1));
				if(!empty($color_sql))
				{
					foreach ($color_sql as $color_row) {
						$color_arr[$color_row->ID] = $color_row->COLOR_NAME;
					}
					$data_arr[$i]["COLOR_NAME"] 		= $color_arr[$barcode_data->COLOR_ID];
				}

				$data_arr[$i]["BATCH_NO"] 				= $barcode_data->BATCH_NO;
				$data_arr[$i]["PROD_ID"] 				= $barcode_data->PROD_ID;
				$data_arr[$i]["DETARMINATION_ID"] 		= $barcode_data->DETARMINATION_ID;
				$data_arr[$i]["ITEM_DESCRIPTION"] 		= trim($febric_des_data[0]) . " " . trim($febric_des_data[1]);
				$data_arr[$i]["GSM"] 					= trim($febric_des_data[2]);
				$data_arr[$i]["WIDTH"] 					= trim($febric_des_data[3]);
				$data_arr[$i]["WIDTH_DIA_TYPE"] 		= $barcode_data->WIDTH;

				$b_part_sql = $this->getAllFieldsByAttribute("LIB_BODY_PART", "ID, BODY_PART_FULL_NAME", array("STATUS_ACTIVE" => 1));
				foreach ($b_part_sql as $row) {
					$buyer_part_arr[$row->ID] = $row->BODY_PART_FULL_NAME;
				}
				$data_arr[$i]["BODY_PART_ID"] 			= $barcode_data->BODY_PART_ID;
				$data_arr[$i]["BODY_PART_NAME"] 		= $buyer_part_arr[$barcode_data->BODY_PART_ID];

				$data_arr[$i]["PO_BREAKDOWN_ID"] 		= $barcode_data->PO_BREAKDOWN_ID;
				$data_arr[$i]["ROLL_ID"] 				= $barcode_data->ROLL_ID;
				$data_arr[$i]["ROLL_NO"] 				= $barcode_data->ROLL_NO;
				$data_arr[$i]["BOOKING_WITHOUT_ORDER"] 	= $barcode_data->BOOKING_WITHOUT_ORDER;
				$data_arr[$i]["QNTY"] 					= $barcode_data->QNTY;
				$data_arr[$i]["YARN_LOT"] 				= '';

				if($barcode_data->BOOKING_WITHOUT_ORDER == 0)
				{
					$po_sql = "SELECT a.id,a.po_number,b.style_ref_no,a.job_no_mst,a.file_no,a.grouping internal_ref,c.short_name buyer_name from wo_po_break_down a, wo_po_details_master b left join lib_buyer c on b.buyer_name=c.id and c.status_active=1 where a.job_no_mst=b.job_no and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0 and a.id=$barcode_data->PO_BREAKDOWN_ID";
					$po_data = $this->db->query($po_sql)->row();
					if(!empty($po_data))
					{
						$data_arr[$i]["PO_ID"] 		= $po_data->ID;
						$data_arr[$i]["PO_NUMBER"] 		= $po_data->PO_NUMBER;
						$data_arr[$i]["JOB_NO"] 		= $po_data->JOB_NO_MST;
						$data_arr[$i]["STYLE"] 			= $po_data->STYLE_REF_NO;
						$data_arr[$i]["FILE_NO"] 		= $po_data->FILE_NO;
						$data_arr[$i]["INTERNAL_REF"] 	= $po_data->INTERNAL_REF;
						$data_arr[$i]["BUYER_NAME"] 	= $po_data->BUYER_NAME;
					}
				}
				$i++;
			}

		}

		return $data_arr;

	}
	public function finish_fab_production_barcode_data($barcode_no)
	{
		
		$check_barcode = $this->check_if_barcode_already_qc($barcode_no);
		if(!empty($check_barcode))
		{
			return array("status" => "Failed", "msg"=> "Barcode already scanned. Receive No = " . $check_barcode->RECV_NUMBER);
			die;
		}

		$buyer_part_arr = $color_arr = [];
		$barcode_sql = "SELECT a.company_id,a.batch_no,a.color_id,b.mst_id batch_id,b.prod_id,c.detarmination_id,b.body_part_id,b.item_description as febric_description_id, b.gsm, b.width_dia_type as width, b.barcode_no,b.roll_id,b.roll_no,b.po_id as po_breakdown_id,b.batch_qnty as qnty,b.is_sales, b.roll_id as roll_origin_id,a.booking_without_order,a.booking_no, 1 as type FROM pro_batch_create_mst a, pro_batch_create_dtls b, product_details_master c WHERE a.id=b.mst_id and b.prod_id=c.id and a.entry_form in(0,66) and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0 and b.barcode_no>0 and b.barcode_no in($barcode_no)";
		$barcode_data = $this->db->query($barcode_sql)->row();
		if(!empty($barcode_data))
		{
			$febric_des_data = explode(",", $barcode_data->FEBRIC_DESCRIPTION_ID);
			$data_arr["BARCODE_NO"] 			= $barcode_data->BARCODE_NO;
			$data_arr["BATCH_ID"] 				= $barcode_data->BATCH_ID;
			$data_arr["COLOR_ID"] 				= $barcode_data->COLOR_ID;

			$color_sql = $this->getAllFieldsByAttribute("LIB_COLOR", "ID, COLOR_NAME", array("STATUS_ACTIVE" => 1));
			if(!empty($color_sql))
			{
				foreach ($color_sql as $color_row) {
					$color_arr[$color_row->ID] = $color_row->COLOR_NAME;
				}
				$data_arr["COLOR_NAME"] 		= $color_arr[$barcode_data->COLOR_ID];
			}

			$data_arr["BATCH_NO"] 				= $barcode_data->BATCH_NO;
			$data_arr["PROD_ID"] 				= $barcode_data->PROD_ID;
			$data_arr["DETARMINATION_ID"] 		= $barcode_data->DETARMINATION_ID;
			$data_arr["ITEM_DESCRIPTION"] 		= trim($febric_des_data[0]) . " " . trim($febric_des_data[1]);
			$data_arr["GSM"] 					= trim($febric_des_data[2]);
			$data_arr["WIDTH"] 					= trim($febric_des_data[3]);
			$data_arr["WIDTH_DIA_TYPE"] 		= $barcode_data->WIDTH;

			$b_part_sql = $this->getAllFieldsByAttribute("LIB_BODY_PART", "ID, BODY_PART_FULL_NAME", array("STATUS_ACTIVE" => 1));
			foreach ($b_part_sql as $row) {
				$buyer_part_arr[$row->ID] = $row->BODY_PART_FULL_NAME;
			}
			$data_arr["BODY_PART_ID"] 			= $barcode_data->BODY_PART_ID;
			$data_arr["BODY_PART_NAME"] 		= $buyer_part_arr[$barcode_data->BODY_PART_ID];

			$data_arr["PO_BREAKDOWN_ID"] 		= $barcode_data->PO_BREAKDOWN_ID;
			$data_arr["ROLL_ID"] 				= $barcode_data->ROLL_ID;
			$data_arr["ROLL_NO"] 				= $barcode_data->ROLL_NO;
			$data_arr["BOOKING_WITHOUT_ORDER"] 	= $barcode_data->BOOKING_WITHOUT_ORDER;
			$data_arr["QNTY"] 					= $barcode_data->QNTY;
			$data_arr["YARN_LOT"] 			= '';

			if($barcode_data->BOOKING_WITHOUT_ORDER == 0)
			{
				$po_sql = "SELECT a.id,a.po_number,b.style_ref_no,a.job_no_mst,a.file_no,a.grouping internal_ref,c.short_name buyer_name from wo_po_break_down a, wo_po_details_master b left join lib_buyer c on b.buyer_name=c.id and c.status_active=1 where a.job_no_mst=b.job_no and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0 and a.id=$barcode_data->PO_BREAKDOWN_ID";

				$po_data = $this->db->query($po_sql)->row();
				if(!empty($po_data))
				{
					$data_arr["PO_ID"] 		= $po_data->ID;
					$data_arr["PO_NUMBER"] 		= $po_data->PO_NUMBER;
					$data_arr["JOB_NO"] 		= $po_data->JOB_NO_MST;
					$data_arr["STYLE"] 			= $po_data->STYLE_REF_NO;
					$data_arr["FILE_NO"] 		= $po_data->FILE_NO;
					$data_arr["INTERNAL_REF"] 	= $po_data->INTERNAL_REF;
					$data_arr["BUYER_NAME"] 	= $po_data->BUYER_NAME;
				}
			}

		}

		return $data_arr;
	}
	public function check_if_barcode_already_qc($barcode_no){
		$scanned_barcode_sql = "select c.recv_number 
		from inv_receive_master c, pro_finish_fabric_rcv_dtls a, pro_roll_details b
		where c.id=a.mst_id and a.id=b.dtls_id and b.entry_form=66 and b.status_active=1 and b.is_deleted=0 and b.barcode_no in ($barcode_no)";
		return  $this->db->query($scanned_barcode_sql)->row();
		/*if(!empty($scanned_barcode_data))
		{
			return array("status" => "Failed", "msg"=> "Barcode already scanned. Receive No = " . $scanned_barcode_data->RECV_NUMBER);
			die;
		}*/
	}
	public function get_machine_arr()
	{
		$machine_sql="select id, (machine_no || '-' || brand) as machine_name from lib_machine_name where category_id=4 and status_active=1 and is_deleted=0 and is_locked=0";
		$machine_rs = $this->db->query($machine_sql)->result();

		$i=0;
		$machine_arr = array();
		foreach ($machine_rs as $machine_data) {
			$machine_arr[$i]["ID"] = $machine_data->ID;
			$machine_arr[$i]["MACHINE_NAME"] = $machine_data->MACHINE_NAME;
			$i++;
		}
		return $machine_arr;
	}
	public function print_emb_sp_insert_receive($qc_obj)
	{
		$response_obj = json_decode($qc_obj);
		$pc_date_time = date("d-M-Y h:i:s A",time());
		$issue_date   = date("d-M-Y");
		$user_id 	  = 1;

		$this->db->trans_start();
		$mst_part_data = $response_obj->resultset->MasterPart;

		if($mst_part_data->EMBEL_ID == 1)
		{
			$mrr_prefix = "BRP";
		}
		if($mst_part_data->EMBEL_ID == 2)
		{
			$mrr_prefix = "BRE";
		}
		if($mst_part_data->EMBEL_ID == 4)
		{
			$mrr_prefix = "BRS";
		}

		$new_sys_number = explode("*", return_next_id_by_sequence("", "pro_gmts_delivery_mst","",1,1,$mrr_prefix,0,date("Y",time()),0,0,3,$mst_part_data->EMBEL_ID,0));
		$mst_id = return_next_id_by_sequence(  "PRO_GMTS_DELIVERY_MST_SEQ", "PRO_GMTS_DELIVERY_MST" );
		$delivery_mst = array(
			'ID'        => $mst_id,
			'SYS_NUMBER_PREFIX' => $new_sys_number[1],
			'SYS_NUMBER_PREFIX_NUM' => $new_sys_number[2],
			'SYS_NUMBER' => $new_sys_number[0],
			'COMPANY_ID' => $mst_part_data->COMPANY_ID,
			'PRODUCTION_TYPE' => 3,
			'EMBEL_NAME' => $mst_part_data->EMBEL_ID,
			'EMBEL_TYPE' => $mst_part_data->EMBEL_TYPE,
			'LOCATION_ID' => $mst_part_data->LOCATION_ID,
			'DELIVERY_BASIS' => 3,
			'PRODUCTION_SOURCE' => 1,
			'SERVING_COMPANY' => 1,
			'ISSUE_CHALLAN_ID' => $mst_part_data->CHALLAN_ID,
			'FLOOR_ID' => $mst_part_data->FLOOR_ID,
			'DELIVERY_DATE' => $mst_part_data->DELIVERY_DATE,
			'INSERTED_BY' => $user_id,
			'INSERT_DATE' => $pc_date_time
		);

		if(!empty($delivery_mst)){
			$this->insertData($delivery_mst, 'PRO_GMTS_DELIVERY_MST');
		}

		$challan_no=(int)$new_sys_number[2];
		$txt_challan_no=$new_sys_number[0];

		$dtls_part_data = $response_obj->resultset->DtlsPart;
		foreach ($dtls_part_data as $dtls_row)
		{
			if($dtls_part_data->RE_SCAN!=1)
			{
				$bundleCheckArr[$dtls_part_data->BUNDLE_NO]=$dtls_part_data->BUNDLE_NO;
			}

			$all_cut_no_arr[$dtls_part_data->CUT_NO]=$dtls_part_data->CUT_NO;
		}

		$cut_nums="'".implode("','", $all_cut_no_arr)."'";
		$bundle_wise_type_sql="SELECT b.bundle_no ,b.color_type_id from ppl_cut_lay_mst a,ppl_cut_lay_bundle b where a.id=b.mst_id and  a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0 and a.cutting_no in ($cut_nums) ";
		$bundle_wise_data = $this->db->query($bundle_wise_type_sql)->result();
		$bundle_wise_type_array=array();
		foreach($bundle_wise_data as $vals)
		{
			$bundle_wise_type_array[$vals->BUNDLE_NO]=$vals->COLOR_TYPE_ID;
		}

		$bundle="'".implode("','",$bundleCheckArr)."'";
		$receive_sql="SELECT c.barcode_no,c.bundle_no from pro_garments_production_mst a,pro_garments_production_dtls c where a.id=c.mst_id and a.production_type=3 and a.embel_name=".$mst_part_data->EMBEL_ID." and c.bundle_no  in ($bundle) and c.production_type=3 and c.status_active=1 and c.is_deleted=0 and a.status_active=1 and a.is_deleted=0 and (c.is_rescan=0 or c.is_rescan is null)";
		$receive_result = $this->db->query($receive_sql)->result();
		foreach ($receive_result as $row)
		{
			$duplicate_bundle[$row->BUNDLE_NO]=$row->BUNDLE_NO;
		}

		foreach ($dtls_part_data as $dtls_row)
		{
			if($duplicate_bundle[$dtls_row->BUNDLE_NO]=='')
			{
				$bundleCutArr[$dtls_row->BUNDLE_NO]=$dtls_row->CUT_NO;
				$cutArr[$dtls_row->ORDER_ID][$dtls_row->ITEM_ID][$dtls_row->COUNTRY_ID]=$dtls_row->CUT_NO;
				$mstArr[$dtls_row->ORDER_ID][$dtls_row->ITEM_ID][$dtls_row->COUNTRY_ID]+=$dtls_row->QNTY;
				$colorSizeArr[$dtls_row->BUNDLE_NO]=$dtls_row->ORDER_ID."**".$dtls_row->ITEM_ID."**".$dtls_row->COUNTRY_ID;
				$dtlsArr[$dtls_row->BUNDLE_NO]+=$dtls_row->QNTY;
				$dtlsArrColorSize[$dtls_row->BUNDLE_NO]=$dtls_row->COLOR_SIZE_ID;
				$bundleRescanArr[$dtls_row->BUNDLE_NO]=$dtls_row->RE_SCAN;
				$bundleBarcodeArr[$dtls_row->BUNDLE_NO]=$dtls_row->BARCODE_NO;
			}
		}

		foreach ($mstArr as $orderId => $orderData) {
			foreach ($orderData as $gmtsItemId => $gmtsItemIdData) {
				foreach ($gmtsItemIdData as $countryId => $qty) {
					$id= return_next_id_by_sequence(  "PRO_GAR_PRODUCTION_MST_SEQ",  "PRO_GARMENTS_PRODUCTION_MST" );
					$production_mst = array(
						'ID'        => $id,
						'DELIVERY_MST_ID' => $mst_id,
						'CHALLAN_NO' => $new_sys_number[2],
						'CUT_NO' => $cutArr[$orderId][$gmtsItemId][$countryId],
						'COMPANY_ID' => $mst_part_data->COMPANY_ID,
						'EMBEL_NAME' => $mst_part_data->EMBEL_ID,
						'EMBEL_TYPE' => $mst_part_data->EMBEL_TYPE,
						'GARMENTS_NATURE' => 2,
						'PO_BREAK_DOWN_ID' => $orderId,
						'ITEM_NUMBER_ID' => $gmtsItemId,
						'COUNTRY_ID' => $countryId,
						'PRODUCTION_SOURCE' => 1,
						'SERVING_COMPANY' => 1,
						'LOCATION' => $mst_part_data->LOCATION_ID,
						'PRODUCTION_DATE' => $mst_part_data->DELIVERY_DATE,
						'PRODUCTION_QUANTITY' => $qty,
						'PRODUCTION_TYPE' => 3,
						'ENTRY_BREAK_DOWN_TYPE' => 3,
						'FLOOR_ID' => $mst_part_data->FLOOR_ID,
						'INSERTED_BY' => $user_id,
						'INSERT_DATE' => $pc_date_time
					);

					$mstIdArr[$orderId][$gmtsItemId][$countryId] = $id;

					if(!empty($production_mst)){
						$this->insertData($production_mst, 'PRO_GARMENTS_PRODUCTION_MST');
					}
				}
			}
		}

		foreach ($dtlsArr as $bundle_no => $qty) {

			$colorSizedData = explode("**", $colorSizeArr[$bundle_no]);
			$gmtsMstId = $mstIdArr[$colorSizedData[0]][$colorSizedData[1]][$colorSizedData[2]];

			$cut_no=$bundleCutArr[$bundle_no];
			$dtls_id = return_next_id_by_sequence(  "PRO_GAR_PRODUCTION_DTLS_SEQ", "PRO_GARMENTS_PRODUCTION_DTLS" );

			$data_array_dtls = array(
				'ID'        => $dtls_id,
				'DELIVERY_MST_ID' => $mst_id,
				'MST_ID' => $gmtsMstId,
				'PRODUCTION_TYPE' => 3,
				'COLOR_SIZE_BREAK_DOWN_ID' => $dtlsArrColorSize[$bundle_no],
				'PRODUCTION_QNTY' => $qty,
				'CUT_NO' => $cut_no,
				'BUNDLE_NO' => $bundle_no,
				'BARCODE_NO' => $bundleBarcodeArr[$bundle_no],
				'IS_RESCAN' => $bundleRescanArr[$bundle_no],
				'COLOR_TYPE_ID' => ($bundle_wise_type_array[$bundle_no])?$bundle_wise_type_array[$bundle_no]:0
			);

			if(!empty($data_array_dtls)){
				$this->insertData($data_array_dtls, 'PRO_GARMENTS_PRODUCTION_DTLS');
			}

		}

		$this->db->trans_complete();
		if ($this->db->trans_status() == TRUE) {
			return array("status" => "Success", "msg"=> "Data saved successfully. Challan No = ".$new_sys_number[0]."");
		} else {
			return array("status" => "Failed");
		}

	}
	
	public function print_emb_sp_insert($qc_obj)
	{
		$response_obj = json_decode($qc_obj);
		$pc_date_time = date("d-M-Y h:i:s A",time());
		$issue_date   = date("d-M-Y");
		$user_id 	  = 1;

		$this->db->trans_start();
		$mst_part_data = $response_obj->resultset->MasterPart;

		if($mst_part_data->EMBEL_ID == 1)
		{
			$mrr_prefix = "PER";
		}
		if($mst_part_data->EMBEL_ID == 2)
		{
			$mrr_prefix = "EDE";
		}
		if($mst_part_data->EMBEL_ID == 4)
		{
			$mrr_prefix = "SDE";
		}

		$new_sys_number = explode("*", return_next_id_by_sequence("", "pro_gmts_delivery_mst","",1,1,$mrr_prefix,0,date("Y",time()),0,0,2,$mst_part_data->EMBEL_ID,0));
		$mst_id = return_next_id_by_sequence(  "PRO_GMTS_DELIVERY_MST_SEQ", "PRO_GMTS_DELIVERY_MST" );
		$delivery_mst = array(
			'ID'        => $mst_id,
			'SYS_NUMBER_PREFIX' => $new_sys_number[1],
			'SYS_NUMBER_PREFIX_NUM' => $new_sys_number[2],
			'SYS_NUMBER' => $new_sys_number[0],
			'COMPANY_ID' => $mst_part_data->COMPANY_ID,
			'PRODUCTION_TYPE' => 2,
			'EMBEL_NAME' => $mst_part_data->EMBEL_ID,
			'EMBEL_TYPE' => $mst_part_data->EMBEL_TYPE,
			'LOCATION_ID' => $mst_part_data->LOCATION_ID,
			'DELIVERY_BASIS' => 3,
			'PRODUCTION_SOURCE' => 1,
			'SERVING_COMPANY' => 1,
			'WORKING_COMPANY_ID' => 1,
			'WORKING_LOCATION_ID' => $mst_part_data->LOCATION_ID,
			'BODY_PART' => $mst_part_data->BODY_PART,
			'FLOOR_ID' => $mst_part_data->FLOOR_ID,
			'DELIVERY_DATE' => $mst_part_data->DELIVERY_DATE,
			'INSERTED_BY' => $user_id,
			'INSERT_DATE' => $pc_date_time
		);

		if(!empty($delivery_mst)){
			$this->insertData($delivery_mst, 'PRO_GMTS_DELIVERY_MST');
		}

		$challan_no=(int)$new_sys_number[2];
		$txt_challan_no=$new_sys_number[0];

		$dtls_part_data = $response_obj->resultset->DtlsPart;
		foreach ($dtls_part_data as $dtls_row)
		{
			if($dtls_part_data->RE_SCAN!=1)
			{
				$bundleCheckArr[$dtls_part_data->BUNDLE_NO]=$dtls_part_data->BUNDLE_NO;
			}

			$all_cut_no_arr[$dtls_part_data->CUT_NO]=$dtls_part_data->CUT_NO;
		}

		$cut_nums="'".implode("','", $all_cut_no_arr)."'";
		$bundle_wise_type_sql="SELECT b.bundle_no ,b.color_type_id from ppl_cut_lay_mst a,ppl_cut_lay_bundle b where a.id=b.mst_id and  a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0 and a.cutting_no in ($cut_nums) ";
		$bundle_wise_data = $this->db->query($bundle_wise_type_sql)->result();
		$bundle_wise_type_array=array();
		foreach($bundle_wise_data as $vals)
		{
			$bundle_wise_type_array[$vals->BUNDLE_NO]=$vals->COLOR_TYPE_ID;
		}

		$bundle="'".implode("','",$bundleCheckArr)."'";
		$receive_sql="SELECT c.barcode_no,c.bundle_no from pro_garments_production_mst a,pro_garments_production_dtls c where a.id=c.mst_id and a.production_type=2 and a.embel_name=".$mst_part_data->EMBEL_ID." and c.bundle_no  in ($bundle) and c.production_type=2 and c.status_active=1 and c.is_deleted=0 and a.status_active=1 and a.is_deleted=0 and (c.is_rescan=0 or c.is_rescan is null)";
		$receive_result = $this->db->query($receive_sql)->result();
		foreach ($receive_result as $row)
		{
			$duplicate_bundle[$row->BUNDLE_NO]=$row->BUNDLE_NO;
		}

		foreach ($dtls_part_data as $dtls_row)
		{
			if($duplicate_bundle[$dtls_row->BUNDLE_NO]=='')
			{
				$bundleCutArr[$dtls_row->BUNDLE_NO]=$dtls_row->CUT_NO;
				$cutArr[$dtls_row->ORDER_ID][$dtls_row->ITEM_ID][$dtls_row->COUNTRY_ID]=$dtls_row->CUT_NO;
				$mstArr[$dtls_row->ORDER_ID][$dtls_row->ITEM_ID][$dtls_row->COUNTRY_ID]+=$dtls_row->QNTY;
				$colorSizeArr[$dtls_row->BUNDLE_NO]=$dtls_row->ORDER_ID."**".$dtls_row->ITEM_ID."**".$dtls_row->COUNTRY_ID;
				$dtlsArr[$dtls_row->BUNDLE_NO]+=$dtls_row->QNTY;
				$dtlsArrColorSize[$dtls_row->BUNDLE_NO]=$dtls_row->COLOR_SIZE_ID;
				$bundleRescanArr[$dtls_row->BUNDLE_NO]=$dtls_row->RE_SCAN;
				$bundleBarcodeArr[$dtls_row->BUNDLE_NO]=$dtls_row->BARCODE_NO;
			}
		}

		foreach ($mstArr as $orderId => $orderData) {
			foreach ($orderData as $gmtsItemId => $gmtsItemIdData) {
				foreach ($gmtsItemIdData as $countryId => $qty) {
					$id= return_next_id_by_sequence(  "PRO_GAR_PRODUCTION_MST_SEQ",  "PRO_GARMENTS_PRODUCTION_MST" );
					$production_mst = array(
						'ID'        => $id,
						'DELIVERY_MST_ID' => $mst_id,
						'CHALLAN_NO' => $new_sys_number[2],
						'CUT_NO' => $cutArr[$orderId][$gmtsItemId][$countryId],
						'COMPANY_ID' => $mst_part_data->COMPANY_ID,
						'EMBEL_NAME' => $mst_part_data->EMBEL_ID,
						'EMBEL_TYPE' => $mst_part_data->EMBEL_TYPE,
						'GARMENTS_NATURE' => 2,
						'PO_BREAK_DOWN_ID' => $orderId,
						'ITEM_NUMBER_ID' => $gmtsItemId,
						'COUNTRY_ID' => $countryId,
						'PRODUCTION_SOURCE' => 1,
						'SERVING_COMPANY' => 1,
						'LOCATION' => $mst_part_data->LOCATION_ID,
						'PRODUCTION_DATE' => $mst_part_data->DELIVERY_DATE,
						'PRODUCTION_QUANTITY' => $qty,
						'PRODUCTION_TYPE' => 2,
						'ENTRY_BREAK_DOWN_TYPE' => 3,
						'FLOOR_ID' => $mst_part_data->FLOOR_ID,
						'INSERTED_BY' => $user_id,
						'INSERT_DATE' => $pc_date_time
					);

					$mstIdArr[$orderId][$gmtsItemId][$countryId] = $id;
					$delivMstIdArr[$orderId][$gmtsItemId][$countryId] = $id;

					if(!empty($production_mst)){
						$this->insertData($production_mst, 'PRO_GARMENTS_PRODUCTION_MST');
					}
				}
			}
		}

		foreach ($dtlsArr as $bundle_no => $qty) {

			$colorSizedData = explode("**", $colorSizeArr[$bundle_no]);
			$gmtsMstId = $mstIdArr[$colorSizedData[0]][$colorSizedData[1]][$colorSizedData[2]];
			$deliMstId = $delivMstIdArr[$colorSizedData[0]][$colorSizedData[1]][$colorSizedData[2]];

			$cut_no=$bundleCutArr[$bundle_no];
			$dtls_id = return_next_id_by_sequence(  "PRO_GAR_PRODUCTION_DTLS_SEQ", "PRO_GARMENTS_PRODUCTION_DTLS" );

			$data_array_dtls = array(
				'ID'        => $dtls_id,
				'DELIVERY_MST_ID' => $mst_id,
				'MST_ID' => $gmtsMstId,
				'PRODUCTION_TYPE' => 2,
				'COLOR_SIZE_BREAK_DOWN_ID' => $dtlsArrColorSize[$bundle_no],
				'PRODUCTION_QNTY' => $qty,
				'CUT_NO' => $cut_no,
				'BUNDLE_NO' => $bundle_no,
				'BARCODE_NO' => $bundleBarcodeArr[$bundle_no],
				'IS_RESCAN' => $bundleRescanArr[$bundle_no],
				'COLOR_TYPE_ID' => ($bundle_wise_type_array[$bundle_no])?$bundle_wise_type_array[$bundle_no]:0,
				'PRODUCTION_QNTY' => $qty
			);

			if(!empty($data_array_dtls)){
				$this->insertData($data_array_dtls, 'PRO_GARMENTS_PRODUCTION_DTLS');
			}

		}

		$this->db->trans_complete();
		if ($this->db->trans_status() == TRUE) {
			return array("status" => "Success", "msg"=> "Data saved successfully. Challan No = ".$new_sys_number[0]."");
		} else {
			return array("status" => "Failed");
		}

	}

	public function refference_data($type)
	{
		if($type == 1)
		{
			$emblishment_name_array = array(1 => "Printing", 2 => "Embroidery", 4 => "Special Works");
			foreach ($emblishment_name_array as $key => $row)
			{
				$data_arr["MasterPart"][$i]['ID'] = $key;
				$data_arr["MasterPart"][$i]['NAME'] = $row;
				$i++;
			}
		}
		if($type == 2)
		{
			$emblishment_print_type = array(1 => "Rubber", 2 => "Glitter", 3 => "Flock", 4 => "Puff", 5 => "High Density", 6 => "Foil", 7 => "Rubber+Foil", 8 => "Rubber+Silver", 9 => "Pigment", 10 => "Rubber+Pearl", 11 => "Rubber+Sugar", 12 => "Transfer / Sel", 13 => "Crack", 14 => "Photo", 15 => "Foil+Photo", 16 => "Pigment+Stud", 17 => "Rubber+Stud", 18 => "Rubber+Glitter", 19 => "Photo+Silicon", 20 => "Rubber+Silicon", 21 => "Rubber+Stud/Stone", 22 => "Photo+Stud/Stone", 23 => "Rubber+Flock", 24 => "Photo+Flock", 25 => "Discharge", 26 => "Discharge+ Flock", 27 => " Discharge + Pigment", 28 => "Pigment + Glitter", 29 => "Pigment + Foil", 30 => "pigment+ Plastisol", 31 => "Plastisol", 32 => "Flou color", 33 => "Fluo +Pigment", 34 => "Photo + Pigment", 35 => "Reverse", 36 => "Reverse + Pigment", 37 => "Aop", 38 => "Burnout", 39 => "Sublimation", 40 => "Heat Press", 41 => "Pigment + Rubber", 42 => "Emboss", 43 => "Leaser Print", 44 => "Glow In Dark", 45 => "Metallic", 46 => "Pad Printing", 47 => "Pigment/Rubber", 48 => "Regular+Puff+Silver Foil", 49 => "Foil + Glitter", 50 => "Gel + Pigment + Flock", 51 => "Applique", 52 => "Rubber+High Density", 53 => "Placement", 54 => "High D + Foil", 55 => "Silicon", 56 => "Screen Print", 57 => "Rubber-Label Print", 58 => "Pigment-Label Print", 59 => "Foil+Puff", 60 => "Digital Printing", 61 => "Flock+Pigment", 62 => "HD Gel", 63 => "Pigment Stone", 64 => "Rubber Flock", 65 => "Pigment + Crack print", 66 => "Pigment + High-density Print", 67 => "Crack + High-density Print", 68 => "Pigment + Glitter + Foil", 69 => "High Density + Gradient", 70 => "Pigment High Raised Rubber", 71 => "Eco Discharge + Gel", 72 => "Cmyk Photo", 73 => "Cmyk Discharge", 74 => "Cmyk Pigment", 75 => "Cmyk Rubber", 76 => "Cmyk Foil", 77 => "Rubber + Gel", 78 => "Reflective Print",79 => "Gel");
			$i = 0;
			foreach ($emblishment_print_type as $key => $row)
			{
				$data_arr["MasterPart"][$i]['ID'] = $key;
				$data_arr["MasterPart"][$i]['TYPE'] = $row;
				$i++;
			}
		}
		if($type == 3)
		{
			$body_part_data = $this->db->query("select id,bundle_use_for from ppl_bundle_title where company_id=1")->result();
			$i = 0;
			foreach ($body_part_data as $row)
			{
				$data_arr["MasterPart"][$i]['ID'] = $row->ID;
				$data_arr["MasterPart"][$i]['BODY_PART'] = $row->BUNDLE_USE_FOR;
				$i++;
			}
		}
		if($type == 4)
		{
			$emblishment_embroy_type = array(1 => "Applique", 2 => "Plain", 3 => "Sequence", 4 => "Patch Label", 5 => "Snail",6=>"3D",7=>"Back Pkt EMB");
			$i = 0;
			foreach ($emblishment_embroy_type as $key => $row)
			{
				$data_arr["MasterPart"][$i]['ID'] = $key;
				$data_arr["MasterPart"][$i]['TYPE'] = $row;
				$i++;
			}
		}
		if($type == 5)
		{
			$emblishment_spwork_type = array(1 => "Stone", 2 => "Bow", 3 => "Ribbon", 4 => "Beeds", 5 => "H/Press", 6 => "Smocking");
			$i = 0;
			foreach ($emblishment_spwork_type as $key => $row)
			{
				$data_arr["MasterPart"][$i]['ID'] = $key;
				$data_arr["MasterPart"][$i]['TYPE'] = $row;
				$i++;
			}
		}
		return $data_arr;
	}
	
	public function print_emb_sp_barcode_data_receive( $company=1, $barcode, $emb_name ) {
		$data_arr = array();

		$size_arr 		= return_library_array("select id, size_name from lib_size", 'id', 'size_name');
		$color_arr 		= return_library_array("select id, color_name from lib_color", "id", "color_name");
		$country_arr 	= return_library_array("select id, country_name from lib_country", 'id', 'country_name');
		$buyer_arr 		= return_library_array("select id, short_name from lib_buyer", 'id', 'short_name');
		$garments_item 	= return_library_array("select id,item_name from  lib_garment_item where status_active=1 and is_deleted=0 order by item_name", "id", "item_name");

		$scanned_bundle_sql="SELECT b.bundle_no, b.bundle_no from pro_garments_production_mst a,pro_garments_production_dtls b where a.id=b.mst_id and b.production_type=3 and a.embel_name in($emb_name,0) and b.barcode_no=$barcode and b.status_active=1 and b.is_deleted=0 and a.status_active=1 and a.is_deleted=0";
		$scanned_bundle_arr = $this->db->query($scanned_bundle_sql)->row();
		if(!empty($scanned_bundle_arr))
		{
			return array("status" => "Failed", "msg"=> "This Bundle No is already scanned. System Id = ".$scanned_bundle_arr->SYS_NUMBER);
			die;
		}

		$sql_mst_data="SELECT a.id,a.sys_number, a.company_id,a.location_id, a.embel_name, a.embel_type, a.serving_company,a.floor_id,a.organic,
		a.production_source, a.working_company_id,a.working_location_id
		from  pro_gmts_delivery_mst a,pro_garments_production_dtls c where a.id=c.delivery_mst_id and c.production_type=2
		and a.embel_name=$emb_name and a.status_active=1 and a.is_deleted=0  and c.status_active=1 and c.is_deleted=0 and c.barcode_no=$barcode
		group by a.id,a.sys_number, a.company_id,a.location_id, a.embel_name, a.embel_type, a.serving_company,a.floor_id,a.organic,a.production_source, a.working_company_id,a.working_location_id";
		$master_data = $this->db->query($sql_mst_data)->row();
		if(!empty($master_data))
		{
			$data_arr["MasterPart"]['CHALLAN_ID'] 			= $master_data->ID;
			$data_arr["MasterPart"]['CHALLAN_NO'] 			= $master_data->SYS_NUMBER;
			$data_arr["MasterPart"]['COMPANY_ID'] 			= $master_data->COMPANY_ID;
			$data_arr["MasterPart"]['LOCATION_ID'] 			= $master_data->LOCATION_ID;
			$data_arr["MasterPart"]['EMBEL_NAME'] 			= $master_data->EMBEL_NAME;
			$data_arr["MasterPart"]['SERVING_COMPANY'] 		= $master_data->SERVING_COMPANY;
			$data_arr["MasterPart"]['FLOOR_ID'] 			= $master_data->FLOOR_ID;
			$data_arr["MasterPart"]['PRODUCTION_SOURCE'] 	= $master_data->PRODUCTION_SOURCE;
			$data_arr["MasterPart"]['WORKING_COMPANY_ID'] 	= $master_data->WORKING_COMPANY_ID;
			$data_arr["MasterPart"]['WORKING_LOCATION_ID'] 	= $master_data->WORKING_LOCATION_ID;
		}

		$sql="SELECT C.CUT_NO,C.COLOR_TYPE_ID, C.BUNDLE_NO, D.PO_BREAK_DOWN_ID, D.JOB_NO_MST, D.ITEM_NUMBER_ID, D.COUNTRY_ID,d.id as COLOR_SIZE_ID, D.SIZE_NUMBER_ID, D.COLOR_NUMBER_ID, C.BARCODE_NO, C.PRODUCTION_QNTY AS QTY, E.PO_NUMBER,C.DELIVERY_MST_ID,f.JOB_NO_PREFIX_NUM,f.BUYER_NAME from pro_garments_production_mst a, pro_garments_production_dtls c, wo_po_color_size_breakdown d, wo_po_break_down e ,wo_po_details_master f where d.job_no_mst=f.job_no and  a.id=c.mst_id and c.color_size_break_down_id=d.id and d.po_break_down_id=e.id and a.company_id=$company and c.barcode_no='$barcode' and c.production_type=2 and a.embel_name=$emb_name and a.status_active=1 and a.is_deleted=0 and c.status_active=1 and c.is_deleted=0 and d.status_active in(1,2,3) and d.is_deleted=0 and e.status_active in(1,2,3) and e.is_deleted=0 and f.status_active=1 and f.is_deleted=0  order by c.cut_no,  length(c.bundle_no) asc, c.bundle_no asc";

		$result = $this->db->query($sql)->result();
		foreach ($result as $v)
		{
			if($scanned_bundle_arr[$v->BUNDLE_NO]=="")
			{
				$data_arr["dtlsPart"]["COMPANY_ID"] = $company;
				$data_arr["dtlsPart"]["CUT_NO"] = $v->CUT_NO;
				$data_arr["dtlsPart"]["PRODUCTION_TYPE"] = 3;
				$data_arr["dtlsPart"]["BUNDLE_NO"] = $v->BUNDLE_NO;
				$data_arr["dtlsPart"]["BARCODE_NO"] = $v->BARCODE_NO;
				$data_arr["dtlsPart"]["YEAR"] = date("Y",strtotime($get_cutting_info->ENTRY_DATE));
				$data_arr["dtlsPart"]["COLOR_SIZE_ID"] = $v->COLOR_SIZE_ID;
				$data_arr["dtlsPart"]["ORDER_ID"] = $v->PO_BREAK_DOWN_ID;
				$data_arr["dtlsPart"]["COUNTRY_ID"] = $v->COUNTRY_ID;
				$data_arr["dtlsPart"]["SIZE_ID"] = $v->SIZE_NUMBER_ID;
				$data_arr["dtlsPart"]["COLOR_ID"] = $v->COLOR_NUMBER_ID;
				$data_arr["dtlsPart"]["JOB_NO"] = $v->JOB_NO_PREFIX_NUM;
				$data_arr["dtlsPart"]["COLOR_TYPE_ID"] = $bundle_wise_data->COLOR_TYPE_ID;
				$data_arr["dtlsPart"]["QNTY"] = $v->QTY;

				if (isset($buyer_arr[$v->BUYER_NAME])) {
					$data_arr["dtlsPart"]["BUYER"] = $buyer_arr[$v->BUYER_NAME];
				} else {
					$data_arr["dtlsPart"]["BUYER"] = "";
				}

				$data_arr["dtlsPart"]["ORDER_NO"] = "$v->PO_NUMBER";
				$data_arr["dtlsPart"]["ITEM_ID"] = $v->ITEM_NUMBER_ID;
				if (isset($garments_item[$v->ITEM_NUMBER_ID])) {
					$data_arr["dtlsPart"]["ITEM_NAME"] = $garments_item[$v->ITEM_NUMBER_ID];
				} else {
					$data_arr["dtlsPart"]["ITEM_NAME"] = "";
				}
			}
		}

		return $data_arr;
	}
	public function print_emb_sp_barcode_data( $company=1, $barcode, $emb_name ) {

		$data_arr = array();

		$size_arr 		= return_library_array("select id, size_name from lib_size", 'id', 'size_name');
		$color_arr 		= return_library_array("select id, color_name from lib_color", "id", "color_name");
		$country_arr 	= return_library_array("select id, country_name from lib_country", 'id', 'country_name');
		$buyer_arr 		= return_library_array("select id, short_name from lib_buyer", 'id', 'short_name');
		$garments_item 	= return_library_array("select id,item_name from  lib_garment_item where status_active=1 and is_deleted=0 order by item_name", "id", "item_name");

		$scanned_bundle_sql="SELECT a.sys_number from pro_gmts_delivery_mst a,pro_garments_production_dtls b where a.id=b.delivery_mst_id and b.production_type in (2,4) and a.embel_name in($emb_name,0) and b.barcode_no=$barcode and b.status_active=1 and b.is_deleted=0";
		$scanned_bundle_arr = $this->db->query($scanned_bundle_sql)->row();
		if(!empty($scanned_bundle_arr))
		{
			return array("status" => "Failed", "msg"=> "This Bundle No is already scanned. System Id = ".$scanned_bundle_arr->SYS_NUMBER);
			die;
		}

		$get_cutting_info = $this->db->query("SELECT A.COMPANY_ID,A.CUTTING_NO,A.ENTRY_DATE from ppl_cut_lay_mst a,ppl_cut_lay_bundle b where a.id=b.mst_id and  a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0 and b.barcode_no=$barcode")->row();

		$bundle_wise_type_sql="SELECT b.color_type_id from ppl_cut_lay_mst a,ppl_cut_lay_bundle b where a.id=b.mst_id and  a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0 and b.barcode_no=$barcode";
		$bundle_wise_data = $this->db->query($bundle_wise_type_sql)->row();

		$last_operation=gmt_production_validation_script( 91, 1,'',$get_cutting_info->CUTTING_NO, 2);
		if(empty($last_operation))
		{
			return array("status" => "Failed", "msg"=> "No Data Found");
			die;
		}
		else
		{
			$sql_mst_data="select a.id,a.sys_number, a.company_id,a.location_id, a.embel_name, a.embel_type, a.serving_company,a.floor_id,a.organic,
			a.production_source, a.working_company_id,a.working_location_id
			from  pro_gmts_delivery_mst a,pro_garments_production_dtls c where a.id=c.delivery_mst_id and c.production_type=2
			and a.embel_name=$emb_name and a.status_active=1 and a.is_deleted=0  and c.status_active=1 and c.is_deleted=0 and c.barcode_no=$barcode
			group by a.id,a.sys_number, a.company_id,a.location_id, a.embel_name, a.embel_type, a.serving_company,a.floor_id,a.organic,a.production_source, a.working_company_id,a.working_location_id";
			$master_data = $this->db->query($sql_mst_data)->row();
			if(!empty($master_data))
			{
				$data_arr["MasterPart"]['CHALLAN_NO'] 			= $master_data->SYS_NUMBER;
				$data_arr["MasterPart"]['COMPANY_ID'] 			= $master_data->COMPANY_ID;
				$data_arr["MasterPart"]['LOCATION_ID'] 			= $master_data->LOCATION_ID;
				$data_arr["MasterPart"]['EMBEL_NAME'] 			= $master_data->EMBEL_NAME;
				$data_arr["MasterPart"]['SERVING_COMPANY'] 		= $master_data->SERVING_COMPANY;
				$data_arr["MasterPart"]['FLOOR_ID'] 			= $master_data->FLOOR_ID;
				$data_arr["MasterPart"]['PRODUCTION_SOURCE'] 	= $master_data->PRODUCTION_SOURCE;
				$data_arr["MasterPart"]['WORKING_COMPANY_ID'] 	= $master_data->WORKING_COMPANY_ID;
				$data_arr["MasterPart"]['WORKING_LOCATION_ID'] 	= $master_data->WORKING_LOCATION_ID;

				$delivery_mst_id = $master_data->ID;
			}

			foreach($last_operation as  $item_id=>$operation_cond)
			{
				if($operation_cond!=0) $operation_conds= " and d.id in (".ltrim($operation_cond,",").") ";

				else
				{
					$print_sql = "SELECT c.bundle_no, SUM(c.reject_qty) as reject_qty, SUM(c.alter_qty) as alter_qty, SUM(c.spot_qty) as spot_qty, SUM(c.replace_qty) as replace_qty from pro_garments_production_mst a, pro_garments_production_dtls c, wo_po_color_size_breakdown d, wo_po_break_down e,wo_po_details_master f where d.job_no_mst=f.job_no and a.id=c.mst_id and c.color_size_break_down_id=d.id and d.po_break_down_id=e.id and a.company_id=$company and c.production_type in(3) and c.barcode_no=$barcode and a.status_active=1 and a.is_deleted=0 group by c.bundle_no order by length(c.bundle_no) asc, c.bundle_no asc";
					$print_data = $this->db->query($print_sql)->result();
					foreach($print_data as $arows)
					{
						$reject_qty[$arows->BUNDLE_NO] 	+= $arows->REJECT_QTY;
						$alter_qty[$arows->BUNDLE_NO] 	+= $arows->ALTER_QTY;
						$spt_qty[$arows->BUNDLE_NO] 	+= $arows->SPOT_QTY;
						$replace_qty[$arows->BUNDLE_NO] += $arows->REPLACE_QTY;
					}
				}

				$sql="SELECT c.cut_no,c.COLOR_TYPE_ID,d.id as COLOR_SIZE_ID,d.po_break_down_id, d.job_no_mst, d.item_number_id, d.country_id, d.size_number_id, d.color_number_id, c.bundle_no, sum(c.production_qnty) as qty, e.po_number,c.barcode_no,f.JOB_NO_PREFIX_NUM,f.BUYER_NAME from pro_garments_production_mst a, pro_garments_production_dtls c, wo_po_color_size_breakdown d, wo_po_break_down e,wo_po_details_master f where d.job_no_mst=f.job_no and a.id=c.mst_id and c.color_size_break_down_id=d.id and d.po_break_down_id=e.id and a.company_id=$company and c.production_type=1 and c.barcode_no='$barcode' and a.status_active=1 and a.is_deleted=0 group by c.cut_no,c.COLOR_TYPE_ID,d.id,d.po_break_down_id, d.job_no_mst, d.item_number_id, d.country_id, d.size_number_id, d.color_number_id, c.bundle_no, e.po_number,c.barcode_no,f.JOB_NO_PREFIX_NUM,f.BUYER_NAME order by c.cut_no,length(c.bundle_no) asc, c.bundle_no asc";

				$result = $this->db->query($sql)->result();
				foreach ($result as $v)
				{
					//$v->QTY = ($v->QTY + $replace_qty[$v->BUNDLE_NO]) - ($reject_qty[$v->BUNDLE_NO] + $alter_qty[$v->BUNDLE_NO]+ $spt_qty[$v->BUNDLE_NO]);
					$v->QTY = ($v->QTY + $replace_qty[$v->BUNDLE_NO]) - ($reject_qty[$v->BUNDLE_NO] + $alter_qty[$v->BUNDLE_NO]+ $spt_qty[$v->BUNDLE_NO]);
					if($scanned_bundle_arr[$v->BUNDLE_NO]=="" && $v->QTY>0)
					{
						$data_arr["dtlsPart"]["COMPANY_ID"] = $company;
						$data_arr["dtlsPart"]["CUT_NO"] = $v->CUT_NO;
						$data_arr["dtlsPart"]["PRODUCTION_TYPE"] = 2;
						$data_arr["dtlsPart"]["BUNDLE_NO"] = $v->BUNDLE_NO;
						$data_arr["dtlsPart"]["BARCODE_NO"] = $v->BARCODE_NO;
						$data_arr["dtlsPart"]["YEAR"] = date("Y",strtotime($get_cutting_info->ENTRY_DATE));
						$data_arr["dtlsPart"]["COLOR_SIZE_ID"] = $v->COLOR_SIZE_ID;
						$data_arr["dtlsPart"]["ORDER_ID"] = $v->PO_BREAK_DOWN_ID;
						$data_arr["dtlsPart"]["COUNTRY_ID"] = $v->COUNTRY_ID;
						$data_arr["dtlsPart"]["SIZE_ID"] = $v->SIZE_NUMBER_ID;
						$data_arr["dtlsPart"]["COLOR_ID"] = $v->COLOR_NUMBER_ID;
						$data_arr["dtlsPart"]["JOB_NO"] = $v->JOB_NO_PREFIX_NUM;
						$data_arr["dtlsPart"]["COLOR_TYPE_ID"] = $bundle_wise_data->COLOR_TYPE_ID;
						$data_arr["dtlsPart"]["QNTY"] = $v->QTY;

						if (isset($buyer_arr[$v->BUYER_NAME])) {
							$data_arr["dtlsPart"]["BUYER"] = $buyer_arr[$v->BUYER_NAME];
						} else {
							$data_arr["dtlsPart"]["BUYER"] = "";
						}

						$data_arr["dtlsPart"]["ORDER_NO"] = "$v->PO_NUMBER";
						$data_arr["dtlsPart"]["ITEM_ID"] = $v->ITEM_NUMBER_ID;
						if (isset($garments_item[$v->ITEM_NUMBER_ID])) {
							$data_arr["dtlsPart"]["ITEM_NAME"] = $garments_item[$v->ITEM_NUMBER_ID];
						} else {
							$data_arr["dtlsPart"]["ITEM_NAME"] = "";
						}
					}
				}
			}
		}
		return $data_arr;
	}
	public function qc_bundle_insert($qc_obj)
	{
		$response_obj = json_decode($qc_obj);
		$pc_date_time = date("d-M-Y h:i:s A",time());
		$issue_date   = date("d-M-Y");
		$user_id 	  = 1;

		$this->db->trans_start();
		$mst_part_data = $response_obj->resultset->MasterPart;
		$bundle_no_data = explode(",",$response_obj->resultset->BundleNos->BUNDLE_NO);
		$bundle_arr = array();
		foreach ($bundle_no_data as $bundle) {
			$bundle_arr[$bundle] = "'".$bundle."'";
		}

		// CHECK IF BUNDLE ALREADY SCANNED
		$cut_qc_sql="select a.cutting_qc_no from pro_gmts_cutting_qc_mst a,pro_gmts_cutting_qc_dtls b	where a.id=b.mst_id and b.bundle_no in(".implode(",",$bundle_arr).") and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0 group by a.cutting_qc_no";

		//$cut_qc_sql="select a.cutting_qc_no,a.cutting_qc_date from pro_gmts_cutting_qc_mst a where a.cutting_no='".$bundle_no_data->BUNDLE_NO."' and a.status_active=1 and a.is_deleted=0";
		$cut_qc_data = $this->db->query($cut_qc_sql)->row();

		if(!empty($cut_qc_data))
		{
			return array("status" => "Failed", "msg"=> "Bundle No QC is already completed. System Id = ".$cut_qc_data->CUTTING_QC_NO."");
			die;
		}

		$cut_qc_sql="select a.ID,a.CUTTING_QC_NO,a.cutting_qc_date from pro_gmts_cutting_qc_mst a where a.cutting_no='".$mst_part_data->CUTTING_NO."' and a.status_active=1 and a.is_deleted=0";
		$cut_qc_dtls = $this->db->query($cut_qc_sql)->row();
		if(!empty($cut_qc_dtls))
		{
			$qc_mst_id = $cut_qc_dtls->ID;
			$qc_no = $cut_qc_dtls->CUTTING_QC_NO;
		}
		else
		{
			//BUNDLE  CHECK COMPLETE
			$qc_mst_id = return_next_id_by_sequence("PRO_GMTS_CUTTING_QC_MST_SEQ", "PRO_GMTS_CUTTING_QC_MST");
			$new_system_id = explode("*", return_next_id_by_sequence("PRO_GMTS_CUTTING_QC_MST_SEQ", "PRO_GMTS_CUTTING_QC_MST","",1,1,'CQ',0,date("Y",time()),0,0,0,0,0 ));
			$qc_no = $new_system_id[0];
			/*$qc_mst = array(
				'ID'        => $qc_mst_id,
				'CUT_QC_PREFIX' => $new_system_id[1],
				'CUT_QC_PREFIX_NO' => $new_system_id[2],
				'CUTTING_QC_NO' => $qc_no,
				'CUTTING_NO' => $mst_part_data->CUTTING_NO,
				'LOCATION_ID' => $mst_part_data->LOCATION_ID,
				'FLOOR_ID' => $mst_part_data->FLOOR_ID,
				'TABLE_NO' => $mst_part_data->TABLE_NO,
				'JOB_NO' => $mst_part_data->JOB_NO,
				'BATCH_ID' => $mst_part_data->BATCH_ID,
				'COMPANY_ID' => $mst_part_data->COMPANY_ID,
				'ENTRY_DATE' => $mst_part_data->ENTRY_DATE,
				'START_TIME' => $mst_part_data->START_TIME,
				'END_DATE' => $mst_part_data->END_DATE,
				'END_TIME' => $mst_part_data->END_TIME,
				'MARKER_LENGTH' => $mst_part_data->MARKER_LENGTH,
				'MARKER_WIDTH' => $mst_part_data->MARKER_WIDTH,
				'FABRIC_WIDTH' => $mst_part_data->FABRIC_WIDTH,
				'FABRIC_WIDTH' => $mst_part_data->FABRIC_WIDTH,
				'GSM' => $mst_part_data->GSM,
				'WIDTH_DIA' => $mst_part_data->WIDTH_DIA,
				'CUTTING_QC_DATE' => $mst_part_data->QC_DATE,
				//'CUTTING_QC_TIME' => $dtls_data->CUTTING_QC_TIME,
				'PRODUCTION_SOURCE' => 1,
				'SERVING_COMPANY' => $mst_part_data->COMPANY_ID,
				'INSERTED_BY' => $user_id,
				'INSERT_DATE' => $pc_date_time,
				'STATUS_ACTIVE' => 1,
				'IS_DELETED' => 0
			);*/
			//$timestamp = date("Y-M-d h:i:s", strtotime($mst_part_data->QC_DATE . " " . $mst_part_data->QC_HOUR));
			//$timestamp = "TO_DATE('$timestamp','yyyy-mm-dd hh24:mi:ss')";

			$timestamp = $mst_part_data->QC_DATE . " " . $mst_part_data->QC_HOUR;
			$timestamp = "TO_DATE('$timestamp','DD MONTH YYYY HH24:MI:SS')";

			$entry_date = date("d-M-Y");
			$mst_sql =
			"INSERT INTO PRO_GMTS_CUTTING_QC_MST (ID,CUT_QC_PREFIX,CUT_QC_PREFIX_NO,CUTTING_QC_NO,CUTTING_NO,LOCATION_ID,FLOOR_ID,TABLE_NO,JOB_NO,BATCH_ID,COMPANY_ID,ENTRY_DATE,START_TIME,END_DATE,END_TIME,MARKER_LENGTH,MARKER_WIDTH,FABRIC_WIDTH,GSM,WIDTH_DIA,CUTTING_QC_DATE,CUTTING_QC_TIME,PRODUCTION_SOURCE,SERVING_COMPANY,INSERTED_BY,INSERT_DATE,STATUS_ACTIVE,IS_DELETED)
			VALUES ($qc_mst_id, '$new_system_id[1]', '$new_system_id[2]', '$new_system_id[0]', '$mst_part_data->CUTTING_NO', '$mst_part_data->LOCATION_ID', '$mst_part_data->FLOOR_ID', '$mst_part_data->TABLE_NO', '$mst_part_data->JOB_NO', '$mst_part_data->BATCH_ID', '$mst_part_data->COMPANY_ID', '$entry_date', '$mst_part_data->START_TIME', '$mst_part_data->END_DATE', '$mst_part_data->END_TIME', '$mst_part_data->MARKER_LENGTH', '$mst_part_data->MARKER_WIDTH', '$mst_part_data->FABRIC_WIDTH', '$mst_part_data->GSM', '$mst_part_data->WIDTH_DIA', '$mst_part_data->QC_DATE', $timestamp, 1, 1, $user_id, '$pc_date_time', 1, 0)";
			$this->db->query($mst_sql);
		}
		 //echo "<pre>";
		// print_r($qc_mst);
		// die;
		/*if(!empty($qc_mst)){
			$this->insertData($qc_mst, 'PRO_GMTS_CUTTING_QC_MST');
		}*/

		$dtls_part_data = $response_obj->resultset->DtlsPart;
		foreach ($dtls_part_data as $dtls_data)
		{
			$cut_mst_id 	= $mst_part_data->CUT_MST_ID;
			$cut_dtls_id 	= $mst_part_data->CUT_DTLS_ID;
			$cut_order_id 	= $dtls_data->ORDER_ID;
			$gmt_item_id 	= $dtls_data->GMT_ITEM_ID;
			$color_id 		= $dtls_data->COLOR_ID;
			$bundle_data 	= $dtls_data->BUNDLE_DATA;
			$color_size_sql="select ID,SIZE_NUMBER_ID,COLOR_NUMBER_ID,PO_BREAK_DOWN_ID,COUNTRY_ID,ITEM_NUMBER_ID from wo_po_color_size_breakdown where status_active in(1,2,3) and po_break_down_id=$cut_order_id and is_deleted=0";
			$color_size_data = $this->db->query($color_size_sql)->result();
			$color_beck_arr=array();
			foreach($color_size_data as $val)
			{
				$color_beck_arr[$val->PO_BREAK_DOWN_ID][$val->COUNTRY_ID][$val->ITEM_NUMBER_ID][$val->COLOR_NUMBER_ID][$val->SIZE_NUMBER_ID]=$val->ID;
				$color_beckdown_arr_grp[$val->PO_BREAK_DOWN_ID][$val->ITEM_NUMBER_ID][$val->COLOR_NUMBER_ID][$val->SIZE_NUMBER_ID].=",".$val->ID;
			}
			$id= return_next_id_by_sequence( "PRO_GAR_PRODUCTION_MST_SEQ","PRO_GARMENTS_PRODUCTION_MST" );
			foreach ($bundle_data as $b_row) {

				$size_qnty 		= $b_row->QC_PASS_QTY;
				$bundle_no 		= $b_row->BUNDLE_NO;
				$barcode_no 	= $b_row->BARCODE_NO;
				$number_start 	= $b_row->NUMBER_START;
				$number_end 	= $b_row->NUMBER_END;
				$size_id 		= $b_row->SIZE_ID;
				$country_id 	= $b_row->COUNTRY_ID;

				$grp_col_id=ltrim($color_beck_arr[$cut_order_id][$country_id][$gmt_item_id][$color_id][$size_id],", ");
				//echo $grp_col_id.",". $cut_order_id.",". $mst_part_data->JOB_NO.",". $mst_part_data->CUTTING_NO.",". $barcode_no;die;
				$sequence_array=check_operation_status( $grp_col_id, $cut_order_id, $mst_part_data->JOB_NO, $mst_part_data->CUTTING_NO, $barcode_no, $sequence_array );
				//print_r($sequence_array);die;
				//echo $cut_order_id."=".$country_id."=".$gmt_item_id."=".$color_id."=".$size_id."<br />";
				$color_size_id = $color_beck_arr[$cut_order_id][$country_id][$gmt_item_id][$color_id][$size_id];
				if($color_size_id==""){
					return array("status" => "Failed", "msg"=> "Color Size Changed After Cut and Lay"); die;
				}

				$dtls_id = return_next_id_by_sequence( "PRO_GAR_PRODUCTION_DTLS_SEQ", "PRO_GARMENTS_PRODUCTION_DTLS" );
				$production_dtls = array(
					'ID'        => $dtls_id,
					'MST_ID' => $id,
					'DELIVERY_MST_ID' => $qc_mst_id,
					'PRODUCTION_TYPE' => 1,
					'COLOR_SIZE_BREAK_DOWN_ID' => $color_size_id,
					'PRODUCTION_QNTY' => $size_qnty,
					'CUT_NO' => $mst_part_data->CUTTING_NO,
					'BUNDLE_NO' => $bundle_no,
					'BARCODE_NO' => $barcode_no,
					'REJECT_QTY' => $b_row->REJECT_QNTY,
					'REPLACE_QTY' => $b_row->REPLACE_QNTY,
					'COLOR_TYPE_ID' => $mst_part_data->COLOR_TYPE_ID
				);
				//print_r($production_dtls);
				if(!empty($production_dtls)){
					$this->insertData($production_dtls, 'PRO_GARMENTS_PRODUCTION_DTLS');
				}

				$qc_dtls_id = return_next_id_by_sequence( "PRO_GMTS_CUTTING_QC_DTLS_SEQ", "PRO_GMTS_CUTTING_QC_DTLS" );
				$qc_dtls = array(
					'ID'        => $qc_dtls_id,
					'MST_ID' => $qc_mst_id,
					'ORDER_ID' => $cut_order_id,
					'COUNTRY_ID' => $country_id,
					'COLOR_ID' => $color_id,
					'SIZE_ID' => $size_id,
					'COLOR_SIZE_ID' => $color_size_id,
					'BUNDLE_NO' => $bundle_no,
					'BARCODE_NO' => $barcode_no,
					'NUMBER_START' => $number_start,
					'NUMBER_END' => $number_end,
					'BUNDLE_QTY' => $size_qnty,
					'REJECT_QTY' => $b_row->REJECT_QNTY,
					'REPLACE_QTY' => $b_row->REPLACE_QNTY,
					'QC_PASS_QTY' => $size_qnty,
					'INSERTED_BY' => $user_id,
					'INSERT_DATE' => $pc_date_time,
					'STATUS_ACTIVE' => 1,
					'IS_DELETED' => 0
				);
				//print_r($qc_dtls);
				if(!empty($qc_dtls)){
					$this->insertData($qc_dtls, 'PRO_GMTS_CUTTING_QC_DTLS');
				}

				if(trim($b_row->DEFECT_STR) !="")
				{
					$defect_data = explode(",",$b_row->DEFECT_STR);
					foreach ($defect_data as $def_row) {

						$dft_id = return_next_id_by_sequence(  "PRO_GMTS_PROD_DFT_SEQ", "PRO_GMTS_PROD_DFT", $con );
						$defect_info = explode("*", $def_row);
						$qc_defect = array(
							'ID'        => $qc_dtls_id,
							'MST_ID' => $qc_mst_id,
							'PRODUCTION_TYPE' => 1,
							'PO_BREAK_DOWN_ID' => $cut_order_id,
							'DEFECT_TYPE_ID' => 3,
							'DEFECT_POINT_ID' => $defect_info[0],
							'DEFECT_QTY' => $defect_info[1],
							'BUNDLE_NO' => $bundle_no,
							'INSERTED_BY' => $user_id,
							'INSERT_DATE' => $pc_date_time
						);
						//print_r($qc_dtls);
						if(!empty($qc_defect)){
							$this->insertData($qc_defect, 'PRO_GMTS_PROD_DFT');
						}
					}
				}

				$country_qcpass_qty[$country_id]+=$size_qnty*1;
				$country_reject_qty[$country_id]+=$size_qnty*1;
				$country_replace_qty[$country_id]+=$size_qnty*1;
			}

			foreach($country_qcpass_qty as $c_id=>$c_qty)
			{
				$plan_cut_qnty_sql="select sum(plan_cut_qnty) as plan_cut_qty from wo_po_color_size_breakdown where po_break_down_id=".$cut_order_id." and item_number_id=".$gmt_item_id." and  country_id=".$c_id." and status_active in(1,2,3) and is_deleted=0";
				$plan_cut_qnty_data = $this->db->query($plan_cut_qnty_sql)->result();
				$plan_cut_qty = 0;
				foreach ($plan_cut_qnty_data as $pcut_row) {
					$plan_cut_qty += $pcut_row->PLAN_CUT_QTY;
				}

				$total_produced_sql = "select sum(production_quantity) as total_cut from pro_garments_production_mst where po_break_down_id=".$cut_order_id." and item_number_id=".$gmt_item_id." and  country_id=".$c_id." and production_type=1 and is_deleted=0";
				$total_produced_data = $this->db->query($total_produced_sql)->result();
				$total_produced = 0;
				foreach ($total_produced_data as $produce_row) {
					$total_produced += $produce_row->TOTAL_CUT;
				}

				$yet_to_produced = $plan_cut_qty-$total_produced;

				if($country_reject_qty[$c_id]=="") $country_reject_qty[$c_id]=0;


				$production_mst = array(
					'ID'        => $id,
					'DELIVERY_MST_ID' => $qc_mst_id,
					'GARMENTS_NATURE' => 2,
					'COMPANY_ID' => $mst_part_data->COMPANY_ID,
					'PRODUCTION_SOURCE' => 1,
					'SERVING_COMPANY' => $mst_part_data->COMPANY_ID,
					'COUNTRY_ID' => $c_id,
					'PO_BREAK_DOWN_ID' => $cut_order_id,
					'ITEM_NUMBER_ID' => $gmt_item_id,
					'LOCATION' => $mst_part_data->LOCATION_ID,
					'PRODUCTION_DATE' => $mst_part_data->QC_DATE,
					'PRODUCTION_QUANTITY' => $c_qty,
					'PRODUCTION_TYPE' => 1,
					'ENTRY_BREAK_DOWN_TYPE' => 3,
					//'PRODUCTION_HOUR' => '',
					'FLOOR_ID' => $row->FLOOR_ID,
					'REJECT_QNTY' => $country_reject_qty[$c_id],
					'TOTAL_PRODUCED' => $total_produced,
					'YET_TO_PRODUCED' => $yet_to_produced,
					'CUT_NO' => $mst_part_data->CUTTING_NO,
					'INSERTED_BY' => $user_id,
					'INSERT_DATE' => $pc_date_time
				);
				if(!empty($production_mst)){
					$this->insertData($production_mst, 'PRO_GARMENTS_PRODUCTION_MST');
				}
				$id= return_next_id_by_sequence( "PRO_GAR_PRODUCTION_MST_SEQ","PRO_GARMENTS_PRODUCTION_MST" );
			}
		}


		$duplicate_seq=array();
		foreach($sequence_array as $po=>$seq)
		{
			foreach($seq as $op=>$opd)
			{
				$pos=explode(",",$po);
				foreach($pos as $pid)
				{
					if( $duplicate_seq[$pid]=='')
					{
						$seqid = return_next_id_by_sequence( "pro_production_sequence_seq","PRO_PRODUCTION_SEQUENCE" );
						$emp=explode("_",$opd['preceding']);
						$qc_sequence = array(
							'ID'        => $seqid,
							'JOB_NO' => $opd['job_no'],
							'PO_NUMBER' => $opd['po_no'],
							'COL_SIZE_ID' => $pid,
							'PRECEDING_OP' => $emp[0],
							'SUCCEDING_OP' => $opd['succeding'],
							'CURRENT_OPERATION' => $op,
							'EMBEL_NAME' => $emp[1],
							'CUTTING_NO' => $opd['cut_no']
						);
						if(!empty($qc_sequence)){
							$this->insertData($qc_sequence, 'PRO_PRODUCTION_SEQUENCE');
						}
					}
				}
			}
		}


		$this->db->trans_complete();
		if ($this->db->trans_status() == TRUE) {
			return array("status" => "Success", "msg"=> "System Number = ".$qc_no."");
		} else {
			return array("status" => "Failed");
		}

	}
	public function bundle_qc_insert($qc_obj)
	{
		$response_obj = json_decode($qc_obj);
		$pc_date_time = date("d-M-Y h:i:s A",time());
		$issue_date   = date("d-M-Y");
		$user_id 	  = 1;

		$this->db->trans_start();
		$mst_part_data = $response_obj->resultset->MasterPart;
		//$bundle_no_data = $response_obj->resultset->BundleNos;

		// CHECK IF BUNDLE ALREADY SCANNED
		//$cut_qc_sql="select a.cutting_qc_no,a.cutting_qc_date from pro_gmts_cutting_qc_mst a,pro_gmts_cutting_qc_dtls b	where a.id=b.mst_id and b.bundle_no in(".trim($bundle_no).") and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0";
		$cut_qc_sql="select a.cutting_qc_no,a.cutting_qc_date from pro_gmts_cutting_qc_mst a where a.cutting_no='".$mst_part_data->CUTTING_NO."' and a.status_active=1 and a.is_deleted=0";
		$cut_qc_data = $this->db->query($cut_qc_sql)->row();

		if(!empty($cut_qc_data))
		{
			return array("status" => "Failed", "msg"=> "This Bundle No QC is already completed. System Id = ".$cut_qc_data->CUTTING_QC_NO.". QC Date = ".$cut_qc_data->CUTTING_QC_DATE."");
			die;
		}
		//BUNDLE  CHECK COMPLETE

		$qc_mst_id = return_next_id_by_sequence("PRO_GMTS_CUTTING_QC_MST_SEQ", "PRO_GMTS_CUTTING_QC_MST");
		$new_system_id = explode("*", return_next_id_by_sequence("PRO_GMTS_CUTTING_QC_MST_SEQ", "PRO_GMTS_CUTTING_QC_MST","",1,1,'CQ',0,date("Y",time()),0,0,0,0,0 ));

		//$timestamp = date("d-M-Y h:i:s", strtotime($mst_part_data->QC_DATE . " " . $mst_part_data->QC_HOUR));
		//$timestamp = "TO_DATE($timestamp,'yyyy/mm/dd hh24:mi:ss')";
		/*$qc_mst = array(
			'ID'        => $qc_mst_id,
			'CUT_QC_PREFIX' => $new_system_id[1],
			'CUT_QC_PREFIX_NO' => $new_system_id[2],
			'CUTTING_QC_NO' => $new_system_id[0],
			'CUTTING_NO' => $mst_part_data->CUTTING_NO,
			'LOCATION_ID' => $mst_part_data->LOCATION_ID,
			'FLOOR_ID' => $mst_part_data->FLOOR_ID,
			'TABLE_NO' => $mst_part_data->TABLE_NO,
			'JOB_NO' => $mst_part_data->JOB_NO,
			'BATCH_ID' => $mst_part_data->BATCH_ID,
			'COMPANY_ID' => $mst_part_data->COMPANY_ID,
			'ENTRY_DATE' => $mst_part_data->ENTRY_DATE,
			'START_TIME' => $mst_part_data->START_TIME,
			'END_DATE' => $mst_part_data->END_DATE,
			'END_TIME' => $mst_part_data->END_TIME,
			'MARKER_LENGTH' => $mst_part_data->MARKER_LENGTH,
			'MARKER_WIDTH' => $mst_part_data->MARKER_WIDTH,
			'FABRIC_WIDTH' => $mst_part_data->FABRIC_WIDTH,
			'GSM' => $mst_part_data->GSM,
			'WIDTH_DIA' => $mst_part_data->WIDTH_DIA,
			'CUTTING_QC_DATE' => $mst_part_data->QC_DATE,
			'CUTTING_QC_TIME' => $timestamp,
			'PRODUCTION_SOURCE' => 1,
			'SERVING_COMPANY' => 1,
			'INSERTED_BY' => $user_id,
			'INSERT_DATE' => $pc_date_time,
			'STATUS_ACTIVE' => 1,
			'IS_DELETED' => 0
		);*/

		//$timestamp = date("Y-M-d h:i:s", strtotime($mst_part_data->QC_DATE . " " . $mst_part_data->QC_HOUR));
		//$timestamp = "TO_DATE('$timestamp','yyyy-mm-dd hh24:mi:ss')";

		$timestamp = $mst_part_data->QC_DATE . " " . $mst_part_data->QC_HOUR;
		$timestamp = "TO_DATE('$timestamp','DD MONTH YYYY HH24:MI:SS')";

		$entry_date = date("d-M-Y");
		$mst_sql =
		"INSERT INTO PRO_GMTS_CUTTING_QC_MST (ID,CUT_QC_PREFIX,CUT_QC_PREFIX_NO,CUTTING_QC_NO,CUTTING_NO,LOCATION_ID,FLOOR_ID,TABLE_NO,JOB_NO,BATCH_ID,COMPANY_ID,ENTRY_DATE,START_TIME,END_DATE,END_TIME,MARKER_LENGTH,MARKER_WIDTH,FABRIC_WIDTH,GSM,WIDTH_DIA,CUTTING_QC_DATE,CUTTING_QC_TIME,PRODUCTION_SOURCE,SERVING_COMPANY,INSERTED_BY,INSERT_DATE,STATUS_ACTIVE,IS_DELETED)
		VALUES ($qc_mst_id, '$new_system_id[1]', '$new_system_id[2]', '$new_system_id[0]', '$mst_part_data->CUTTING_NO', '$mst_part_data->LOCATION_ID', '$mst_part_data->FLOOR_ID', '$mst_part_data->TABLE_NO', '$mst_part_data->JOB_NO', '$mst_part_data->BATCH_ID', '$mst_part_data->COMPANY_ID', '$entry_date', '$mst_part_data->START_TIME', '$mst_part_data->END_DATE', '$mst_part_data->END_TIME', '$mst_part_data->MARKER_LENGTH', '$mst_part_data->MARKER_WIDTH', '$mst_part_data->FABRIC_WIDTH', '$mst_part_data->GSM', '$mst_part_data->WIDTH_DIA', '$mst_part_data->QC_DATE', $timestamp, 1, 1, $user_id, '$pc_date_time', 1, 0)";
		$this->db->query($mst_sql);

		/*if(!empty($qc_mst)){
			$this->insertData($qc_mst, 'PRO_GMTS_CUTTING_QC_MST');
		}*/

		$dtls_part_data = $response_obj->resultset->DtlsPart;
		foreach ($dtls_part_data as $dtls_data)
		{
			$cut_mst_id 	= $mst_part_data->CUT_MST_ID;
			$cut_dtls_id 	= $mst_part_data->CUT_DTLS_ID;
			$cut_order_id 	= $dtls_data->ORDER_ID;
			$gmt_item_id 	= $dtls_data->GMT_ITEM_ID;
			$color_id 		= $dtls_data->COLOR_ID;
			$bundle_data 	= $dtls_data->BUNDLE_DATA;
			$color_size_sql="select ID,SIZE_NUMBER_ID,COLOR_NUMBER_ID,PO_BREAK_DOWN_ID,COUNTRY_ID,ITEM_NUMBER_ID from wo_po_color_size_breakdown where status_active in(1,2,3) and po_break_down_id=$cut_order_id and is_deleted=0";
			$color_size_data = $this->db->query($color_size_sql)->result();
			$color_beck_arr=array();
			foreach($color_size_data as $val)
			{
				$color_beck_arr[$val->PO_BREAK_DOWN_ID][$val->COUNTRY_ID][$val->ITEM_NUMBER_ID][$val->COLOR_NUMBER_ID][$val->SIZE_NUMBER_ID]=$val->ID;
				$color_beckdown_arr_grp[$val->PO_BREAK_DOWN_ID][$val->ITEM_NUMBER_ID][$val->COLOR_NUMBER_ID][$val->SIZE_NUMBER_ID].=",".$val->ID;
			}
			$id= return_next_id_by_sequence( "PRO_GAR_PRODUCTION_MST_SEQ","PRO_GARMENTS_PRODUCTION_MST" );
			foreach ($bundle_data as $b_row) {

				$size_qnty 		= $b_row->QC_PASS_QTY;
				$bundle_no 		= $b_row->BUNDLE_NO;
				$barcode_no 	= $b_row->BARCODE_NO;
				$number_start 	= $b_row->NUMBER_START;
				$number_end 	= $b_row->NUMBER_END;
				$size_id 		= $b_row->SIZE_ID;
				$country_id 	= $b_row->COUNTRY_ID;

				$grp_col_id=ltrim($color_beck_arr[$cut_order_id][$country_id][$gmt_item_id][$color_id][$size_id],", ");
				$sequence_array=check_operation_status( $grp_col_id, $cut_order_id, $mst_part_data->JOB_NO, $mst_part_data->CUTTING_NO, $barcode_no, $sequence_array );
				$color_size_id = $color_beck_arr[$cut_order_id][$country_id][$gmt_item_id][$color_id][$size_id];
				if($color_size_id==""){
					return array("status" => "Failed", "msg"=> "Color Size Changed After Cut and Lay"); die;
				}

				$dtls_id = return_next_id_by_sequence( "PRO_GAR_PRODUCTION_DTLS_SEQ", "PRO_GARMENTS_PRODUCTION_DTLS" );
				$production_dtls = array(
					'ID'        => $dtls_id,
					'MST_ID' => $id,
					'DELIVERY_MST_ID' => $qc_mst_id,
					'PRODUCTION_TYPE' => 1,
					'COLOR_SIZE_BREAK_DOWN_ID' => $color_size_id,
					'PRODUCTION_QNTY' => $size_qnty,
					'CUT_NO' => $mst_part_data->CUTTING_NO,
					'BUNDLE_NO' => $bundle_no,
					'BARCODE_NO' => $barcode_no,
					'REJECT_QTY' => $b_row->REJECT_QNTY,
					'REPLACE_QTY' => $b_row->REPLACE_QNTY,
					'COLOR_TYPE_ID' => $mst_part_data->COLOR_TYPE_ID
				);
				//print_r($production_dtls);
				if(!empty($production_dtls)){
					$this->insertData($production_dtls, 'PRO_GARMENTS_PRODUCTION_DTLS');
				}

				$qc_dtls_id = return_next_id_by_sequence( "PRO_GMTS_CUTTING_QC_DTLS_SEQ", "PRO_GMTS_CUTTING_QC_DTLS" );
				$qc_dtls = array(
					'ID'        => $qc_dtls_id,
					'MST_ID' => $qc_mst_id,
					'ORDER_ID' => $cut_order_id,
					'COUNTRY_ID' => $country_id,
					'COLOR_ID' => $color_id,
					'SIZE_ID' => $size_id,
					'COLOR_SIZE_ID' => $color_size_id,
					'BUNDLE_NO' => $bundle_no,
					'BARCODE_NO' => $barcode_no,
					'NUMBER_START' => $number_start,
					'NUMBER_END' => $number_end,
					'BUNDLE_QTY' => $size_qnty,
					'REJECT_QTY' => $b_row->REJECT_QNTY,
					'REPLACE_QTY' => $b_row->REPLACE_QNTY,
					'QC_PASS_QTY' => $size_qnty,
					'INSERTED_BY' => $user_id,
					'INSERT_DATE' => $pc_date_time,
					'STATUS_ACTIVE' => 1,
					'IS_DELETED' => 0
				);
				//print_r($qc_dtls);
				if(!empty($qc_dtls)){
					$this->insertData($qc_dtls, 'PRO_GMTS_CUTTING_QC_DTLS');
				}

				if(trim($b_row->DEFECT_STR) !="")
				{
					$defect_data = explode(",",$b_row->DEFECT_STR);
					foreach ($defect_data as $def_row) {

						$dft_id = return_next_id_by_sequence(  "PRO_GMTS_PROD_DFT_SEQ", "PRO_GMTS_PROD_DFT", $con );
						$defect_info = explode("*", $def_row);
						$qc_defect = array(
							'ID'        => $dft_id,
							'MST_ID' => $id,
							'PRODUCTION_TYPE' => 1,
							'PO_BREAK_DOWN_ID' => $cut_order_id,
							'DEFECT_TYPE_ID' => 3,
							'DEFECT_POINT_ID' => $defect_info[0],
							'DEFECT_QTY' => $defect_info[1],
							'BUNDLE_NO' => $bundle_no,
							'INSERTED_BY' => $user_id,
							'INSERT_DATE' => $pc_date_time
						);
						//print_r($qc_dtls);
						if(!empty($qc_defect)){
							$this->insertData($qc_defect, 'PRO_GMTS_PROD_DFT');
						}
					}
				}

				$country_qcpass_qty[$country_id]+=$size_qnty*1;
				$country_reject_qty[$country_id]+=$size_qnty*1;
				$country_replace_qty[$country_id]+=$size_qnty*1;
			}

			foreach($country_qcpass_qty as $c_id=>$c_qty)
			{
				$plan_cut_qnty_sql="select sum(plan_cut_qnty) as plan_cut_qty from wo_po_color_size_breakdown where po_break_down_id=".$cut_order_id." and item_number_id=".$gmt_item_id." and  country_id=".$c_id." and status_active in(1,2,3) and is_deleted=0";
				$plan_cut_qnty_data = $this->db->query($plan_cut_qnty_sql)->result();
				$plan_cut_qty = 0;
				foreach ($plan_cut_qnty_data as $pcut_row) {
					$plan_cut_qty += $pcut_row->PLAN_CUT_QTY;
				}

				$total_produced_sql = "select sum(production_quantity) as total_cut from pro_garments_production_mst where po_break_down_id=".$cut_order_id." and item_number_id=".$gmt_item_id." and  country_id=".$c_id." and production_type=1 and is_deleted=0";
				$total_produced_data = $this->db->query($total_produced_sql)->result();
				$total_produced = 0;
				foreach ($total_produced_data as $produce_row) {
					$total_produced += $produce_row->TOTAL_CUT;
				}

				$yet_to_produced = $plan_cut_qty-$total_produced;

				if($country_reject_qty[$c_id]=="") $country_reject_qty[$c_id]=0;


				$production_mst = array(
					'ID'        => $id,
					'DELIVERY_MST_ID' => $qc_mst_id,
					'GARMENTS_NATURE' => 2,
					'COMPANY_ID' => $mst_part_data->COMPANY_ID,
					'PRODUCTION_SOURCE' => 1,
					'SERVING_COMPANY' => $mst_part_data->WORKING_COMPANY_ID,
					'COUNTRY_ID' => $c_id,
					'PO_BREAK_DOWN_ID' => $cut_order_id,
					'ITEM_NUMBER_ID' => $gmt_item_id,
					'LOCATION' => $mst_part_data->LOCATION_ID,
					'PRODUCTION_DATE' => $mst_part_data->QC_DATE,
					'PRODUCTION_QUANTITY' => $c_qty,
					'PRODUCTION_TYPE' => 1,
					'ENTRY_BREAK_DOWN_TYPE' => 3,
					//'PRODUCTION_HOUR' => '',
					'FLOOR_ID' => $mst_part_data->FLOOR_ID,
					'REJECT_QNTY' => $country_reject_qty[$c_id],
					'TOTAL_PRODUCED' => $total_produced,
					'YET_TO_PRODUCED' => $yet_to_produced,
					'CUT_NO' => $mst_part_data->CUTTING_NO,
					'INSERTED_BY' => $user_id,
					'INSERT_DATE' => $pc_date_time
				);
				if(!empty($production_mst)){
					$this->insertData($production_mst, 'PRO_GARMENTS_PRODUCTION_MST');
				}
				$id= return_next_id_by_sequence( "PRO_GAR_PRODUCTION_MST_SEQ","PRO_GARMENTS_PRODUCTION_MST" );
			}
		}


		$duplicate_seq=array();
		foreach($sequence_array as $po=>$seq)
		{
			foreach($seq as $op=>$opd)
			{
				$pos=explode(",",$po);
				foreach($pos as $pid)
				{
					if( $duplicate_seq[$pid]=='')
					{
						$seqid = return_next_id_by_sequence( "pro_production_sequence_seq","PRO_PRODUCTION_SEQUENCE" );
						$emp=explode("_",$opd['preceding']);
						$qc_sequence = array(
							'ID'        => $seqid,
							'JOB_NO' => $opd['job_no'],
							'PO_NUMBER' => $opd['po_no'],
							'COL_SIZE_ID' => $pid,
							'PRECEDING_OP' => $emp[0],
							'SUCCEDING_OP' => $opd['succeding'],
							'CURRENT_OPERATION' => $op,
							'EMBEL_NAME' => $emp[1],
							'CUTTING_NO' => $opd['cut_no']
						);
						if(!empty($qc_sequence)){
							$this->insertData($qc_sequence, 'PRO_PRODUCTION_SEQUENCE');
						}
					}
				}
			}
		}


		$this->db->trans_complete();
		if ($this->db->trans_status() == TRUE) {
			return array("status" => "Success", "msg"=> "System Number = ".$new_system_id[0]."");
		} else {
			return array("status" => "Failed");
		}

	}

	public function qc_bundle_data($bundle_no)
	{
		$cut_qc_sql="select a.cutting_qc_no,a.cutting_qc_date from pro_gmts_cutting_qc_mst a,pro_gmts_cutting_qc_dtls b	where a.id=b.mst_id and b.barcode_no='".trim($bundle_no)."' and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0";
		$cut_qc_dtls = $this->db->query($cut_qc_sql)->row();
		if(!empty($cut_qc_dtls))
		{
			return array("status" => "Failed", "msg"=> "This Bundle No QC is already completed. System Id = ".$cut_qc_dtls->CUTTING_QC_NO.". QC Date = ".$cut_qc_dtls->CUTTING_QC_DATE."");
			die;
		}

		$sql_dtls_sql="select B.ID,C.ORDER_ID,A.SHIP_DATE,A.COLOR_ID,A.GMT_ITEM_ID,A.PLIES,A.MARKER_QTY,A.ORDER_QTY,A.TOTAL_LAY_QTY, A.LAY_BALANCE_QTY, B.JOB_NO, B.JOB_YEAR,B.COMPANY_ID,A.ID AS DETAILS_ID,B.MARKER_LENGTH,B.MARKER_WIDTH,B.LOCATION_ID,B.FLOOR_ID,B.TABLE_NO,B.BATCH_ID,B.ENTRY_DATE,B.START_TIME,B.END_DATE,B.END_TIME,B.FABRIC_WIDTH,B.GSM,B.WIDTH_DIA,B.SOURCE,B.WORKING_COMPANY_ID,B.CUTTING_NO,C.COLOR_TYPE_ID,C.BUNDLE_NO from ppl_cut_lay_dtls a, ppl_cut_lay_mst b,ppl_cut_lay_bundle c where b.id=a.mst_id and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0 and c.status_active=1 and c.is_deleted=0 and c.barcode_no='".trim($bundle_no)."' and b.id=c.mst_id and a.id=c.dtls_id and c.size_qty>0  group by b.id,c.order_id,a.ship_date,a.color_id,a.gmt_item_id,a.plies,a.marker_qty,a.order_qty,a.total_lay_qty, a.lay_balance_qty, b.job_no, b.job_year,b.company_id,a.id,b.marker_length,b.marker_width,b.location_id,b.floor_id,b.table_no,b.batch_id,b.entry_date,b.start_time,b.end_date,b.end_time,b.fabric_width,b.gsm,b.width_dia,b.source,b.working_company_id,b.cutting_no,c.color_type_id,c.bundle_no";

		$sql_dtls = $this->db->query($sql_dtls_sql)->result();
		$j=0;
		foreach ($sql_dtls as $row) {
			$cut_mst_id 	= $row->ID;
			$cut_dtls_id 	= $row->DETAILS_ID;
			$cut_order_id 	= $row->ORDER_ID;
			$cutting_no 	= $row->CUTTING_NO;
			$floor_id 		= $row->FLOOR_ID;
			$location_id 	= $row->LOCATION_ID;
			$bundle_no 		= $row->BUNDLE_NO;

			$mst_cond 	= " and a.mst_id=$cut_mst_id";
			$dtls_cond  = " and a.dtls_id=$cut_dtls_id";
			$order_cond = " and a.order_id=$cut_order_id";

			$bundle_data_sql="select  a.country_id,a.order_id,a.id,a.bundle_no,a.barcode_no,a.size_id,a.number_start,a.number_end,a.size_qty from ppl_cut_lay_bundle a, ppl_cut_lay_size b where a.mst_id=b.mst_id and a.dtls_id=b.dtls_id and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0 and a.size_id=b.size_id $mst_cond $dtls_cond $order_cond and a.bundle_no='$bundle_no' and a.size_qty>0 group by a.country_id,a.order_id,a.id,a.bundle_no,a.size_id,a.number_start,a.number_end,a.size_qty,a.barcode_no  order by a.id ASC";
			$bundle_data = $this->db->query($bundle_data_sql)->result();

			$i=0;
			$color_qty=0;
			$bundleData["MasterPart"]['CUT_MST_ID'] = $cut_mst_id;
			$bundleData["MasterPart"]['CUT_DTLS_ID'] = $cut_dtls_id;
			$bundleData["MasterPart"]['CUTTING_NO'] = $cutting_no;
			$bundleData["MasterPart"]['LOCATION_ID'] = $location_id;
			$bundleData["MasterPart"]['FLOOR_ID'] = $floor_id;
			$bundleData["MasterPart"]['QC_DATE'] = "";
			$bundleData["MasterPart"]['QC_HOUR'] = "";
			$bundleData["MasterPart"]['TABLE_NO'] = $row->TABLE_NO;
			$bundleData["MasterPart"]['JOB_NO'] = $row->JOB_NO;
			$bundleData["MasterPart"]['BATCH_ID'] = $row->BATCH_ID;
			$bundleData["MasterPart"]['COMPANY_ID'] = $row->COMPANY_ID;
			$bundleData["MasterPart"]['ENTRY_DATE'] = $row->ENTRY_DATE;
			$bundleData["MasterPart"]['START_TIME'] = $row->START_TIME;
			$bundleData["MasterPart"]['END_DATE'] = $row->END_DATE;
			$bundleData["MasterPart"]['END_TIME'] = $row->END_TIME;
			$bundleData["MasterPart"]['MARKER_LENGTH'] = $row->MARKER_LENGTH;
			$bundleData["MasterPart"]['MARKER_WIDTH'] = $row->MARKER_WIDTH;
			$bundleData["MasterPart"]['FABRIC_WIDTH'] = $row->FABRIC_WIDTH;
			$bundleData["MasterPart"]['GSM'] = $row->GSM;
			$bundleData["MasterPart"]['WIDTH_DIA'] = $row->WIDTH_DIA;
			$bundleData["MasterPart"]['PRODUCTION_SOURCE'] = $row->PRODUCTION_SOURCE;
			$bundleData["MasterPart"]['SERVING_COMPANY'] = $row->SERVING_COMPANY;
			foreach($bundle_data as $bundle_row)
			{
				$size_qnty = $bundle_row->SIZE_QTY;

				$bundleData["DtlsPart"][$j]['ORDER_ID'] = $row->ORDER_ID;
				$bundleData["DtlsPart"][$j]['GMT_ITEM_ID'] = $row->GMT_ITEM_ID;
				$bundleData["DtlsPart"][$j]['COLOR_ID'] = $row->COLOR_ID;

				$bundleData ["DtlsPart"][$j]['BUNDLE_DATA'][$i]['COUNTRY_ID'] = $bundle_row->COUNTRY_ID;
				$bundleData ["DtlsPart"][$j]['BUNDLE_DATA'][$i]['BUNDLE_NO'] = $bundle_row->BUNDLE_NO;
				$bundleData ["DtlsPart"][$j]['BUNDLE_DATA'][$i]['BARCODE_NO'] = $bundle_row->BARCODE_NO;
				$bundleData ["DtlsPart"][$j]['BUNDLE_DATA'][$i]['SIZE_ID'] = $bundle_row->SIZE_ID;

				$bundleData ["DtlsPart"][$j]['BUNDLE_DATA'][$i]['NUMBER_START'] = $bundle_row->NUMBER_START;
				$bundleData ["DtlsPart"][$j]['BUNDLE_DATA'][$i]['NUMBER_END'] = $bundle_row->NUMBER_END;
				$bundleData ["DtlsPart"][$j]['BUNDLE_DATA'][$i]['QC_PASS_QTY'] = $size_qnty;

				$i++;
			}
			$j++;
		}

		return $bundleData;

	}
	public function qc_barcode_data($cutting_no)
	{
		$cut_qc_sql="select a.cutting_qc_no,a.cutting_qc_date from pro_gmts_cutting_qc_mst a where a.cutting_no='$cutting_no' and a.status_active=1 and a.is_deleted=0";
		$cut_qc_dtls = $this->db->query($cut_qc_sql)->row();
		if(!empty($cut_qc_dtls))
		{
			return array("status" => "Failed", "msg"=> "This Bundle No QC is already completed. System Id = ".$cut_qc_dtls->CUTTING_QC_NO.". QC Date = ".$cut_qc_dtls->CUTTING_QC_DATE."");
			die;
		}

		$sql_dtls_sql="select B.ID,C.ORDER_ID,A.SHIP_DATE,A.COLOR_ID,A.GMT_ITEM_ID,A.PLIES,A.MARKER_QTY,A.ORDER_QTY,A.TOTAL_LAY_QTY, A.LAY_BALANCE_QTY, B.JOB_NO, B.JOB_YEAR,B.COMPANY_ID,A.ID AS DETAILS_ID,B.MARKER_LENGTH,B.MARKER_WIDTH,B.LOCATION_ID,B.FLOOR_ID,B.TABLE_NO,B.BATCH_ID,B.ENTRY_DATE,B.START_TIME,B.END_DATE,B.END_TIME,B.FABRIC_WIDTH,B.GSM,B.WIDTH_DIA,B.SOURCE,B.WORKING_COMPANY_ID,B.CUTTING_NO,C.COLOR_TYPE_ID from ppl_cut_lay_dtls a, ppl_cut_lay_mst b,ppl_cut_lay_bundle c where b.id=a.mst_id and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0 and c.status_active=1 and c.is_deleted=0 and b.cutting_no='".trim($cutting_no)."' and b.id=c.mst_id and a.id=c.dtls_id and c.size_qty>0  group by b.id,c.order_id,a.ship_date,a.color_id,a.gmt_item_id,a.plies,a.marker_qty,a.order_qty,a.total_lay_qty, a.lay_balance_qty, b.job_no, b.job_year,b.company_id,a.id,b.marker_length,b.marker_width,b.location_id,b.floor_id,b.table_no,b.batch_id,b.entry_date,b.start_time,b.end_date,b.end_time,b.fabric_width,b.gsm,b.width_dia,b.source,b.working_company_id,b.cutting_no,c.color_type_id";

		$sql_dtls = $this->db->query($sql_dtls_sql)->result();
		$j=0;
		foreach ($sql_dtls as $row) {
			$cut_mst_id 	= $row->ID;
			$cut_dtls_id 	= $row->DETAILS_ID;
			$cut_order_id 	= $row->ORDER_ID;
			$cutting_no 	= $row->CUTTING_NO;
			$floor_id 		= $row->FLOOR_ID;
			$location_id 	= $row->LOCATION_ID;

			$mst_cond 	= " and a.mst_id=$cut_mst_id";
			$dtls_cond  = " and a.dtls_id=$cut_dtls_id";
			$order_cond = " and a.order_id=$cut_order_id";

			$bundle_data_sql="select  a.country_id,a.order_id,a.id,a.bundle_no,a.barcode_no,a.size_id,a.number_start,a.number_end,a.size_qty from ppl_cut_lay_bundle a, ppl_cut_lay_size b where a.mst_id=b.mst_id and a.dtls_id=b.dtls_id and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0 and a.size_id=b.size_id $mst_cond $dtls_cond $order_cond and a.size_qty>0 group by a.country_id,a.order_id,a.id,a.bundle_no,a.size_id,a.number_start,a.number_end,a.size_qty,a.barcode_no  order by a.id ASC";
			$bundle_data = $this->db->query($bundle_data_sql)->result();

			$i=0;
			$color_qty=0;
			$bundleData["MasterPart"]['CUT_MST_ID'] = $cut_mst_id;
			$bundleData["MasterPart"]['CUT_DTLS_ID'] = $cut_dtls_id;
			$bundleData["MasterPart"]['CUTTING_NO'] = $cutting_no;
			$bundleData["MasterPart"]['LOCATION_ID'] = $location_id;
			$bundleData["MasterPart"]['FLOOR_ID'] = $floor_id;
			$bundleData["MasterPart"]['QC_DATE'] = "";
			$bundleData["MasterPart"]['QC_HOUR'] = "";
			$bundleData["MasterPart"]['TABLE_NO'] = $row->TABLE_NO;
			$bundleData["MasterPart"]['JOB_NO'] = $row->JOB_NO;
			$bundleData["MasterPart"]['BATCH_ID'] = $row->BATCH_ID;
			$bundleData["MasterPart"]['COMPANY_ID'] = $row->COMPANY_ID;
			$bundleData["MasterPart"]['ENTRY_DATE'] = $row->ENTRY_DATE;
			$bundleData["MasterPart"]['START_TIME'] = $row->START_TIME;
			$bundleData["MasterPart"]['END_DATE'] = $row->END_DATE;
			$bundleData["MasterPart"]['END_TIME'] = $row->END_TIME;
			$bundleData["MasterPart"]['MARKER_LENGTH'] = $row->MARKER_LENGTH;
			$bundleData["MasterPart"]['MARKER_WIDTH'] = $row->MARKER_WIDTH;
			$bundleData["MasterPart"]['FABRIC_WIDTH'] = $row->FABRIC_WIDTH;
			$bundleData["MasterPart"]['GSM'] = $row->GSM;
			$bundleData["MasterPart"]['WIDTH_DIA'] = $row->WIDTH_DIA;
			$bundleData["MasterPart"]['PRODUCTION_SOURCE'] = $row->PRODUCTION_SOURCE;
			$bundleData["MasterPart"]['SERVING_COMPANY'] = $row->SERVING_COMPANY;
			foreach($bundle_data as $bundle_row)
			{
				$size_qnty = $bundle_row->SIZE_QTY;

				$bundleData["DtlsPart"][$j]['ORDER_ID'] = $row->ORDER_ID;
				$bundleData["DtlsPart"][$j]['GMT_ITEM_ID'] = $row->GMT_ITEM_ID;
				$bundleData["DtlsPart"][$j]['COLOR_ID'] = $row->COLOR_ID;

				$bundleData ["DtlsPart"][$j]['BUNDLE_DATA'][$i]['COUNTRY_ID'] = $bundle_row->COUNTRY_ID;
				$bundleData ["DtlsPart"][$j]['BUNDLE_DATA'][$i]['BUNDLE_NO'] = $bundle_row->BUNDLE_NO;
				$bundleData ["DtlsPart"][$j]['BUNDLE_DATA'][$i]['BARCODE_NO'] = $bundle_row->BARCODE_NO;
				$bundleData ["DtlsPart"][$j]['BUNDLE_DATA'][$i]['SIZE_ID'] = $bundle_row->SIZE_ID;

				$bundleData ["DtlsPart"][$j]['BUNDLE_DATA'][$i]['NUMBER_START'] = $bundle_row->NUMBER_START;
				$bundleData ["DtlsPart"][$j]['BUNDLE_DATA'][$i]['NUMBER_END'] = $bundle_row->NUMBER_END;
				$bundleData ["DtlsPart"][$j]['BUNDLE_DATA'][$i]['QC_PASS_QTY'] = $size_qnty;

				$i++;
			}
			$j++;
		}

		return $bundleData;

	}
	public function sew_fin_alter_defect_type()
	{
		$purpose_arr = array();
		$cutting_qc_reject_type = array(1 => "Fab Fault/ Colour Variation", 2 => "Run of seam", 3 => "Open Seam", 4 => "Skip Stitch", 5 => "Uneven Top Stitch", 6 => "Broken Stitch", 7 => "Loose Stitch", 8 => "Irregular Stitch", 9 => "Puckering", 10 => "Label Wrong Mistake", 11 => "Slanted At Label", 12 => "Rawadge", 13 => "Missing Tuck", 14 => "Wrong Tacking", 15 => "Up Down", 16 => "Missing Lbl /Bartack", 17 => "Shading", 18 => "Pleat", 19 => "Twisting", 20 => "Gathring Wrong", 21 => "Uncut Thread", 22 => "Button Missing", 23 => "Button Position Wrong", 24 => "Print Defect", 25 => "Poor Shape", 26 => "Contamination", 27 => "Slub", 28 => "Others", 29 => "Seam Reversed", 30 => "Needle Mark", 31 => "Bad Ten shire", 32 => "Over STC", 33 => "Incorrect SPI", 34 => "Uneven Seam Allowance", 35 => "Crooked Label", 36 => "Joint/Gathering STC", 37 => "Uneven Shape");
		$i = 0;
		foreach ($cutting_qc_reject_type as $key => $reject)
		{
			$purpose_arr["MasterPart"][$i]['ID'] = $key;
			$purpose_arr["MasterPart"][$i]['REJECT_NAME'] = $reject;
			$i++;
		}
		return $purpose_arr;
	}

	public function sew_fin_alter_defect_type_v1()
	{
		$purpose_arr = array(); //AKH
		$cutting_qc_reject_type = array(21 => "Uncut Thread", 12 => "Rawedge", 6 => "Broken Stitch", 9 => "Puckering", 20 => "Irregular Gathering", 3 => "Open Seam", 15 => "Up Down", 105 => "Improper Tuck", 13 => "Missing Tuck", 36 => "Joint Stitch", 18 => "Pleat", 26 => "Yarn Contamination", 86 => "Crease Mark", 4 => "Skip Stitch", 44 => "Down Stitch",  17 => "Shading", 19 => "Twisting",  106 => "Bad Tension", 37 => "Uneven Shape", 107 => "Bottom Hi-Low", 108 => "Wavyness", 109 => "Measurement Deviation", 46 => "Size Mistake", 41 => "Open Stitch", 44 => "Down Stitch", 110 => "Improper Sleeve Joint", 10 => "Label Mistake", 111 => "Neck Rib Width Un-even", 11 => "Label Slanted", 112 => "Placket slanted", 113 => "Placket Box Uneven", 95 => "Pocket uneven", 114 => "Improper Balancing", 115 => "Button Hole Problem", 22 => "Button Missing", 45 => "Needle Cut", 117 => "Cut Damage", 118 => "Cutting Sticker", 16 => "Label Missing" , 119 => "Print Fault",  120 => "Embroidery fault",  121 => "Looseness",  122 => "Process Missing", 123 => "Collar fault", 124 => "Irregular stitching", 125 => "Label Wrong Attachment", 126 => "Fabric Fault", 127 => "Machine Feed Cut", 128 => "Fabric Hole", 129 => "Scissor Cut", 28 => "Others", 116 => "Garments Missing Qty");
		//$cutting_qc_reject_type = array(21 => "Uncut Thread", 12 => "Rawadge",  1 => "Fabric Fault", 2 => "Run of seam", 3 => "Open Seam", 4 => "Skip Stitch", 5 => "Uneven Top Stitch", 6 => "Broken Stitch", 7 => "Loose Stitch", 8 => "Irregular Stitch", 9 => "Puckering", 10 => "Label Wrong Mistake", 11 => "Slanted At Label",  13 => "Missing Tuck", 14 => "Wrong Tacking", 15 => "Up Down", 16 => "Missing Lbl /Bartack", 17 => "Shading", 18 => "Pleat", 19 => "Twisting", 20 => "Gathring Wrong", 22 => "Button Missing", 23 => "Button Position Wrong", 24 => "Print Defect", 25 => "Poor Shape", 26 => "Contamination", 27 => "Slub", 28 => "Others", 29 => "Seam Reversed", 30 => "Needle Mark", 31 => "Bad Ten shire", 32 => "Over STC", 33 => "Incorrect SPI", 34 => "Uneven Seam Allowance", 35 => "Crooked Label", 36 => "Joint/Gathering STC", 37 => "Uneven Shape");
		$i = 0;
		foreach ($cutting_qc_reject_type as $key => $reject)
		{
			$purpose_arr["MasterPart"][$i]['ID'] = $key;
			$purpose_arr["MasterPart"][$i]['REJECT_NAME'] = $reject;
			$i++;
		}
		return $purpose_arr;
	}

	public function sew_fin_spot_defect_type()
	{
		$purpose_arr = array();
		$sew_fin_spot_defect_type = array(1 => "Dirty Stain", 2 => "Oil Stain");
		$i = 0;
		foreach ($sew_fin_spot_defect_type as $key => $reject)
		{
			$purpose_arr["MasterPart"][$i]['ID'] = $key;
			$purpose_arr["MasterPart"][$i]['REJECT_NAME'] = $reject;
			$i++;
		}
		return $purpose_arr;
	}

	public function sew_fin_spot_defect_type_v1()
	{
		$purpose_arr = array();
		$sew_fin_spot_defect_type = array(1 => "Dirty Stain", 2 => "Oil Stain");
		$i = 0;
		foreach ($sew_fin_spot_defect_type as $key => $reject)
		{
			$purpose_arr["MasterPart"][$i]['ID'] = $key;
			$purpose_arr["MasterPart"][$i]['REJECT_NAME'] = $reject;
			$i++;
		}
		return $purpose_arr;
	}
	public function get_all_reject_name()
	{
		$purpose_arr = array();
		$cutting_qc_reject_type = array(1 => "Crease Mark", 2 => "Dirty Spot", 3 => "Hole", 4 => "Knitting Defect", 5 => "Dyeing Spot", 6 => 'Others', 8 => 'Miss yarn', 9 => 'Contamination', 10 => 'Slub', 11 => 'Oil Spot', 12 => 'Needle Line', 13 => 'Needle Hole', 14 => 'Lycra Out', 15 => 'Dia Mark', 16 => 'Knot', 17 => 'Miss Cut', 18 => 'Over Compusser', 19 => 'Un-Even Dyenig', 20 => 'Patta', 21 => 'Loop Out', 22 => 'Grease Spot', 23 => 'Thick and Thin', 24 => 'Gsm Cut', 25 => 'Fabric Join', 26 => 'Reject For Dia Short', 27 => 'Crimple Mark', 28 => 'Broken', 29 => 'Marker Line', 30 => 'Shape Uneven', 31 => 'Numb Spot', 32 => 'Miss Print');
		$i = 0;
		foreach ($cutting_qc_reject_type as $key => $reject)
		{
			$purpose_arr["MasterPart"][$i]['ID'] = $key;
			$purpose_arr["MasterPart"][$i]['REJECT_NAME'] = $reject;
			$i++;
		}
		return $purpose_arr;
	}

	public function get_all_reject_name_v1()
	{
		$purpose_arr = array();
		$cutting_qc_reject_type = array(1 => "Crease Mark", 2 => "Dirty Spot", 3 => "Hole", 4 => "Knitting Defect", 5 => "Dyeing Spot", 6 => 'Others', 8 => 'Miss yarn', 9 => 'Contamination', 10 => 'Slub', 11 => 'Oil Spot', 12 => 'Needle Line', 13 => 'Needle Hole', 14 => 'Lycra Out', 15 => 'Dia Mark', 16 => 'Knot', 17 => 'Miss Cut', 18 => 'Over Compusser', 19 => 'Un-Even Dyenig', 20 => 'Patta', 21 => 'Loop Out', 22 => 'Grease Spot', 23 => 'Thick and Thin', 24 => 'Gsm Cut', 25 => 'Fabric Join', 26 => 'Reject For Dia Short', 27 => 'Crimple Mark', 28 => 'Broken', 29 => 'Marker Line', 30 => 'Shape Uneven', 31 => 'Numb Spot', 32 => 'Miss Print');
		$i = 0;
		foreach ($cutting_qc_reject_type as $key => $reject)
		{
			$purpose_arr["MasterPart"][$i]['ID'] = $key;
			$purpose_arr["MasterPart"][$i]['REJECT_NAME'] = $reject;
			$i++;
		}
		return $purpose_arr;
	}

	public function swing_input_output_insert($qc_obj)
	{
		$response_obj = json_decode($qc_obj);

		$this->db->trans_start();

		$pc_date_time = date("d-M-Y h:i:s A",time());
		$user_id 	  = 1;

		$prod_reso_allocation = return_field_value("auto_update", "variable_settings_production", "company_name=1 and variable_list=23 and status_active=1 and is_deleted=0");
		$mst_part_data = $response_obj->resultset->MasterPart;

		if ($mst_part_data->PRODUCTION_TYPE == 4) {
			$mrr_pref = "SWI";
			$entry_form = 96;
			$prod_type = 4;
		} else {
			$mrr_pref = "SWO";
			$entry_form = 0;
			$prod_type = 5;
		}

		$new_sys_number = explode("*", return_next_id_by_sequence("", "pro_gmts_delivery_mst","",1,1,$mrr_pref,0,date("Y",time()),0,0,$prod_type,0,0 ));
		$mst_id = return_next_id_by_sequence(  "PRO_GMTS_DELIVERY_MST_SEQ", "PRO_GMTS_DELIVERY_MST" );
		$delivery_mst = array(
			'ID'        => $mst_id,
			'SYS_NUMBER_PREFIX' => $new_sys_number[1],
			'SYS_NUMBER_PREFIX_NUM' => $new_sys_number[2],
			'SYS_NUMBER' => $new_sys_number[0],
			'COMPANY_ID' => $mst_part_data->COMPANY_ID,
			'PRODUCTION_TYPE' => $mst_part_data->PRODUCTION_TYPE,
			'LOCATION_ID' => $mst_part_data->LOCATION_ID,
			'DELIVERY_BASIS' => 3,
			'PRODUCTION_SOURCE' => 1,
			'SERVING_COMPANY' => 1,
			'FLOOR_ID' => $mst_part_data->FLOOR_ID,
			'SEWING_LINE' => $mst_part_data->SEWING_LINE,
			'DELIVERY_DATE' => $mst_part_data->ENTRY_DATE,
			'ENTRY_FORM' => $entry_form,
			'INSERTED_BY' => $user_id,
			'INSERT_DATE' => $pc_date_time
		);

		if(!empty($delivery_mst)){
			$this->insertData($delivery_mst, 'PRO_GMTS_DELIVERY_MST');
		}

		$cutting_no_arr = explode(",", $mst_part_data->CUT_NO);
		$cut_nums="";
		foreach ($cutting_no_arr as $cut_no) {
			$cut_nums .= "'".$cut_no."',";
		}

		$cut_nums = rtrim($cut_nums,", ");
		$bundle_wise_type_sql="SELECT b.bundle_no ,b.color_type_id from ppl_cut_lay_mst a,ppl_cut_lay_bundle b where a.id=b.mst_id and  a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0 and a.cutting_no in ($cut_nums) ";
		$bundle_wise_type_array=array();
		$bundle_wise_data = $this->db->query($bundle_wise_type_sql)->result();
		foreach($bundle_wise_data as $vals)
		{
			$bundle_wise_type_array[$vals->BUNDLE_NO]=$vals->COLOR_TYPE_ID;
		}

		$bundle="";
		$bundle_arr = explode(",",$mst_part_data->BUNDLE_NO);
		foreach($bundle_arr as $bundle_no)
		{
			$bundle .= "'".$bundle_no."',";
		}
		$bundle = rtrim($bundle,", ");
		$receive_sql="select c.barcode_no,c.bundle_no from pro_garments_production_dtls c where  c.bundle_no  in ($bundle)  and c.production_type=4 and c.status_active=1 and c.is_deleted=0 and (c.is_rescan=0 or c.is_rescan is null)"; ;
		$receive_result = $this->db->query($receive_sql)->result();
		foreach ($receive_result as $row)
		{
			$duplicate_bundle[trim($row->BUNDLE_NO)]=trim($row->BUNDLE_NO);
		}

		$dtls_part_data = $response_obj->resultset->DtlsPart;
		$mstArr = array();
		$dtlsArr = array();
		$colorSizeArr = array();
		$mstIdArr = array();
		$colorSizeIdArr = array();
		foreach ($dtls_part_data as $row) {

			if($duplicate_bundle[trim($row->BUNDLE_NO)]=='')
			{
				$bundleCutArr[$row->BUNDLE_NO]=$mst_part_data->CUT_NO;
				$cutArr[$row->ORDER_ID][$row->ITEM_ID][$row->COUNTRY_ID]=$mst_part_data->CUT_NO;
				$mstArr[$row->ORDER_ID][$row->ITEM_ID][$row->COUNTRY_ID] += $row->QTY;
				$colorSizeArr[$row->BUNDLE_NO] = $row->ORDER_ID . "**" . $row->ITEM_ID . "**" . $row->COUNTRY_ID;
				$dtlsArr[$row->BUNDLE_NO] += ($row->QTY+$row->REPLACE)-($row->REJECT+$row->ALTER+$row->SPOT);
				$dtlsArrColorSize[$row->BUNDLE_NO] = $row->COLOR_SIZE_ID;
				$bundleRescanArr[$row->BUNDLE_NO]=$row->IS_RESCAN;
				$bundleBarcodeArr[$row->BUNDLE_NO]=$row->BARCODE_NO;

				$dtlsRejQtyArr[trim($row->BUNDLE_NO)] += $row->REJECT;
				$dtlsAltQtyArr[trim($row->BUNDLE_NO)] += $row->ALTER;
				$dtlsSpoQtyArr[trim($row->BUNDLE_NO)] += $row->SPOT;
				$dtlsRepQtyArr[trim($row->BUNDLE_NO)] += $row->REPLACE;
				$dtlsQcQtyArr[trim($row->BUNDLE_NO)]  += $row->QC_QNTY;

				$dtlsAlterStrtArr[trim($row->BUNDLE_NO)] = $row->ALTER_STR;
				$dtlsSpotStrtArr[trim($row->BUNDLE_NO)] = $row->SPOT_STR;
				$dtlsOrderIdArr[trim($row->BUNDLE_NO)] = $row->ORDER_ID;

				$total_reject[$row->ORDER_ID][$row->ITEM_ID][$row->COUNTRY_ID] += $row->REJECT;
				$total_alter[$row->ORDER_ID][$row->ITEM_ID][$row->COUNTRY_ID] += $row->ALTER;
				$total_spot[$row->ORDER_ID][$row->ITEM_ID][$row->COUNTRY_ID] += $row->SPOT;
				$total_qcpass_qnty[$row->ORDER_ID][$row->ITEM_ID][$row->COUNTRY_ID] += ($row->QTY+$row->REPLACE)-($row->REJECT+$row->ALTER+$row->SPOT);
			}
		}

		foreach ($mstArr as $orderId => $orderData) {
			foreach ($orderData as $gmtsItemId => $gmtsItemIdData) {
				foreach ($gmtsItemIdData as $countryId => $qty) {
					$id= return_next_id_by_sequence(  "PRO_GAR_PRODUCTION_MST_SEQ",  "PRO_GARMENTS_PRODUCTION_MST", $con );

					$reporting_hour = $mst_part_data->ENTRY_DATE . " " . $mst_part_data->HOUR;
					$reporting_hour = "TO_DATE('$reporting_hour','DD MONTH YYYY HH24:MI:SS')";

					$cut_no = $cutArr[$orderId][$gmtsItemId][$countryId];

					$reject = $total_reject[$orderId][$gmtsItemId][$countryId];
					$alter = $total_alter[$orderId][$gmtsItemId][$countryId];
					$spot = $total_spot[$orderId][$gmtsItemId][$countryId];
					$pqnty = $total_qcpass_qnty[$orderId][$gmtsItemId][$countryId];

					//$pqnty = ($qnty + $replace) - ($reject + $alter);
					$gmts_prod_mst_sql =
					"INSERT INTO PRO_GARMENTS_PRODUCTION_MST (ID,DELIVERY_MST_ID,CHALLAN_NO,CUT_NO,COMPANY_ID,GARMENTS_NATURE,PO_BREAK_DOWN_ID,ITEM_NUMBER_ID,COUNTRY_ID,PRODUCTION_SOURCE,SERVING_COMPANY,LOCATION,PRODUCTION_DATE,PRODUCTION_HOUR,PRODUCTION_QUANTITY,PRODUCTION_TYPE,ENTRY_BREAK_DOWN_TYPE,FLOOR_ID,SEWING_LINE,PROD_RESO_ALLO,ENTRY_FORM,INSERTED_BY,INSERT_DATE,IS_TAB,ALTER_QNTY,REJECT_QNTY,SPOT_QNTY)
					VALUES ($id, $mst_id, '$new_sys_number[2]', '$cut_no', $mst_part_data->COMPANY_ID, 2, $orderId, $gmtsItemId, $countryId, 1, 1, '$mst_part_data->LOCATION_ID', '$mst_part_data->ENTRY_DATE',$reporting_hour, '$pqnty', $mst_part_data->PRODUCTION_TYPE, 3, '$mst_part_data->FLOOR_ID', '$mst_part_data->SEWING_LINE', '$prod_reso_allocation', $entry_form, $user_id, '$pc_date_time',1,$alter,$reject,$spot)";

					$this->db->query($gmts_prod_mst_sql);

					$mstIdArr[$orderId][$gmtsItemId][$countryId] = $id;

					/*if(!empty($production_mst)){
						$this->insertData($production_mst, 'PRO_GARMENTS_PRODUCTION_MST');
					}*/
				}
			}
		}

		foreach ($dtlsArr as $bundle_no => $qty) {

			$colorSizedData = explode("**", $colorSizeArr[$bundle_no]);
			$gmtsMstId = $mstIdArr[$colorSizedData[0]][$colorSizedData[1]][$colorSizedData[2]];

			$cut_no=$bundleCutArr[$bundle_no];
			$dtls_id = return_next_id_by_sequence(  "PRO_GAR_PRODUCTION_DTLS_SEQ", "PRO_GARMENTS_PRODUCTION_DTLS", $con );

			$data_array_dtls = array(
				'ID'        => $dtls_id,
				'DELIVERY_MST_ID' => $mst_id,
				'MST_ID' => $gmtsMstId,
				'PRODUCTION_TYPE' => $mst_part_data->PRODUCTION_TYPE,
				'COLOR_SIZE_BREAK_DOWN_ID' => $dtlsArrColorSize[$bundle_no],
				'PRODUCTION_QNTY' => $qty,
				'CUT_NO' => $cut_no,
				'BUNDLE_NO' => $bundle_no,
				'ENTRY_FORM' => $entry_form,
				'BARCODE_NO' => $bundleBarcodeArr[$bundle_no],
				'IS_RESCAN' => $bundleRescanArr[$bundle_no],
				'COLOR_TYPE_ID' => ($bundle_wise_type_array[$bundle_no])?$bundle_wise_type_array[$bundle_no]:0
			);
			if ($mst_part_data->PRODUCTION_TYPE == 4) {
				$data_array_dtls['PRODUCTION_QNTY']=$qty;
			}
			else if ($mst_part_data->PRODUCTION_TYPE == 5)
			{
				$data_array_dtls['PRODUCTION_QNTY'] = $qty;
				$data_array_dtls['REJECT_QTY'] 		= $dtlsRejQtyArr[$bundle_no];
				$data_array_dtls['ALTER_QTY'] 		= $dtlsAltQtyArr[$bundle_no];
				$data_array_dtls['REPLACE_QTY'] 	= $dtlsRepQtyArr[$bundle_no];
				$data_array_dtls['SPOT_QTY'] 		= $dtlsSpoQtyArr[$bundle_no];

				if($dtlsAlterStrtArr[$bundle_no] !="")
				{
					$defect_data = explode(",", $dtlsAlterStrtArr[$bundle_no]);
					foreach ($defect_data as $def_row) {
						$dft_id = return_next_id_by_sequence(  "PRO_GMTS_PROD_DFT_SEQ", "PRO_GMTS_PROD_DFT", $con );
						$defect_info = explode("*", $def_row);
						$alter_defect = array(
							'ID'        => $dft_id,
							'MST_ID' => $id,
							'PRODUCTION_TYPE' => 5,
							'PO_BREAK_DOWN_ID' => $dtlsOrderIdArr[$bundle_no],
							'DEFECT_TYPE_ID' => 3,
							'DEFECT_POINT_ID' => $defect_info[0],
							'DEFECT_QTY' => $defect_info[1],
							'BUNDLE_NO' => $bundle_no,
							'INSERTED_BY' => $user_id,
							'INSERT_DATE' => $pc_date_time
						);

						if(!empty($alter_defect)){
							$this->insertData($alter_defect, 'PRO_GMTS_PROD_DFT');
						}
					}
				}
				if($dtlsSpotStrtArr[$bundle_no] !="")
				{
					$defect_data = explode(",", $dtlsSpotStrtArr[$bundle_no]);
					foreach ($defect_data as $def_row) {
						$dft_id = return_next_id_by_sequence(  "PRO_GMTS_PROD_DFT_SEQ", "PRO_GMTS_PROD_DFT", $con );
						$defect_info = explode("*", $def_row);
						$spot_defect = array(
							'ID'        => $dft_id,
							'MST_ID' => $id,
							'PRODUCTION_TYPE' => 5,
							'PO_BREAK_DOWN_ID' => $dtlsOrderIdArr[$bundle_no],
							'DEFECT_TYPE_ID' => 4,
							'DEFECT_POINT_ID' => $defect_info[0],
							'DEFECT_QTY' => $defect_info[1],
							'BUNDLE_NO' => $bundle_no,
							'INSERTED_BY' => $user_id,
							'INSERT_DATE' => $pc_date_time
						);
						if(!empty($spot_defect)){
							$this->insertData($spot_defect, 'PRO_GMTS_PROD_DFT');
						}
					}
				}
			}
			if(!empty($data_array_dtls)){
				$this->insertData($data_array_dtls, 'PRO_GARMENTS_PRODUCTION_DTLS');
			}

		}

		$this->db->trans_complete();
		if ($this->db->trans_status() == TRUE) {
			return array("status" => "Success", "msg"=> "Data saved successfully. Challan No = ".$new_sys_number[0]."");
		} else {
			return array("status" => "Failed");
		}
	}

	public function swing_input_output_insert_v1($qc_obj)
	{
		$response_obj = json_decode($qc_obj);

		$this->db->trans_start();

		$pc_date_time = date("d-M-Y h:i:s A",time());
		$user_id 	  = 1;

		$prod_reso_allocation = return_field_value("auto_update", "variable_settings_production", "company_name=1 and variable_list=23 and status_active=1 and is_deleted=0","auto_update");
		$mst_part_data = $response_obj->resultset->MasterPart;

		if ($mst_part_data->PRODUCTION_TYPE == 4) {
			$mrr_pref = "SWI";
			$entry_form = 96;
			$prod_type = 4;
		} else {
			$mrr_pref = "SWO";
			$entry_form = 0;
			$prod_type = 5;
		}

		$new_sys_number = explode("*", return_next_id_by_sequence("", "pro_gmts_delivery_mst","",1,1,$mrr_pref,0,date("Y",time()),0,0,$prod_type,0,0 ));
		$mst_id = return_next_id_by_sequence(  "PRO_GMTS_DELIVERY_MST_SEQ", "PRO_GMTS_DELIVERY_MST","","" );
		$delivery_mst = array(
			'ID'        => $mst_id,
			'SYS_NUMBER_PREFIX' => $new_sys_number[1],
			'SYS_NUMBER_PREFIX_NUM' => $new_sys_number[2],
			'SYS_NUMBER' => $new_sys_number[0],
			'COMPANY_ID' => $mst_part_data->COMPANY_ID,
			'PRODUCTION_TYPE' => $mst_part_data->PRODUCTION_TYPE,
			'LOCATION_ID' => $mst_part_data->LOCATION_ID,
			'DELIVERY_BASIS' => 3,
			'PRODUCTION_SOURCE' => 1,
			'SERVING_COMPANY' => 1,
			'FLOOR_ID' => $mst_part_data->FLOOR_ID,
			'SEWING_LINE' => $mst_part_data->SEWING_LINE,
			'DELIVERY_DATE' => $mst_part_data->ENTRY_DATE,
			'ENTRY_FORM' => $entry_form,
			'INSERTED_BY' => $user_id,
			'INSERT_DATE' => $pc_date_time
		);

		if(!empty($delivery_mst)){
			$this->insertData($delivery_mst, 'PRO_GMTS_DELIVERY_MST');
		}

		$cutting_no_arr = explode(",", $mst_part_data->CUT_NO);
		$cut_nums="";
		foreach ($cutting_no_arr as $cut_no) {
			$cut_nums .= "'".$cut_no."',";
		}

		$cut_nums = rtrim($cut_nums,", ");
		$bundle_wise_type_sql="SELECT b.bundle_no ,b.color_type_id from ppl_cut_lay_mst a,ppl_cut_lay_bundle b where a.id=b.mst_id and  a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0 and a.cutting_no in ($cut_nums) ";
		$bundle_wise_type_array=array();
		$bundle_wise_data = $this->db->query($bundle_wise_type_sql)->result();
		foreach($bundle_wise_data as $vals)
		{
			$bundle_wise_type_array[$vals->BUNDLE_NO]=$vals->COLOR_TYPE_ID;
		}

		$bundle="";
		$bundle_arr = explode(",",$mst_part_data->BUNDLE_NO);
		foreach($bundle_arr as $bundle_no)
		{
			$bundle .= "'".$bundle_no."',";
		}
		$bundle = rtrim($bundle,", ");
		$receive_sql="select c.barcode_no,c.bundle_no from pro_garments_production_dtls c where  c.bundle_no  in ($bundle)  and c.production_type=4 and c.status_active=1 and c.is_deleted=0 and (c.is_rescan=0 or c.is_rescan is null)"; ;
		$receive_result = $this->db->query($receive_sql)->result();
		foreach ($receive_result as $row)
		{
			$duplicate_bundle[trim($row->BUNDLE_NO)]=trim($row->BUNDLE_NO);
		}

		$dtls_part_data = $response_obj->resultset->DtlsPart;
		$mstArr = array();
		$dtlsArr = array();
		$colorSizeArr = array();
		$mstIdArr = array();
		$colorSizeIdArr = array();
		foreach ($dtls_part_data as $row) {

			if($duplicate_bundle[trim($row->BUNDLE_NO)]=='')
			{
				$bundleCutArr[$row->BUNDLE_NO]=$mst_part_data->CUT_NO;
				$cutArr[$row->ORDER_ID][$row->ITEM_ID][$row->COUNTRY_ID]=$mst_part_data->CUT_NO;
				$mstArr[$row->ORDER_ID][$row->ITEM_ID][$row->COUNTRY_ID] += $row->QTY;
				$colorSizeArr[$row->BUNDLE_NO] = $row->ORDER_ID . "**" . $row->ITEM_ID . "**" . $row->COUNTRY_ID;
				$dtlsArr[$row->BUNDLE_NO] += ($row->QTY+$row->REPLACE)-($row->REJECT+$row->ALTER+$row->SPOT);
				$dtlsArrColorSize[$row->BUNDLE_NO] = $row->COLOR_SIZE_ID;
				$bundleRescanArr[$row->BUNDLE_NO]=$row->IS_RESCAN;
				$bundleBarcodeArr[$row->BUNDLE_NO]=$row->BARCODE_NO;

				$dtlsRejQtyArr[trim($row->BUNDLE_NO)] += $row->REJECT;
				$dtlsAltQtyArr[trim($row->BUNDLE_NO)] += $row->ALTER;
				$dtlsSpoQtyArr[trim($row->BUNDLE_NO)] += $row->SPOT;
				$dtlsRepQtyArr[trim($row->BUNDLE_NO)] += $row->REPLACE;
				$dtlsQcQtyArr[trim($row->BUNDLE_NO)]  += $row->QC_QNTY;

				$dtlsAlterStrtArr[trim($row->BUNDLE_NO)] = $row->ALTER_STR;
				$dtlsSpotStrtArr[trim($row->BUNDLE_NO)] = $row->SPOT_STR;
				$dtlsOrderIdArr[trim($row->BUNDLE_NO)] = $row->ORDER_ID;

				$total_reject[$row->ORDER_ID][$row->ITEM_ID][$row->COUNTRY_ID] += $row->REJECT;
				$total_alter[$row->ORDER_ID][$row->ITEM_ID][$row->COUNTRY_ID] += $row->ALTER;
				$total_spot[$row->ORDER_ID][$row->ITEM_ID][$row->COUNTRY_ID] += $row->SPOT;
				$total_qcpass_qnty[$row->ORDER_ID][$row->ITEM_ID][$row->COUNTRY_ID] += ($row->QTY+$row->REPLACE)-($row->REJECT+$row->ALTER+$row->SPOT);
			}
		}

		foreach ($mstArr as $orderId => $orderData) {
			foreach ($orderData as $gmtsItemId => $gmtsItemIdData) {
				foreach ($gmtsItemIdData as $countryId => $qty) {
					$id= return_next_id_by_sequence(  "PRO_GAR_PRODUCTION_MST_SEQ",  "PRO_GARMENTS_PRODUCTION_MST", $con,"" );

					$reporting_hour = $mst_part_data->ENTRY_DATE . " " . $mst_part_data->HOUR;
					$reporting_hour = "TO_DATE('$reporting_hour','DD MONTH YYYY HH24:MI:SS')";

					$cut_no = $cutArr[$orderId][$gmtsItemId][$countryId];

					$reject = $total_reject[$orderId][$gmtsItemId][$countryId];
					$alter = $total_alter[$orderId][$gmtsItemId][$countryId];
					$spot = $total_spot[$orderId][$gmtsItemId][$countryId];
					$pqnty = $total_qcpass_qnty[$orderId][$gmtsItemId][$countryId];

					//$pqnty = ($qnty + $replace) - ($reject + $alter);
					$gmts_prod_mst_sql =
					"INSERT INTO PRO_GARMENTS_PRODUCTION_MST (ID,DELIVERY_MST_ID,CHALLAN_NO,CUT_NO,COMPANY_ID,GARMENTS_NATURE,PO_BREAK_DOWN_ID,ITEM_NUMBER_ID,COUNTRY_ID,PRODUCTION_SOURCE,SERVING_COMPANY,LOCATION,PRODUCTION_DATE,PRODUCTION_HOUR,PRODUCTION_QUANTITY,PRODUCTION_TYPE,ENTRY_BREAK_DOWN_TYPE,FLOOR_ID,SEWING_LINE,PROD_RESO_ALLO,ENTRY_FORM,INSERTED_BY,INSERT_DATE,IS_TAB,ALTER_QNTY,REJECT_QNTY,SPOT_QNTY)
					VALUES ($id, $mst_id, '$new_sys_number[2]', '$cut_no', $mst_part_data->COMPANY_ID, 2, $orderId, $gmtsItemId, $countryId, 1, 1, '$mst_part_data->LOCATION_ID', '$mst_part_data->ENTRY_DATE',$reporting_hour, '$pqnty', $mst_part_data->PRODUCTION_TYPE, 3, '$mst_part_data->FLOOR_ID', '$mst_part_data->SEWING_LINE', '$prod_reso_allocation', $entry_form, $user_id, '$pc_date_time',1,$alter,$reject,$spot)";

					$this->db->query($gmts_prod_mst_sql);

					$mstIdArr[$orderId][$gmtsItemId][$countryId] = $id;

					/*if(!empty($production_mst)){
						$this->insertData($production_mst, 'PRO_GARMENTS_PRODUCTION_MST');
					}*/
				}
			}
		}

		foreach ($dtlsArr as $bundle_no => $qty) {

			$colorSizedData = explode("**", $colorSizeArr[$bundle_no]);
			$gmtsMstId = $mstIdArr[$colorSizedData[0]][$colorSizedData[1]][$colorSizedData[2]];

			$cut_no=$bundleCutArr[$bundle_no];
			$dtls_id = return_next_id_by_sequence(  "PRO_GAR_PRODUCTION_DTLS_SEQ", "PRO_GARMENTS_PRODUCTION_DTLS", $con,"" );

			$data_array_dtls = array(
				'ID'        => $dtls_id,
				'DELIVERY_MST_ID' => $mst_id,
				'MST_ID' => $gmtsMstId,
				'PRODUCTION_TYPE' => $mst_part_data->PRODUCTION_TYPE,
				'COLOR_SIZE_BREAK_DOWN_ID' => $dtlsArrColorSize[$bundle_no],
				'PRODUCTION_QNTY' => $qty,
				'CUT_NO' => $cut_no,
				'BUNDLE_NO' => $bundle_no,
				'ENTRY_FORM' => $entry_form,
				'BARCODE_NO' => $bundleBarcodeArr[$bundle_no],
				'IS_RESCAN' => $bundleRescanArr[$bundle_no],
				'COLOR_TYPE_ID' => ($bundle_wise_type_array[$bundle_no])?$bundle_wise_type_array[$bundle_no]:0
			);
			if ($mst_part_data->PRODUCTION_TYPE == 4) {
				$data_array_dtls['PRODUCTION_QNTY']=$qty;
			}
			else if ($mst_part_data->PRODUCTION_TYPE == 5)
			{
				$data_array_dtls['PRODUCTION_QNTY'] = $qty;
				$data_array_dtls['REJECT_QTY'] 		= $dtlsRejQtyArr[$bundle_no];
				$data_array_dtls['ALTER_QTY'] 		= $dtlsAltQtyArr[$bundle_no];
				$data_array_dtls['REPLACE_QTY'] 	= $dtlsRepQtyArr[$bundle_no];
				$data_array_dtls['SPOT_QTY'] 		= $dtlsSpoQtyArr[$bundle_no];

				if($dtlsAlterStrtArr[$bundle_no] !="")
				{
					$defect_data = explode(",", $dtlsAlterStrtArr[$bundle_no]);
					foreach ($defect_data as $def_row) {
						$dft_id = return_next_id_by_sequence(  "PRO_GMTS_PROD_DFT_SEQ", "PRO_GMTS_PROD_DFT", $con,'' );
						$defect_info = explode("*", $def_row);
						$alter_defect = array(
							'ID'        => $dft_id,
							'MST_ID' => $id,
							'PRODUCTION_TYPE' => 5,
							'PO_BREAK_DOWN_ID' => $dtlsOrderIdArr[$bundle_no],
							'DEFECT_TYPE_ID' => 3,
							'DEFECT_POINT_ID' => $defect_info[0],
							'DEFECT_QTY' => $defect_info[1],
							//'BUNDLE_NO' => $bundle_no,
							'BUNDLE_NO' => $bundleBarcodeArr[$bundle_no],
							'INSERTED_BY' => $user_id,
							'INSERT_DATE' => $pc_date_time
						);

						if(!empty($alter_defect)){
							$this->insertData($alter_defect, 'PRO_GMTS_PROD_DFT');
						}
					}
				}
				if($dtlsSpotStrtArr[$bundle_no] !="")
				{
					$defect_data = explode(",", $dtlsSpotStrtArr[$bundle_no]);
					foreach ($defect_data as $def_row) {
						$dft_id = return_next_id_by_sequence(  "PRO_GMTS_PROD_DFT_SEQ", "PRO_GMTS_PROD_DFT", $con,'' );
						$defect_info = explode("*", $def_row);
						$spot_defect = array(
							'ID'        => $dft_id,
							'MST_ID' => $id,
							'PRODUCTION_TYPE' => 5,
							'PO_BREAK_DOWN_ID' => $dtlsOrderIdArr[$bundle_no],
							'DEFECT_TYPE_ID' => 4,
							'DEFECT_POINT_ID' => $defect_info[0],
							'DEFECT_QTY' => $defect_info[1],
							//'BUNDLE_NO' => $bundle_no,
							'BUNDLE_NO' => $bundleBarcodeArr[$bundle_no],
							'INSERTED_BY' => $user_id,
							'INSERT_DATE' => $pc_date_time
						);
						if(!empty($spot_defect)){
							$this->insertData($spot_defect, 'PRO_GMTS_PROD_DFT');
						}
					}
				}
			}
			if(!empty($data_array_dtls)){
				$this->insertData($data_array_dtls, 'PRO_GARMENTS_PRODUCTION_DTLS');
			}

		}

		$this->db->trans_complete();
		if ($this->db->trans_status() == TRUE) {
			return array("status" => "Success", "msg"=> "Data saved successfully. Challan No = ".$new_sys_number[0]."");
		} else {
			return array("status" => "Failed");
		}
	}

	public function sewing_barcode_data_test($company = 0, $barcode = "", $type) {

		$data_arr = array();

		$size_arr 		= return_library_array("select id, size_name from lib_size", 'id', 'size_name');
		$color_arr 		= return_library_array("select id, color_name from lib_color", "id", "color_name");
		$country_arr 	= return_library_array("select id, country_name from lib_country", 'id', 'country_name');
		$buyer_arr 		= return_library_array("select id, short_name from lib_buyer", 'id', 'short_name');
		$garments_item 	= return_library_array("select id,item_name from  lib_garment_item where status_active=1 and is_deleted=0 order by item_name", "id", "item_name");

		// $sewing_defect_arr = array();
		// // $defect_type_arr = return_library_array("SELECT DEFECT_POINT_ID,FULL_NAME,DEFECT_SERIAL_NO from LIB_SEWING_DEFECT_MST where defect_type=$defect_type_id and entry_page_id='$entry_form'", "DEFECT_POINT_ID", "FULL_NAME");
		// $defect_type_arr = $this->db->query("SELECT DEFECT_POINT_ID,FULL_NAME,DEFECT_SERIAL_NO from LIB_SEWING_DEFECT_MST where defect_type=2 and STATUS_ACTIVE = 1 and IS_DELETED = 0 and STATUS = 1 order by DEFECT_SERIAL_NO ASC")->result();
		// $i=0;
		// foreach ($defect_type_arr as $row) 
		// {
		// 	$sewing_defect_arr['defect_type'][$i]['id'] = $row->DEFECT_POINT_ID;
		// 	$sewing_defect_arr['defect_type'][$i]['defect_name'] = $row->FULL_NAME;
		// 	$sewing_defect_arr['defect_type'][$i]['serial_number'] = $row->DEFECT_SERIAL_NO;
		// 	$i++;
		// }

		$year_field = "";
		if ($this->db->dbdriver == 'mysqli') {
			$year_field = "YEAR(f.insert_date)";
		} else {
			$year_field = "to_char(f.insert_date,'YYYY')";
		}

		$barcode = trim($barcode);
		$barcode_no_sql = "SELECT  COLOR_TYPE_ID,BUNDLE_NO from PPL_CUT_LAY_BUNDLE where barcode_no='$barcode'";
		$barcode_no_arr = $this->db->query($barcode_no_sql)->result();

		if ($type == 4) {
			$input_sql = "SELECT a.barcode_no,a.bundle_no,b.sys_number from pro_garments_production_dtls a,pro_gmts_delivery_mst b
			where a.delivery_mst_id =b.id and a.status_active=1 and b.status_active=1 and a.production_type=4 and a.barcode_no='$barcode'";
			$input_exist_data = $this->db->query($input_sql)->row();
			if (count($input_exist_data) > 0) {
				return array("status" => "Failed", "msg"=> "Bundle No: " . $input_exist_data->BUNDLE_NO . " is already scanned. Challan No = ".$input_exist_data->SYS_NUMBER.". Please try another.");
				die;
			}

		}
		else if ($type == 5) {

			$sql_mst_output_data=$this->db->query("SELECT a.sys_number,a.sewing_line, sum(c.production_qnty+c.reject_qty+c.alter_qty+c.spot_qty-c.replace_qty) as production_qnty,c.bundle_no
				from pro_gmts_delivery_mst a, pro_garments_production_dtls c where a.id=c.delivery_mst_id and c.production_type=5 and a.status_active=1 and a.is_deleted=0  and c.status_active=1 and c.is_deleted=0 and c.barcode_no='$barcode' group by a.sys_number,a.sewing_line,c.bundle_no")->result();

			foreach ($sql_mst_output_data as $row)
			{
				$production_qnty[$row->SEWING_LINE][$row->BUNDLE_NO]+=$row->PRODUCTION_QNTY;
				$sys_number[$row->SEWING_LINE][$row->BUNDLE_NO]=$row->SYS_NUMBER;

			}

			$sql_mst_input_data=$this->db->query("SELECT a.sewing_line, sum(c.production_qnty) as production_qnty,c.bundle_no
				from pro_gmts_delivery_mst a, pro_garments_production_dtls c where a.id=c.delivery_mst_id and c.production_type=4 and a.status_active=1 and a.is_deleted=0  and c.status_active=1 and c.is_deleted=0 and c.barcode_no='$barcode' group by a.sewing_line,c.bundle_no")->result();
			$kk=0;
			foreach ($sql_mst_input_data as $row)
			{
				if( $row->PRODUCTION_QNTY-$production_qnty[$row->SEWING_LINE][$row->BUNDLE_NO]==0)
				{
					$rescan_info=$this->db->query("SELECT c.barcode_no, (sum( case when c.is_rescan=0 then  c.alter_qty+c.spot_qty else 0 end)-sum(case when c.is_rescan=0 and c.replace_qty>c.reject_qty then c.replace_qty-c.reject_qty else 0 end ))-sum(case when c.is_rescan=2 then c.production_qnty else 0 end ) as qty,a.sewing_line from pro_gmts_delivery_mst  a, pro_garments_production_dtls c where  a.id=c.delivery_mst_id  and c.production_type=5 and a.status_active=1 and a.is_deleted=0 and c.barcode_no='$barcode' and c.status_active=1 and c.is_deleted=0 group by c.barcode_no,a.sewing_line")->row();

					$rescan_qty_total=$row->PRODUCTION_QNTY-$rescan_info->QTY;
					if($rescan_qty_total == 0)
					{
						$msg="Duplicate scan found for bundle no:- ".$row->BUNDLE_NO." in Challan no: ".$sys_number[$row->SEWING_LINE][$row->BUNDLE_NO];
						return array("status" => "Failed", "msg"=> $msg);
						die;
					}

				}
			}

			$output_sql_rescan = "SELECT a.bundle_no,b.sys_number,sum(case when a.is_rescan=0 then (a.reject_qty+a.spot_qty+a.alter_qty)-a.replace_qty else 0 end )-sum(case when a.is_rescan > 0 then a.production_qnty else 0 end) as production_qnty
			from pro_garments_production_dtls a,pro_gmts_delivery_mst b
			where a.status_active=1 and a.production_type=5 and a.barcode_no='$barcode' and a.delivery_mst_id=b.id and b.status_active=1 and b.production_type=5
			group by a.bundle_no,b.sys_number";
			$output_rescan_data = sql_select($output_sql_rescan);
			$balance_qty=0;
			foreach($output_rescan_data as $rows){
				$balance_qty+=$rows->PRODUCTION_QNTY;
			}

			if($balance_qty<=0 && count($output_rescan_data) > 0){
				return array("status" => "Failed", "msg"=> "Bundle No: " . $input_exist_data->BUNDLE_NO . " is already scanned. Challan No = ".$input_exist_data->SYS_NUMBER.". Please try another.");
				die;
				return array(
					'message_bng' => '',
					'message_eng' => '',
					'bundle_no' => '',
					'barcode_no' => 0,
					'year' => 0,
					'color_size_id' => 0,
					'order_id' => 0,
					'item_id' => 0,
					'country_id' => 0,
					'size_id' => 0,
					'color_id' => 0,
					'cut_no' => '',
					'job_no' => 0,
					'buyer' => '',
					'order_no' => '',
					'item' => '',
					'country' => '',
					'color' => '',
					'size' => '',
					'qty' => 0,
					'is_rescan' => 0,
					'color_type_id' => 0,
				);

			}

			if (count($output_rescan_data) > 0) {

				$sqls = "SELECT A.COMPANY_ID,a.LOCATION,a.FLOOR_ID,a.SEWING_LINE, c.COLOR_TYPE_ID, max(c.id) as prdid, d.id as COLORSIZEID, e.id as PO_ID,f.company_name as LC_COMPANY, f.JOB_NO_PREFIX_NUM, MAX($year_field) as YEAR, f.BUYER_NAME, d.ITEM_NUMBER_ID, d.COUNTRY_ID, d.SIZE_NUMBER_ID, d.COLOR_NUMBER_ID, c.cut_no,c.BUNDLE_NO, (sum( case when c.is_rescan=0 then  c.alter_qty+c.spot_qty else 0 end)-sum(case when c.is_rescan=0 and c.replace_qty>c.reject_qty then c.replace_qty-c.reject_qty else 0 end ))-sum(case when c.is_rescan=2 then c.production_qnty else 0 end ) as PRODUCTION_QNTY, e.PO_NUMBER,c.BARCODE_NO,1 as IS_RESCAN from PRO_GARMENTS_PRODUCTION_MST a,PRO_GARMENTS_PRODUCTION_DTLS c, WO_PO_COLOR_SIZE_BREAKDOWN d, WO_PO_BREAK_DOWN e, WO_PO_DETAILS_MASTER f where a.id=c.mst_id and c.color_size_break_down_id=d.id and d.po_break_down_id=e.id and e.job_no_mst=f.job_no and c.production_type =5 and c.status_active=1 and c.is_deleted=0 and a.status_active=1 and a.is_deleted=0 and d.status_active in(1,2,3) and d.is_deleted=0 and e.status_active in(1,2,3) and e.is_deleted=0 and f.status_active=1 and f.is_deleted=0 and c.barcode_no='$barcode' group by A.COMPANY_ID,a.LOCATION,a.FLOOR_ID,a.SEWING_LINE, c.COLOR_TYPE_ID,d.id, e.id,f.company_name, f.job_no_prefix_num, f.buyer_name, d.item_number_id, d.country_id, d.size_number_id, d.color_number_id,c.cut_no, c.bundle_no,c.barcode_no, e.po_number order by c.cut_no, length(c.bundle_no) asc, c.bundle_no asc";

				$result = sql_select($sqls);
				if (count($result) < 1) {
					return array(
						'message_bng' => '',
						'message_eng' => '',
						'bundle_no' => '',
						'barcode_no' => 0,
						'year' => 0,
						'color_size_id' => 0,
						'order_id' => 0,
						'item_id' => 0,
						'country_id' => 0,
						'size_id' => 0,
						'color_id' => 0,
						'cut_no' => '',
						'job_no' => 0,
						'buyer' => '',
						'order_no' => '',
						'item' => '',
						'country' => '',
						'color' => '',
						'size' => '',
						'replace_qty' => 0,
						'qty' => 0,
						'is_rescan' => 1,
						'color_type_id' => 0,
					);
				}

				$data_arr = array();


				foreach ($result as $v) {
					$data_arr["MasterPart"]["COMPANY_ID"] = $v->COMPANY_ID;
					$data_arr["MasterPart"]["PRODUCTION_TYPE"] = $type;
					$data_arr["MasterPart"]["BUNDLE_NO"] = $v->BUNDLE_NO;
					$data_arr["MasterPart"]["BARCODE_NO"] = $v->BARCODE_NO;
					$data_arr["MasterPart"]["YEAR"] = $v->YEAR;
					$data_arr["MasterPart"]["COLOR_SIZE_ID"] = $v->COLORSIZEID;
					$data_arr["MasterPart"]["ORDER_ID"] = $v->PO_ID;
					$data_arr["MasterPart"]["ITEM_ID"] = $v->ITEM_NUMBER_ID;
					$data_arr["MasterPart"]["COUNTRY_ID"] = $v->COUNTRY_ID;
					$data_arr["MasterPart"]["SIZE_ID"] = $v->SIZE_NUMBER_ID;
					$data_arr["MasterPart"]["COLOR_ID"] = $v->COLOR_NUMBER_ID;
					$data_arr["MasterPart"]["CUT_NO"] = $v->CUT_NO;
					$data_arr["MasterPart"]["JOB_NO"] = $v->JOB_NO_PREFIX_NUM;
					$data_arr["MasterPart"]["LOCATION_ID"] = $v->LOCATION;
					$data_arr["MasterPart"]["FLOOR_ID"] = $v->FLOOR_ID;
					$data_arr["MasterPart"]["SEWING_LINE"] = $v->SEWING_LINE;

					if (isset($buyer_arr[$v->BUYER_NAME])) {
						$data_arr["MasterPart"]["BUYER"] = $buyer_arr[$v->BUYER_NAME];
					} else {
						$data_arr["MasterPart"]["BUYER"] = "";
					}

					$data_arr["MasterPart"]["ORDER_NO"] = "$v->PO_NUMBER";

					if (isset($garments_item[$v->ITEM_NUMBER_ID])) {
						$data_arr["MasterPart"]["ITEM"] = $garments_item[$v->ITEM_NUMBER_ID];
					} else {
						$data_arr["MasterPart"]["ITEM"] = "";
					}

					if (isset($country_arr[$v->COUNTRY_ID])) {
						$data_arr["MasterPart"]["COUNTRY"] = $country_arr[$v->COUNTRY_ID];
					} else {
						$data_arr["MasterPart"]["COUNTRY"] = "";
					}

					if (isset($color_arr[$v->COLOR_NUMBER_ID])) {
						$data_arr["MasterPart"]["COLOR"] = $color_arr[$v->COLOR_NUMBER_ID];
					} else {
						$data_arr["MasterPart"]["COLOR"] = "";
					}

					if (isset($size_arr[$v->SIZE_NUMBER_ID])) {
						$data_arr["MasterPart"]["SIZE"] = $size_arr[$v->SIZE_NUMBER_ID];
					} else {
						$data_arr["MasterPart"]["SIZE"] = 0;
					}

					$data_arr["MasterPart"]["QTY"] = $v->PRODUCTION_QNTY;
					$data_arr["MasterPart"]["IS_RESCAN"] = $v->IS_RESCAN;

					if (isset($cut_lay_rowo[0]->COLOR_TYPE_ID)) {
						$data_arr["MasterPart"]["COLOR_TYPE_ID"] = $cut_lay_rowo[0]->COLOR_TYPE_ID;
					} else {
						$data_arr["MasterPart"]["COLOR_TYPE_ID"] = 0;
					}
				}

				return $data_arr;

			}

		}

		$col_size_seq = "SELECT color_size_break_down_id as IDS,CUT_NO from PRO_GARMENTS_PRODUCTION_DTLS where status_active=1 and is_deleted=0 and barcode_no='$barcode' group by color_size_break_down_id,cut_no";
		$col_size_seq_arr = array();
		$cut_arr = array();
		foreach (sql_select($col_size_seq) as $v) {
			$col_size_seq_arr[$v->IDS] = $v->IDS;
			$cut_arr[$v->CUT_NO] = $v->CUT_NO;
		}

		$ids = implode(",", $col_size_seq_arr);
		if (count($col_size_seq_arr) < 1) {$ids = 0;}

		$cut_nos = "'" . implode("','", $cut_arr) . "'";
		if (count($cut_arr) < 1) {$cut_nos = "'0'";}

		$source_sql = "SELECT PRECEDING_OP from pro_production_sequence where CURRENT_OPERATION='$type' and COL_SIZE_ID in($ids) and CUTTING_NO in($cut_nos) ";
		$source_val = 0;
		foreach (sql_select($source_sql) as $vl) {
			$source_val = $vl->PRECEDING_OP;
		}
		$source_cond = $source_val;

		$sewing_data_sql="SELECT a.sys_number, a.company_id, a.location_id, a.embel_name, a.embel_type, a.serving_company, a.floor_id, a.sewing_line, a.organic, a.production_source, a.delivery_date
		from pro_gmts_delivery_mst a, pro_garments_production_dtls c where a.id=c.delivery_mst_id and c.barcode_no='$barcode' and c.production_type=4 and a.status_active=1 and a.is_deleted=0  and c.status_active=1 and c.is_deleted=0 group by a.sys_number, a.company_id,a.location_id, a.embel_name, a.embel_type, a.serving_company,a.floor_id,a.sewing_line,a.organic,a.production_source,a.delivery_date";
		$sewing_data = $this->db->query($sewing_data_sql)->row();

		$sqls = "SELECT  a.LOCATION,a.FLOOR_ID,a.SEWING_LINE, c.COLOR_TYPE_ID,  0 as IS_RESCAN,max(c.id) as prdid, d.id as COLORSIZEID, e.id as PO_ID,f.company_name as LC_COMPANY, f.JOB_NO_PREFIX_NUM, MAX($year_field) as YEAR, f.BUYER_NAME, d.ITEM_NUMBER_ID, d.COUNTRY_ID, d.SIZE_NUMBER_ID, d.COLOR_NUMBER_ID, c.cut_no,c.BUNDLE_NO, sum(c.production_qnty) as PRODUCTION_QNTY, e.PO_NUMBER,c.BARCODE_NO,A.COMPANY_ID from PRO_GARMENTS_PRODUCTION_MST a,PRO_GARMENTS_PRODUCTION_DTLS c, wo_po_color_size_breakdown d, wo_po_break_down e, wo_po_details_master f where a.id=c.mst_id and c.color_size_break_down_id=d.id and d.po_break_down_id=e.id and e.job_no_mst=f.job_no and c.production_type = 4 and c.status_active=1 and c.is_deleted=0 and a.status_active=1 and a.is_deleted=0 and d.status_active in(1,2,3) and d.is_deleted=0 and e.status_active in(1,2,3) and e.is_deleted=0 and f.status_active=1 and f.is_deleted=0 and c.barcode_no='$barcode' group by a.location,a.floor_id,a.sewing_line, c.COLOR_TYPE_ID, d.id, e.id,f.company_name, f.job_no_prefix_num, f.buyer_name, d.item_number_id, d.country_id, d.size_number_id, d.color_number_id,c.cut_no, c.bundle_no,c.barcode_no, e.po_number,a.company_id";

		if ($type == 5)
		{
			$message = 'Bundle No: ' . $barcode_no_arr[0]->BUNDLE_NO . ' is not ready for output.';
		}
		else if ($type == 4)
		{
			$message = 'Bundle No: ' . $barcode_no_arr[0]->BUNDLE_NO . ' is not ready for input.';
		}

		$result = sql_select($sqls);
		if (count($result) == 0) {
			return array("status" => "Failed", "msg"=> $message);
			die;
		}

		foreach ($result as $v) {
			$data_arr["MasterPart"]["COMPANY_ID"] = $v->COMPANY_ID;
			$data_arr["MasterPart"]["PRODUCTION_TYPE"] = $type;
			$data_arr["MasterPart"]["BUNDLE_NO"] = $v->BUNDLE_NO;
			$data_arr["MasterPart"]["BARCODE_NO"] = $v->BARCODE_NO;
			$data_arr["MasterPart"]["YEAR"] = $v->YEAR;
			$data_arr["MasterPart"]["COLOR_SIZE_ID"] = $v->COLORSIZEID;
			$data_arr["MasterPart"]["ORDER_ID"] = $v->PO_ID;
			$data_arr["MasterPart"]["ITEM_ID"] = $v->ITEM_NUMBER_ID;
			$data_arr["MasterPart"]["COUNTRY_ID"] = $v->COUNTRY_ID;
			$data_arr["MasterPart"]["SIZE_ID"] = $v->SIZE_NUMBER_ID;
			$data_arr["MasterPart"]["COLOR_ID"] = $v->COLOR_NUMBER_ID;
			$data_arr["MasterPart"]["CUT_NO"] = $v->CUT_NO;
			$data_arr["MasterPart"]["JOB_NO"] = $v->JOB_NO_PREFIX_NUM;
			$data_arr["MasterPart"]["LOCATION_ID"] = $v->LOCATION;
			$data_arr["MasterPart"]["FLOOR_ID"] = $sewing_data->FLOOR_ID;
			$data_arr["MasterPart"]["SEWING_LINE"] = $sewing_data->SEWING_LINE;

			if (isset($buyer_arr[$v->BUYER_NAME])) {
				$data_arr["MasterPart"]["BUYER"] = $buyer_arr[$v->BUYER_NAME];
			} else {
				$data_arr["MasterPart"]["BUYER"] = "";
			}

			$data_arr["MasterPart"]["ORDER_NO"] = "$v->PO_NUMBER";

			if (isset($garments_item[$v->ITEM_NUMBER_ID])) {
				$data_arr["MasterPart"]["ITEM"] = $garments_item[$v->ITEM_NUMBER_ID];
			} else {
				$data_arr["MasterPart"]["ITEM"] = "";
			}

			if (isset($country_arr[$v->COUNTRY_ID])) {
				$data_arr["MasterPart"]["COUNTRY"] = $country_arr[$v->COUNTRY_ID];
			} else {
				$data_arr["MasterPart"]["COUNTRY"] = "";
			}

			if (isset($color_arr[$v->COLOR_NUMBER_ID])) {
				$data_arr["MasterPart"]["COLOR"] = $color_arr[$v->COLOR_NUMBER_ID];
			} else {
				$data_arr["MasterPart"]["COLOR"] = "";
			}

			if (isset($size_arr[$v->SIZE_NUMBER_ID])) {
				$data_arr["MasterPart"]["SIZE"] = $size_arr[$v->SIZE_NUMBER_ID];
			} else {
				$data_arr["MasterPart"]["SIZE"] = 0;
			}

			$data_arr["MasterPart"]["QTY"] = $v->PRODUCTION_QNTY;
			$data_arr["MasterPart"]["IS_RESCAN"] = $v->IS_RESCAN;

			if (isset($cut_lay_rowo[0]->COLOR_TYPE_ID)) {
				$data_arr["MasterPart"]["COLOR_TYPE_ID"] = $cut_lay_rowo[0]->COLOR_TYPE_ID;
			} else {
				$data_arr["MasterPart"]["COLOR_TYPE_ID"] = 0;
			}

		}
		return $data_arr;
	}
	
	//AKH End
	
	
	public function sewing_barcode_data($company = 0,$location = 0,$floor = 0,$line = 0, $barcode = "", $type) 
	{
		$data_arr = array();

		$size_arr = return_library_array("select id, size_name from lib_size", 'id', 'size_name');
		$color_arr = return_library_array("select id, color_name from lib_color", "id", "color_name");
		$country_arr = return_library_array("select id, country_name from lib_country", 'id', 'country_name');
		$buyer_arr = return_library_array("select id, short_name from lib_buyer", 'id', 'short_name');
		$garments_item = return_library_array("select id,item_name from  lib_garment_item where status_active=1 and is_deleted=0 order by item_name", "id", "item_name");
		$replace_field_disable = return_library_array("select COMPANY_NAME,SEWING_PRODUCTION from VARIABLE_SETTINGS_PRODUCTION where VARIABLE_LIST = 68 and COMPANY_NAME=$company", "COMPANY_NAME", "SEWING_PRODUCTION");
		//print_r($replace_field_disable);die;
		$cur_date = date('d-M-Y');
		$is_line_allocate = return_field_value("a.id","prod_resource_mst a,prod_resource_dtls b ","a.id=b.mst_id and  a.company_id ='$company' and b.pr_date = '$cur_date' and a.is_deleted=0 and b.is_deleted=0","id");
		if(!$is_line_allocate)
		{
			return array(
				'message_bng' => 'এই লাইন টি আজকের জন্য এলোকেশন করা নেই , দয়াকরে লাইন এলোকেশন চেক করুন।',
				'message_eng' => 'This Line is not Engage for today.Please Check Actual Production Resource Entry.',
				'bundle_no' => '',
				'barcode_no' => 0,
				'year' => 0,
				'color_size_id' => 0,
				'order_id' => 0,
				'item_id' => 0,
				'country_id' => 0,
				'size_id' => 0,
				'color_id' => 0,
				'cut_no' => '',
				'job_no' => 0,
				'buyer' => '',
				'order_no' => '',
				'item' => '',
				'country' => '',
				'color' => '',
				'size' => '',
				'qty' => 0,
				'is_rescan' => 0,
				'color_type_id' => 0,
				'sewing_input_line' => 0,
				'replace_field_disable' => 0,
			);

		}
		
		$year_field = "";
		if ($this->db->dbdriver == 'mysqli') {
			$year_field = "YEAR(f.insert_date)";
		} else {
			$year_field = "to_char(f.insert_date,'YYYY')";
		}

		$barcode = trim($barcode);
		$barcode_no_arr = sql_select("SELECT  COLOR_TYPE_ID,BUNDLE_NO from PPL_CUT_LAY_BUNDLE  where barcode_no='" . trim($barcode) . "'");


		if ($type == 4) {

			$input_sql = "SELECT BARCODE_NO,BUNDLE_NO from PRO_GARMENTS_PRODUCTION_DTLS where status_active=1 and production_type=4 and barcode_no='" . trim($barcode) . "'";
			$input_exist_data = sql_select($input_sql);
			if (count($input_exist_data) > 0) {
				return array(
					'message_bng' => 'বান্ডিল নং: ' . $input_exist_data[0]->BUNDLE_NO . ' ইতিমধ্যে স্ক্যান হয়েছে, দয়া করে অন্য একটি চেষ্টা করুন।',
					'message_eng' => 'Bundle No: ' . $input_exist_data[0]->BUNDLE_NO . ' is already scanned, please try another one',
					'bundle_no' => '',
					'barcode_no' => 0,
					'year' => 0,
					'color_size_id' => 0,
					'order_id' => 0,
					'item_id' => 0,
					'country_id' => 0,
					'size_id' => 0,
					'color_id' => 0,
					'cut_no' => '',
					'job_no' => 0,
					'buyer' => '',
					'order_no' => '',
					'item' => '',
					'country' => '',
					'color' => '',
					'size' => '',
					'qty' => 0,
					'is_rescan' => 0,
					'color_type_id' => 0,

				);
			}

		}
		else if ($type == 5) {

			$sewing_line_id_res = sql_select("SELECT  a.SEWING_LINE from PRO_GARMENTS_PRODUCTION_mst a,PRO_GARMENTS_PRODUCTION_DTLS b where a.id=b.mst_id and b.barcode_no='".trim($barcode)."' AND b.PRODUCTION_TYPE = 4 AND a.IS_DELETED = 0 AND a.STATUS_ACTIVE = 1 AND b.IS_DELETED = 0 AND b.STATUS_ACTIVE = 1");
			
			
			// $output_sql_rescan = "SELECT barcode_no,sum(case when is_rescan=0 then (reject_qty+spot_qty+alter_qty)-replace_qty else 0 end )-sum(case when is_rescan > 0 then production_qnty else 0 end) as PRODUCTION_QNTY from PRO_GARMENTS_PRODUCTION_DTLS where status_active=1 and production_type=5 and barcode_no='$barcode' group by barcode_no";
			 
			 $output_sql_rescan = "SELECT barcode_no,sum(case when is_rescan=0 then (spot_qty+alter_qty)-replace_qty else 0 end )-sum(case when is_rescan > 0 then production_qnty else 0 end) as PRODUCTION_QNTY from PRO_GARMENTS_PRODUCTION_DTLS where status_active=1 and production_type=5 and barcode_no='$barcode' group by barcode_no";
			 //print_r($output_sql_rescan);die;
			$output_rescan_data = sql_select($output_sql_rescan);
			$balance_qty=0;
			foreach($output_rescan_data as $rows){
				$balance_qty+=$rows->PRODUCTION_QNTY;
			}

			//print_r($replace_field_disable[$company]);die;

			if($balance_qty<=0 && count($output_rescan_data) > 0){
				//print_r($output_sql_rescan);die;
				return array(
					'message_bng' => 'বান্ডিল নং: ' . $barcode_no_arr[0]->BUNDLE_NO . ' ইতিমধ্যে স্ক্যান হয়েছে, দয়া করে অন্য একটি চেষ্টা করুন।',
					'message_eng' => 'Bundle No: ' . $barcode_no_arr[0]->BUNDLE_NO . ' is already scanned, please try another one',
					'bundle_no' => '',
					'barcode_no' => 0,
					'year' => 0,
					'color_size_id' => 0,
					'order_id' => 0,
					'item_id' => 0,
					'country_id' => 0,
					'size_id' => 0,
					'color_id' => 0,
					'cut_no' => '',
					'job_no' => 0,
					'buyer' => '',
					'order_no' => '',
					'item' => '',
					'country' => '',
					'color' => '',
					'size' => '',
					'qty' => 0,
					'is_rescan' => 0,
					'color_type_id' => 0,
					'sewing_input_line' => 0,
					'replace_field_disable' => 0,
				);

			}elseif($balance_qty>0 && $replace_field_disable[$company]==1){
				return array(
					'message_bng' => 'বান্ডিল নং: ' . $barcode_no_arr[0]->BUNDLE_NO . ' ইতিমধ্যে স্ক্যান হয়েছে, দয়া করে অন্য একটি চেষ্টা করুন।',
					'message_eng' => 'Bundle No: ' . $barcode_no_arr[0]->BUNDLE_NO . ' is already scanned, please try another one',
					'bundle_no' => '',
					'barcode_no' => 0,
					'year' => 0,
					'color_size_id' => 0,
					'order_id' => 0,
					'item_id' => 0,
					'country_id' => 0,
					'size_id' => 0,
					'color_id' => 0,
					'cut_no' => '',
					'job_no' => 0,
					'buyer' => '',
					'order_no' => '',
					'item' => '',
					'country' => '',
					'color' => '',
					'size' => '',
					'qty' => 0,
					'is_rescan' => 0,
					'color_type_id' => 0,
					'sewing_input_line' => 0,
					'replace_field_disable' => 0,
				);
			}
			//reject_qty,alter_qty,spot_qty,replace_qty


			if (count($output_rescan_data) > 0)
			{
				$line_cond = ($type==5) ? "and a.sewing_line=$line " : "";
				//print_r(5); die;
				//-c.replace_qty;c.reject_qty remove by sabbir vai issue id:22589;
				$sqls = "SELECT c.COLOR_TYPE_ID, max(c.id) as prdid, d.id as COLORSIZEID, e.id as PO_ID,f.company_name as LC_COMPANY, f.JOB_NO_PREFIX_NUM, MAX($year_field) as YEAR, f.BUYER_NAME, d.ITEM_NUMBER_ID, d.COUNTRY_ID, d.SIZE_NUMBER_ID, d.COLOR_NUMBER_ID, c.cut_no,c.BUNDLE_NO, sum(case when is_rescan=0 then (c.spot_qty+c.alter_qty)-c.replace_qty else 0 end )-sum(case when is_rescan >0 then production_qnty else 0 end) as PRODUCTION_QNTY, e.PO_NUMBER,c.BARCODE_NO,1 as IS_RESCAN from PRO_GARMENTS_PRODUCTION_MST a,PRO_GARMENTS_PRODUCTION_DTLS c, WO_PO_COLOR_SIZE_BREAKDOWN d, WO_PO_BREAK_DOWN e, WO_PO_DETAILS_MASTER f where a.id=c.mst_id and c.color_size_break_down_id=d.id and d.po_break_down_id=e.id and e.job_id=f.id and c.production_type =5 and c.status_active=1 and c.is_deleted=0 and a.status_active=1 and a.is_deleted=0 and d.status_active in(1,2,3) and d.is_deleted=0 and e.status_active in(1,2,3) and e.is_deleted=0 and f.status_active=1 and f.is_deleted=0 and c.barcode_no='$barcode' $line_cond group by c.COLOR_TYPE_ID,d.id, e.id,f.company_name, f.job_no_prefix_num, f.buyer_name, d.item_number_id, d.country_id, d.size_number_id, d.color_number_id,c.cut_no, c.bundle_no,c.barcode_no, e.po_number order by c.cut_no, length(c.bundle_no) asc, c.bundle_no asc";

		
		    	//echo $sqls;die;
		
				$result = sql_select($sqls);
				if (count($result) < 1) {
					return array(
						'message_bng' => 'বান্ডিল নং: ' . $barcode_no_arr[0]->BUNDLE_NO . ' এখনও আউটপুটের জন্য প্রস্তুত নয়।',
						'message_eng' => 'Bundle No: ' . $barcode_no_arr[0]->BUNDLE_NO . ' is not yet ready for output.',
						'bundle_no' => '',
						'barcode_no' => 0,
						'year' => 0,
						'color_size_id' => 0,
						'order_id' => 0,
						'item_id' => 0,
						'country_id' => 0,
						'size_id' => 0,
						'color_id' => 0,
						'cut_no' => '',
						'job_no' => 0,
						'buyer' => '',
						'order_no' => '',
						'item' => '',
						'country' => '',
						'color' => '',
						'size' => '',
						'replace_qty' => 0,
						'qty' => 0,
						'is_rescan' => 1,
						'color_type_id' => 0,
						'sewing_input_line' => 0,
						'replace_field_disable' => 0,
					);
				}

				$data_arr = array();

				// $defect_type_arr = array(); 
				// // $defect_type_arr = return_library_array("SELECT DEFECT_POINT_ID,FULL_NAME,DEFECT_SERIAL_NO from LIB_SEWING_DEFECT_MST where defect_type=$defect_type_id and entry_page_id='$entry_form'", "DEFECT_POINT_ID", "FULL_NAME");
				// $defect_type_table = $this->db->query("SELECT DEFECT_POINT_ID,FULL_NAME,DEFECT_SERIAL_NO from LIB_SEWING_DEFECT_MST where defect_type=$defect_type_id and entry_page_id='$entry_form' and STATUS_ACTIVE = 1 and IS_DELETED = 0 and STATUS = 1 order by DEFECT_SERIAL_NO ASC")->result();
				// $i=0;
				// foreach ($defect_type_table as $row) 
				// {
				// 	$defect_type_arr['defect_type'][$i]['id'] = $row->DEFECT_POINT_ID;
				// 	$defect_type_arr['defect_type'][$i]['defect_name'] = $row->FULL_NAME;
				// 	$defect_type_arr['defect_type'][$i]['serial_number'] = $row->DEFECT_SERIAL_NO;
				// 	$i++;
				// }
				

				foreach ($result as $v) {
					$data_arr["message_bng"] = '';
					$data_arr["message_eng"] = '';

					$data_arr["bundle_no"] = $v->BUNDLE_NO;
					$data_arr["barcode_no"] = $v->BARCODE_NO;

					$data_arr["year"] = $v->YEAR;

					$data_arr["color_size_id"] = $v->COLORSIZEID;
					$data_arr["order_id"] = $v->PO_ID;
					$data_arr["item_id"] = $v->ITEM_NUMBER_ID;
					$data_arr["country_id"] = $v->COUNTRY_ID;
					$data_arr["size_id"] = $v->SIZE_NUMBER_ID;
					$data_arr["color_id"] = $v->COLOR_NUMBER_ID;
					$data_arr["cut_no"] = $v->CUT_NO;

					$data_arr["job_no"] = $v->JOB_NO_PREFIX_NUM;

					if (isset($buyer_arr[$v->BUYER_NAME])) {
						$data_arr["buyer"] = $buyer_arr[$v->BUYER_NAME];
					} else {
						$data_arr["buyer"] = "";
					}

					$data_arr["order_no"] = "$v->PO_NUMBER "; //need always string

					if (isset($garments_item[$v->ITEM_NUMBER_ID])) {
						$data_arr["item"] = $garments_item[$v->ITEM_NUMBER_ID];
					} else {
						$data_arr["item"] = "";
					}

					if (isset($country_arr[$v->COUNTRY_ID])) {
						$data_arr["country"] = $country_arr[$v->COUNTRY_ID];
					} else {
						$data_arr["country"] = "";
					}

					if (isset($color_arr[$v->COLOR_NUMBER_ID])) {
						$data_arr["color"] = $color_arr[$v->COLOR_NUMBER_ID];
					} else {
						$data_arr["color"] = "";
					}

					if (isset($size_arr[$v->SIZE_NUMBER_ID])) {
						$data_arr["size"] = $size_arr[$v->SIZE_NUMBER_ID];
					} else {
						$data_arr["size"] = "";
					}
					$data_arr["qty"] = $v->PRODUCTION_QNTY;
					$data_arr["is_rescan"] = $v->IS_RESCAN;
					$data_arr["color_type_id"] = $v->COLOR_TYPE_ID;
					$data_arr["sewing_input_line"] = 0;
					$data_arr['replace_field_disable'] = $replace_field_disable[$company]*1;
				}
				

				return $data_arr;

			}

		}

		$col_size_seq = "SELECT color_size_break_down_id as IDS,CUT_NO from PRO_GARMENTS_PRODUCTION_DTLS where status_active=1 and is_deleted=0 and barcode_no='$barcode' group by color_size_break_down_id,cut_no";
		$col_size_seq_arr = array();
		$cut_arr = array();
		foreach (sql_select($col_size_seq) as $v) {
			$col_size_seq_arr[$v->IDS] = $v->IDS;
			$cut_arr[$v->CUT_NO] = $v->CUT_NO;
		}

		$ids = implode(",", $col_size_seq_arr);
		if (count($col_size_seq_arr) < 1) {$ids = 0;}
		//if(!$ids)$ids=0;

		$cut_nos = "'" . implode("','", $cut_arr) . "'";
		if (count($cut_arr) < 1) {$cut_nos = "'0'";}
		// if(!$cut_nos)$cut_nos="'0"."'";

		/*$source_sql = "SELECT PRECEDING_OP from pro_production_sequence where CURRENT_OPERATION='$type' and COL_SIZE_ID in($ids) and CUTTING_NO in($cut_nos) ";
		//return  $source_sql;
		$source_val = 0;
		foreach (sql_select($source_sql) as $vl) {
			$source_val = $vl->PRECEDING_OP;
		}
		$source_cond = $source_val;*/
		$opcode = ($type==4) ? 4 : 5;
		$is_preceding = ($type==4) ? 1 : 4;
		// $source_cond = $this->gmt_production_validation_script(4, 1,'', $cut_nos);		
		$source_cond = $this->gmt_production_validation_script($opcode, $is_preceding,'', $cut_nos);

		$line_cond = ($type==5) ? "and a.sewing_line=$line " : "";
		
		$sqls = "SELECT  c.COLOR_TYPE_ID,  0 as IS_RESCAN,max(c.id) as prdid, d.id as COLORSIZEID, e.id as PO_ID,f.company_name as LC_COMPANY, f.JOB_NO_PREFIX_NUM, MAX($year_field) as YEAR, f.BUYER_NAME, d.ITEM_NUMBER_ID, d.COUNTRY_ID, d.SIZE_NUMBER_ID, d.COLOR_NUMBER_ID, c.cut_no,c.BUNDLE_NO,  (c.production_qnty) as PRODUCTION_QNTY, e.PO_NUMBER,c.BARCODE_NO from PRO_GARMENTS_PRODUCTION_MST a,PRO_GARMENTS_PRODUCTION_DTLS c, wo_po_color_size_breakdown d, wo_po_break_down e, wo_po_details_master f where a.id=c.mst_id and c.color_size_break_down_id=d.id and d.po_break_down_id=e.id and e.job_id=f.id $source_cond and c.status_active=1 and c.is_deleted=0 and a.status_active=1 and a.is_deleted=0 and d.status_active in(1,2,3) and d.is_deleted=0 and e.status_active in(1,2,3) and e.is_deleted=0 and f.status_active=1 and f.is_deleted=0 and c.barcode_no='$barcode' $line_cond  group by c.COLOR_TYPE_ID, d.id, e.id,f.company_name, f.job_no_prefix_num, f.buyer_name, d.item_number_id, d.country_id, d.size_number_id, d.color_number_id,c.cut_no, c.bundle_no,c.barcode_no, e.po_number,c.production_qnty";
		//  echo $sqls;die;
		

		if ($type == 5) {
			$message_bng = 'বান্ডিল নং: ' . $barcode_no_arr[0]->BUNDLE_NO . ' এখনও আউটপুটের জন্য প্রস্তুত নয়।';
			$message_eng = 'Bundle No: ' . $barcode_no_arr[0]->BUNDLE_NO . ' is not yet ready for output.';
		} else if ($type == 4) {
			$message_bng = 'বান্ডিল নং: ' . $barcode_no_arr[0]->BUNDLE_NO . ' এখনও ইনপুটের জন্য প্রস্তুত নয়।';
			$message_eng = 'Bundle No: ' . $barcode_no_arr[0]->BUNDLE_NO . ' is not yet ready for input.';
		}

		$result = sql_select($sqls);
		if (count($result) == 0) {
			return array(
				'message_bng' => $message_bng,
				'message_eng' => $message_eng,
				'bundle_no' => '',
				'barcode_no' => 0,
				'year' => 0,
				'color_size_id' => 0,
				'order_id' => 0,
				'item_id' => 0,
				'country_id' => 0,
				'size_id' => 0,
				'color_id' => 0,
				'cut_no' => '',
				'job_no' => 0,
				'buyer' => '',
				'order_no' => '',
				'item' => '',
				'country' => '',
				'color' => '',
				'size' => 0,
				'qty' => 0,
				'is_rescan' => 0,
				'color_type_id' => 0,
				'sewing_input_line' => 0,
				'replace_field_disable' => 0,

			);
		}

		foreach ($result as $v) {

			$data_arr["message_bng"] = '';
			$data_arr["message_eng"] = '';
			$data_arr["bundle_no"] = $v->BUNDLE_NO;
			$data_arr["barcode_no"] = $v->BARCODE_NO;
			$data_arr["year"] = $v->YEAR;
			$data_arr["color_size_id"] = $v->COLORSIZEID;
			$data_arr["order_id"] = $v->PO_ID;
			$data_arr["item_id"] = $v->ITEM_NUMBER_ID;
			$data_arr["country_id"] = $v->COUNTRY_ID;
			$data_arr["size_id"] = $v->SIZE_NUMBER_ID;
			$data_arr["color_id"] = $v->COLOR_NUMBER_ID;
			$data_arr["cut_no"] = $v->CUT_NO;
			$data_arr["job_no"] = $v->JOB_NO_PREFIX_NUM;

			if (isset($buyer_arr[$v->BUYER_NAME])) {
				$data_arr["buyer"] = $buyer_arr[$v->BUYER_NAME];
			} else {
				$data_arr["buyer"] = "";
			}

			$data_arr["order_no"] = "$v->PO_NUMBER "; //need always string

			if (isset($garments_item[$v->ITEM_NUMBER_ID])) {
				$data_arr["item"] = $garments_item[$v->ITEM_NUMBER_ID];
			} else {
				$data_arr["item"] = "";
			}

			if (isset($country_arr[$v->COUNTRY_ID])) {
				$data_arr["country"] = $country_arr[$v->COUNTRY_ID];
			} else {
				$data_arr["country"] = "";
			}

			if (isset($color_arr[$v->COLOR_NUMBER_ID])) {
				$data_arr["color"] = $color_arr[$v->COLOR_NUMBER_ID];
			} else {
				$data_arr["color"] = "";
			}

			if (isset($size_arr[$v->SIZE_NUMBER_ID])) {
				$data_arr["size"] = $size_arr[$v->SIZE_NUMBER_ID];
			} else {
				$data_arr["size"] = 0;
			}

			$data_arr["qty"] = $v->PRODUCTION_QNTY;
			$data_arr["is_rescan"] = $v->IS_RESCAN;
			// $data_arr["color_type_id"]=$v->COLOR_TYPE_ID;

			if (isset($barcode_no_arr[0]->COLOR_TYPE_ID)) {
				$data_arr["color_type_id"] = $barcode_no_arr[0]->COLOR_TYPE_ID;
			} else {
				$data_arr["color_type_id"] = 0;
			}
			$data_arr["sewing_input_line"] = $sewing_line_id_res[0]->SEWING_LINE;
			$data_arr['replace_field_disable'] = $replace_field_disable[$company]*1;
			
			

		}
		return $data_arr;
	}
	
	public function defect_type_data($defect_type_id = 0, $entry_form = 0) 
	{
		$data_arr = array(); 
		// $defect_type_arr = return_library_array("SELECT DEFECT_POINT_ID,FULL_NAME,DEFECT_SERIAL_NO from LIB_SEWING_DEFECT_MST where defect_type=$defect_type_id and entry_page_id='$entry_form'", "DEFECT_POINT_ID", "FULL_NAME");
		$defect_type_arr = $this->db->query("SELECT DEFECT_POINT_ID,FULL_NAME,DEFECT_SERIAL_NO from LIB_SEWING_DEFECT_MST where defect_type in ($defect_type_id) and entry_page_id='$entry_form' and STATUS_ACTIVE = 1 and IS_DELETED = 0 and STATUS = 1 order by DEFECT_SERIAL_NO ASC")->result();
		$i=0;
		foreach ($defect_type_arr as $row) 
		{
			$data_arr['defect_type'][$i]['id'] = $row->DEFECT_POINT_ID;
			$data_arr['defect_type'][$i]['defect_name'] = $row->FULL_NAME;
			$data_arr['defect_type'][$i]['serial_number'] = $row->DEFECT_SERIAL_NO;
			$i++;
		}
		//print_r($data_arr);die;
		return $data_arr;
	}
	
	public function home_data_bk($company = 0, $location = 0, $floor = 0, $line = 0) 
	{
		$data_array = array();
		
		$date = date('d-M-Y');
		$cur_hour = date('H');
		$cur_hour_to = $cur_hour.":59";
		
		$start_time_data_arr=sql_select("SELECT TO_CHAR(prod_start_time,'HH24:MI') as prod_start_time,TO_CHAR(lunch_start_time,'HH24:MI') as lunch_start_time from variable_settings_production where  company_name=$company and  shift_id=1 and variable_list=26 and status_active=1 and is_deleted=0");
		$line_start_time = 0;	
		$lunch_start_time = 0;	
		foreach($start_time_data_arr as $row)
		{
			$time_arr = explode(":",$row->PROD_START_TIME);
			$lunch_arr = explode(":",$row->LUNCH_START_TIME);
			$line_start_time=$time_arr[0]*1;
			$lunch_start_time=$lunch_arr[0]*1;
		}

		/* if($lunch_start_time < $cur_hour)
		{
			// $difference_hour = round(((abs($time2 - $time1) / 3600)),0);
			$diff_hour = (int) $cur_hour - $line_start_time;
			$diff_hour = $diff_hour - 1;
			// echo $cur_difference_hour."==SSSSSSSS";
		}
		else
		{
			$diff_hour = (int) $cur_hour - $line_start_time;
		} */

		$diff_hour = $cur_hour - $line_start_time;
		
		// ======================= actual resource data ===========================
		$sql = sql_select("SELECT b.TARGET_PER_HOUR,b.WORKING_HOUR,b.man_power from prod_resource_mst a, prod_resource_dtls b  where a.id=b.mst_id and a.company_id='$company' and a.location_id=$location and a.floor_id=$floor and a.id=$line and b.pr_date='$date' and a.is_deleted=0 and b.is_deleted=0");
		if(count($sql)==0)
		{
			$data_array['home_data']['msg'] = "This line is not allocated in actual production resource entry page!";
			return $data_array;
		}
		// echo $sql[0]->TARGET_PER_HOUR;die();
		$data_array['home_data']['hourly_target'] = $sql[0]->TARGET_PER_HOUR;
		$data_array['home_data']['day_target'] = $sql[0]->TARGET_PER_HOUR*$sql[0]->WORKING_HOUR;
		$data_array['home_data']['msg'] = "";

		$sqlEff = sql_select("SELECT b.TARGET_EFFICIENCY from prod_resource_mst a, prod_resource_dtls_mast b  where a.id=b.mst_id and a.company_id='$company' and a.location_id=$location and a.floor_id=$floor and a.id=$line and b.from_date='$date' and a.is_deleted=0 and b.is_deleted=0");
		$data_array['home_data']['planned'] = $sqlEff[0]->TARGET_EFFICIENCY*1;

		// ====================== gmts prodduction data =========================
		$sqlGmt = sql_select("SELECT d.style_ref_no, a.po_break_down_id as po_id,a.item_number_id as item_id, sum(b.production_qnty) as DAY_TOTAL_QTY, sum(CASE WHEN TO_CHAR(a.production_hour,'HH24:MI') between '$cur_hour:00' and '$cur_hour_to' THEN production_qnty else 0 END) AS CUR_HOUR_QTY, sum(b.reject_qty) as reject_qty, sum(b.alter_qty) as alter_qty, sum(b.spot_qty) as spot_qty from pro_garments_production_mst a, pro_garments_production_dtls b,wo_po_break_down c, wo_po_details_master d where a.id=b.mst_id and a.po_break_down_id=c.id and c.job_id=d.id and a.status_active=1 and b.status_active=1 and a.sewing_line=$line and a.location=$location and a.floor_id=$floor and a.serving_company=$company and a.production_date='$date' and a.production_type=5 group by  d.style_ref_no,a.po_break_down_id,a.item_number_id");// and b.production_qnty>0

		if(count($sqlGmt)==0)
		{
			$data_array['home_data']['day_total_qty'] = 0;
			$data_array['home_data']['cur_hour_qty'] = 0;
			$data_array['home_data']['reject_qty'] = 0;
			$data_array['home_data']['alter_qty'] = 0;
			$data_array['home_data']['spot_qty'] = 0;
			$data_array['home_data']['varience'] = 0;
			$data_array['home_data']['efficiency'] = 0;
			$data_array['home_data']['efficiency_min'] = 0;
			$data_array['home_data']['dhu'] = 0;
			$data_array['home_data']['msg'] = "Production data not found!";
			return $data_array;
		}

		$day_total_qty = 0;
		$cur_hour_qty = 0;
		$reject_qty = 0;
		$alter_qty = 0;
		$spot_qty = 0;
		$po_id_arr = array();
		$style_arr = array();
		$style_wise_po_arr = array();
		$po_item_wise_prod_qty_arr = array();
		foreach ($sqlGmt as $v) 
		{
			$po_id_arr[$v->PO_ID] = $v->PO_ID;
			$style_arr[$v->STYLE_REF_NO] = $v->STYLE_REF_NO;
			$style_wise_po_arr[$v->STYLE_REF_NO][$v->PO_ID] = $v->PO_ID;
			$po_item_wise_prod_qty_arr[$v->PO_ID][$v->ITEM_ID] += $v->DAY_TOTAL_QTY;
			$day_total_qty += $v->DAY_TOTAL_QTY;
			$cur_hour_qty += $v->CUR_HOUR_QTY;
			$reject_qty += $v->REJECT_QTY;
			$alter_qty += $v->ALTER_QTY;
			$spot_qty += $v->SPOT_QTY;
		}
		// echo $day_total_qty;die('kakku');
		// ============================ smv source ============================		
		$smv_source=return_field_value("smv_source","variable_settings_production","company_name=$company and variable_list=25 and   status_active=1 and is_deleted=0","smv_source");
		if($smv_source=="") $smv_source=0; else $smv_source=$smv_source;
		$item_smv_array = array();
		if($smv_source==3) // from gsd enrty
		{		
			$style_cond = where_con_using_array($style_arr,1,"a.style_ref");
			$sql_item="SELECT a.id,a.APPLICABLE_PERIOD,a.BULLETIN_TYPE,A.TOTAL_SMV,A.STYLE_REF,a.GMTS_ITEM_ID  from PPL_GSD_ENTRY_MST a where a.APPLICABLE_PERIOD <= '$date' and A.IS_DELETED=0 and A.STATUS_ACTIVE=1 $style_cond and a.APPROVED=1 group by a.id,a.APPLICABLE_PERIOD,a.BULLETIN_TYPE,A.TOTAL_SMV,A.STYLE_REF,a.GMTS_ITEM_ID ORDER BY a.GMTS_ITEM_ID ,a.APPLICABLE_PERIOD  DESC , a.id DESC";
			$gsdSqlResult=sql_select($sql_item);
			//echo $sql_item;die;
			
			foreach($gsdSqlResult as $rows)
			{
				foreach($style_wise_po_arr[$rows->STYLE_REF] as $po_id)
				{
					if($item_smv_array[$po_id][$rows->GMTS_ITEM_ID]=='')
					{
						$item_smv_array[$po_id][$rows->GMTS_ITEM_ID]=$rows->TOTAL_SMV;
					}
				}
			}
		}
		else
		{			
			$poIds_cond = where_con_using_array($po_id_arr,0,"b.id");
			$sql_item="SELECT b.id, a.set_break_down, c.gmts_item_id, c.set_item_ratio, c.smv_pcs, c.smv_pcs_precost,c.smv_set from wo_po_details_master a,wo_po_break_down b, wo_po_details_mas_set_details c where b.job_id=a.id and b.job_id=c.job_id and a.company_name=$company $poIds_cond and a.is_deleted=0 and a.status_active=1 and b.is_deleted=0 and b.status_active=1";
			// echo $sql_item;die;
			$resultItem=sql_select($sql_item);
			
			foreach($resultItem as $itemData)
			{
				if($smv_source==1)
				{
					$item_smv_array[$itemData->ID][$itemData->GMTS_ITEM_ID]=$itemData->SMV_PCS;
				}
				if($smv_source==2)
				{
					$item_smv_array[$itemData->ID][$itemData->GMTS_ITEM_ID]=$itemData->SMV_PCS_PRECOST;
				}
			}
		}

		$produce_min = 0;
		foreach ($po_item_wise_prod_qty_arr as $po_id => $po_data) 
		{
			foreach ($po_data as $item_id => $qty) 
			{
				$produce_min += $qty*$item_smv_array[$po_id][$item_id];
			}
		}

		if($sql[0]->TARGET_PER_HOUR*$diff_hour == 0)
		{
			$efficiency = 0;
		}
		else
		{
			$efficiency = ($day_total_qty / ($sql[0]->TARGET_PER_HOUR*$diff_hour))*100;
		}

		if($sql[0]->MAN_POWER*$diff_hour*60 == 0)
		{
			$efficiency_min = 0;
		}
		else
		{
			$efficiency_min = ($produce_min / ($sql[0]->MAN_POWER*$diff_hour*60))*100;
		}
		if($day_total_qty<1){
			$day_total_qty =1;
		}

		$data_array['home_data']['day_total_qty'] = $day_total_qty;
		$data_array['home_data']['cur_hour_qty'] = $cur_hour_qty;
		$data_array['home_data']['reject_qty'] = $reject_qty;
		$data_array['home_data']['alter_qty'] = $alter_qty;
		$data_array['home_data']['spot_qty'] = $spot_qty;
		$data_array['home_data']['varience'] = $sql[0]->TARGET_PER_HOUR - $cur_hour_qty;
		$data_array['home_data']['efficiency'] = ($diff_hour>0) ? ($day_total_qty / ($sql[0]->TARGET_PER_HOUR*$diff_hour))*100 : 0;
		$data_array['home_data']['efficiency_min'] = ($diff_hour>0) ? ($produce_min / ($sql[0]->MAN_POWER*$diff_hour*60))*100 : 0;
		$data_array['home_data']['dhu'] = (($reject_qty+$alter_qty+$spot_qty) / $day_total_qty)*100;
		$data_array['home_data']['msg'] = "";

		return $data_array;
	}

	public function home_data($company = 0, $location = 0, $floor = 0, $line = 0, $country_id=0, $gmt_item_id=0, $job_id=0) 
	{
		$data_array = array();
		
		$date = date('d-M-Y');
		$cur_hour = date('H');
		$cur_hour_to = $cur_hour.":59";
		
		$start_time_data_arr=sql_select("SELECT TO_CHAR(prod_start_time,'HH24:MI') as prod_start_time,TO_CHAR(lunch_start_time,'HH24:MI') as lunch_start_time from variable_settings_production where  company_name=$company and  shift_id=1 and variable_list=26 and status_active=1 and is_deleted=0");
		$line_start_time = 0;	
		$lunch_start_time = 0;	
		foreach($start_time_data_arr as $row)
		{
			$time_arr = explode(":",$row->PROD_START_TIME);
			$lunch_arr = explode(":",$row->LUNCH_START_TIME);
			$line_start_time=$time_arr[0]*1;
			$lunch_start_time=$lunch_arr[0]*1;
		}

		$diff_hour = $cur_hour - $line_start_time;
		
		// ======================= actual resource data ===========================
		$sql = sql_select("SELECT b.TARGET_PER_HOUR,b.WORKING_HOUR,b.man_power from prod_resource_mst a, prod_resource_dtls b  where a.id=b.mst_id and a.company_id='$company' and a.location_id=$location and a.floor_id=$floor and a.id=$line and b.pr_date='$date' and a.is_deleted=0 and b.is_deleted=0");
		if(count($sql)==0)
		{
			$data_array['home_data']['msg'] = "This line is not allocated in actual production resource entry page!";
			return $data_array;
		}
		// echo $sql[0]->TARGET_PER_HOUR;die();
		$data_array['home_data']['hourly_target'] = $sql[0]->TARGET_PER_HOUR;
		$data_array['home_data']['day_target'] = $sql[0]->TARGET_PER_HOUR*$sql[0]->WORKING_HOUR;
		$data_array['home_data']['msg'] = "";

		$sqlEff = sql_select("SELECT b.TARGET_EFFICIENCY from prod_resource_mst a, prod_resource_dtls_mast b  where a.id=b.mst_id and a.company_id='$company' and a.location_id=$location and a.floor_id=$floor and a.id=$line and b.from_date='$date' and a.is_deleted=0 and b.is_deleted=0");
		$data_array['home_data']['planned'] = $sqlEff[0]->TARGET_EFFICIENCY*1;

		$country_cond = ($country_id!=0)?" AND a.country_id = $country_id":"";
		$job_id_cond = ($job_id!=0)?" AND c.job_id = $job_id":"";
		$item_number_id_cond = ($gmt_item_id!=0)?" AND a.item_number_id = $gmt_item_id":"";
		
		// ====================== gmts prodduction data =========================
		$sqlGmt = sql_select("SELECT d.style_ref_no, a.po_break_down_id as po_id,a.item_number_id as item_id, sum(b.production_qnty) as DAY_TOTAL_QTY, sum(CASE WHEN TO_CHAR(a.production_hour,'HH24:MI') between '$cur_hour:00' and '$cur_hour_to' THEN production_qnty else 0 END) AS CUR_HOUR_QTY, sum(b.reject_qty) as reject_qty, sum(b.alter_qty) as alter_qty, sum(b.spot_qty) as spot_qty, sum(b.replace_qty) as REPLACE_QTY from pro_garments_production_mst a, pro_garments_production_dtls b,wo_po_break_down c, wo_po_details_master d where a.id=b.mst_id and a.po_break_down_id=c.id and c.job_id=d.id and a.status_active=1 and b.status_active=1 and a.sewing_line=$line and a.location=$location and a.floor_id=$floor and a.serving_company=$company and a.production_date='$date' and a.production_type=5  group by  d.style_ref_no,a.po_break_down_id,a.item_number_id");// and b.production_qnty>0 $job_id_cond $country_cond  $item_number_id_cond
		



		if(count($sqlGmt)==0)
		{
			$data_array['home_data']['day_total_qty'] = 0;
			$data_array['home_data']['cur_hour_qty'] = 0;
			$data_array['home_data']['reject_qty'] = 0;
			$data_array['home_data']['alter_qty'] = 0;
			$data_array['home_data']['spot_qty'] = 0;
			$data_array['home_data']['varience'] = 0;
			$data_array['home_data']['efficiency'] = 0;
			$data_array['home_data']['efficiency_min'] = 0;
			$data_array['home_data']['dhu'] = 0;
			$data_array['home_data']['msg'] = "Production data not found!";
			return $data_array;
		}

		$day_total_qty = 0;
		$cur_hour_qty = 0;
		$reject_qty = 0;
		$alter_qty = 0;
		$spot_qty = 0;
		$po_id_arr = array();
		$style_arr = array();
		$style_wise_po_arr = array();
		$po_item_wise_prod_qty_arr = array();
		foreach ($sqlGmt as $v) 
		{
			$po_id_arr[$v->PO_ID] = $v->PO_ID;
			$style_arr[$v->STYLE_REF_NO] = $v->STYLE_REF_NO;
			$style_wise_po_arr[$v->STYLE_REF_NO][$v->PO_ID] = $v->PO_ID;
			$po_item_wise_prod_qty_arr[$v->PO_ID][$v->ITEM_ID] += $v->DAY_TOTAL_QTY;
			$day_total_qty += $v->DAY_TOTAL_QTY+$v->REJECT_QTY;//+$v->ALTER_QTY+$v->SPOT_QTY;
			$cur_hour_qty += $v->CUR_HOUR_QTY;
			$reject_qty += $v->REJECT_QTY;
			$alter_qty += $v->ALTER_QTY;
			$spot_qty += $v->SPOT_QTY;
		}

		$sql_defect = "SELECT TO_CHAR(a.production_hour,'HH24') as production_hour, b.defect_qty as defect_qty 
		FROM pro_garments_production_mst a, pro_gmts_prod_dft b,pro_garments_production_dtls c
		WHERE a.id=b.mst_id and b.dtls_id=c.id and b.production_type=5  and a.serving_company=$company and a.location=$location and a.floor_id=$floor and a.sewing_line=$line and a.production_date='$date' and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0 
		and c.status_active=1";// and c.production_qnty=0 and c.reject_qty=0
		$sql_defect_res=sql_select($sql_defect);
		$totDefectQnty=0;
		foreach ($sql_defect_res as $row) 
		{
			$totDefectQnty += $row->DEFECT_QTY;
		}
		
		// ============================ smv source ============================		
		$smv_source=return_field_value("smv_source","variable_settings_production","company_name=$company and variable_list=25 and   status_active=1 and is_deleted=0","smv_source");
		if($smv_source=="") $smv_source=0; else $smv_source=$smv_source;
		$item_smv_array = array();
		if($smv_source==3) // from gsd enrty
		{		
			$style_cond = where_con_using_array($style_arr,1,"a.style_ref");
			$sql_item="SELECT a.id,a.APPLICABLE_PERIOD,a.BULLETIN_TYPE,A.TOTAL_SMV,A.STYLE_REF,a.GMTS_ITEM_ID  from PPL_GSD_ENTRY_MST a where a.APPLICABLE_PERIOD <= '$date' and A.IS_DELETED=0 and A.STATUS_ACTIVE=1 $style_cond and a.APPROVED=1 group by a.id,a.APPLICABLE_PERIOD,a.BULLETIN_TYPE,A.TOTAL_SMV,A.STYLE_REF,a.GMTS_ITEM_ID ORDER BY a.GMTS_ITEM_ID ,a.APPLICABLE_PERIOD  DESC , a.id DESC";
			$gsdSqlResult=sql_select($sql_item);
			//echo $sql_item;die;
			
			foreach($gsdSqlResult as $rows)
			{
				foreach($style_wise_po_arr[$rows->STYLE_REF] as $po_id)
				{
					if($item_smv_array[$po_id][$rows->GMTS_ITEM_ID]=='')
					{
						$item_smv_array[$po_id][$rows->GMTS_ITEM_ID]=$rows->TOTAL_SMV;
					}
				}
			}
		}
		else
		{			
			$poIds_cond = where_con_using_array($po_id_arr,0,"b.id");
			$sql_item="SELECT b.id, a.set_break_down, c.gmts_item_id, c.set_item_ratio, c.smv_pcs, c.smv_pcs_precost,c.smv_set from wo_po_details_master a,wo_po_break_down b, wo_po_details_mas_set_details c where b.job_id=a.id and b.job_id=c.job_id and a.company_name=$company $poIds_cond and a.is_deleted=0 and a.status_active=1 and b.is_deleted=0 and b.status_active=1";
			// echo $sql_item;die;
			$resultItem=sql_select($sql_item);
			
			foreach($resultItem as $itemData)
			{
				if($smv_source==1)
				{
					$item_smv_array[$itemData->ID][$itemData->GMTS_ITEM_ID]=$itemData->SMV_PCS;
				}
				if($smv_source==2)
				{
					$item_smv_array[$itemData->ID][$itemData->GMTS_ITEM_ID]=$itemData->SMV_PCS_PRECOST;
				}
			}
		}

		$produce_min = 0;
		foreach ($po_item_wise_prod_qty_arr as $po_id => $po_data) 
		{
			foreach ($po_data as $item_id => $qty) 
			{
				$produce_min += $qty*$item_smv_array[$po_id][$item_id];
			}
		}

		if($sql[0]->TARGET_PER_HOUR*$diff_hour == 0)
		{
			$efficiency = 0;
		}
		else
		{
			$efficiency = ($day_total_qty / ($sql[0]->TARGET_PER_HOUR*$diff_hour))*100;
		}

		if($sql[0]->MAN_POWER*$diff_hour*60 == 0)
		{
			$efficiency_min = 0;
		}
		else
		{
			$efficiency_min = ($produce_min / ($sql[0]->MAN_POWER*$diff_hour*60))*100;
		}
		if($day_total_qty<1){
			$day_total_qty =1;
		}
		//print_r($alter_qty.$spot_qty.$day_total_qty);die;
		$dhu_perc = (($totDefectQnty) / $day_total_qty)*100;
		$data_array['home_data']['day_total_qty'] = $day_total_qty;
		$data_array['home_data']['cur_hour_qty'] = $cur_hour_qty;
		$data_array['home_data']['reject_qty'] = $reject_qty;
		$data_array['home_data']['alter_qty'] = $alter_qty;
		$data_array['home_data']['spot_qty'] = $spot_qty;
		$data_array['home_data']['varience'] = $sql[0]->TARGET_PER_HOUR - $cur_hour_qty;
		$data_array['home_data']['efficiency'] = number_format($efficiency*1, 2,".","");
		$data_array['home_data']['efficiency_min'] = number_format($efficiency_min*1, 2,".","");
		$data_array['home_data']['dhu'] = number_format($dhu_perc, 2,".","");
		$data_array['home_data']['msg'] = "";

		return $data_array;
	}
	
	public function sewing_line_data($company_id = 0, $location = 0, $floor = 0, $issue_date = "") {
		if ($this->db->dbdriver == 'mysqli') {
			$db_type = 0;
		} else {
			$db_type = 2;

		}
		$new_arr = array();
		$line_array_new = array();

		$nameArray = sql_select("SELECT ID, AUTO_UPDATE from variable_settings_production where company_name='$company_id' and variable_list=23 and status_active=1 and is_deleted=0");
		$prod_reso_allocation = 0;
		foreach ($nameArray as $v) {
			$prod_reso_allocation = $v->AUTO_UPDATE;
		}

		//return $prod_reso_allocation;


		$cond = "";
		if ($prod_reso_allocation == 1) {
			$line_library = return_library_array("SELECT ID,LINE_NAME from lib_sewing_line", "id", "line_name");
			$line_array = array();

			if ($floor == 0 && $location != 0) {
				$cond = " and a.location_id= $location";
			}

			if ($floor != 0) {
				$cond = " and a.floor_id= $floor";
			}

			if ($db_type == 0) {
				$issue_date = date("Y-m-d", strtotime($issue_date));
			} else {
				$issue_date = change_date_format(date("Y-m-d", strtotime($issue_date)), '', '', 1, $db_type);
			}

			$cond .= " and b.pr_date='" . $issue_date . "'";

			if ($db_type == 0) {
				$line_data = sql_select("SELECT A.ID, A.LINE_NUMBER from prod_resource_mst a, prod_resource_dtls b where a.id=b.mst_id and a.is_deleted=0 and b.is_deleted=0 $cond group by a.id, a.line_number,a.prod_resource_num  order by a.prod_resource_num asc, a.id asc");
			} else if ($db_type == 2 || $db_type == 1) {
				$line_data = sql_select("SELECT A.ID, A.LINE_NUMBER from prod_resource_mst a, prod_resource_dtls b where a.id=b.mst_id and a.is_deleted=0 and b.is_deleted=0 $cond group by a.id, a.line_number,a.prod_resource_num  order by a.prod_resource_num asc, a.id asc");
			}

			$line_merge = 9999;
			foreach ($line_data as $row) {
				$line = '';
				$line_number = explode(",", $row->LINE_NUMBER);
				foreach ($line_number as $val) {
					if (count($line_number) > 1) {
						$line_merge++;
						$new_arr[$line_merge] = $row->ID;
					} else {
						$new_arr[$line_library[$val]] = $row->ID;
					}

					if ($line == '') {
						$line = $line_library[$val];
					} else {
						$line .= "," . $line_library[$val];
					}

				}
				$line_array[$row->ID] = $line;
			}
			if (!empty($new_arr)) {
				ksort($new_arr);
			}

			foreach ($new_arr as $key => $v) {
				//$line_array_new[$v]=$line_array[$v];
				$obj = new Source($v, $line_array[$v]);
				$line_arrayNew[$v] = $obj;
			}

			foreach($line_arrayNew as $val){
				$line_array_new[]=$val;
			}

			return $line_array_new;

		} else {
			$data_array = array();
			if ($floor == 0 && $location != 0) {
				$cond = " and location_name= $location";
			}

			if ($floor != 0) {
				$cond = " and floor_name= $floor";
			} else {
				$cond = " and floor_name like('%%')";
			}

			$sqls = "SELECT ID,LINE_NAME from lib_sewing_line where  is_deleted=0 and status_active=1 and floor_name!=0 $cond order by line_name";
			foreach (sql_select($sqls) as $val) {
				$obj = new Source($val->ID, $val->LINE_NAME);
				$data_array[] = $obj;

			}
			return $data_array;

		}

	}
	public function supplier_list() {
		$data_array = array();
		$supp_sql = "SELECT a.ID,a.SUPPLIER_NAME from lib_supplier a,lib_supplier_party_type b where a.id=b.supplier_id and a.status_active=1 and a.is_deleted=0 group by a.id,a.supplier_name order by a.supplier_name"; //and  b.party_type in(22,23)
		$supp_arr = array();
		foreach (sql_select($supp_sql) as $val) {
			$obj = new Source($val->ID, $val->SUPPLIER_NAME);
			$supp_arr[] = $obj;
		}
		return $supp_arr;
	}

	public function menu_details_data($user_id) {
		$module_sql = "SELECT M_MOD_ID, MAIN_MODULE from main_module";
		$menu_sql = "SELECT  M_MENU_ID, MENU_NAME from main_menu";
		$module_arr = array();
		$menu_arr = array();
		$module_arr[0] = 0;
		foreach (sql_select($module_sql) as $val) {
			$module_arr[$val->M_MOD_ID] = $val->MAIN_MODULE;
		}
		$menu_arr[0] = 0;
		foreach (sql_select($menu_sql) as $val) {
			$menu_arr[$val->M_MENU_ID] = $val->MENU_NAME;
		}

		$menu_data = "SELECT  a.M_MODULE_ID,a.ROOT_MENU,a.SUB_ROOT_MENU,a.M_MENU_ID, a.MENU_NAME from main_menu a,user_priv_mst b where a.m_menu_id=b.main_menu_id and b.user_id='$user_id' and  a.is_mobile_menu=1  and a.status=1 and a.f_location is not null   group by a.M_MODULE_ID,a.ROOT_MENU,a.SUB_ROOT_MENU,a.M_MENU_ID, a.MENU_NAME ";

		$data_array = array();

		foreach (sql_select($menu_data) as $rows) {

			$data_array[$module_arr[$rows->M_MODULE_ID] . "**" . $rows->M_MODULE_ID][$rows->M_MENU_ID] = $rows->MENU_NAME;

		}
		return $data_array;

	}
	//******Akh Test*************
	public function check_if_barcode_already_received($barcode_nos)
	{
		$pre_rcv_barcode_sql = "SELECT b.recv_number,c.barcode_no FROM pro_roll_details c,inv_receive_master b WHERE c.entry_form in(58) and c.barcode_no in($barcode_nos) and c.status_active=1 and c.is_deleted=0 and c.mst_id=b.id and b.entry_form=58 and b.status_active=1";
		$pre_rcv_barcode = $this->db->query($pre_rcv_barcode_sql)->result();

		foreach ($pre_rcv_barcode as $val)
		{
			$pre_rcv_mrr_arr[$val->RECV_NUMBER] = $val->RECV_NUMBER;
		}
		if(!empty($pre_rcv_mrr_arr)){
			$pre_rcv_mrr = implode(", ", $pre_rcv_mrr_arr);
			return $pre_rcv_mrr;
		}
	}
	public function get_roll_info_for_receive($challan_no)
	{
		$knitting_source = array(1 => "In-house", 2 => "In-bound Subcontract", 3 => "Out-bound Subcontract");
		$receive_basis = array(0 => "Independent", 1 => "Fabric Booking", 2 => "Knitting Plan", 4 => 'Sales Order');

		$buyer_sql = $this->getAllFieldsByAttribute("LIB_BUYER", "ID, SHORT_NAME", array("STATUS_ACTIVE" => 1));
		foreach ($buyer_sql as $row) {
			$buyer_arr[$row->ID] = $row->SHORT_NAME;
		}

		$b_part_sql = $this->getAllFieldsByAttribute("LIB_BODY_PART", "ID, BODY_PART_FULL_NAME", array("STATUS_ACTIVE" => 1));
		foreach ($b_part_sql as $row) {
			$buyer_part_arr[$row->ID] = $row->BODY_PART_FULL_NAME;
		}

		$machine_sql = $this->getAllFieldsByAttribute("LIB_MACHINE_NAME", "ID, MACHINE_NO", array("STATUS_ACTIVE" => 1));
		foreach ($machine_sql as $row) {
			$machine_name_arr[$row->ID] = $row->MACHINE_NO;
		}

		$composition_arr = $constructtion_arr = array();
		$composition_sql = "select id,composition_name from  lib_composition_array where status_active=1 and is_deleted=0 order by composition_name";
		$composition_data = $this->db->query($composition_sql)->result();
		foreach ($composition_data as $row) {
			$compositions_arr[$row->ID] = $row->COMPOSITION_NAME;
		}
		$fabrication_sql = "select a.id, a.construction, b.copmposition_id, b.percent from lib_yarn_count_determina_mst a, lib_yarn_count_determina_dtls b where a.id=b.mst_id";
		$fabrication_data = $this->db->query($fabrication_sql)->result();
		foreach ($fabrication_data as $row) {
			$constructtion_arr[$row->ID] = $row->CONSTRUCTION;
			$composition_arr[$row->ID] .= $compositions_arr[$row->COPMPOSITION_ID] . " " . $row->PERCENT . "% ";
		}

		$color_range = array(1 => "Dark Color", 2 => "Light Color", 3 => "Black Color", 4 => "White Color", 5 => "Average Color", 6 => "Melange", 7 => "Wash", 8 => "Scouring", 9 => "Extra Dark", 10 => "Medium Color", 11 => "Super Dark");

		$color_sql = "select id, color_name from lib_color where status_active=1 and is_deleted=0";
		$color_data = $this->db->query($color_sql)->result();
		foreach ($color_data as $row) {
			$color_arr[$row->ID] = $row->COLOR_NAME;
		}

		$company_sql = "select id,company_name from lib_company";
		$company_data = $this->db->query($company_sql)->result();
		foreach ($company_data as $row) {
			$company_arr[$row->ID] = $row->COMPANY_NAME;
		}

		$supplier_sql = "select id, supplier_name from lib_supplier";
		$supplier_data = $this->db->query($supplier_sql)->result();
		foreach ($supplier_data as $row) {
			$supplier_arr[$row->ID] = $row->SUPPLIER_NAME;
		}

		$loc_sql = "SELECT ID,LOCATION_NAME from lib_location where status_active =1 and is_deleted=0 order by location_name";
		$loc_data = $this->db->query($loc_sql)->result();
		foreach ($loc_data as $val) {
			$location_array[$val->ID] = $val->LOCATION_NAME;
		}

		$challan_sql = "select a.id, a.sys_number_prefix_num,a.sys_number,a.delevery_date, a.company_id, a.order_status, a.location_id, a.buyer_id, c.barcode_no, b.id as dtls_id, c.id as roll_id, c.is_sales, c.po_breakdown_id, c.booking_without_order
		from pro_grey_prod_delivery_mst a, pro_grey_prod_delivery_dtls b, pro_roll_details c
		where a.id=b.mst_id and b.id=c.dtls_id and b.barcode_num=c.barcode_no and a.sys_number='$challan_no' and a.entry_form in(56) and c.entry_form in(56) and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0 and c.is_deleted=0 and c.status_active=1 order by c.id";
		$challan_data = $this->db->query($challan_sql)->result();
		$delivery_barcode_arr = array();
		foreach ($challan_data as $row) {
			$delivery_barcode_arr[$row->BARCODE_NO] = $row->BARCODE_NO;
			$delivery_rowo[$row->BARCODE_NO]["DELIVERY_ID"] = $row->ID;
			$delivery_rowo[$row->BARCODE_NO]["SYS_NUMBER_PREFIX_NUM"] = $row->SYS_NUMBER_PREFIX_NUM;
			$delivery_rowo[$row->BARCODE_NO]["SYS_NUMBER"] = $row->SYS_NUMBER;
			$delivery_rowo[$row->BARCODE_NO]["DELEVERY_DATE"] = $row->DELEVERY_DATE;

			if($row->BOOKING_WITHOUT_ORDER == 1)
			{
				$non_ord_id_arr[$row->PO_BREAKDOWN_ID] = $row->PO_BREAKDOWN_ID;
			}
			else
			{
				$order_id_arr[$row->PO_BREAKDOWN_ID] = $row->PO_BREAKDOWN_ID;
			}
		}

		if(!empty($delivery_barcode_arr)){
			$barcode_nos = implode(",",$delivery_barcode_arr);
			$check_barcode = $this->check_if_barcode_already_received($barcode_nos);
			$pre_rcv_barcode_sql = "SELECT b.recv_number,c.barcode_no FROM pro_roll_details c,inv_receive_master b WHERE c.entry_form in(58) and c.barcode_no in($barcode_nos) and c.status_active=1 and c.is_deleted=0 and c.mst_id=b.id and b.entry_form=58 and b.status_active=1";
			$pre_rcv_barcode = $this->db->query($pre_rcv_barcode_sql)->result();

			foreach ($pre_rcv_barcode as $val)
			{
				$pre_rcv_mrr_arr[$val->BARCODE_NO] = $val->BARCODE_NO;
			}
		}

		$non_ord_samp_booking_id = implode(",",array_filter($non_ord_id_arr));
		if($non_ord_samp_booking_id!="")
		{
			$sqlsamplnoOrderSql = "select id,insert_date,buyer_id from wo_non_ord_samp_booking_mst where id in($non_ord_samp_booking_id) and status_active=1 and is_deleted=0";
			$sqlsamplnoOrder = $this->db->query($sqlsamplnoOrderSql)->result();
			foreach ($sqlsamplnoOrder as $row) {
				$no_order_details_array[$row->ID]['buyer_id'] = $buyer_array[$row->BUYER_ID];
				$no_order_details_array[$row->ID]['year'] = date("Y", strtotime($row->INSERT_DATE));
			}
		}

		$order_id_arr = array_filter($order_id_arr);
		$order_ids = implode(",",$order_id_arr);
		if(!empty($order_id_arr))
		{
			if($db_type==2 && count($order_id_arr)>999)
			{
				$order_id_chunk_arr =array_chunk($order_id_arr, 999);
				$all_order_id_cond=" and (";
				foreach ($order_id_chunk_arr as $value)
				{
					$all_order_id_cond .="b.id in (".implode(",", $value).") or ";
				}
				$all_order_id_cond=chop($all_order_id_cond,"or ");
				$all_order_id_cond.=")";
			}
			else
			{
				$all_order_id_cond=" and b.id in ($order_ids)";
			}

			$po_sql = "SELECT a.job_no_prefix_num, a.buyer_name, a.insert_date, b.po_number, a.style_ref_no, b.id as po_id FROM wo_po_details_master a, wo_po_break_down b WHERE a.job_no=b.job_no_mst $all_order_id_cond";
			$po_data = $this->db->query($po_sql)->result();
			$po_details_array = array();
			foreach ($po_data as $row)
			{
				$po_details_array[$row->PO_ID]['job_no'] = $row->JOB_NO_PREFIX_NUM;
				$po_details_array[$row->PO_ID]['buyer_name'] = $buyer_array[$row->BUYER_NAME];
				$po_details_array[$row->PO_ID]['style_ref_no'] = $row->STYLE_REF_NO;
				$po_details_array[$row->PO_ID]['year'] = date("Y", strtotime($row->INSERT_DATE));
				$po_details_array[$row->PO_ID]['po_number'] = $row->PO_NUMBER;
				$po_details_array[$row->PO_ID]['buyer_id'] = $row->BUYER_NAME;
			}
		}

		$roll_rowo = $barcode_array = $order_ids_arr = array();
		if (!empty($delivery_barcode_arr)) {

			$production_sql = "SELECT a.id, a.company_id, a.recv_number,a.location_id, a.receive_basis, a.receive_date, a.booking_id, a.booking_no, a.knitting_source, a.knitting_company, a.buyer_id, c.booking_without_order, b.id as dtls_id, b.prod_id, b.febric_description_id, b.gsm, b.width, b.body_part_id,b.yarn_lot,b.brand_id,b.shift_name,b.floor_id,b.machine_no_id,c.rate,  b.yarn_count, b.uom,b.color_id,b.color_range_id, b.stitch_length, c.barcode_no, c.id as roll_id, c.roll_no, c.po_breakdown_id, c.qnty, c.reject_qnty, c.is_sales,b.kniting_charge, b.yarn_rate
			FROM inv_receive_master a, pro_grey_prod_entry_dtls b, pro_roll_details c
			WHERE a.id=b.mst_id and b.id=c.dtls_id and a.entry_form=2 and c.entry_form=2 and c.status_active=1 and c.is_deleted=0 and c.barcode_no in (" . implode(",", $delivery_barcode_arr) . ")";
			$production_data = $this->db->query($production_sql)->result();
		}

		if (!empty($production_data))
		{
			$i=0;
			foreach ($production_data as $row)
			{
				if($pre_rcv_mrr_arr[$row->BARCODE_NO]=="")
				{
					$booking_no_id = $row->BOOKING_NO;
					$color_id_show='';$color='';
					$color_id=explode(",",$row->COLOR_ID);
					foreach($color_id as $val)
					{
						if($val>0) $color_id_show.=$color_arr[$val].",";
						if($val>0) $color.=$val.",";
					}
					$color_id_show=chop($color_id_show,',');
					$color=chop($color,',');

					$roll_rowo["MasterPart"]['COMPANY_ID'] = $row->COMPANY_ID;
					$roll_rowo["MasterPart"]['LOCATION_ID'] = $row->LOCATION_ID;
					$roll_rowo["MasterPart"]['LOCATION_NAME'] = $location_array[$row->LOCATION_ID];
					$roll_rowo["MasterPart"]['DELIVERY_ID'] = $delivery_rowo[$row->BARCODE_NO]["DELIVERY_ID"];
					$roll_rowo["MasterPart"]['SYS_NUMBER_PREFIX_NUM'] = $delivery_rowo[$row->BARCODE_NO]["SYS_NUMBER_PREFIX_NUM"];
					$roll_rowo["MasterPart"]['SYS_NUMBER'] = $delivery_rowo[$row->BARCODE_NO]["SYS_NUMBER"];
					$roll_rowo["MasterPart"]['DELEVERY_DATE'] = $delivery_rowo[$row->BARCODE_NO]["DELEVERY_DATE"];
					$roll_rowo["MasterPart"]['KNITTING_SOURCE_ID'] = $row->KNITTING_SOURCE;
					$roll_rowo["MasterPart"]['KNITTING_SOURCE'] = $knitting_source[$row->KNITTING_SOURCE];
					$roll_rowo["MasterPart"]['KNITTING_COMPANY_ID'] = $row->KNITTING_COMPANY;
					if ($row->KNITTING_SOURCE == 1) {
						$roll_rowo["MasterPart"]['KNITTING_COMPANY'] = $company_arr[$row->KNITTING_COMPANY];
					} else if ($row->KNITTING_SOURCE == 3) {
						$roll_rowo["MasterPart"]['KNITTING_COMPANY'] = $supplier_arr[$row->KNITTING_COMPANY];
					}

					$roll_rowo["DtlsPart"][$i]['BARCODE_NO'] = $row->BARCODE_NO;
					$roll_rowo["DtlsPart"][$i]['BUYER_ID'] = $row->BUYER_ID;
					$roll_rowo["DtlsPart"][$i]['BUYER_NAME'] = $buyer_arr[$row->BUYER_ID];
					$roll_rowo["DtlsPart"][$i]['PRODUCTION_BASIS'] = $row->RECEIVE_BASIS;
					$roll_rowo["DtlsPart"][$i]['PRODUCTION_BASIS_NAME'] = $receive_basis[$row->RECEIVE_BASIS];
					$roll_rowo["DtlsPart"][$i]['BOOKING_NO'] = $row->BOOKING_NO;


					if ($row->KNITTING_SOURCE == 1) {
						$roll_rowo["DtlsPart"][$i]['KNITTING_COMPANY'] = $company_arr[$row->KNITTING_COMPANY];
					} else if ($row->KNITTING_SOURCE == 3) {
						$roll_rowo["DtlsPart"][$i]['KNITTING_COMPANY'] = $supplier_arr[$row->KNITTING_COMPANY];
					}
					$roll_rowo["DtlsPart"][$i]['BOOKING_WITHOUT_ORDER'] = $row->BOOKING_WITHOUT_ORDER;
					$roll_rowo["DtlsPart"][$i]['BOOKING_ID'] = $row->BOOKING_ID;
					$roll_rowo["DtlsPart"][$i]['BODY_PART_ID'] = $row->BODY_PART_ID;
					$roll_rowo["DtlsPart"][$i]['BODY_PART_NAME'] = $buyer_part_arr[$row->BODY_PART_ID];
					$roll_rowo["DtlsPart"][$i]['YARN_LOT'] = $row->YARN_LOT;
					$roll_rowo["DtlsPart"][$i]['BRAND_ID'] = $row->BRAND_ID;
					$roll_rowo["DtlsPart"][$i]['SHIFT_NAME'] = $row->SHIFT_NAME;
					$roll_rowo["DtlsPart"][$i]['FLOOR_ID'] = $row->FLOOR_ID;
					$roll_rowo["DtlsPart"][$i]['MACHINE_NO_ID'] = $row->MACHINE_NO_ID;
					$roll_rowo["DtlsPart"][$i]['MACHINE_NAME'] = $machine_name_arr[$row->MACHINE_NO_ID];
					$roll_rowo["DtlsPart"][$i]['YARN_COUNT'] = $row->YARN_COUNT;
					$roll_rowo["DtlsPart"][$i]['COLOR_ID'] = $color;
					$roll_rowo["DtlsPart"][$i]['COLOR_NAME'] = $color_arr[$color];
					$roll_rowo["DtlsPart"][$i]['COLOR_RANGE_ID'] = $row->COLOR_RANGE_ID;
					$roll_rowo["DtlsPart"][$i]['COLOR_RANGE_NAME'] = $color_range[$row->COLOR_RANGE_ID];
					$roll_rowo["DtlsPart"][$i]['ROLL_ID'] = $row->ROLL_ID;
					$roll_rowo["DtlsPart"][$i]['UOM'] = $row->UOM;
					$roll_rowo["DtlsPart"][$i]['DTLS_ID'] = $row->DTLS_ID;
					$roll_rowo["DtlsPart"][$i]['PROD_ID'] = $row->PROD_ID;
					$roll_rowo["DtlsPart"][$i]['DETER_ID'] = $row->FEBRIC_DESCRIPTION_ID;
					$roll_rowo["DtlsPart"][$i]['CONSTRUCTION'] = $constructtion_arr[$row->FEBRIC_DESCRIPTION_ID];
					$roll_rowo["DtlsPart"][$i]['COMPOSITION'] = $composition_arr[$row->FEBRIC_DESCRIPTION_ID];
					$roll_rowo["DtlsPart"][$i]['GSM'] = $row->GSM;
					$roll_rowo["DtlsPart"][$i]['WIDTH'] = $row->WIDTH;
					$roll_rowo["DtlsPart"][$i]['STITCH_LENGTH'] = $row->STITCH_LENGTH;
					$roll_rowo["DtlsPart"][$i]['ROLL_ID'] = $row->ROLL_ID;
					$roll_rowo["DtlsPart"][$i]['ROLL_NO'] = $row->ROLL_NO;
					$roll_rowo["DtlsPart"][$i]['PO_BREAKDOWN_ID'] = $row->PO_BREAKDOWN_ID;
					$roll_rowo["DtlsPart"][$i]['PO_NUMBER'] = $po_details_array[$row->PO_BREAKDOWN_ID]['po_number'];
					$roll_rowo["DtlsPart"][$i]['JOB_NO'] = $po_details_array[$row->PO_BREAKDOWN_ID]['job_no'];
					$roll_rowo["DtlsPart"][$i]['QNTY'] = number_format($row->QNTY, 2, '.', '');
					$roll_rowo["DtlsPart"][$i]['REJECT_QNTY'] = number_format($row->REJECT_QNTY, 2, '.', '');

					$i++;
				}
			}
		}
		if(!empty($roll_rowo)){
			return $roll_rowo;
		}
		else
		{
			return array("status" => "Failed", "msg"=> "This Delivery Challan is not valid. Please scan again.");
		}
	}
	//*********Akh Stat here*****************************

	public function roll_receive ($plan_obj)
	{
		$response_obj = json_decode($plan_obj);

		$pc_date_time = date("d-M-Y h:i:s A",time());
		$receive_date = date("d-M-Y");

		// CHECK IF BARCODES ARE ALREADY RECEIVED
		$barcode_row  = $response_obj->resultset->BarcodeNos;

		if($barcode_row)
		{
			$check_barcode = $this->check_if_barcode_already_received($barcode_row->BARCODE_NO);
			if($check_barcode != "")
			{
				return array("status" => "Failed", "msg"=> "Barcode(s) already Received. Receive ID(s) = $check_barcode");
				die;
			}
		}

		$this->db->trans_start();
		$mst_row = $response_obj->resultset->MasterPart;
		if($mst_row)
		{

			$id=return_next_id_by_sequence( "INV_RECEIVE_MASTER_PK_SEQ","INV_RECEIVE_MASTER","","",0,"",0,0,0,0,0,0,0 );
			$new_mrr_number = explode("*", return_next_id_by_sequence("INV_RECEIVE_MASTER_PK_SEQ", "INV_RECEIVE_MASTER","",1,1,"KNGFRR",58,date("Y",time()),13 ));
			$receive_mrr = $new_mrr_number[0];
			$receive_mst_data = array(
				'ID'           => $id,
				'RECV_NUMBER_PREFIX'  => $new_mrr_number[1],
				'RECV_NUMBER_PREFIX_NUM'  => $new_mrr_number[2],
				'RECV_NUMBER'  => $receive_mrr,
				'ENTRY_FORM'  => 58,
				'ITEM_CATEGORY'  => 13,
				'RECEIVE_BASIS'  => 10,
				'COMPANY_ID'  => $mst_row->COMPANY_ID,
				'LOCATION_ID'  => $mst_row->LOCATION_ID,
				'RECEIVE_DATE'  => $receive_date,
				'CHALLAN_NO'  => '',
				'BOOKING_ID'  => $mst_row->DELIVERY_ID,
				'BOOKING_NO'  => $mst_row->SYS_NUMBER,
				'BOOKING_WITHOUT_ORDER'  => $mst_row->BOOKING_WITHOUT_ORDER,
				'STORE_ID'  => $mst_row->STORE_ID,
				'LOCATION_ID'  => $mst_row->LOCATION_ID,
				'KNITTING_SOURCE'  => $mst_row->KNITTING_SOURCE_ID,
				'KNITTING_COMPANY'  => $mst_row->KNITTING_COMPANY_ID,
				'KNITTING_LOCATION_ID'  => $mst_row->KNITTING_LOCATION_ID,
				'YARN_ISSUE_CHALLAN_NO'  => '',
				'REMARKS'  => $mst_row->REMARKS,
				'FABRIC_NATURE'  => 2,
				'INSERTED_BY'  => $mst_row->USER_ID,
				'INSERT_DATE'  => $pc_date_time
			);
			if(!empty($receive_mst_data)){
				$this->insertData($receive_mst_data, 'INV_RECEIVE_MASTER');
			}
		}

		foreach ($response_obj->resultset->DtlsPart as $dtls_row)
		{
			/* $id_trans = return_next_id_by_sequence("INV_TRANSACTION_PK_SEQ", "inv_transaction");
			$id_dtls = return_next_id_by_sequence("PRO_GREY_PROD_DTLS_PK_SEQ", "pro_grey_prod_entry_dtls");
			$id_roll = return_next_id_by_sequence("PRO_ROLL_DTLS_PK_SEQ", "pro_roll_details");
			$id_prop = return_next_id_by_sequence("ORDER_WISE_PROP_PK_SEQ", "order_wise_pro_details"); */

			$id_trans = return_next_id_by_sequence("INV_TRANSACTION_PK_SEQ", "inv_transaction", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
			$id_dtls = return_next_id_by_sequence("PRO_GREY_PROD_DTLS_PK_SEQ", "pro_grey_prod_entry_dtls", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
			$id_roll = return_next_id_by_sequence("PRO_ROLL_DTLS_PK_SEQ", "pro_roll_details", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
			$id_prop = return_next_id_by_sequence("ORDER_WISE_PROP_PK_SEQ", "order_wise_pro_details", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);

			$receive_trans_data = array(
				'ID'        => $id_trans,
				'MST_ID'   => $id,
				'RECEIVE_BASIS' => 10,
				'PI_WO_BATCH_NO' => $id_dtls,
				'COMPANY_ID' => $mst_row->COMPANY_ID,
				'PROD_ID' => $dtls_row->PROD_ID,
				'ITEM_CATEGORY' => 13,
				'TRANSACTION_TYPE' => 1,
				'TRANSACTION_DATE' => $receive_date,
				'STORE_ID' => $mst_row->STORE_ID,
				'BRAND_ID' => $dtls_row->BRAND_ID,
				'ORDER_UOM' => $dtls_row->UOM,
				'ORDER_QNTY' => $dtls_row->QNTY,
				'CONS_UOM' => $dtls_row->UOM,
				'CONS_QUANTITY' => $dtls_row->QNTY,
				'CONS_REJECT_QNTY' => $dtls_row->REJECT_QNTY,
				'BALANCE_QNTY' => $dtls_row->QNTY,
				'MACHINE_ID' => $dtls_row->MACHINE_NO_ID,
				'BOOKING_WITHOUT_ORDER' => $dtls_row->BOOKING_WITHOUT_ORDER,
				'INSERTED_BY' => 999,
				'INSERT_DATE' => $pc_date_time
			);

			$receive_dtls_data = array(
				'ID'        => $id_dtls,
				'MST_ID'   => $id,
				'TRANS_ID' => $id_trans,
				'PROD_ID' => $dtls_row->PROD_ID,
				'BODY_PART_ID' => $dtls_row->BODY_PART_ID,
				'FEBRIC_DESCRIPTION_ID' => $dtls_row->DETER_ID,
				'GSM' => $dtls_row->GSM,
				'WIDTH' => $dtls_row->WIDTH,
				'NO_OF_ROLL' => $dtls_row->NO_OF_ROLL,
				'ORDER_ID' => $dtls_row->PO_BREAKDOWN_ID,
				'GREY_RECEIVE_QNTY' => $dtls_row->QNTY,
				'REJECT_FABRIC_RECEIVE' => $dtls_row->REJECT_QNTY,
				'UOM' => $dtls_row->UOM,
				'YARN_LOT' => $dtls_row->YARN_LOT,
				'YARN_COUNT' => $dtls_row->YARN_COUNT,
				'BRAND_ID' => $dtls_row->BRAND_ID,
				'SHIFT_NAME' => $dtls_row->SHIFT_NAME,
				'MACHINE_NO_ID' => $dtls_row->MACHINE_NO_ID,
				'COLOR_ID' => $dtls_row->COLOR_ID,
				'COLOR_RANGE_ID' => $dtls_row->COLOR_RANGE_ID,
				'STITCH_LENGTH' => $dtls_row->STITCH_LENGTH,
				'INSERTED_BY' => 999,
				'INSERT_DATE' => $pc_date_time
			);

			$receive_roll_data = array(
				'ID'        => $id_roll,
				'MST_ID'   => $id,
				'DTLS_ID' => $id_dtls,
				'PO_BREAKDOWN_ID' => $dtls_row->PO_BREAKDOWN_ID,
				'ENTRY_FORM' => 58,
				'QC_PASS_QNTY' => $dtls_row->QNTY,
				'QNTY' => $dtls_row->QNTY,
				'ROLL_ID' => $dtls_row->ROLL_ID,
				'ROLL_NO' => $dtls_row->ROLL_NO,
				'BARCODE_NO' => $dtls_row->BARCODE_NO,
				'BOOKING_NO' => $dtls_row->BOOKING_NO,
				'BOOKING_WITHOUT_ORDER' => $dtls_row->BOOKING_WITHOUT_ORDER,
				'INSERTED_BY' => 999, //$dtls_row->USER_ID
				'INSERT_DATE' => $pc_date_time
			);

			$receive_prop_data = array(
				'ID'        => $id_prop,
				'TRANS_ID' => $id_trans,
				'TRANS_TYPE' => 1,
				'DTLS_ID' => $id_dtls,
				'ENTRY_FORM' => 58,
				'PO_BREAKDOWN_ID' => $dtls_row->PO_BREAKDOWN_ID,
				'QUANTITY' => $dtls_row->QNTY,
				'PROD_ID' => $dtls_row->PROD_ID,
				'INSERTED_BY' => 999,
				'INSERT_DATE' => $pc_date_time
			);

			$receive_product_data = array(
				'CURRENT_STOCK' => $dtls_row->QNTY
			);

			if(!empty($receive_trans_data)){
				$this->insertData($receive_trans_data, 'INV_TRANSACTION');
			}
			if(!empty($receive_dtls_data)){
				$this->insertData($receive_dtls_data, 'PRO_GREY_PROD_ENTRY_DTLS');
			}
			if(!empty($receive_roll_data)){
				$this->insertData($receive_roll_data, 'PRO_ROLL_DETAILS');
			}
			if(!empty($receive_prop_data)){
				$this->insertData($receive_prop_data, 'ORDER_WISE_PRO_DETAILS');
			}

			if(!empty($receive_product_data)){
				$this->updateData('PRODUCT_DETAILS_MASTER', $receive_product_data, array('ID' => $dtls_row->PROD_ID));
			}
		}

		$this->db->trans_complete();
		if ($this->db->trans_status() == TRUE) {
			return array("status" => "Success", "msg"=> "Receive ID = $receive_mrr");
		} else {
			return array("status" => "Failed");
		}
	}
	
	public function get_order_rowo($order_ids)
	{
		$po_sql = "SELECT a.job_no_prefix_num, a.buyer_name, a.insert_date, b.po_number, a.style_ref_no, b.id as po_id FROM wo_po_details_master a, wo_po_break_down b WHERE a.job_no=b.job_no_mst and b.id in($order_ids)";
		$po_data = $this->db->query($po_sql)->result();
		print_r($po_data);
		$po_details_array = array();
		foreach ($po_data as $row)
		{
			$po_details_array[$row->PO_ID]['job_no'] = $row->JOB_NO_PREFIX_NUM;
			$po_details_array[$row->PO_ID]['buyer_name'] = $buyer_array[$row->BUYER_NAME];
			$po_details_array[$row->PO_ID]['style_ref_no'] = $row->STYLE_REF_NO;
			$po_details_array[$row->PO_ID]['year'] = date("Y", strtotime($row->INSERT_DATE));
			$po_details_array[$row->PO_ID]['po_number'] = $row->PO_NUMBER;
			$po_details_array[$row->PO_ID]['buyer_id'] = $row->BUYER_NAME;
		}
		return $po_details_array;
	}

	public function check_if_barcode_already_issued($barcode_nos)
	{

		$check_if_already_scanned = "SELECT a.barcode_no, b.issue_number from pro_roll_details a, inv_issue_master b where a.mst_id = b.id and b.entry_form = 61 and  a.entry_form=61 and a.is_returned!=1 and a.barcode_no in($barcode_nos) and a.status_active = 1 and a.is_deleted=0 and b.status_active = 1 and b.is_deleted=0";
		$pre_issue_barcode = $this->db->query($check_if_already_scanned)->result();

		foreach ($pre_issue_barcode as $val)
		{
			$pre_issue_mrr_arr[$val->ISSUE_NUMBER] = $val->ISSUE_NUMBER;
		}
		if(!empty($pre_issue_mrr_arr)){
			$pre_iss_mrr = implode(", ", $pre_issue_mrr_arr);
			return $pre_iss_mrr;
		}

	}
	public function get_roll_rowo_for_issue($barcode_no)
	{

		$check_barcode = $this->check_if_barcode_already_issued($barcode_no);
		if($check_barcode != "")
		{
			return array(
				"status" => "Failed",
				"msg" 	 => "Barcode already Issued. Issue No(s) = $check_barcode"
			);
			die;
		}

		$knitting_source = array(1 => "In-house", 2 => "In-bound Subcontract", 3 => "Out-bound Subcontract");
		$receive_basis = array(0 => "Independent", 1 => "Fabric Booking", 2 => "Knitting Plan", 4 => 'Sales Order');

		$buyer_sql = $this->getAllFieldsByAttribute("LIB_BUYER", "ID, SHORT_NAME", array("STATUS_ACTIVE" => 1));
		foreach ($buyer_sql as $row) {
			$buyer_arr[$row->ID] = $row->SHORT_NAME;
		}

		$b_part_sql = $this->getAllFieldsByAttribute("LIB_BODY_PART", "ID, BODY_PART_FULL_NAME", array("STATUS_ACTIVE" => 1));
		foreach ($b_part_sql as $row) {
			$buyer_part_arr[$row->ID] = $row->BODY_PART_FULL_NAME;
		}

		$composition_arr = $constructtion_arr = array();
		$composition_sql = "select id,composition_name from  lib_composition_array where status_active=1 and is_deleted=0 order by composition_name";
		$composition_data = $this->db->query($composition_sql)->result();
		foreach ($composition_data as $row) {
			$compositions_arr[$row->ID] = $row->COMPOSITION_NAME;
		}
		$fabrication_sql = "select a.id, a.construction, b.copmposition_id, b.percent from lib_yarn_count_determina_mst a, lib_yarn_count_determina_dtls b where a.id=b.mst_id";
		$fabrication_data = $this->db->query($fabrication_sql)->result();
		foreach ($fabrication_data as $row) {
			$constructtion_arr[$row->ID] = $row->CONSTRUCTION;
			$composition_arr[$row->ID] .= $compositions_arr[$row->COPMPOSITION_ID] . " " . $row->PERCENT . "% ";
		}

		$color_range = array(1 => "Dark Color", 2 => "Light Color", 3 => "Black Color", 4 => "White Color", 5 => "Average Color", 6 => "Melange", 7 => "Wash", 8 => "Scouring", 9 => "Extra Dark", 10 => "Medium Color", 11 => "Super Dark");

		$color_sql = "select id, color_name from lib_color where status_active=1 and is_deleted=0";
		$color_data = $this->db->query($color_sql)->result();
		foreach ($color_data as $row) {
			$color_arr[$row->ID] = $row->COLOR_NAME;
		}

		$company_sql = "select id,company_name from lib_company";
		$company_data = $this->db->query($company_sql)->result();
		foreach ($company_data as $row) {
			$company_arr[$row->ID] = $row->COMPANY_NAME;
		}

		$supplier_sql = "select id, supplier_name from lib_supplier";
		$supplier_data = $this->db->query($supplier_sql)->result();
		foreach ($supplier_data as $row) {
			$supplier_arr[$row->ID] = $row->SUPPLIER_NAME;
		}

		$production_sql = "SELECT a.id, a.company_id, a.recv_number, a.receive_basis, a.receive_date, a.booking_id, a.booking_no, a.knitting_source, a.knitting_company, a.buyer_id, c.booking_without_order, b.id as dtls_id, b.prod_id, b.febric_description_id, b.gsm, b.width, b.body_part_id,b.yarn_lot,b.brand_id,b.shift_name,b.floor_id,b.machine_no_id,c.rate,  b.yarn_count, b.uom,b.color_id,b.color_range_id, b.stitch_length, c.barcode_no, c.id as roll_id, c.roll_no, c.po_breakdown_id, c.qnty, c.reject_qnty, c.is_sales,b.kniting_charge, b.yarn_rate
		FROM inv_receive_master a, pro_grey_prod_entry_dtls b, pro_roll_details c
		WHERE a.id=b.mst_id and b.id=c.dtls_id and a.entry_form=2 and c.entry_form=2 and c.status_active=1 and c.is_deleted=0 and c.barcode_no=$barcode_no";
		$production_data = $this->db->query($production_sql)->result();
		foreach($production_data as $row)
		{
			$production_rowo[$row->BARCODE_NO]["BUYER_ID"] = $row->BUYER_ID;
			$order_ids_arr[$row->PO_BREAKDOWN_ID] = $row->PO_BREAKDOWN_ID;
		}

		if(!empty($order_ids_arr))
		{
			$order_ids = " and b.id in(".implode(",",$order_ids_arr).")";
			$po_sql = "SELECT a.job_no, a.buyer_name, a.insert_date, b.po_number, a.style_ref_no, b.id as po_id FROM wo_po_details_master a, wo_po_break_down b WHERE a.job_no=b.job_no_mst $order_ids";
			$po_data = $this->db->query($po_sql)->result();

			$po_details_array = array();
			foreach ($po_data as $row)
			{
				$po_details_array[$row->PO_ID]['job_no'] = $row->JOB_NO;
				$po_details_array[$row->PO_ID]['buyer_name'] = $buyer_array[$row->BUYER_NAME];
				$po_details_array[$row->PO_ID]['style_ref_no'] = $row->STYLE_REF_NO;
				$po_details_array[$row->PO_ID]['year'] = date("Y", strtotime($row->INSERT_DATE));
				$po_details_array[$row->PO_ID]['po_number'] = $row->PO_NUMBER;
				$po_details_array[$row->PO_ID]['buyer_id'] = $row->BUYER_NAME;
			}
		}

		$receive_sql="SELECT a.id, a.entry_form, a.company_id, a.receive_basis, a.location_id, a.booking_no, a.booking_id, a.knitting_source, a.knitting_company, b.id as dtls_id, b.prod_id, b.body_part_id, b.febric_description_id, b.gsm, b.width, b.color_id, b.yarn_lot, b.yarn_count, b.stitch_length, b.machine_no_id, b.brand_id, b.rack, b.self, b.color_range_id, c.barcode_no, c.id as roll_id, c.roll_no, c.po_breakdown_id, c.qnty, c.roll_id as roll_id_prev,c.rate,c.booking_no as bwo, c.booking_without_order, c.is_transfer, c.transfer_criteria,c.is_sales , a.store_id
		FROM pro_roll_details c, pro_grey_prod_entry_dtls b, inv_receive_master a
		WHERE c.barcode_no=$barcode_no and c.entry_form in(2,22,58) and c.status_active=1 and c.is_deleted=0 and b.trans_id<>0 and a.entry_form in(2,22,58) and b.id=c.dtls_id and  a.id=b.mst_id";
		$receive_data = $this->db->query($receive_sql)->result();
		foreach($receive_data as $row)
		{
			$booking_no_id = $row->BOOKING_NO;
			$color_id_show='';$color='';
			$color_id=explode(",",$row->COLOR_ID);
			foreach($color_id as $val)
			{
				if($val>0) $color_id_show.=$color_arr[$val].",";
				if($val>0) $color.=$val.",";
			}
			$color_id_show=chop($color_id_show,',');
			$color=chop($color,',');

			$roll_rowo["MasterPart"]['COMPANY_ID'] = $row->COMPANY_ID;
			$roll_rowo["MasterPart"]['KNITTING_SOURCE_ID'] = $row->KNITTING_SOURCE;
			$roll_rowo["MasterPart"]['KNITTING_SOURCE'] = $knitting_source[$row->KNITTING_SOURCE];
			$roll_rowo["MasterPart"]['KNITTING_COMPANY_ID'] = $row->KNITTING_COMPANY;
			if ($row->KNITTING_SOURCE == 1) {
				$roll_rowo["MasterPart"]['KNITTING_COMPANY'] = $company_arr[$row->KNITTING_COMPANY];
			} else if ($row->KNITTING_SOURCE == 3) {
				$roll_rowo["MasterPart"]['KNITTING_COMPANY'] = $supplier_arr[$row->KNITTING_COMPANY];
			}

			$roll_rowo["DtlsPart"]['BARCODE_NO'] = $row->BARCODE_NO;
			$roll_rowo["DtlsPart"]['BUYER_ID'] = $production_rowo[$row->BARCODE_NO]["BUYER_ID"];
			$roll_rowo["DtlsPart"]['BUYER_NAME'] = $buyer_arr[$production_rowo[$row->BARCODE_NO]["BUYER_ID"]];

			if ($row->KNITTING_SOURCE == 1) {
				$roll_rowo["DtlsPart"]['KNITTING_COMPANY'] = $company_arr[$row->KNITTING_COMPANY];
			} else if ($row->KNITTING_SOURCE == 3) {
				$roll_rowo["DtlsPart"]['KNITTING_COMPANY'] = $supplier_arr[$row->KNITTING_COMPANY];
			}
			$roll_rowo["DtlsPart"]['BOOKING_WITHOUT_ORDER'] = $row->BOOKING_WITHOUT_ORDER;
			$roll_rowo["DtlsPart"]['BOOKING_ID'] = $row->BOOKING_ID;
			$roll_rowo["DtlsPart"]['BODY_PART_ID'] = $row->BODY_PART_ID;
			$roll_rowo["DtlsPart"]['BODY_PART_NAME'] = $buyer_part_arr[$row->BODY_PART_ID];
			$roll_rowo["DtlsPart"]['YARN_LOT'] = $row->YARN_LOT;
			$roll_rowo["DtlsPart"]['BRAND_ID'] = $row->BRAND_ID;
			$roll_rowo["DtlsPart"]['SHIFT_NAME'] = $row->SHIFT_NAME;
			$roll_rowo["DtlsPart"]['FLOOR_ID'] = $row->FLOOR_ID;
			$roll_rowo["DtlsPart"]['MACHINE_NO_ID'] = $row->MACHINE_NO_ID;
			$roll_rowo["DtlsPart"]['YARN_COUNT'] = $row->YARN_COUNT;
			$roll_rowo["DtlsPart"]['COLOR_ID'] = $color;
			$roll_rowo["DtlsPart"]['COLOR_NAME'] = $color_arr[$color];
			$roll_rowo["DtlsPart"]['COLOR_RANGE_ID'] = $row->COLOR_RANGE_ID;
			$roll_rowo["DtlsPart"]['COLOR_RANGE_NAME'] = $color_range[$row->COLOR_RANGE_ID];
			$roll_rowo["DtlsPart"]['ROLL_ID'] = $row->ROLL_ID;
			$roll_rowo["DtlsPart"]['UOM'] = $row->UOM;
			$roll_rowo["DtlsPart"]['DTLS_ID'] = $row->DTLS_ID;
			$roll_rowo["DtlsPart"]['PROD_ID'] = $row->PROD_ID;
			$roll_rowo["DtlsPart"]['DETER_ID'] = $row->FEBRIC_DESCRIPTION_ID;
			$roll_rowo["DtlsPart"]['CONSTRUCTION'] = $constructtion_arr[$row->FEBRIC_DESCRIPTION_ID];
			$roll_rowo["DtlsPart"]['COMPOSITION'] = $composition_arr[$row->FEBRIC_DESCRIPTION_ID];
			$roll_rowo["DtlsPart"]['GSM'] = $row->GSM;
			$roll_rowo["DtlsPart"]['WIDTH'] = $row->WIDTH;
			$roll_rowo["DtlsPart"]['STITCH_LENGTH'] = $row->STITCH_LENGTH;
			$roll_rowo["DtlsPart"]['ROLL_ID'] = $row->ROLL_ID;
			$roll_rowo["DtlsPart"]['ROLL_NO'] = $row->ROLL_NO;
			$roll_rowo["DtlsPart"]['PO_BREAKDOWN_ID'] = $row->PO_BREAKDOWN_ID;
			$roll_rowo["DtlsPart"]['PO_NUMBER'] = $po_details_array[$row->PO_BREAKDOWN_ID]['po_number'];
			$roll_rowo["DtlsPart"]['JOB_NO'] = $po_details_array[$row->PO_BREAKDOWN_ID]['job_no'];
			$roll_rowo["DtlsPart"]['QNTY'] = number_format($row->QNTY, 2, '.', '');
			$roll_rowo["DtlsPart"]['REJECT_QNTY'] = number_format($row->REJECT_QNTY, 2, '.', '');
		}
		return $roll_rowo;
	}

	public function get_all_store_data()
	{
		$sql_store = "select a.id, a.store_name from lib_store_location a, lib_store_location_category b where a.id= b.store_location_id and
		a.company_id=1 and b.category_type=13 and a.status_active=1 and a.is_deleted=0 group by a.id, a.store_name order by a.store_name";
		$store_data = $this->db->query($sql_store)->result();
		$i=0;
		foreach ($store_data as $row) {
			$store_arr["MasterPart"][$i]["ID"] = $row->ID;
			$store_arr["MasterPart"][$i]["STORE_NAME"] = $row->STORE_NAME;
			$i++;
		}

		return $store_arr;
	}
	public function roll_Issue($issue_obj)
	{
		$response_obj = json_decode($issue_obj);

		$pc_date_time = date("d-M-Y h:i:s A",time());
		$issue_date = date("d-M-Y");

		// CHECK IF BARCODES ARE ALREADY RECEIVED
		//$barcode_row  = $response_obj->resultset->BarcodeNos;

		//echo "==".$barcode_row;die;
		//var_dump($response_obj);
		//print($response_obj->resultset->DtlsPart);

		$all_barcodeNo="";

		foreach ($response_obj->resultset->DtlsPart as $dtls_row)
		{
			 $all_barcodeNo .= $dtls_row->BARCODE_NO . ",";
		}
		$all_barcodeNo = chop($all_barcodeNo,",");

		//echo "==".$all_barcodeNo;die;

		if($all_barcodeNo)
		{
			$check_barcode = $this->check_if_barcode_already_issued($all_barcodeNo);
			if($check_barcode != "")
			{
				return array("status" => "Failed", "msg"=> "Barcode(s) already Issued. Issue ID(s) = $check_barcode");
				die;
			}

			if($all_barcodeNo!="")
			{
				$all_barcodeNo_arr=explode(",", $all_barcodeNo);
				$all_barcodeNo_arr = array_filter($all_barcodeNo_arr);
				if(count($all_barcodeNo_arr)>0)
				{
					$barcod_NOs = implode(",", $all_barcodeNo_arr);
					$all_barcode_no_cond=""; $barCond="";
					if($db_type==2 && count($all_barcodeNo_arr)>999)
					{
						$all_barcodeNo_arr_chunk=array_chunk($all_barcodeNo_arr,999) ;
						foreach($all_barcodeNo_arr_chunk as $chunk_arr)
						{
							$chunk_arr_value=implode(",",$chunk_arr);
							$barCond.=" a.barcode_no in($chunk_arr_value) or ";
						}

						$all_barcode_no_cond.=" and (".chop($barCond,'or ').")";
					}
					else
					{
						$all_barcode_no_cond=" and a.barcode_no in($barcod_NOs)";
					}
				}
			}

			$trans_check_sql = sql_select("select a.barcode_no as BARCODE_NO, a.entry_form as ENTRY_FORM, a.po_breakdown_id as PO_BREAKDOWN_ID, a.qnty as QNTY from pro_roll_details a where a.entry_form in ( 22,58,83,133,82,180,110,183,84) $all_barcode_no_cond and a.re_transfer =0 and a.status_active = 1 and a.is_deleted = 0 union all select a.barcode_no, a.entry_form, a.po_breakdown_id, a.qnty from pro_roll_details a, pro_grey_prod_entry_dtls b where a.dtls_id=b.id and a.entry_form in (2) and b.trans_id<>0 and a.re_transfer =0 $all_barcode_no_cond and a.status_active = 1 and a.is_deleted = 0");

			if(!empty($trans_check_sql))
			{
				foreach ($trans_check_sql as $val)
				{
					$trans_po_barcode_check_arr[$val->BARCODE_NO][$val->PO_BREAKDOWN_ID] = $val->BARCODE_NO."__".$val->PO_BREAKDOWN_ID;
					$actual_wgt_arr[$val->BARCODE_NO] = $val->QNTY;
				}
			}

			foreach ($response_obj->resultset->DtlsPart as $dtls_row)
			{
				// ==============================start
				if($trans_po_barcode_check_arr[$dtls_row->BARCODE_NO][$dtls_row->PO_BREAKDOWN_ID] != $dtls_row->BARCODE_NO."__".$dtls_row->PO_BREAKDOWN_ID)
				{
					if($dtls_row->BOOKING_WITHOUT_ORDER == 1)
					{
						return "Sorry! This barcode ". $dtls_row->BARCODE_NO ." doesn't belong to this booking : ".$dtls_row->SAMP_BOOKING ."";
					}
					else{
						return "Sorry! This barcode ". $dtls_row->BARCODE_NO ." doesn't belong to this order/FSO : ".$dtls_row->JOB_NO ."";
					}
					//disconnect($con);
					die;
				}
				if( number_format($actual_wgt_arr[$dtls_row->BARCODE_NO],2,".","")  != number_format($dtls_row->QNTY,2,".",""))
				{
					return "Sorry! This barcode (". $dtls_row->BARCODE_NO .") is split. actual weight ". number_format($actual_wgt_arr[$dtls_row->BARCODE_NO],2,".","") ." doesn't match with current ".$dtls_row->QNTY ."";
					//disconnect($con);
					die;
				}
				// =============================end
			}


		}
		else
		{
			return "Barcode Not Found";
			die;
		}


		$this->db->trans_start();

		$mst_row = $response_obj->resultset->MasterPart;
		if($mst_row)
		{
			$id=return_next_id_by_sequence( "INV_ISSUE_MASTER_PK_SEQ","INV_ISSUE_MASTER","","",0,"",0,0,0,0,0,0,0 );
			$new_mrr_number = explode("*", return_next_id_by_sequence("INV_ISSUE_MASTER_PK_SEQ", "INV_ISSUE_MASTER","",1,1,"KGIR",61,date("Y",time()),13 ));
			$issue_mrr = $new_mrr_number[0];

			$issue_mst_data = array(
				'ID'           => $id,
				'ISSUE_NUMBER_PREFIX'  => $new_mrr_number[1],
				'ISSUE_NUMBER_PREFIX_NUM'  => $new_mrr_number[2],
				'ISSUE_NUMBER'  => $issue_mrr,
				'ENTRY_FORM'  => 61,
				'ITEM_CATEGORY'  => 13,
				'ISSUE_BASIS'  => 9,
				'ISSUE_PURPOSE'  => $mst_row->ISSUE_PURPOSE,
				'COMPANY_ID'  => $mst_row->COMPANY_ID,
				'ISSUE_DATE'  => $issue_date,
				'KNIT_DYE_SOURCE'  => $mst_row->KNITTING_SOURCE_ID,
				'KNIT_DYE_COMPANY'  => $mst_row->KNITTING_COMPANY_ID,
				'REMARKS'  => $mst_row->REMARKS,
				'INSERTED_BY'  => $mst_row->USER_ID,
				'INSERT_DATE'  => $pc_date_time
			);
			if(!empty($issue_mst_data)){
				$this->insertData($issue_mst_data, 'INV_ISSUE_MASTER');
			}
		}
		$prodData_array=array();$prodData_amount=array();$all_prod_id_arr=array();
		foreach ($response_obj->resultset->DtlsPart as $dtls_row)
		{
			$id_trans = return_next_id_by_sequence("INV_TRANSACTION_PK_SEQ", "inv_transaction", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
			$id_dtls = return_next_id_by_sequence("INV_GREY_FAB_ISS_DTLS_PK_SEQ", "inv_grey_fabric_issue_dtls", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
			$id_roll = return_next_id_by_sequence("PRO_ROLL_DTLS_PK_SEQ", "pro_roll_details", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
			$id_prop = return_next_id_by_sequence("ORDER_WISE_PROP_PK_SEQ", "order_wise_pro_details", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);

			$cons_rate = ($dtls_row->ROLL_RATE)*1; 
			$cons_amount = ($dtls_row->QNTY) * $cons_rate;

			$issue_trans_data = array(
				'ID'        => $id_trans,
				'MST_ID'   => $id,
				'RECEIVE_BASIS' => 9,
				'PI_WO_BATCH_NO' => $dtls_row->BOOKING_ID,
				'COMPANY_ID' => $mst_row->COMPANY_ID,
				'PROD_ID' => $dtls_row->PROD_ID,
				'ITEM_CATEGORY' => 13,
				'TRANSACTION_TYPE' => 2,
				'TRANSACTION_DATE' => $issue_date,
				'STORE_ID' => $dtls_row->STORE_ID,
				'BRAND_ID' => $dtls_row->BRAND_ID,
				'CONS_QUANTITY' => $dtls_row->QNTY,
				'CONS_RATE' => $cons_rate,
				'CONS_AMOUNT' => $cons_amount,
				'MACHINE_ID' => $dtls_row->MACHINE_NO_ID,
				'STITCH_LENGTH' => $dtls_row->STITCH_LENGTH,
				'FLOOR_ID' => $dtls_row->FLOOR_ID,
				'ROOM' => $dtls_row->ROOM_ID,
				'RACK' => $dtls_row->RACK_ID,
				'SELF' => $dtls_row->SHELF_ID,
				'BIN_BOX' => $dtls_row->BIN_BOX_ID,
				'BODY_PART_ID' => $dtls_row->BODY_PART_ID,
				'INSERTED_BY' => $dtls_row->USER_ID,
				'INSERT_DATE' => $pc_date_time
			);

			$issue_dtls_data = array(
				'ID'        => $id_dtls,
				'MST_ID'   => $id,
				'TRANS_ID' => $id_trans,
				'PROD_ID' => $dtls_row->PROD_ID,
				'BASIS' => 9,
				'PROGRAM_NO' => $dtls_row->BOOKING_ID,
				'ISSUE_QNTY' => $dtls_row->QNTY,
				'RATE' => $cons_rate,
				'AMOUNT' => $cons_amount,
				'COLOR_ID' => $dtls_row->COLOR_ID,
				'MACHINE_ID' => $dtls_row->MACHINE_NO_ID,
				'STITCH_LENGTH' => $dtls_row->STITCH_LENGTH,
				'YARN_LOT' => $dtls_row->YARN_LOT,
				'YARN_COUNT' => $dtls_row->YARN_COUNT,
				'BRAND_ID' => $dtls_row->BRAND_ID,
				'STORE_NAME' => $dtls_row->STORE_ID,
				'FLOOR_ID' => $dtls_row->FLOOR_ID,
				'ROOM' => $dtls_row->ROOM_ID,
				'RACK' => $dtls_row->RACK_ID,
				'SELF' => $dtls_row->SHELF_ID,
				'BIN_BOX' => $dtls_row->BIN_BOX_ID,
				'BODY_PART_ID' => $dtls_row->BODY_PART_ID,
				'YARN_RATE' => $dtls_row->YARN_RATE,
				'KNITING_CHARGE' => $dtls_row->KNITING_CHARGE,
				'INSERTED_BY' => $dtls_row->USER_ID,
				'INSERT_DATE' => $pc_date_time
			);

			$issue_roll_data = array(
				'ID'        => $id_roll,
				'MST_ID'   => $id,
				'DTLS_ID' => $id_dtls,
				'PO_BREAKDOWN_ID' => $dtls_row->PO_BREAKDOWN_ID,
				'ENTRY_FORM' => 61,
				'QC_PASS_QNTY' => $dtls_row->QNTY,
				'QNTY' => $dtls_row->QNTY,
				'RATE' => $cons_rate,
				'AMOUNT' =>  $cons_amount,
				'ROLL_ID' => $dtls_row->ROLL_ID,
				'ROLL_NO' => $dtls_row->ROLL_NO,
				'BARCODE_NO' => $dtls_row->BARCODE_NO,
				'BOOKING_NO' => $dtls_row->SAMP_BOOKING,
				'BOOKING_WITHOUT_ORDER' => $dtls_row->BOOKING_WITHOUT_ORDER,
				'IS_SALES' => $dtls_row->IS_SALES,
				'INSERTED_BY' => $dtls_row->USER_ID,
				'INSERT_DATE' => $pc_date_time
			);

			if($dtls_row->BOOKING_WITHOUT_ORDER!=1)
			{
				$issue_prop_data = array(
					'ID'        => $id_prop,
					'TRANS_ID' => $id_trans,
					'TRANS_TYPE' => 2,
					'DTLS_ID' => $id_dtls,
					'ENTRY_FORM' => 61,
					'PO_BREAKDOWN_ID' => $dtls_row->PO_BREAKDOWN_ID,
					'QUANTITY' => $dtls_row->QNTY,
					'PROD_ID' => $dtls_row->PROD_ID,
					'IS_SALES' => $dtls_row->IS_SALES,
					'INSERTED_BY' => $dtls_row->USER_ID,
					'INSERT_DATE' => $pc_date_time
				);

			}

			/*$issue_product_data = array(
				'CURRENT_STOCK' => $dtls_row->QNTY
			);*/

			if(!empty($issue_trans_data)){
				$this->insertData($issue_trans_data, 'INV_TRANSACTION');
			}
			if(!empty($issue_dtls_data)){
				$this->insertData($issue_dtls_data, 'INV_GREY_FABRIC_ISSUE_DTLS');
			}
			if(!empty($issue_roll_data)){
				$this->insertData($issue_roll_data, 'PRO_ROLL_DETAILS');
			}
			if(!empty($issue_prop_data)){
				$this->insertData($issue_prop_data, 'ORDER_WISE_PRO_DETAILS');
			}

			$prodData_array[$dtls_row->PROD_ID]+=$dtls_row->QNTY;
			$prodData_amount[$dtls_row->PROD_ID]+=$cons_amount;
			$all_prod_id_arr[$dtls_row->PROD_ID]=$dtls_row->PROD_ID;
		}

		
		$all_prod_id=implode(",",$all_prod_id_arr);
		$prodResult=sql_select("select id, current_stock,stock_value,avg_rate_per_unit from product_details_master where id in($all_prod_id)");

		//echo "select id, current_stock,stock_value,avg_rate_per_unit from product_details_master where id in($all_prod_id)";die;
		foreach($prodResult as $row)
		{
			$issue_qty=$prodData_array[$row->ID];
			$issue_amount=$prodData_amount[$row->ID];
			$current_stock=$row->CURRENT_STOCK  - $issue_qty;
			$stock_value=$row->STOCK_VALUE - $issue_amount;
			if($current_stock > 0)
			{
				$avg_rate=$stock_value/$current_stock;
			}
			else
			{
				$avg_rate=0;
			}		

			if(is_nan($avg_rate))
				$avg_rate=0;
			// if Qty is zero then rate & value will be zero
			if ($current_stock<=0) 
			{
				$stock_value=0;
				$avg_rate=0;
			}

			$product_table_update = "UPDATE product_details_master SET last_issued_qnty=$issue_qty, current_stock='$current_stock', stock_value='$stock_value', avg_rate_per_unit='$avg_rate',  updated_by=$dtls_row->USER_ID, update_date='$pc_date_time' WHERE id=$row->ID";
			$this->db->query($product_table_update);
		}

		$this->db->trans_complete();
		if ($this->db->trans_status() == TRUE) {
			return array("status" => "Success", "msg"=> "Issue ID = $issue_mrr");
		} else {
			return array("status" => "Failed");
		}

	}
	public function get_all_issue_purpose()
	{
		$purpose_arr = array();
		$issue_purpose = array(3 => "Sales", 4 => "Sample With Order", 8 => "Sample Without Order", 11 => "Fabric Dyeing", 26 => "Damage", 29 => "Stolen", 30 => "Adjustment");
		$i = 0;
		foreach ($issue_purpose as $key => $purpose)
		{
			$purpose_arr["MasterPart"][$i]['ID'] = $key;
			$purpose_arr["MasterPart"][$i]['PURPOSE'] = $purpose;
			$i++;
		}
		return $purpose_arr;
	}
	
	//******Akh Test End*************
	


	public function array_ref_data($compId = "0", $arrs, $type, $qc_mst_tble_id) {
		 //return $arrs;
		$db_type = return_db_type();
		$fabric_shade = array(1 => "A", 2 => "B", 3 => "C", 4 => "D", 5 => "E");
		$knit_defect_inchi_array = array(1 => 'Defect=<3" : 1', 2 => 'Defect=<6" but >3" : 2', 3 => 'Defect=<9" but >6" : 3', 4 => 'Defect>9" : 4', 5 => 'Hole<1" : 2', 6 => 'Hole>1" : 4');

		
		//$knit_defect_array = return_library_array("select defect_name,short_name from  lib_defect_name where   is_deleted=0 and TYPE=1", "defect_name", "short_name");

		$knit_defect_array = array(1 => "Hole", 5 => "Loop", 10 => "Press Off", 15 => "Lycra Out", 20 => "Lycra Drop", 21 => "Lycra Cut/Drop", 25 => "Dust", 30 => "Oil Spot", 35 => "Fly Conta", 40 => "Slub", 45 => "Patta", 50 => "Needle Broken", 55 => "Sinker Mark", 60 => "Wheel Free", 65 => "Count Mix", 70 => "Yarn Contra", 75 => "NEPS", 80 => "Black Spot", 85 => "Oil/Ink Mark", 90 => "Set up", 95 => "Pin Hole", 100 => "Slub Hole", 105 => "Needle Mark", 110 => "Miss Yarn", 115 => "Color Contra [Yarn]", 120 => "Color/dye spot", 125 => "friction mark", 130 => "Pin out", 135 => "softener spot", 140 => "Dirty Spot", 145 => "Rust Stain", 150 => "Stop mark", 155 => "Compacting Broken", 160 => "Insect Spot", 165 => "Grease spot", 166 => "Knot", 167 => "Tara",168 =>"Contamination",169 =>"Thick and Thin",175 =>"Line Star");




		if ($type == 2) {//finish fab

			//$knit_defect_array = array(1 => "Hole", 5 => "Color Spot", 10 => "Insect Spot", 15 => "Yellow Spot", 20 => "Poly Conta", 25 => "Dust", 30 => "Oil Spot", 35 => "Fly Conta", 40 => "Slub", 45 => "Patta/Barrie Mark", 50 => "Cut/Joint", 55 => "Sinker Mark", 60 => "Print Mis", 65 => "Yarn Conta", 70 => "Slub Hole", 75 => "Softener Spot", 95 => "Dirty Stain", 100 => "NEPS", 105 => "Needle Drop", 110 => "Chem: Stain", 115 => "Cotton seeds", 120 => "Loop hole", 125 => "Dead Cotton", 130 => "Thick & Thin", 135 => "Rust Spot", 140 => "Needle Broken Mark", 145 => "Dirty Spot", 150 => "Side To Center Shade", 155 => "Bowing", 160 => "Uneven", 165 => "Yellow Writing", 170 => "Fabric Missing", 175 => "Dia Mark", 180 => "Miss Print", 185 => "Hairy", 190 => "G.S.M Hole", 195 => "Compacting Mark", 200 => "Rib Body Shade", 205 => "Running Shade", 210 => "Plastic Conta", 215 => "Crease mark", 220 => "Patches", 225 => "M/c Stoppage", 230 => "Needle Line", 235 => "Crample mark", 240 => "White Specks", 245 => "Mellange Effect", 250 => "Line Mark", 255 => "Loop Out", 260 => "Needle Broken");
			$knit_defect_array = return_library_array("SELECT defect_name,short_name from lib_defect_name where is_deleted=0 and TYPE=1 ORDER BY SEQUENCE_NO ASC", "defect_name", "short_name");

			$defect_wise_others = array();

		}

		//return $defect_name_arr;
		$grade_arr = array();
		$knit_defect_arr = array();
		$defect_arr = array();
		$observation_arr = array();

		if (!$compId) {$compId = 1;}

		$grade_sql = "SELECT FABRIC_GRADE, GET_UPVALUE_FIRST,GET_UPVALUE_SECOND from variable_settings_production where COMPANY_NAME='$compId' AND VARIABLE_LIST = 36 and status_active=1 and is_deleted=0  order by GET_UPVALUE_FIRST";
		
		foreach (sql_select($grade_sql) as $v) {
			for ($kk = $v->GET_UPVALUE_FIRST; $kk <= $v->GET_UPVALUE_SECOND; $kk++) {
				$obj = new Grade($kk, $v->FABRIC_GRADE);
				$grade_arr[] = $obj;
			}

		}
		if ($arrs) {
			foreach ($knit_defect_array as $k => $v) {
				$def_id = $k;
				if (isset($arrs[$def_id]["DEFECT_COUNT"])) {
					$count = $arrs[$def_id]["DEFECT_COUNT"];
				} else {
					$count = 0;
				}

				if (isset($arrs[$def_id]["FOUND_IN_INCH"])) {
					$inchs = $arrs[$def_id]["FOUND_IN_INCH"];
				} else {
					$inchs = 0;
				}

				if (isset($arrs[$def_id]["PENALTY_POINT"])) {
					$ttl_point = $arrs[$def_id]["PENALTY_POINT"];
				} else {
					$ttl_point = 0;
				}

				$def_obj = new Defect($def_id, $v, $count, $inchs, $ttl_point);
				$defect_arr[] = $def_obj;
			}

		}
		else {
			if ($qc_mst_tble_id) {
				$dtls_sql = "SELECT  DEFECT_NAME, DEFECT_COUNT, FOUND_IN_INCH, PENALTY_POINT FROM pro_qc_result_dtls Where MST_ID  in($qc_mst_tble_id)";
				foreach (sql_select($dtls_sql) as $val) {
					$defect_wise_others[$val->DEFECT_NAME]["DEFECT_COUNT"] = $val->DEFECT_COUNT;
					$defect_wise_others[$val->DEFECT_NAME]["FOUND_IN_INCH"] = $val->FOUND_IN_INCH;
					$defect_wise_others[$val->DEFECT_NAME]["PENALTY_POINT"] = $val->PENALTY_POINT;
				}

				foreach ($knit_defect_array as $k => $v) {
					$DEFECT_COUNT = 0;
					if (isset($defect_wise_others[$k]["DEFECT_COUNT"])) {
						$DEFECT_COUNT = $defect_wise_others[$k]["DEFECT_COUNT"];
					}

					$FOUND_IN_INCH = 0;
					if (isset($defect_wise_others[$k]["FOUND_IN_INCH"])) {
						$FOUND_IN_INCH = $defect_wise_others[$k]["FOUND_IN_INCH"];
					}

					$PENALTY_POINT = 0;
					if (isset($defect_wise_others[$k]["PENALTY_POINT"])) {
						$PENALTY_POINT = $defect_wise_others[$k]["PENALTY_POINT"];
					}

					$def_obj = new Defect($k, $v, $DEFECT_COUNT, $FOUND_IN_INCH, $PENALTY_POINT);
					$defect_arr[] = $def_obj;
				}

			} else {
				foreach ($knit_defect_array as $k => $v) {
					$def_obj = new Defect($k, $v, 0, 0, 0);
					$defect_arr[] = $def_obj;
				}

			}

		}




		foreach ($knit_defect_inchi_array as $k => $v) {
			$inch_obj = new INCH($k, $v);
			$knit_defect_arr[] = $inch_obj;
		}

		$data_array = array("defect" => $defect_arr, "grade" => $grade_arr);

		return $data_array;

	}

	public function kniting_ref_data_array($compId = "0", $arrs, $type, $qc_mst_tble_id) {
		$db_type = return_db_type();
		//$fabric_shade = array(1 => "A", 2 => "B", 3 => "C", 4 => "D", 5 => "E");
		//$knit_defect_inchi_array = array(1 => 'Defect=<3" : 1', 2 => 'Defect=<6" but >3" : 2', 3 => 'Defect=<9" but >6" : 3', 4 => 'Defect>9" : 4', 5 => 'Hole<1" : 2', 6 => 'Hole>1" : 4');


		$knit_defect_array = array(1 => "Hole", 5 => "Loop", 10 => "Press Off", 15 => "Lycra Out", 20 => "Lycra Drop",30 => "Oil Spot", 35 => "Fly Conta", 40 => "Slub",70 => "Yarn Contra",  85 => "Oil/Ink Mark", 90 => "Set up", 95 => "Pin Hole", 100 => "Slub Hole",110 => "Miss Yarn", 115 => "Color Contra [Yarn]",140 => "Dirty Spot",150 => "Stop mark",165 => "Grease spot", 166 => "Knot", 167 => "Tara");



		//$knit_ovservation_defect_array = array(23=>"Needle Mark",24=>"Sinker Mark",25=>"Patta",26=>"Carling",27=>"Dia Mark",28=>"Oil/ink Mark",29=>"Bend Mark",30=>"Wheel Free",31=>"Belt Free",32=>"Crease Mark",33=>"Needle Broken",34=>"Double Yarn",35=>"Lot Mix",36=>"Count Mix",37=>"Date Mix",38=>"Machanical Work",39=>"Program Change",40=>"NEPS",41=>"Line Star",42=>"Lycra Cotton");
		$knit_ovservation_defect_array = array(500=>"Needle Mark",501=>"Sinker Mark",502=>"Patta",503=>"Carling",504=>"Dia Mark",505=>"Oil/ink Mark",506=>"Bend Mark",507=>"Wheel Free",508=>"Belt Free",509=>"Crease Mark",510=>"Needle Broken",511=>"Double Yarn",512=>"Lot Mix",513=>"Count Mix",514=>"Date Mix",515=>"Machanical Work",516=>"Program Change",517=>"NEPS",518=>"Line Star",519=>"Lycra Cotton");

		//return $defect_name_arr;
		$grade_arr = array();
		$knit_defect_arr = array();
		$defect_arr = array();
		$observation_arr = array();

		if (!$compId) {$compId = 1;}

		$grade_sql = "SELECT FABRIC_GRADE, GET_UPVALUE_FIRST,GET_UPVALUE_SECOND from variable_settings_production where COMPANY_NAME='$compId' AND VARIABLE_LIST = 36 and status_active=1 and is_deleted=0  order by GET_UPVALUE_FIRST";
		foreach (sql_select($grade_sql) as $v) {
			for ($kk = $v->GET_UPVALUE_FIRST; $kk <= $v->GET_UPVALUE_SECOND; $kk++) {
				$obj = new Grade($kk, $v->FABRIC_GRADE);
				$grade_arr[] = $obj;
			}

		}
		if ($arrs) {
			foreach ($knit_defect_array as $k => $v) {
				$def_id = $k;
				if (isset($arrs[$def_id]["DEFECT_COUNT"])) {
					$count = $arrs[$def_id]["DEFECT_COUNT"];
				} else {
					$count = 0;
				}

				if (isset($arrs[$def_id]["FOUND_IN_INCH"])) {
					$inchs = $arrs[$def_id]["FOUND_IN_INCH"];
				} else {
					$inchs = 0;
				}

				if (isset($arrs[$def_id]["PENALTY_POINT"])) {
					$ttl_point = $arrs[$def_id]["PENALTY_POINT"];
				} else {
					$ttl_point = 0;
				}

				$def_obj = new Defect($def_id, $v, $count, $inchs, $ttl_point);
				$defect_arr[] = $def_obj;
			}

		}
		else {
			if ($qc_mst_tble_id) {
				$dtls_sql = "SELECT  DEFECT_NAME, DEFECT_COUNT, FOUND_IN_INCH, PENALTY_POINT FROM pro_qc_result_dtls Where MST_ID  in($qc_mst_tble_id)";
				foreach (sql_select($dtls_sql) as $val) {
					$defect_wise_others[$val->DEFECT_NAME]["DEFECT_COUNT"] = $val->DEFECT_COUNT;
					$defect_wise_others[$val->DEFECT_NAME]["FOUND_IN_INCH"] = $val->FOUND_IN_INCH;
					$defect_wise_others[$val->DEFECT_NAME]["PENALTY_POINT"] = $val->PENALTY_POINT;
				}

				foreach ($knit_defect_array as $k => $v) {
					$DEFECT_COUNT = 0;
					if (isset($defect_wise_others[$k]["DEFECT_COUNT"])) {
						$DEFECT_COUNT = $defect_wise_others[$k]["DEFECT_COUNT"];
					}

					$FOUND_IN_INCH = 0;
					if (isset($defect_wise_others[$k]["FOUND_IN_INCH"])) {
						$FOUND_IN_INCH = $defect_wise_others[$k]["FOUND_IN_INCH"];
					}

					$PENALTY_POINT = 0;
					if (isset($defect_wise_others[$k]["PENALTY_POINT"])) {
						$PENALTY_POINT = $defect_wise_others[$k]["PENALTY_POINT"];
					}

					$def_obj = new Defect($k, $v, $DEFECT_COUNT, $FOUND_IN_INCH, $PENALTY_POINT);
					$defect_arr[] = $def_obj;
				}

			} else {
				foreach ($knit_defect_array as $k => $v) {
					$def_obj = new Defect($k, $v, 0, 0, 0);
					$defect_arr[] = $def_obj;
				}

			}

		}


		if ($qc_mst_tble_id) {
			$dtls_sql2 = "SELECT ID, DEFECT_NAME, FOUND_IN_INCH,DEPARTMENT FROM PRO_QC_RESULT_DTLS WHERE MST_ID in($qc_mst_tble_id) AND STATUS_ACTIVE=1 AND IS_DELETED=0 AND  FORM_TYPE =2";
			$observation_data_arr = array();
			foreach (sql_select($dtls_sql2) as $val) {
				$observation_data_arr[$val->DEFECT_NAME]["FOUND_IN_INCH"] = $val->FOUND_IN_INCH;
				$observation_data_arr[$val->DEFECT_NAME]["DEPARTMENT"] = $val->DEPARTMENT;
			}

			foreach ($knit_ovservation_defect_array as $k => $v) {
				$FOUND_IN_INCH = 0;
				if (isset($observation_data_arr[$k]["FOUND_IN_INCH"])) {
					$FOUND_IN_INCH = $observation_data_arr[$k]["FOUND_IN_INCH"];
				}

				$DEPARTMENT = 1;//default 1 for kniting
				if (isset($observation_data_arr[$k]["DEPARTMENT"])) {
					$DEPARTMENT = $observation_data_arr[$k]["DEPARTMENT"];
				}

				$observation_obj = new Observation($k, $v, $FOUND_IN_INCH, $DEPARTMENT);
				$observation_arr[] = $observation_obj;
			}
		}
		else {
			foreach ($knit_ovservation_defect_array as $k => $v) {
				$observation_obj = new Observation($k, $v, 0, 1);
				$observation_arr[] = $observation_obj;
			}

		}

		foreach ($knit_defect_inchi_array as $k => $v) {
			$inch_obj = new INCH($k, $v);
			$knit_defect_arr[] = $inch_obj;
		}

		$data_array = array("defect" => $defect_arr, "grade" => $grade_arr, 'observation' => $observation_arr);

		return $data_array;

	}

	public function finish_ref_data_array($compId = "0", $arrs, $type, $qc_mst_tble_id) {

		$db_type = return_db_type();
		$fabric_shade = array(1 => "A", 2 => "B", 3 => "C", 4 => "D", 5 => "E");
		$knit_defect_inchi_array = array(1 => 'Defect=<3" : 1', 2 => 'Defect=<6" but >3" : 2', 3 => 'Defect=<9" but >6" : 3', 4 => 'Defect>9" : 4', 5 => 'Hole<1" : 2', 6 => 'Hole>1" : 4');

			$ovservation_knit_defect_array = array(1 => "Fly Conta", 2 => "PP conta", 3 => "Patta/Barrie", 4 => "Needle Mark", 5 => "Sinker Mark", 6 => "thick-thin", 7 => "neps/knot", 8 => "white speck", 9 => "Black Speck", 10 => "Star Mark", 11 => "Dia/Edge Mark", 12 => "Dead fibre", 13 => "Running shade", 14 => "Hairiness", 15 => "crease mark", 16 => "Uneven", 17 => "Padder Crease", 18 => "Absorbency", 19 => "Bowing", 20 => "Handfeel", 21 => "Dia Up-down", 22 => "Cut hole", 23 => "Snagging/Pull out", 24 => "Pin Hole", 25 => "Bad Smell", 26 => "Bend Mark");


			$knit_defect_array = array(1 => "Hole", 5 => "Color Spot", 10 => "Insect Spot", 15 => "Yellow Spot", 20 => "Poly Conta", 25 => "Dust", 30 => "Oil Spot", 35 => "Fly Conta", 40 => "Slub", 45 => "Patta/Barrie Mark", 50 => "Cut/Joint", 55 => "Sinker Mark", 60 => "Print Mis", 65 => "Yarn Conta", 70 => "Slub Hole", 75 => "Softener Spot", 95 => "Dirty Stain", 100 => "NEPS", 105 => "Needle Drop", 110 => "Chem: Stain", 115 => "Cotton seeds", 120 => "Loop hole", 125 => "Dead Cotton", 130 => "Thick & Thin", 135 => "Rust Spot", 140 => "Needle Broken Mark", 145 => "Dirty Spot", 150 => "Side To Center Shade", 155 => "Bowing", 160 => "Uneven", 165 => "Yellow Writing", 170 => "Fabric Missing", 175 => "Dia Mark", 180 => "Miss Print", 185 => "Hairy", 190 => "G.S.M Hole", 195 => "Compacting Mark", 200 => "Rib Body Shade", 205 => "Running Shade", 210 => "Plastic Conta", 215 => "Crease mark", 220 => "Patches", 225 => "M/c Stoppage", 230 => "Needle Line", 235 => "Crample mark", 240 => "White Specks", 245 => "Mellange Effect", 250 => "Line Mark", 255 => "Loop Out", 260 => "Needle Broken");


		//return $defect_name_arr;
		$grade_arr = array();
		$knit_defect_arr = array();
		$defect_arr = array();
		$observation_arr = array();

		if (!$compId) {$compId = 1;}

		$grade_sql = "SELECT FABRIC_GRADE, GET_UPVALUE_FIRST,GET_UPVALUE_SECOND from variable_settings_production where COMPANY_NAME='$compId' AND VARIABLE_LIST = 36 and status_active=1 and is_deleted=0  order by GET_UPVALUE_FIRST";
		foreach (sql_select($grade_sql) as $v) {
			for ($kk = $v->GET_UPVALUE_FIRST; $kk <= $v->GET_UPVALUE_SECOND; $kk++) {
				$obj = new Grade($kk, $v->FABRIC_GRADE);
				$grade_arr[] = $obj;
			}

		}
		if ($arrs) {
			foreach ($knit_defect_array as $k => $v) {
				$def_id = $k;
				if (isset($arrs[$def_id]["DEFECT_COUNT"])) {
					$count = $arrs[$def_id]["DEFECT_COUNT"];
				} else {
					$count = 0;
				}

				if (isset($arrs[$def_id]["FOUND_IN_INCH"])) {
					$inchs = $arrs[$def_id]["FOUND_IN_INCH"];
				} else {
					$inchs = 0;
				}

				if (isset($arrs[$def_id]["PENALTY_POINT"])) {
					$ttl_point = $arrs[$def_id]["PENALTY_POINT"];
				} else {
					$ttl_point = 0;
				}

				$def_obj = new Defect($def_id, $v, $count, $inchs, $ttl_point);
				$defect_arr[] = $def_obj;
			}

		}
		else {
			if ($qc_mst_tble_id) {
				$dtls_sql = "SELECT  DEFECT_NAME, DEFECT_COUNT, FOUND_IN_INCH, PENALTY_POINT FROM pro_qc_result_dtls Where MST_ID  in($qc_mst_tble_id)";
				foreach (sql_select($dtls_sql) as $val) {
					$defect_wise_others[$val->DEFECT_NAME]["DEFECT_COUNT"] = $val->DEFECT_COUNT;
					$defect_wise_others[$val->DEFECT_NAME]["FOUND_IN_INCH"] = $val->FOUND_IN_INCH;
					$defect_wise_others[$val->DEFECT_NAME]["PENALTY_POINT"] = $val->PENALTY_POINT;
				}

				foreach ($knit_defect_array as $k => $v) {
					$DEFECT_COUNT = 0;
					if (isset($defect_wise_others[$k]["DEFECT_COUNT"])) {
						$DEFECT_COUNT = $defect_wise_others[$k]["DEFECT_COUNT"];
					}

					$FOUND_IN_INCH = 0;
					if (isset($defect_wise_others[$k]["FOUND_IN_INCH"])) {
						$FOUND_IN_INCH = $defect_wise_others[$k]["FOUND_IN_INCH"];
					}

					$PENALTY_POINT = 0;
					if (isset($defect_wise_others[$k]["PENALTY_POINT"])) {
						$PENALTY_POINT = $defect_wise_others[$k]["PENALTY_POINT"];
					}

					$def_obj = new Defect($k, $v, $DEFECT_COUNT, $FOUND_IN_INCH, $PENALTY_POINT);
					$defect_arr[] = $def_obj;
				}

			} else {
				foreach ($knit_defect_array as $k => $v) {
					$def_obj = new Defect($k, $v, 0, 0, 0);
					$defect_arr[] = $def_obj;
				}

			}

		}


		if ($qc_mst_tble_id) {
			$dtls_sql2 = "SELECT ID, DEFECT_NAME, FOUND_IN_INCH,DEPARTMENT FROM PRO_QC_RESULT_DTLS WHERE MST_ID in($qc_mst_tble_id) AND STATUS_ACTIVE=1 AND IS_DELETED=0 AND  FORM_TYPE =2";

			$observation_data_arr = array();
			foreach (sql_select($dtls_sql2) as $val) {
				$observation_data_arr[$val->DEFECT_NAME]["FOUND_IN_INCH"] = $val->FOUND_IN_INCH;
				$observation_data_arr[$val->DEFECT_NAME]["DEPARTMENT"] = $val->DEPARTMENT;
			}

			foreach ($ovservation_knit_defect_array as $k => $v) {
				$FOUND_IN_INCH = 0;
				if (isset($observation_data_arr[$k]["FOUND_IN_INCH"])) {
					$FOUND_IN_INCH = $observation_data_arr[$k]["FOUND_IN_INCH"];
				}

				$DEPARTMENT = 0;
				if (isset($observation_data_arr[$k]["DEPARTMENT"])) {
					$DEPARTMENT = $observation_data_arr[$k]["DEPARTMENT"];
				}

				$observation_obj = new Observation($k, $v, $FOUND_IN_INCH, $DEPARTMENT);
				$observation_arr[] = $observation_obj;
			}
		}
		else {
			foreach ($ovservation_knit_defect_array as $k => $v) {
				$observation_obj = new Observation($k, $v, 0, 0);
				$observation_arr[] = $observation_obj;
			}

		}

		foreach ($knit_defect_inchi_array as $k => $v) {
			$inch_obj = new INCH($k, $v);
			$knit_defect_arr[] = $inch_obj;
		}

		$data_array = array("defect" => $defect_arr, "grade" => $grade_arr, 'observation' => $observation_arr);

		return $data_array;

	}

	public function machine_data() {
		$db_type = return_db_type();
		$machine_array = array();
		if ($db_type == 0) {
			$machine_array = return_library_array("SELECT id, concat(machine_no,'-',brand) as machine_name from lib_machine_name where category_id=4 and status_active=1 and is_deleted=0 and is_locked=0", "id", "machine_name");
		} else {
			$machine_array = return_library_array("SELECT id, (machine_no || '-' || brand) as machine_name from lib_machine_name where category_id=4 and status_active=1 and is_deleted=0 and is_locked=0", "id", "machine_name");
		}
		$machine_arr = array();
		$kk = 0;
		foreach ($machine_array as $kk => $vv) {
			//$obj=new Source($kk, $vv );
			$machine_arr[$kk]["id"] = $kk;
			$machine_arr[$kk]["name"] = $vv;
			$kk++;
		}
		return $machine_arr;

	}
	public function user_wise_menu_data($user_id) {
		$default_arr = array();
		$default_arr[0]["menu_name"] = "";
		$default_arr[0]["location"] = "";
		$default_arr[0]["save"] = 0;
		$default_arr[0]["update"] = 0;
		$default_arr[0]["delete"] = 0;
		$default_arr[0]["show"] = 0;
		$default_arr[0]["approve"] = 0;

		$menu_sql = "SELECT a.position, b.SHOW_PRIV, a.MENU_NAME,a.F_LOCATION, b.DELETE_PRIV, b.SAVE_PRIV,b.EDIT_PRIV, b.APPROVE_PRIV from main_menu a ,user_priv_mst b where a.M_MENU_ID=b.MAIN_MENU_ID and a.status=1 and a.is_mobile_menu=1 and b.user_id='$user_id' group by a.position,b.SHOW_PRIV, a.MENU_NAME,a.F_LOCATION, b.DELETE_PRIV, b.SAVE_PRIV,b.EDIT_PRIV, b.APPROVE_PRIV,a.slno order by a.slno asc ";
		$data_array = array();
		$arr_data = sql_select($menu_sql);
		if (count($arr_data) <= 0) {
			return $default_arr;
		}

		$i = 0;
		foreach ($arr_data as $v) {
			if (isset($v->MENU_NAME)) {
				$data_array[$i]["menu_name"] = $v->MENU_NAME;
			} else {
				$data_array[$i]["menu_name"] = "";
			}


			if (isset($v->F_LOCATION)) {
				$data_array[$i]["location"] = $v->F_LOCATION;
			} else {
				$data_array[$i]["location"] = "";
			}

			if (isset($v->SAVE_PRIV)) {
				$data_array[$i]["save"] = $v->SAVE_PRIV;
			} else {
				$data_array[$i]["save"] = 0;
			}

			if (isset($v->EDIT_PRIV)) {
				$data_array[$i]["update"] = $v->EDIT_PRIV;
			} else {
				$data_array[$i]["update"] = 0;
			}

			if (isset($v->DELETE_PRIV)) {
				$data_array[$i]["delete"] = $v->DELETE_PRIV;
			} else {
				$data_array[$i]["delete"] = 0;
			}

			if (isset($v->SHOW_PRIV)) {
				$data_array[$i]["show"] = $v->SHOW_PRIV;
			} else {
				$data_array[$i]["show"] = 0;
			}

			if (isset($v->APPROVE_PRIV)) {
				$data_array[$i]["approve"] = $v->APPROVE_PRIV;
			} else {
				$data_array[$i]["approve"] = 0;
			}

			$i++;
		}
		return $data_array;

	}

	public function finish_barcode_data_bk($barcode_no) {
		$return_array = array();
		$scanned_barcode_array = array();
		$barcode_dtlsId_array = array();
		$barcode_rollTableId_array = array();
		$dtls_data_arr = array();
		//$db_type=return_db_type();
		$is_exists = sql_select("SELECT   barcode_no from PRO_FINISH_FABRIC_RCV_DTLS where status_active=1    and barcode_no = $barcode_no  and is_deleted=0");

		

		
		if (count($is_exists) > 0) {
			$sqls = "SELECT  b.ROLL_WIDTH, b.ROLL_WEIGHT, b.ROLL_LENGTH,b.TOTAL_PENALTY_POINT, b.TOTAL_POINT, b.FABRIC_GRADE, b.COMMENTS, b.ROLL_STATUS,b.QC_DATE, a.PROD_ID ,b.id as QC_MST_ID ,a.TRANS_ID ,d.id as MST_ID,a.id as DTLS_ID, a.ORDER_ID as PO_BREAKDOWN_ID ,d.LOCATION_ID as LOCATION,d.KNITTING_LOCATION_ID as SERVICE_LOCATION,d.KNITTING_COMPANY as SERVING_COMPANY, d.SOURCE,d.COMPANY_ID, a.PROD_ID,a.GSM, a.WIDTH,  a.FABRIC_DESCRIPTION_ID,a.BODY_PART_ID,a.RECEIVE_QNTY,a.BATCH_ID,a.BARCODE_NO,b.ROLL_ID, b.ROLL_NO from INV_RECEIVE_MASTER d, PRO_FINISH_FABRIC_RCV_DTLS a,PRO_QC_RESULT_MST b ,pro_qc_result_dtls c where d.id=a.mst_id   and d.status_active=1 and a.id=b.pro_dtls_id and b.id=c.mst_id and b.status_active=1 and b.entry_form=267 and c.status_active=1 and  a.status_active=1 and a.barcode_no = $barcode_no  and a.is_deleted=0";
			$qc_mst_tble_id = 0;
			$sqlsRestult=sql_select($sqls);
			
			//echo $sqls;die;
			
			foreach ($sqlsRestult as $row) {

				$qc_mst_tble_id = $row->QC_MST_ID;
				$return_array["index"]['mode'] = "update";
				if (isset($row->TOTAL_PENALTY_POINT)) {
					$return_array["index"]['total_penalty_point'] = $row->TOTAL_PENALTY_POINT;
				}

				$return_array["index"]['total_penalty_point'] = 0;
				if (isset($row->TOTAL_POINT)) {
					$return_array["index"]['total_point'] = $row->TOTAL_POINT;
				} else {
					$return_array["index"]['total_point'] = 0;
				}

				if (isset($row->FABRIC_GRADE)) {
					$return_array["index"]['fabric_grade'] = $row->FABRIC_GRADE;
				} else {
					$return_array["index"]['fabric_grade'] = "";
				}

				if (isset($row->COMMENTS)) {
					$return_array["index"]['comments'] = $row->COMMENTS;
				} else {
					$return_array["index"]['comments'] = "";
				}

				if (isset($row->ROLL_STATUS)) {
					$return_array["index"]['roll_status'] = $row->ROLL_STATUS;
				} else {
					$return_array["index"]['roll_status'] = 0;
				}

				if (isset($row->QC_DATE)) {
					$return_array["index"]['qc_date'] = $row->QC_DATE;
				} else {
					$return_array["index"]['qc_date'] = "";
				}

				$return_array["index"]['mst_id'] = $row->MST_ID;
				$return_array["index"]['roll_weight'] = $row->ROLL_WEIGHT;
				$return_array["index"]['roll_length'] = $row->ROLL_LENGTH;
				$return_array["index"]['roll_width'] = $row->ROLL_WIDTH;
				$return_array["index"]['prod_id'] = $row->PROD_ID;
				$return_array["index"]['trans_id'] = $row->TRANS_ID;
				$return_array["index"]['dtls_id'] = $row->DTLS_ID;
				$return_array["index"]['qc_mst_id'] = $row->QC_MST_ID;
				$return_array["index"]['barcode_no'] = $row->BARCODE_NO;
				$return_array["index"]['roll_id'] = $row->ROLL_ID;
				$return_array["index"]['roll_no'] = $row->ROLL_NO;
				$return_array["index"]['batch_no'] = "";
				$return_array["index"]['color'] = "";
				$return_array["index"]['batch_id'] = $row->BATCH_ID;
				$return_array["index"]['width_dia_id'] = 0;
				$return_array["index"]['width_dia_val'] = "";
				$return_array["index"]['qc_pass_qty'] = $row->RECEIVE_QNTY;
				$return_array["index"]['prod_qnty'] = $row->RECEIVE_QNTY;
				$return_array["index"]['body_part'] = "";
				$return_array["index"]['body_part_id'] = $row->BODY_PART_ID;
				$return_array["index"]['prod_id'] = $row->PROD_ID;
				$return_array["index"]['deter_d'] = $row->FABRIC_DESCRIPTION_ID;
				$return_array["index"]['gsm'] = $row->GSM;
				$return_array["index"]['width'] = $row->WIDTH;
				$return_array["index"]['is_sales'] = 0;
				$return_array["index"]['construction'] = "";
				$return_array["index"]['company_id'] = $row->COMPANY_ID;
				$return_array["index"]['source'] = $row->SOURCE;
				$return_array["index"]['serving_company'] = $row->SERVING_COMPANY;
				$return_array["index"]['service_location'] = $row->SERVICE_LOCATION;
				$return_array["index"]['location'] = $row->LOCATION;
				$return_array["index"]['po_breakdown_id'] = $row->PO_BREAKDOWN_ID;
				$return_array["index"]['po_number'] = "";
				$return_array["index"]['job_number'] = "";
				$return_array["index"]['style_ref_no'] = "";
				$return_array["index"]['qnty'] = $row->RECEIVE_QNTY;
				$return_array["index"]['booking_without_order'] = 0;
				$return_array["index"]['booking_no'] = "";

			}
			
			if (count($sqlsRestult) > 0) {
				$return_array["index"]["array_ref_data"] = $this->array_ref_data(0, "", 2, $qc_mst_tble_id);
			}
			

			return $return_array;
		}

		$all_extra_cond = "";

		$composition = return_library_array("SELECT id,composition_name from  lib_composition_array where status_active=1 and is_deleted=0 order by composition_name", "id", "composition_name");
		$composition[0] = 0;
		$composition_arr = array();
		$constructtion_arr = array();
		$sql_deter = "SELECT a.ID, a.CONSTRUCTION, b.COPMPOSITION_ID, b.PERCENT from lib_yarn_count_determina_mst a, lib_yarn_count_determina_dtls b where a.id=b.mst_id";
		$data_array = sql_select($sql_deter);
		foreach ($data_array as $row) {
			$constructtion_arr[$row->ID] = $row->CONSTRUCTION;
			if (isset($composition_arr[$row->ID])) {
				$composition_arr[$row->ID] .= $composition[$row->COPMPOSITION_ID] . " " . $row->PERCENT . "% ";
			} else {
				if (isset($composition[$row->COPMPOSITION_ID])) {
					$composition_arr[$row->ID] = $composition[$row->COPMPOSITION_ID] . " " . $row->PERCENT . "% ";
				} else {
					$composition_arr[$row->ID] = "";
				}

			}
		}



		$fabric_typee = array(1 => "Open Width", 2 => "Tubular", 3 => "Needle Open");
		$body_part = return_library_array("SELECT id,body_part_full_name from  lib_body_part where status_active=1 and is_deleted=0 order by body_part_full_name", "id", "body_part_full_name");

		$color_arr = return_library_array("select id, color_name from lib_color where status_active=1 and is_deleted=0", "id", "color_name");

		$roll_split_id = sql_select("SELECT roll_id, barcode_no from PRO_ROLL_DETAILS where ROLL_SPLIT_FROM > 0 AND ENTRY_FORM = 62 and barcode_no=$barcode_no and status_active=1 and is_deleted=0");
		$roll_splt_before_batch_id = "";
		$split_roll_bar_bf_batch_arr = array();
		foreach ($roll_split_id as $row) {
			if (isset($roll_splt_before_batch_id)) {
				$roll_splt_before_batch_id .= $row->ROLL_ID . ",";
			} else {
				$roll_splt_before_batch_id = $row->ROLL_ID;
			}

			$split_roll_bar_bf_batch_arr[$row->ROLL_ID] = $row->BARCODE_NO;
		}

		$roll_splt_before_batch_id = chop($roll_splt_before_batch_id, ",");


		/*$sql_check_barcode_with_booking = sql_select("SELECT  c.BARCODE_NO FROM INV_RECEIVE_MASTER a, pro_grey_prod_entry_dtls b, PRO_ROLL_DETAILS c WHERE a.id=b.mst_id and b.id=c.dtls_id and a.receive_basis<>9  and c.entry_form in(64) and c.status_active=1 and c.is_deleted=0 $all_extra_cond and c.barcode_no=$barcode_no");
		$barcode_batch = "";
		foreach ($sql_check_barcode_with_booking as $row) {
			$barcode_batch = $row->BARCODE_NO;
		}

		$sql_check_barcode_in_transfter = sql_select("SELECT  c.barcode_no FROM INV_RECEIVE_MASTER a, pro_grey_prod_entry_dtls b, PRO_ROLL_DETAILS c WHERE a.id=b.mst_id and b.id=c.dtls_id and a.receive_basis<>9  and c.entry_form in(180) and c.status_active=1 and c.is_deleted=0 $all_extra_cond and c.barcode_no =$barcode_no");

		foreach ($sql_check_barcode_in_transfter as $row) {
			$barcode_transfer = $row->BARCODE_NO;
		}*/


		$sql_check_barcode_in_transfter = sql_select("SELECT  c.entry_form,c.barcode_no FROM INV_RECEIVE_MASTER a, pro_grey_prod_entry_dtls b, PRO_ROLL_DETAILS c WHERE a.id=b.mst_id and b.id=c.dtls_id and a.receive_basis<>9  and c.entry_form in(64,180) and c.status_active=1 and c.is_deleted=0 $all_extra_cond and c.barcode_no =$barcode_no");

		$barcode_batch_transfer=array();
		foreach ($sql_check_barcode_in_transfter as $row) {
			$barcode_batch_transfer[$row->BARCODE_NO] = $row->BARCODE_NO;
		}
		$barcode_transfer = $barcode_batch_transfer[180];
		$barcode_batch = $barcode_batch_transfer[64];


		if ($barcode_batch != "") // check latest batch creation for booking
		{
			if ($roll_splt_before_batch_id != "") {

				if ($barcode_transfer != "") // check booking  transfer for booking
				{
					$sql = "SELECT a.COMPANY_ID,a.KNITTING_SOURCE as SOURCE, a.KNITTING_COMPANY as SERVICE_COMPANY,  a.LOCATION_ID as LOCATION,  a.KNITTING_LOCATION_ID as SERVICE_LOCATION, b.PROD_ID, b.BODY_PART_ID, b.FEBRIC_DESCRIPTION_ID, b.GSM, b.WIDTH, c.BARCODE_NO, c.id as ROLL_ID, c.ROLL_NO, c.PO_BREAKDOWN_ID,c.QNTY,c.IS_SALES, c.roll_id as ROLL_ORIGIN_ID,c.BOOKING_WITHOUT_ORDER,c.BOOKING_NO, 1 as TYPE FROM INV_RECEIVE_MASTER a, pro_grey_prod_entry_dtls b, PRO_ROLL_DETAILS c where a.id=b.mst_id and b.id=c.is_sales and b.id=c.dtls_id and a.receive_basis<>9 and a.entry_form in(2,22,58) and c.entry_form in(2,22,58) and b.trans_id>0 and c.status_active=1 and c.is_deleted=0 $all_extra_cond and c.barcode_no = $barcode_no
                union all
                SELECT a.COMPANY_ID,a.KNITTING_SOURCE as SOURCE, a.KNITTING_COMPANY as SERVICE_COMPANY,  a.LOCATION_ID as LOCATION,  a.KNITTING_LOCATION_ID as SERVICE_LOCATION,  b.PROD_ID, b.BODY_PART_ID, b.FEBRIC_DESCRIPTION_ID, b.GSM, b.WIDTH, c.BARCODE_NO, c.id as ROLL_ID, c.ROLL_NO, c.PO_BREAKDOWN_ID,c.QNTY,c.IS_SALES, c.id as ROLL_ORIGIN_ID,c.BOOKING_WITHOUT_ORDER,c.BOOKING_NO, 2 as TYPE from INV_RECEIVE_MASTER a, pro_grey_prod_entry_dtls b, PRO_ROLL_DETAILS c where a.id=b.mst_id and b.id=c.dtls_id and a.receive_basis<>9 and a.entry_form in(2,22,58) and c.entry_form in(2,22,58) $all_extra_cond and c.status_active=1 and c.is_deleted=0 and c.roll_id=0 and c.id in($roll_splt_before_batch_id)";
				} else {
					$sql = "SELECT a.COMPANY_ID,a.KNITTING_SOURCE as SOURCE, a.KNITTING_COMPANY as SERVICE_COMPANY,  a.LOCATION_ID as LOCATION,  a.KNITTING_LOCATION_ID as SERVICE_LOCATION, b.PROD_ID, b.BODY_PART_ID, b.FEBRIC_DESCRIPTION_ID, b.GSM, b.WIDTH, c.BARCODE_NO, c.id as ROLL_ID, c.ROLL_NO, c.PO_BREAKDOWN_ID,c.QNTY,c.IS_SALES,c.ROLL_ID as roll_origin_id,c.booking_without_order,c.booking_no, 1 as type FROM INV_RECEIVE_MASTER a, pro_grey_prod_entry_dtls b, PRO_ROLL_DETAILS c where a.id=b.mst_id and b.id=c.dtls_id and a.receive_basis<>9 and c.entry_form in(64) and c.status_active=1 and c.is_deleted=0 $all_extra_cond and c.barcode_no =$barcode_no
                union all
                SELECT a.COMPANY_ID,a.KNITTING_SOURCE as SOURCE, a.KNITTING_COMPANY as SERVICE_COMPANY,  a.LOCATION_ID as LOCATION,  a.KNITTING_LOCATION_ID as SERVICE_LOCATION, b.PROD_ID, b.BODY_PART_ID, b.FEBRIC_DESCRIPTION_ID,b.GSM, b.WIDTH, c.BARCODE_NO, c.id as ROLL_ID, c.ROLL_NO, c.PO_BREAKDOWN_ID,c.QNTY,c.IS_SALES, c.id as ROLL_ORIGIN_ID,c.BOOKING_WITHOUT_ORDER,c.BOOKING_NO, 2 as TYPE
                from INV_RECEIVE_MASTER a, pro_grey_prod_entry_dtls b, PRO_ROLL_DETAILS c
                where a.id=b.mst_id and b.id=c.dtls_id and a.receive_basis<>9 and c.entry_form in(64) and c.status_active=1 and c.is_deleted=0 and c.roll_id=0 $all_extra_cond and c.id in($roll_splt_before_batch_id)";
				}

			} else {

				$sql = "SELECT a.COMPANY_ID,a.KNITTING_SOURCE as SOURCE, a.KNITTING_COMPANY as SERVICE_COMPANY,  a.LOCATION_ID as LOCATION,  a.KNITTING_LOCATION_ID as SERVICE_LOCATION,  b.PROD_ID, b.BODY_PART_ID, b.FEBRIC_DESCRIPTION_ID, b.GSM, b.WIDTH, c.BARCODE_NO, c.id as ROLL_ID, c.ROLL_NO, c.PO_BREAKDOWN_ID, c.QNTY,c.IS_SALES, c.roll_id as ROLL_ORIGIN_ID,c.BOOKING_WITHOUT_ORDER,c.BOOKING_NO, 1 as TYPE FROM INV_RECEIVE_MASTER a, pro_grey_prod_entry_dtls b, PRO_ROLL_DETAILS c WHERE a.id=b.mst_id and b.id=c.dtls_id and a.receive_basis<>9  and c.entry_form in(64)  and c.status_active=1 and c.is_deleted=0 $all_extra_cond and c.barcode_no =$barcode_no";
			}
		} else {
			if ($roll_splt_before_batch_id != "") {
				$sql = "SELECT a.COMPANY_ID,a.KNITTING_SOURCE as SOURCE, a.KNITTING_COMPANY as SERVICE_COMPANY,  a.LOCATION_ID as LOCATION,  a.KNITTING_LOCATION_ID as SERVICE_LOCATION, b.PROD_ID, b.BODY_PART_ID, b.FEBRIC_DESCRIPTION_ID, b.GSM, b.WIDTH, c.BARCODE_NO, c.id as ROLL_ID, c.ROLL_NO, c.PO_BREAKDOWN_ID,c.QNTY,c.IS_SALES, c.roll_id as ROLL_ORIGIN_ID,c.BOOKING_WITHOUT_ORDER,c.BOOKING_NO, 1 as TYPE FROM INV_RECEIVE_MASTER a, pro_grey_prod_entry_dtls b, PRO_ROLL_DETAILS c where a.id=b.mst_id and b.id=c.is_sales and b.id=c.dtls_id and a.receive_basis<>9 and a.entry_form in(2,22,58) and c.entry_form in(2,22,58) and b.trans_id>0 and c.status_active=1 and c.is_deleted=0 $all_extra_cond and c.barcode_no = $barcode_no
            union all
            SELECT a.COMPANY_ID,a.KNITTING_SOURCE as SOURCE, a.KNITTING_COMPANY as SERVICE_COMPANY,  a.LOCATION_ID as LOCATION,  a.KNITTING_LOCATION_ID as SERVICE_LOCATION, b.PROD_ID, b.BODY_PART_ID, b.FEBRIC_DESCRIPTION_ID, b.GSM, b.WIDTH, c.BARCODE_NO, c.id as ROLL_ID, c.ROLL_NO, c.PO_BREAKDOWN_ID,c.QNTY,c.IS_SALES, c.id as ROLL_ORIGIN_ID,c.BOOKING_WITHOUT_ORDER,c.BOOKING_NO, 2 as TYPE from INV_RECEIVE_MASTER a, pro_grey_prod_entry_dtls b, PRO_ROLL_DETAILS c where a.id=b.mst_id and b.id=c.dtls_id and a.receive_basis<>9 and a.entry_form in(2,22,58) and c.entry_form in(2,22,58) and c.status_active=1 and c.is_deleted=0 and c.roll_id=0 $all_extra_cond and c.id in($roll_splt_before_batch_id)";
			} else {
				$sql = "SELECT a.COMPANY_ID,a.KNITTING_SOURCE as SOURCE, a.KNITTING_COMPANY as SERVICE_COMPANY,  a.LOCATION_ID as LOCATION,  a.KNITTING_LOCATION_ID as SERVICE_LOCATION, b.PROD_ID, b.BODY_PART_ID, b.FEBRIC_DESCRIPTION_ID, b.GSM, b.WIDTH, c.BARCODE_NO, c.id as ROLL_ID, c.ROLL_NO, c.PO_BREAKDOWN_ID, c.QNTY,c.IS_SALES, c.roll_id as ROLL_ORIGIN_ID,c.BOOKING_WITHOUT_ORDER,c.BOOKING_NO, 1 as TYPE FROM INV_RECEIVE_MASTER a, pro_grey_prod_entry_dtls b, PRO_ROLL_DETAILS c WHERE a.id=b.mst_id and b.id=c.dtls_id and a.receive_basis<>9 and a.entry_form in(2,22,58) and c.entry_form in(2,22,58) and b.trans_id>0 $all_extra_cond and c.status_active=1 and c.is_deleted=0 and c.barcode_no = $barcode_no";
			}
		}

		//return $sql;
		$data_array = sql_select($sql);
		$poIDs = "";
		$salesIDs = "";
		foreach ($data_array as $row) {
			if ($row->IS_SALES == 1) {
				if (isset($salesIDs)) {
					$salesIDs .= $row->PO_BREAKDOWN_ID . ',';
				} else {
					$salesIDs = $row->PO_BREAKDOWN_ID;
				}

			} else {
				if (isset($row->PO_BREAKDOWN_ID)) {
					$poIDs .= $row->PO_BREAKDOWN_ID . ',';
				} else {
					$poIDs = $row->PO_BREAKDOWN_ID;
				}

			}
		}

		$poIDs_all = rtrim($poIDs, ",");
		$poIDs_alls = explode(",", $poIDs_all);
		$poIDs_alls = array_chunk($poIDs_alls, 999); // chunk for PO ID
		$po_id_cond = " and";
		foreach ($poIDs_alls as $dtls_id) {
			$ids = implode(',', $dtls_id);
			if (!$ids) {
				$ids = 0;
			}

			if ($po_id_cond == " and") {
				$po_id_cond .= "(a.id in(" . $ids . ")";
			} else {
				$po_id_cond .= " or a.id in(" . $ids . ")";
			}

		}
		$po_id_cond .= ")";

		$po_arr = array();
		$po_sql = sql_select("SELECT a.ID,a.PO_NUMBER,b.STYLE_REF_NO,a.JOB_NO_MST from wo_po_break_down a, wo_po_details_master b where a.job_id=b.id and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0  $po_id_cond");

		foreach ($po_sql as $po_row) {
			$po_arr[$po_row->ID]['po_number'] = $po_row->PO_NUMBER;
			$po_arr[$po_row->ID]['job_number'] = $po_row->JOB_NO_MST;
			$po_arr[$po_row->ID]['style_ref_no'] = $po_row->STYLE_REF_NO;
		}

		$sales_arr = array();
		$sql_sales = sql_select("SELECT ID,JOB_NO,STYLE_REF_NO from fabric_sales_order_mst where status_active=1 and is_deleted=0");

		foreach ($sql_sales as $sales_row) {
			$sales_arr[$sales_row->ID]["po_number"] = $sales_row->JOB_NO;
			$sales_arr[$sales_row->ID]["style_ref_no"] = $sales_row->STYLE_REF_NO;
		}

		$transPoIds = sql_select("SELECT a.BARCODE_NO, a.PO_BREAKDOWN_ID from PRO_ROLL_DETAILS a where a.entry_form=83 and a.status_active=1 and a.is_deleted=0 and a.barcode_no = $barcode_no and a.re_transfer=0");
		$po_ids_arr = array();
		$transPoIdsArr = array();
		foreach ($transPoIds as $rowP) {
			$po_ids_arr[$rowP->PO_BREAKDOWN_ID] = $rowP->PO_BREAKDOWN_ID;
			$transPoIdsArr[$rowP->BARCODE_NO]['po_breakdown_id'] = $rowP->PO_BREAKDOWN_ID;
			if (isset($po_arr[$rowP->PO_BREAKDOWN_ID]['po_number'])) {
				$transPoIdsArr[$rowP->BARCODE_NO]['po_number'] = $po_arr[$rowP->PO_BREAKDOWN_ID]['po_number'];
				$transPoIdsArr[$rowP->BARCODE_NO]['job_number'] = $po_arr[$rowP->PO_BREAKDOWN_ID]['job_number'];
				$transPoIdsArr[$rowP->BARCODE_NO]['style_ref_no'] = $po_arr[$rowP->PO_BREAKDOWN_ID]['style_ref_no'];

			} else {
				$transPoIdsArr[$rowP->BARCODE_NO]['po_number'] = "";
				$transPoIdsArr[$rowP->BARCODE_NO]['job_number'] = "";
				$transPoIdsArr[$rowP->BARCODE_NO]['style_ref_no'] = "";
			}
			if (isset($sales_arr[$rowP->PO_BREAKDOWN_ID]['po_number'])) {
				$transPoIdsArr[$rowP->BARCODE_NO]['po_number'] = $sales_arr[$rowP->PO_BREAKDOWN_ID]['po_number'];
				$transPoIdsArr[$rowP->BARCODE_NO]['style_ref_no'] = $sales_arr[$rowP->PO_BREAKDOWN_ID]['style_ref_no'];

			} else {
				$transPoIdsArr[$rowP->BARCODE_NO]['po_number'] = "";
				$transPoIdsArr[$rowP->BARCODE_NO]['style_ref_no'] = "";
			}

		}
		$batch_dtls_arr = array();
		$batch_barcode_arr = array();
		$sql = "SELECT a.ID, a.ENTRY_FORM, a.BATCH_NO, a.COLOR_ID, b.BARCODE_NO, b.WIDTH_DIA_TYPE, b.BATCH_QNTY FROM pro_batch_create_mst a, pro_batch_create_dtls b WHERE a.id=b.mst_id and a.entry_form in(0,66) and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0 and b.barcode_no>0 and b.barcode_no = $barcode_no";
		$result = sql_select($sql);
		foreach ($result as $row) {
			$batch_dtls_arr[$row->BARCODE_NO]['batch_id'] = $row->ID;
			$batch_dtls_arr[$row->BARCODE_NO]['batch_no'] = $row->BATCH_NO." ";
			$batch_dtls_arr[$row->BARCODE_NO]['color_id'] = $row->COLOR_ID." ";
			$batch_dtls_arr[$row->BARCODE_NO]['color'] = $color_arr[$row->COLOR_ID];
			$batch_dtls_arr[$row->BARCODE_NO]['entry_form'] = $row->ENTRY_FORM;
			$batch_dtls_arr[$row->BARCODE_NO]['width_dia_type'] = $row->WIDTH_DIA_TYPE;
			$batch_dtls_arr[$row->BARCODE_NO]['batch_qnty'] = $row->BATCH_QNTY;
			$batch_barcode_arr[$row->BARCODE_NO] = $row->BARCODE_NO;
		}

		$compacting_arr = array();
		$compacting_details_arr = array();
		$sql_compact = sql_select("SELECT a.BARCODE_NO,b.PRODUCTION_QTY from PRO_ROLL_DETAILS a,pro_fab_subprocess_dtls b where b.roll_id=a.id and b.is_deleted=0 and b.status_active=1 and a.is_deleted=0 and a.status_active=1 and b.entry_page=33 and a.barcode_no =$barcode_no");
		foreach ($sql_compact as $c_id) {
			$compacting_arr[] = $c_id->BARCODE_NO;
			$compacting_details_arr[$c_id->BARCODE_NO]['prod_qty'] = $c_id->PRODUCTION_QTY;
		}
		//return $compacting_details_arr;

		$k = 0;
		if (count($data_array) == 0) {
			return $return_array;
		}

		foreach ($data_array as $row) {

			if ($row->TYPE == 1) {
				$b_code = $row->BARCODE_NO;
			} else {
				$b_code = $split_roll_bar_bf_batch_arr[$row->ROLL_ORIGIN_ID];
			}
			$production_qty = 0;
			if (in_array($b_code, $compacting_arr)) {
				$production_qty = $compacting_details_arr[$b_code]['prod_qty'];
			} else {
				if (isset($batch_dtls_arr[$b_code]['batch_qnty'])) {
					$production_qty = $batch_dtls_arr[$b_code]['batch_qnty'];
				}

			}
			$return_array["index"]['roll_weight'] = 0;
			$return_array["index"]['roll_length'] = 0;
			$return_array["index"]['roll_width'] = 0;
			$return_array["index"]['mode'] = "save";
			$return_array["index"]['prod_id'] = 0;
			$return_array["index"]['mst_id'] = 0;
			$return_array["index"]['trans_id'] = 0;
			$return_array["index"]['dtls_id'] = 0;
			$return_array["index"]['qc_mst_id'] = 0;
			$return_array["index"]['total_penalty_point'] = 0;
			$return_array["index"]['total_point'] = 0;
			$return_array["index"]['fabric_grade'] = "";
			$return_array["index"]['comments'] = "";
			$return_array["index"]['roll_status'] = 0;
			$return_array["index"]['qc_date'] = "";
			$return_array["index"]['barcode_no'] = $b_code;
			$return_array["index"]['roll_id'] = $row->ROLL_ORIGIN_ID;
			$return_array["index"]['roll_no'] = $row->ROLL_NO;

			if (isset($batch_dtls_arr[$b_code]['batch_id'])) {
				$return_array["index"]['batch_no'] = $batch_dtls_arr[$b_code]['batch_no']." ";
				$return_array["index"]['color'] = $batch_dtls_arr[$b_code]['color']." ";
				$return_array["index"]['batch_id'] = $batch_dtls_arr[$b_code]['batch_id'];
				$return_array["index"]['width_dia_id'] = $batch_dtls_arr[$b_code]['width_dia_type'];
				$return_array["index"]['width_dia_val'] = $fabric_typee[$batch_dtls_arr[$b_code]['width_dia_type']];
				$return_array["index"]['qc_pass_qty'] = $batch_dtls_arr[$b_code]['batch_qnty'];

			} else {
				$return_array["index"]['batch_no'] = "";
				$return_array["index"]['color'] = "";
				$return_array["index"]['batch_id'] = 0;
				$return_array["index"]['width_dia_id'] = 0;
				$return_array["index"]['width_dia_val'] = "";
				$return_array["index"]['qc_pass_qty'] = 0;
			}

			$return_array["index"]['prod_qnty'] = $production_qty;
			if (isset($body_part[$row->BODY_PART_ID])) {
				$return_array["index"]['body_part'] = $body_part[$row->BODY_PART_ID];
			} else {
				$return_array["index"]['body_part'] = "";
			}

			$return_array["index"]['body_part_id'] = $row->BODY_PART_ID;
			$return_array["index"]['prod_id'] = $row->PROD_ID;
			$return_array["index"]['deter_d'] = $row->FEBRIC_DESCRIPTION_ID;
			$return_array["index"]['gsm'] = $row->GSM;
			$return_array["index"]['width'] = $row->WIDTH;
			$cons_comp = $constructtion_arr[$row->FEBRIC_DESCRIPTION_ID] . ", " . $composition_arr[$row->FEBRIC_DESCRIPTION_ID];
			$return_array["index"]['is_sales'] = $row->IS_SALES;
			$return_array["index"]['construction'] = $cons_comp;

			if (isset($row->COMPANY_ID)) {
				$return_array["index"]['company_id'] = $row->COMPANY_ID;
			} else {
				$return_array["index"]['company_id'] = 0;
			}

			if (isset($row->SOURCE)) {
				$return_array["index"]['source'] = $row->SOURCE;
			} else {
				$return_array["index"]['source'] = 0;
			}

			if (isset($row->SERVING_COMPANY)) {
				$return_array["index"]['serving_company'] = $row->SERVING_COMPANY;
			} else {
				$return_array["index"]['serving_company'] = 0;
			}

			if (isset($row->SERVICE_LOCATION)) {
				$return_array["index"]['service_location'] = $row->SERVICE_LOCATION;
			} else {
				$return_array["index"]['service_location'] = 0;
			}

			if (isset($row->LOCATION)) {
				$return_array["index"]['location'] = $row->LOCATION;
			} else {
				$return_array["index"]['location'] = 0;
			}

			if (!isset($transPoIdsArr[$b_code])) {
				$return_array["index"]['po_breakdown_id'] = $row->PO_BREAKDOWN_ID;
				$return_array["index"]['po_number'] = $po_arr[$row->PO_BREAKDOWN_ID]['po_number'];
				$return_array["index"]['job_number'] = $po_arr[$row->PO_BREAKDOWN_ID]['job_number'];
				$return_array["index"]['style_ref_no'] = $po_arr[$row->PO_BREAKDOWN_ID]['style_ref_no'];
			} else {
				$return_array["index"]['po_breakdown_id'] = $transPoIdsArr[$b_code]['po_breakdown_id'];
				if (isset($po_arr[$transPoIdsArr[$b_code]['po_breakdown_id']]['po_number'])) {
					$return_array["index"]['po_number'] = $po_arr[$transPoIdsArr[$b_code]['po_breakdown_id']]['po_number'];
					$return_array["index"]['job_number'] = $po_arr[$transPoIdsArr[$b_code]['po_breakdown_id']]['job_number'];

					$return_array["index"]['style_ref_no'] = $po_arr[$transPoIdsArr[$b_code]['po_breakdown_id']]['style_ref_no'];

				} else {
					$return_array["index"]['po_number'] = "";
					$return_array["index"]['job_number'] = "";
					$return_array["index"]['style_ref_no'] = "";
				}
				if (isset($sales_arr[$row->PO_BREAKDOWN_ID]['po_number'])) {
					$return_array["index"]['po_number'] = $sales_arr[$row->PO_BREAKDOWN_ID]['po_number'];
					$return_array["index"]['style_ref_no'] = $sales_arr[$row->PO_BREAKDOWN_ID]['style_ref_no'];
					$return_array["index"]['job_number'] = "";

				} else {
					$return_array["index"]['po_number'] = "";
					$return_array["index"]['style_ref_no'] = "";
					$return_array["index"]['job_number'] = "";
				}

			}

			$return_array["index"]['qnty'] = number_format($row->QNTY, 2, '.', '');
			$return_array["index"]['booking_without_order'] = $row->BOOKING_WITHOUT_ORDER;
			if (isset($row->BOOKING_NO)) {
				$return_array["index"]['booking_no'] = $row->BOOKING_NO;
			} else {
				$return_array["index"]['booking_no'] = "";
			}

			$barcode_array[$b_code] = $b_code;
			$k++;
		}
		$return_array["index"]["array_ref_data"] = $this->array_ref_data(0, "", 2, 0);
		//$return_array["index"]["machine_data"]=  $this->machine_data();
		return $return_array;

	}


	public function finish_barcode_data($barcode_no) {
		$return_array = array();
		$scanned_barcode_array = array();
		$barcode_dtlsId_array = array();
		$barcode_rollTableId_array = array();
		$dtls_data_arr = array();
		//$db_type=return_db_type();
		$is_exists = sql_select("SELECT   barcode_no from PRO_FINISH_FABRIC_RCV_DTLS where status_active=1    and barcode_no = $barcode_no  and is_deleted=0");

		if (count($is_exists) > 0) 
		{
			$sqls = "SELECT  b.ROLL_WIDTH, b.ROLL_WEIGHT, b.ROLL_LENGTH,b.TOTAL_PENALTY_POINT, b.TOTAL_POINT, b.FABRIC_GRADE, b.COMMENTS, b.ROLL_STATUS,b.QC_DATE, a.PROD_ID ,b.id as QC_MST_ID ,a.TRANS_ID ,d.id as MST_ID,a.id as DTLS_ID, a.ORDER_ID as PO_BREAKDOWN_ID ,d.LOCATION_ID as LOCATION,d.KNITTING_LOCATION_ID as SERVICE_LOCATION,d.KNITTING_COMPANY as SERVING_COMPANY, d.SOURCE,d.COMPANY_ID, a.PROD_ID,a.GSM, a.WIDTH,  a.FABRIC_DESCRIPTION_ID,a.BODY_PART_ID,a.RECEIVE_QNTY,a.BATCH_ID,a.BARCODE_NO,b.ROLL_ID, b.ROLL_NO from INV_RECEIVE_MASTER d, PRO_FINISH_FABRIC_RCV_DTLS a,PRO_QC_RESULT_MST b ,pro_qc_result_dtls c where d.id=a.mst_id   and d.status_active=1 and a.id=b.pro_dtls_id and b.id=c.mst_id and b.status_active=1 and b.entry_form=267 and c.status_active=1 and  a.status_active=1 and a.barcode_no = $barcode_no  and a.is_deleted=0";
			$qc_mst_tble_id = 0;
			$sqlsRestult=sql_select($sqls);
			
			//echo $sqls;die;
			
			foreach ($sqlsRestult as $row) 
			{
				$qc_mst_tble_id = $row->QC_MST_ID;
				$return_array["index"]['mode'] = "update";
				if (isset($row->TOTAL_PENALTY_POINT)) {
					$return_array["index"]['total_penalty_point'] = $row->TOTAL_PENALTY_POINT;
				}

				$return_array["index"]['total_penalty_point'] = 0;
				if (isset($row->TOTAL_POINT)) {
					$return_array["index"]['total_point'] = $row->TOTAL_POINT;
				} else {
					$return_array["index"]['total_point'] = 0;
				}

				if (isset($row->FABRIC_GRADE)) {
					$return_array["index"]['fabric_grade'] = $row->FABRIC_GRADE;
				} else {
					$return_array["index"]['fabric_grade'] = "";
				}

				if (isset($row->COMMENTS)) {
					$return_array["index"]['comments'] = $row->COMMENTS;
				} else {
					$return_array["index"]['comments'] = "";
				}

				if (isset($row->ROLL_STATUS)) {
					$return_array["index"]['roll_status'] = $row->ROLL_STATUS;
				} else {
					$return_array["index"]['roll_status'] = 0;
				}

				if (isset($row->QC_DATE)) {
					$return_array["index"]['qc_date'] = $row->QC_DATE;
				} else {
					$return_array["index"]['qc_date'] = "";
				}

				$return_array["index"]['mst_id'] = $row->MST_ID;
				$return_array["index"]['roll_weight'] = $row->ROLL_WEIGHT;
				$return_array["index"]['roll_length'] = $row->ROLL_LENGTH;
				$return_array["index"]['roll_width'] = $row->ROLL_WIDTH;
				$return_array["index"]['prod_id'] = $row->PROD_ID;
				$return_array["index"]['trans_id'] = $row->TRANS_ID;
				$return_array["index"]['dtls_id'] = $row->DTLS_ID;
				$return_array["index"]['qc_mst_id'] = $row->QC_MST_ID;
				$return_array["index"]['barcode_no'] = $row->BARCODE_NO;
				$return_array["index"]['roll_id'] = $row->ROLL_ID;
				$return_array["index"]['roll_no'] = $row->ROLL_NO;
				$return_array["index"]['batch_no'] = "";
				$return_array["index"]['color'] = "";
				$return_array["index"]['batch_id'] = $row->BATCH_ID;
				$return_array["index"]['width_dia_id'] = 0;
				$return_array["index"]['width_dia_val'] = "";
				$return_array["index"]['qc_pass_qty'] = $row->RECEIVE_QNTY;
				$return_array["index"]['prod_qnty'] = $row->RECEIVE_QNTY;
				$return_array["index"]['body_part'] = "";
				$return_array["index"]['body_part_id'] = $row->BODY_PART_ID;
				$return_array["index"]['prod_id'] = $row->PROD_ID;
				$return_array["index"]['deter_d'] = $row->FABRIC_DESCRIPTION_ID;
				$return_array["index"]['gsm'] = $row->GSM;
				$return_array["index"]['width'] = $row->WIDTH;
				$return_array["index"]['is_sales'] = 0;
				$return_array["index"]['construction'] = "";
				$return_array["index"]['company_id'] = $row->COMPANY_ID;
				$return_array["index"]['source'] = $row->SOURCE;
				$return_array["index"]['serving_company'] = $row->SERVING_COMPANY;
				$return_array["index"]['service_location'] = $row->SERVICE_LOCATION;
				$return_array["index"]['location'] = $row->LOCATION;
				$return_array["index"]['po_breakdown_id'] = $row->PO_BREAKDOWN_ID;
				$return_array["index"]['po_number'] = "";
				$return_array["index"]['job_number'] = "";
				$return_array["index"]['style_ref_no'] = "";
				$return_array["index"]['qnty'] = $row->RECEIVE_QNTY;
				$return_array["index"]['booking_without_order'] = 0;
				$return_array["index"]['booking_no'] = "";

				$COMPANY_ID = $row->COMPANY_ID;

			}
			
			
			if (count($sqlsRestult) > 0) {
				$return_array["index"]["array_ref_data"] = $this->array_ref_data($COMPANY_ID, "", 2, $qc_mst_tble_id);
			}
			

			return $return_array;
		}

		$all_extra_cond = "";

		$composition = return_library_array("SELECT id,composition_name from  lib_composition_array where status_active=1 and is_deleted=0 order by composition_name", "id", "composition_name");
		$composition[0] = 0;
		$composition_arr = array();
		$constructtion_arr = array();
		$sql_deter = "SELECT a.ID, a.CONSTRUCTION, b.COPMPOSITION_ID, b.PERCENT from lib_yarn_count_determina_mst a, lib_yarn_count_determina_dtls b where a.id=b.mst_id";
		$data_array = sql_select($sql_deter);
		foreach ($data_array as $row) {
			$constructtion_arr[$row->ID] = $row->CONSTRUCTION;
			if (isset($composition_arr[$row->ID])) {
				$composition_arr[$row->ID] .= $composition[$row->COPMPOSITION_ID] . " " . $row->PERCENT . "% ";
			} else {
				if (isset($composition[$row->COPMPOSITION_ID])) {
					$composition_arr[$row->ID] = $composition[$row->COPMPOSITION_ID] . " " . $row->PERCENT . "% ";
				} else {
					$composition_arr[$row->ID] = "";
				}

			}
		}

		$fabric_typee = array(1 => "Open Width", 2 => "Tubular", 3 => "Needle Open");
		$body_part = return_library_array("SELECT id,body_part_full_name from  lib_body_part where status_active=1 and is_deleted=0 order by body_part_full_name", "id", "body_part_full_name");

		/* 
			$color_arr = return_library_array("select id, color_name from lib_color where status_active=1 and is_deleted=0", "id", "color_name");
			$shade_matched_sql =  sql_select("select a.batch_id as BATCH_ID,a.batch_ext_no as BATCH_EXT_NO, e.barcode_no as BARCODE_NO, e.batch_qty from pro_fab_subprocess a, pro_fab_subprocess_dtls e where a.id = e.mst_id and e.barcode_no in($barcode_no) and a.load_unload_id=2 and a.result=1 and a.status_active = 1 and a.is_deleted = 0 and e.status_active = 1 and e.is_deleted = 0");

			foreach ($shade_matched_sql as  $val) 
			{
				$shade_matched_arr[$val->BATCH_ID][$val->BATCH_EXT_NO][$val->BARCODE_NO] = $val->BARCODE_NO;
			} 
		*/

		$sql = "SELECT a.company_id as COMPANY_ID,b.prod_id as PROD_ID,b.body_part_id as BODY_PART_ID,b.item_description as FEBRIC_DESCRIPTION_ID, c.detarmination_id as DETARMINATION_ID, c.gsm as GSM, c.dia_width as DIA_WIDTH, b.width_dia_type as WIDTH, b.barcode_no as BARCODE_NO,b.roll_id as ROLL_ID, b.roll_no as ROLL_NO, b.po_id as PO_BREAKDOWN_ID, b.batch_qnty as BATCH_QNTY, b.is_sales as IS_SALES, b.roll_id as ROLL_ORIGIN_ID,a.booking_without_order as BOOKING_WITHOUT_ORDER, a.booking_no as BOOKING_NO, a.booking_no_id as BOOKING_NO_ID, 1 as type, a.id as BATCH_ID, a.extention_no as EXTENTION_NO, a.entry_form as ENTRY_FORM,a.batch_no as BATCH_NO, a.color_id as COLOR_ID FROM pro_batch_create_mst a, pro_batch_create_dtls b, product_details_master c WHERE a.id=b.mst_id and b.prod_id=c.id and a.entry_form in(0,66) and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0 and b.barcode_no>0 and b.barcode_no in($barcode_no) and a.id in ( SELECT max(a.id) FROM pro_batch_create_mst a, pro_batch_create_dtls b, product_details_master c WHERE a.id=b.mst_id and b.prod_id=c.id and a.entry_form in(0,66) and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0 and b.barcode_no>0 and b.barcode_no in ($barcode_no) )";


		$data_array = sql_select($sql);
		$poIDs="";$salesIDs="";$prodIDs="";
		foreach ($data_array as $row) 
		{	
			/* if($shade_matched_arr[$row->BATCH_ID][$row->EXTENTION_NO][$row->BARCODE_NO] =="")
			{
				//$return_array["status-msg"] = "Shade not matched";
				return "Shade not matched";
			} */


			if($row->IS_SALES == 1){
				$salesIDArray[$row->PO_BREAKDOWN_ID]=$row->PO_BREAKDOWN_ID;
			}else{
				$poIDArray[$row->PO_BREAKDOWN_ID]=$row->PO_BREAKDOWN_ID;
			}
			$prodIDs.=$row->PROD_ID.',';
		}

		$db_type = return_db_type();

		if(!empty($poIDArray))
		{
			$all_po_nos=implode(",",$poIDArray);
			$all_po_nos_cond=""; $poNosCond="";
			if($db_type==2 && count($poIDArray)>999)
			{
				$all_po_nos_chunk=array_chunk($poIDArray,999) ;
				foreach($all_po_nos_chunk as $chunk_arr)
				{
					$chunk_arr_value=implode(",",$chunk_arr);
					$poNosCond.="  a.id in($chunk_arr_value) or ";
				}

				$all_po_nos_cond.=" and (".chop($poNosCond,'or ').")";
				//echo $booking_id_cond;die;
			}
			else
			{
				$all_po_nos_cond=" and a.id in($all_po_nos)";
			}
			
			$po_arr = array();
			$po_sql = sql_select("SELECT a.ID,a.PO_NUMBER,b.STYLE_REF_NO,a.JOB_NO_MST from wo_po_break_down a, wo_po_details_master b where a.job_id=b.id and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0  $all_po_nos_cond");

			foreach ($po_sql as $po_row) {
				$po_arr[$po_row->ID]['po_number'] = $po_row->PO_NUMBER;
				$po_arr[$po_row->ID]['job_number'] = $po_row->JOB_NO_MST;
				$po_arr[$po_row->ID]['style_ref_no'] = $po_row->STYLE_REF_NO;
			}
		}

		if(!empty($salesIDArray))
		{
			$all_fso_nos=implode(",",$salesIDArray);
			$all_fso_no_cond=""; $fsoNosCond="";
			if($db_type==2 && count($salesIDArray)>999)
			{
				$all_fso_nos_chunk=array_chunk($salesIDArray,999) ;
				foreach($all_fso_nos_chunk as $chunk_arr)
				{
					$chunk_arr_value=implode(",",$chunk_arr);
					$fsoNosCond.="  id in($chunk_arr_value) or ";
				}

				$all_fso_no_cond.=" and (".chop($fsoNosCond,'or ').")";
				//echo $booking_id_cond;die;
			}
			else
			{
				$all_fso_no_cond=" and id in($all_fso_nos)";
			}
			$sales_arr = array();
			$sql_sales = sql_select("SELECT ID,JOB_NO,STYLE_REF_NO from fabric_sales_order_mst where status_active=1 and is_deleted=0 $all_fso_no_cond");

			foreach ($sql_sales as $sales_row) {
				$sales_arr[$sales_row->ID]["po_number"] = $sales_row->JOB_NO;
				$sales_arr[$sales_row->ID]["style_ref_no"] = $sales_row->STYLE_REF_NO;
			}
		}

		$compacting_arr = array();
		$compacting_details_arr = array();
		$sql_compact = sql_select("SELECT a.BARCODE_NO,b.PRODUCTION_QTY from PRO_ROLL_DETAILS a,pro_fab_subprocess_dtls b where a.barcode_no=b.barcode_no and b.is_deleted=0 and b.status_active=1 and a.is_deleted=0 and a.status_active=1 and b.entry_page=33 and a.barcode_no =$barcode_no"); // b.roll_id=a.id
		foreach ($sql_compact as $c_id) {
			$compacting_arr[] = $c_id->BARCODE_NO;
			$compacting_details_arr[$c_id->BARCODE_NO]['prod_qty'] = $c_id->PRODUCTION_QTY;
		}
		//return $compacting_details_arr;

		$k = 0;
		if (count($data_array) == 0) {
			return $return_array;
		}

		foreach ($data_array as $row) 
		{
			$b_code = $row->BARCODE_NO;
			$production_qty = 0;
			if (in_array($b_code, $compacting_arr)) {
				$production_qty = $compacting_details_arr[$b_code]['prod_qty'];
			} 
			else 
			{
				$production_qty = $row->BATCH_QNTY;
			}

			$return_array["index"]['roll_weight'] = 0;
			$return_array["index"]['roll_length'] = 0;
			$return_array["index"]['roll_width'] = 0;
			$return_array["index"]['mode'] = "save";
			$return_array["index"]['prod_id'] = 0;
			$return_array["index"]['mst_id'] = 0;
			$return_array["index"]['trans_id'] = 0;
			$return_array["index"]['dtls_id'] = 0;
			$return_array["index"]['qc_mst_id'] = 0;
			$return_array["index"]['total_penalty_point'] = 0;
			$return_array["index"]['total_point'] = 0;
			$return_array["index"]['fabric_grade'] = "";
			$return_array["index"]['comments'] = "";
			$return_array["index"]['roll_status'] = 0;
			$return_array["index"]['qc_date'] = "";
			$return_array["index"]['barcode_no'] = $b_code;
			$return_array["index"]['roll_id'] = $row->ROLL_ORIGIN_ID;
			$return_array["index"]['roll_no'] = $row->ROLL_NO;


			$return_array["index"]['batch_no'] = $row->BATCH_NO;
			$return_array["index"]['color'] = $row->COLOR_ID;
			$return_array["index"]['batch_id'] = $row->BATCH_ID;
			$return_array["index"]['width_dia_id'] = $row->WIDTH;
			$return_array["index"]['width_dia_val'] = $fabric_typee[$row->WIDTH];
			$return_array["index"]['qc_pass_qty'] = $row->BATCH_QNTY;


			$return_array["index"]['prod_qnty'] = $production_qty;
			$return_array["index"]['batch_qnty'] =  $row->BATCH_QNTY;
			if (isset($body_part[$row->BODY_PART_ID])) {
				$return_array["index"]['body_part'] = $body_part[$row->BODY_PART_ID];
			} else {
				$return_array["index"]['body_part'] = "";
			}

			$return_array["index"]['body_part_id'] = $row->BODY_PART_ID;
			$return_array["index"]['prod_id'] = $row->PROD_ID;
			$return_array["index"]['deter_d'] = $row->DETARMINATION_ID;
			$return_array["index"]['gsm'] = $row->GSM;
			$return_array["index"]['width'] = $row->DIA_WIDTH;
			$cons_comp = $constructtion_arr[$row->DETARMINATION_ID] . ", " . $composition_arr[$row->DETARMINATION_ID];
			$return_array["index"]['is_sales'] = $row->IS_SALES;
			$return_array["index"]['construction'] = $cons_comp;

			if (isset($row->COMPANY_ID)) {
				$return_array["index"]['company_id'] = $row->COMPANY_ID;
			} else {
				$return_array["index"]['company_id'] = 0;
			}

			/*if (isset($row->SOURCE)) {
				$return_array["index"]['source'] = $row->SOURCE;
			} else {
				$return_array["index"]['source'] = 0;
			}

			if (isset($row->SERVING_COMPANY)) {
				$return_array["index"]['serving_company'] = $row->SERVING_COMPANY;
			} else {
				$return_array["index"]['serving_company'] = 0;
			}

			if (isset($row->SERVICE_LOCATION)) {
				$return_array["index"]['service_location'] = $row->SERVICE_LOCATION;
			} else {
				$return_array["index"]['service_location'] = 0;
			}

			if (isset($row->LOCATION)) {
				$return_array["index"]['location'] = $row->LOCATION;
			} else {
				$return_array["index"]['location'] = 0;
			} */

			$return_array["index"]['source'] = 1;
			$return_array["index"]['serving_company'] = $row->COMPANY_ID;
			$return_array["index"]['service_location'] = 1;
			$return_array["index"]['location'] = 1;

			$return_array["index"]['po_breakdown_id'] = $row->PO_BREAKDOWN_ID;
			if($row->SALES == 1)
			{
				$return_array["index"]['po_number'] = $sales_arr[$row->PO_BREAKDOWN_ID]['po_number'];
				$return_array["index"]['style_ref_no'] = $sales_arr[$row->PO_BREAKDOWN_ID]['style_ref_no'];
				$return_array["index"]['job_number'] = "";
			}
			else if($row->BOOKING_WITHOUT_ORDER ==0)
			{
				$return_array["index"]['po_number'] = $po_arr[$row->PO_BREAKDOWN_ID]['po_number'];
				$return_array["index"]['job_number'] = $po_arr[$row->PO_BREAKDOWN_ID]['job_number'];
				$return_array["index"]['style_ref_no'] = $po_arr[$row->PO_BREAKDOWN_ID]['style_ref_no'];
			}

			if($row->SALES != 1 && $row->BOOKING_WITHOUT_ORDER ==1)
			{
				$return_array["index"]['po_breakdown_id'] = $row->BOOKING_NO_ID;
			}
			
			$return_array["index"]['qnty'] = number_format($row->BATCH_QNTY, 2, '.', '');
			$return_array["index"]['booking_without_order'] = $row->BOOKING_WITHOUT_ORDER;
			if (isset($row->BOOKING_NO)) {
				$return_array["index"]['booking_no'] = $row->BOOKING_NO;
			} else {
				$return_array["index"]['booking_no'] = "";
			}

			$barcode_array[$b_code] = $b_code;
			$k++;

			$COMPANY_ID = $row->COMPANY_ID;
		}
		$return_array["index"]["array_ref_data"] = $this->array_ref_data($COMPANY_ID, "", 2, 0);
		//$return_array["index"]["machine_data"]=  $this->machine_data();
		return $return_array;

	}

	public function barcode_details_data($bar_code, $type = 0) {
		//print_r(5);die;
		$data_array = array();
		$composition[0] = 0;
		$composition = return_library_array("select id,composition_name from  lib_composition_array where status_active=1 and is_deleted=0 order by composition_name", "id", "composition_name");
		$supplier_arr = return_library_array("select id, short_name from  lib_supplier", "id", "short_name");
		$buyer_name_array = return_library_array("select id, short_name from lib_buyer", "id", "short_name");

		$bar_code = trim($bar_code);
		$sqls = "";
		if ($type == 2) {
			//MySQL
			$sqls = "SELECT c.REJECT_QNTY,a.COMPANY_ID,a.BUYER_ID,a.ROLL_MAINTAINED, c.BARCODE_NO,c.MST_ID,c.DTLS_ID ,  b.PROD_ID, b.BODY_PART_ID, b.FABRIC_DESCRIPTION_ID as FEBRIC_DESCRIPTION_ID, b.MACHINE_NO_ID, b.GSM, b.WIDTH, b.COLOR_ID,0 as YARN_PROD_ID, 0 as YARN_PROD_ID,0 as YARN_LOT, 0 as YARN_COUNT , c.id as ROLL_ID, c.ROLL_NO,c.QC_PASS_QNTY_PCS as QNTY, null as SYS_NUMBER
              FROM INV_RECEIVE_MASTER a, PRO_FINISH_FABRIC_RCV_DTLS b, PRO_ROLL_DETAILS c
              WHERE a.id=b.mst_id and b.id=c.dtls_id and a.entry_form =66 and c.entry_form =66 and c.status_active=1 and c.is_deleted=0 and c.barcode_no='$bar_code'";

		} else {
			//Oracle
			//print_r(5);die;
			//$sqls = "SELECT  c.REJECT_QNTY,a.COMPANY_ID,a.BUYER_ID,a.ROLL_MAINTAINED, c.BARCODE_NO,c.MST_ID,c.DTLS_ID ,  b.PROD_ID, b.BODY_PART_ID, b.FEBRIC_DESCRIPTION_ID, b.MACHINE_NO_ID, b.GSM, b.WIDTH, b.COLOR_ID,b.YARN_PROD_ID, b.YARN_PROD_ID,b.YARN_LOT, b.YARN_COUNT, c.id as ROLL_ID,c.ROLL_NO,c.QNTY FROM INV_RECEIVE_MASTER a, pro_grey_prod_entry_dtls b, PRO_ROLL_DETAILS c WHERE a.id=b.mst_id and b.id=c.dtls_id and a.entry_form in(2) and c.entry_form in(2) and c.status_active=1 and c.is_deleted=0 and c.barcode_no='$bar_code'";

			//$sqls = "SELECT  c.REJECT_QNTY,a.COMPANY_ID,a.BUYER_ID,a.ROLL_MAINTAINED, c.BARCODE_NO,c.MST_ID,c.DTLS_ID,b.PROD_ID, b.BODY_PART_ID, b.FEBRIC_DESCRIPTION_ID, b.MACHINE_NO_ID, b.GSM, b.WIDTH, b.COLOR_ID,b.YARN_PROD_ID, b.YARN_PROD_ID,b.YARN_LOT, b.YARN_COUNT, c.id as ROLL_ID,c.ROLL_NO,c.QNTY, e.SYS_NUMBER, a.booking_no FROM INV_RECEIVE_MASTER a, pro_grey_prod_entry_dtls b, pro_roll_details c left join pro_roll_details d on c.barcode_no=d.barcode_no and d.entry_form=56 and d.status_active=1 and d.is_deleted=0 left join pro_grey_prod_delivery_mst e on d.mst_id=e.id and e.entry_form=56 and e.status_active=1 WHERE a.id=b.mst_id and b.id=c.dtls_id and a.entry_form in(2) and c.entry_form in(2) and c.status_active=1 and c.is_deleted=0 and c.barcode_no='$bar_code'";
			$sqls = "SELECT c.PO_BREAKDOWN_ID, f.FILE_NO, f.GROUPING, c.REJECT_QNTY, a.COMPANY_ID, a.BUYER_ID, a.ROLL_MAINTAINED, c.BARCODE_NO, c.MST_ID, c.DTLS_ID, b.PROD_ID, b.BODY_PART_ID, b.FEBRIC_DESCRIPTION_ID, b.MACHINE_NO_ID, b.GSM, b.WIDTH, b.COLOR_ID, b.YARN_PROD_ID, b.YARN_LOT, b.YARN_COUNT, c.id AS ROLL_ID, c.ROLL_NO, c.QNTY, e.SYS_NUMBER, a.booking_no FROM INV_RECEIVE_MASTER a, pro_grey_prod_entry_dtls b, pro_roll_details c LEFT JOIN WO_PO_BREAK_DOWN f ON c.PO_BREAKDOWN_ID = f.ID LEFT JOIN pro_roll_details d ON c.barcode_no = d.barcode_no AND d.entry_form = 56 AND d.status_active = 1 AND d.is_deleted = 0 LEFT JOIN pro_grey_prod_delivery_mst e ON d.mst_id = e.id AND e.entry_form = 56 AND e.status_active = 1 WHERE a.id = b.mst_id AND b.id = c.dtls_id AND a.entry_form IN (2) AND c.entry_form IN (2) AND c.status_active = 1 AND c.is_deleted = 0 and c.barcode_no='$bar_code'";

		}
		//print_r($sqls); die;

		$data_sql = sql_select($sqls);
		$msg="";
		if (count($data_sql) <= 0) {
			return $data_array;
		}
		else
		{
			if($data_sql[0]->SYS_NUMBER !="")
			{
				$msg="Delivery Challan found against this Barcode. \n Challan No = ".$data_sql[0]->SYS_NUMBER;
				return "delivery**".$msg;
			}
		}

		$all_color = str_replace("'", "", $data_sql[0]->COLOR_ID);
		$buyerId = str_replace("'", "", $data_sql[0]->BUYER_ID);
		$compId = str_replace("'", "", $data_sql[0]->COMPANY_ID);

		if (!$all_color) {
			$all_color = 0;
		}

		$machine_lib = return_library_array("select id, machine_no from lib_machine_name", "id", "machine_no");
		$color_sql = "SELECT ID,COLOR_NAME from lib_color where id in($all_color)";
		$color_arr = array();
		$color_arr[0] = 0;

		$machine_sql = "SELECT ID,DIA_WIDTH from lib_machine_name  ";
		$machine_arr = array();
		$machine_arr[0] = 0;
		foreach (sql_select($machine_sql) as $vals) {
			$machine_arr[$vals->ID] = $vals->DIA_WIDTH;
		}

		$color_names = "";
		foreach (sql_select($color_sql) as $val) {
			if ($color_names) {
				$color_names .= "," . $val->COLOR_NAME;
			} else {
				$color_names = $val->COLOR_NAME;
			}

		}

		$sql_deter = "SELECT a.ID, a.CONSTRUCTION, b.COPMPOSITION_ID, b.PERCENT from lib_yarn_count_determina_mst a, lib_yarn_count_determina_dtls b where a.id=b.mst_id";
		$data = sql_select($sql_deter);
		foreach ($data as $row) {
			$constructtion_arr[$row->ID] = $row->CONSTRUCTION;
			if (isset($composition_arr[$row->ID])) {
				if (isset($composition[$row->COPMPOSITION_ID])) {
					$composition_arr[$row->ID] .= $composition[$row->COPMPOSITION_ID] . " " . $row->PERCENT . "% ";
				}

			} else {
				if (isset($composition[$row->COPMPOSITION_ID])) {
					$composition_arr[$row->ID] = $composition[$row->COPMPOSITION_ID] . " " . $row->PERCENT . "% ";
				}

			}

		}

		$barcode_chk = return_field_value("barcode_no", "PRO_QC_RESULT_MST", "BARCODE_NO='$bar_code' and status_active=1 and is_deleted=0 ", "barcode_no");
		//print_r($barcode_chk);die;
		if (trim($barcode_chk)) {

			$sql = "SELECT  ROLL_STATUS, ID,QC_NAME, ROLL_WIDTH, ROLL_WEIGHT,  ROLL_LENGTH, REJECT_QNTY, QC_DATE, TOTAL_PENALTY_POINT, TOTAL_POINT, FABRIC_GRADE, COMMENTS FROM PRO_QC_RESULT_MST where status_active=1 and is_deleted=0 and barcode_no='$bar_code'";
			$data_array["index"]["MODE"] = "update";
			
			foreach ($data_sql as $rows) {

				$yarn_count_arr = array_unique(explode(",", $rows->YARN_COUNT));
				$all_yarn_count = "";
				foreach ($yarn_count_arr as $count_id) {
					$all_yarn_count .= return_field_value("yarn_count", "lib_yarn_count", "id='$count_id'", "yarn_count") . ",";
				}
				$all_yarn_count = chop($all_yarn_count, ",");

				$data_array["index"]["MST_ID"] = trim($rows->MST_ID);
				$data_array["index"]["COMPANY_ID"] = $compId;
				$data_array["index"]["BUYER_ID"] = trim($buyerId);
				$data_array["index"]["BUYER_NAME"] = $buyer_name_array[trim($buyerId)];
				$data_array["index"]["PROGRAM_NO"] = $rows->BOOKING_NO;
				$data_array["index"]["DTLS_ID"] = trim($rows->DTLS_ID);
				if (isset($rows->ROLL_MAINTAINED)) {
					$data_array["index"]["ROLL_MAINTAINED"] = trim($rows->ROLL_MAINTAINED);
				} else {
					$data_array["index"]["ROLL_MAINTAINED"] = 0;
				}

				$data_array["index"]["BARCODE_NO"] = trim($rows->BARCODE_NO);
				if (isset($rows->ROLL_ID)) {
					$data_array["index"]["ROLL_ID"] = trim($rows->ROLL_ID);
				} else {
					$data_array["index"]["ROLL_ID"] = 0;
				}

				if (isset($rows->ROLL_NO)) {
					$data_array["index"]["ROLL_NO"] = trim($rows->ROLL_NO);
				} else {
					$data_array["index"]["ROLL_NO"] = 0;
				}

				if (isset($rows->GSM)) {
					$data_array["index"]["GSM"] = trim($rows->GSM);
				} else {
					$data_array["index"]["GSM"] = 0;
				}

				if (isset($rows->WIDTH)) {
					$data_array["index"]["DIA"] = $rows->WIDTH." ";
				} else {
					$data_array["index"]["DIA"] = "";
				}

				if (isset($machine_arr[$rows->MACHINE_NO_ID])) {
					$data_array["index"]["MC_DIA"] = trim($machine_arr[$rows->MACHINE_NO_ID]);
				} else {
					$data_array["index"]["MC_DIA"] = 0;
				}
				$data_array["index"]["MACHINE_NO"] = $machine_arr[$rows->MACHINE_NO_ID];
				$data_array["index"]["FILE_NO"] = 0;
				$data_array["index"]["REF_NO"] = 0;


				$composition_st = "";
				if (isset($constructtion_arr[$rows->FEBRIC_DESCRIPTION_ID])) {
					$composition_st .= $constructtion_arr[$rows->FEBRIC_DESCRIPTION_ID];
				}

				if (isset($composition_arr[$rows->FEBRIC_DESCRIPTION_ID])) {
					$composition_st .= ' ' . $composition_arr[$rows->FEBRIC_DESCRIPTION_ID];
				}

				$yarn_prod_arr = array_filter(array_unique(explode(",", $rows->YARN_PROD_ID)));
				$all_supplier = "";

				if (!empty($yarn_prod_arr)) {
					$yarn_prod_sql = sql_select("select SUPPLIER_ID from PRODUCT_DETAILS_MASTER where item_category_id =1 and id in (" . implode(",", $yarn_prod_arr) . ")");
					foreach ($yarn_prod_sql as $row) {
						if ($all_supplier) {
							$all_supplier .= "," . $supplier_arr[$row->SUPPLIER_ID];
						} else {
							$all_supplier = $supplier_arr[$row->SUPPLIER_ID];
						}

					}
				}
				$all_supplier = implode(",", array_unique(explode(",", chop($all_supplier, ','))));

				$data_array["index"]["COLOR"] = trim($color_names);
				$data_array["index"]["CONSTRUCTION"] = trim($composition_st);
				$data_array["index"]["YARN_COUNT"] = trim($all_yarn_count);
				$data_array["index"]["YARN_LOT"] = trim($rows->YARN_LOT);
				$data_array["index"]["SPINNING_MILL"] = trim($all_supplier);
				//$data_array["index"]["array_ref_data"]= $this->array_ref_data($buyerId);
			}
			foreach (sql_select($sql) as $v) {
				if (isset($v->QC_NAME)) {
					$data_array["index"]["QC_NAME"] = $v->QC_NAME;
				} else {
					$data_array["index"]["QC_NAME"] = "";
				}

				if (isset($v->ROLL_STATUS)) {
					$data_array["index"]["ROLL_STATUS"] = $v->ROLL_STATUS;
				} else {
					$data_array["index"]["ROLL_STATUS"] = 0;
				}

				$data_array["index"]["UPDATE_ID"] = $v->ID;

				$data_array["index"]["ROLL_KG"] = $v->ROLL_WEIGHT;
				$data_array["index"]["ROLL_INCH"] = ($v->ROLL_WIDTH)?$v->ROLL_WIDTH:0;
				$data_array["index"]["ROLL_YDS"] = $v->ROLL_LENGTH;


				if (isset($v->REJECT_QNTY)) {
					$data_array["index"]["REJECT_QNTY"] = $v->REJECT_QNTY;
				} else {
					$data_array["index"]["REJECT_QNTY"] = 0;
				}

				$data_array["index"]["TOTAL_PENALTY_POINT"] = $v->TOTAL_PENALTY_POINT;
				$data_array["index"]["TOTAL_POINT"] = $v->TOTAL_POINT;
				if (isset($v->FABRIC_GRADE)) {
					$data_array["index"]["FABRIC_GRADE"] = $v->FABRIC_GRADE;
				} else {
					$data_array["index"]["FABRIC_GRADE"] = "";
				}

				if (isset($v->COMMENTS)) {
					$data_array["index"]["COMMENTS"] = $v->COMMENTS;
				} else {
					$data_array["index"]["COMMENTS"] = "";
				}

				if ($v->QC_DATE) {
					$data_array["index"]["QC_DATE"] = date("d-m-Y", strtotime($v->QC_DATE));
				} else {
					$data_array["index"]["QC_DATE"] = "";
				}

				$mst_id = $v->ID;

			}

			//return $mst_id;


			$dtls_sql = "SELECT  DEFECT_NAME,DEFECT_COUNT,FOUND_IN_INCH, PENALTY_POINT FROM pro_qc_result_dtls Where MST_ID = '$mst_id' ";
			//echo $dtls_sql;die;
			$dtls_array = array();
			$defect_wise_val = array();
			foreach (sql_select($dtls_sql) as $vals) {
				//$qcDtlsObj =new QcDtls($vals->DEFECT_NAME,$vals->DEFECT_COUNT,$vals->FOUND_IN_INCH,$vals->PENALTY_POINT);
				//$dtls_array[]= $qcDtlsObj ;
				$defect_wise_val[$vals->DEFECT_NAME]["DEFECT_COUNT"] = $vals->DEFECT_COUNT;
				$defect_wise_val[$vals->DEFECT_NAME]["FOUND_IN_INCH"] = $vals->FOUND_IN_INCH;
				$defect_wise_val[$vals->DEFECT_NAME]["PENALTY_POINT"] = $vals->PENALTY_POINT;
			}
			//$data_array["index"]["dtls_obj"]=$dtls_array;
			
			 //return $dtls_sql;
			
			$data_array["index"]["array_ref_data"] = $this->array_ref_data($compId, $defect_wise_val, 1, $mst_id);

			return $data_array;

		}
		else {

			$i = 0;
			foreach ($data_sql as $rows) {

				$yarn_count_arr = array_unique(explode(",", $rows->YARN_COUNT));
				$all_yarn_count = "";
				foreach ($yarn_count_arr as $count_id) {
					$all_yarn_count .= return_field_value("yarn_count", "lib_yarn_count", "id='$count_id'", "yarn_count") . ",";
				}
				$all_yarn_count = chop($all_yarn_count, ",");
				$data_array["index"]["MODE"] = "save";
				$data_array["index"]["MST_ID"] = trim($rows->MST_ID);
				$data_array["index"]["COMPANY_ID"] = $compId;
				$data_array["index"]["BUYER_ID"] = trim($buyerId);
				$data_array["index"]["BUYER_NAME"] = $buyer_name_array[trim($buyerId)];
				$data_array["index"]["PROGRAM_NO"] = $rows->BOOKING_NO;
				$data_array["index"]["DTLS_ID"] = trim($rows->DTLS_ID);
				$data_array["index"]["FILE_NO"] = $rows->FILE_NO;
				$data_array["index"]["REF_NO"] = $rows->GROUPING;
				if (isset($rows->ROLL_MAINTAINED)) {
					$data_array["index"]["ROLL_MAINTAINED"] = trim($rows->ROLL_MAINTAINED);
				} else {
					$data_array["index"]["ROLL_MAINTAINED"] = 0;
				}

				$data_array["index"]["BARCODE_NO"] = trim($rows->BARCODE_NO);
				if (isset($rows->ROLL_ID)) {
					$data_array["index"]["ROLL_ID"] = trim($rows->ROLL_ID);
				} else {
					$data_array["index"]["ROLL_ID"] = 0;
				}

				if (isset($rows->ROLL_NO)) {
					$data_array["index"]["ROLL_NO"] = trim($rows->ROLL_NO);
				} else {
					$data_array["index"]["ROLL_NO"] = 0;
				}

				if (isset($rows->GSM)) {
					$data_array["index"]["GSM"] = trim($rows->GSM);
				} else {
					$data_array["index"]["GSM"] = 0;
				}

				if (isset($rows->WIDTH)) {
					$data_array["index"]["DIA"] = trim($rows->WIDTH);
				} else {
					$data_array["index"]["DIA"] = "";
				}

				if (isset($machine_arr[$rows->MACHINE_NO_ID])) {
					$data_array["index"]["MC_DIA"] = trim($machine_arr[$rows->MACHINE_NO_ID]);
				} else {
					$data_array["index"]["MC_DIA"] = 0;
					
				}

				$data_array["index"]["MACHINE_NO"] = ($machine_lib[$rows->MACHINE_NO_ID])? $machine_lib[$rows->MACHINE_NO_ID] : 0;

				$data_array["index"]["UPDATE_ID"] = 0;
				if (isset($rows->REJECT_QNTY)) {
					$data_array["index"]["REJECT_QNTY"] = $rows->REJECT_QNTY;
				} else {
					$data_array["index"]["REJECT_QNTY"] = 0;
				}

				$data_array["index"]["ROLL_STATUS"] = 0;
				$data_array["index"]["TOTAL_PENALTY_POINT"] = 0;
				$data_array["index"]["TOTAL_POINT"] = 0;
				$data_array["index"]["FABRIC_GRADE"] = "";
				$data_array["index"]["COMMENTS"] = "";
				$data_array["index"]["QC_DATE"] = "";
				$data_array["index"]["QC_NAME"] = "";

				$composition_st = "";
				if (isset($constructtion_arr[$rows->FEBRIC_DESCRIPTION_ID])) {
					$composition_st .= $constructtion_arr[$rows->FEBRIC_DESCRIPTION_ID];
				}

				if (isset($composition_arr[$rows->FEBRIC_DESCRIPTION_ID])) {
					$composition_st .= ' ' . $composition_arr[$rows->FEBRIC_DESCRIPTION_ID];
				}

				$yarn_prod_arr = array_filter(array_unique(explode(",", $rows->YARN_PROD_ID)));
				$all_supplier = "";

				if (!empty($yarn_prod_arr)) {
					$yarn_prod_sql = sql_select("select SUPPLIER_ID from PRODUCT_DETAILS_MASTER where item_category_id =1 and id in (" . implode(",", $yarn_prod_arr) . ")");
					foreach ($yarn_prod_sql as $row) {
						if ($all_supplier) {
							$all_supplier .= "," . $supplier_arr[$row->SUPPLIER_ID];
						} else {
							$all_supplier = $supplier_arr[$row->SUPPLIER_ID];
						}

					}
				}
				$all_supplier = implode(",", array_unique(explode(",", chop($all_supplier, ','))));

				$data_array["index"]["COLOR"] = trim($color_names);
				$data_array["index"]["CONSTRUCTION"] = trim($composition_st);
				$data_array["index"]["ROLL_KG"] = trim($rows->QNTY);
				$data_array["index"]["ROLL_INCH"] = 0;
				$data_array["index"]["ROLL_YDS"] = 0;
				$data_array["index"]["YARN_COUNT"] = trim($all_yarn_count);
				$data_array["index"]["YARN_LOT"] = trim($rows->YARN_LOT);
				$data_array["index"]["SPINNING_MILL"] = trim($all_supplier);
				$data_array["index"]["array_ref_data"] = $this->array_ref_data($compId, "", 1, 0);
				$i++;

			}
			return $data_array;

		}

	}

	public function observation_kniting_barcode_data($bar_code, $type = 0) {
		$data_array = array();
		$composition[0] = 0;
		$composition = return_library_array("select id,composition_name from  lib_composition_array where status_active=1 and is_deleted=0 order by composition_name", "id", "composition_name");
		$supplier_arr = return_library_array("select id, short_name from  lib_supplier", "id", "short_name");

		$bar_code = trim($bar_code);
		$sqls = "";
		if ($type == 2) {
			$sqls = "SELECT c.REJECT_QNTY,a.COMPANY_ID,a.BUYER_ID,a.ROLL_MAINTAINED, c.BARCODE_NO,c.MST_ID,c.DTLS_ID ,  b.PROD_ID, b.BODY_PART_ID, b.FABRIC_DESCRIPTION_ID as FEBRIC_DESCRIPTION_ID, b.MACHINE_NO_ID, b.GSM, b.WIDTH, b.COLOR_ID,0 as YARN_PROD_ID, 0 as YARN_PROD_ID,0 as YARN_LOT, 0 as YARN_COUNT , c.id as ROLL_ID, c.ROLL_NO,c.QC_PASS_QNTY_PCS as QNTY
              FROM INV_RECEIVE_MASTER a, PRO_FINISH_FABRIC_RCV_DTLS b, PRO_ROLL_DETAILS c
              WHERE a.id=b.mst_id and b.id=c.dtls_id and a.entry_form =66 and c.entry_form =66 and c.status_active=1 and c.is_deleted=0 and c.barcode_no='$bar_code'";

		} else {
			$sqls = "SELECT  c.REJECT_QNTY,a.COMPANY_ID,a.BUYER_ID,a.ROLL_MAINTAINED, c.BARCODE_NO,c.MST_ID,c.DTLS_ID ,  b.PROD_ID, b.BODY_PART_ID, b.FEBRIC_DESCRIPTION_ID, b.MACHINE_NO_ID, b.GSM, b.WIDTH, b.COLOR_ID,b.YARN_PROD_ID, b.YARN_PROD_ID,b.YARN_LOT, b.YARN_COUNT, c.id as ROLL_ID,c.ROLL_NO,c.QNTY FROM INV_RECEIVE_MASTER a, pro_grey_prod_entry_dtls b, PRO_ROLL_DETAILS c WHERE a.id=b.mst_id and b.id=c.dtls_id and a.entry_form in(2) and c.entry_form in(2) and c.status_active=1 and c.is_deleted=0 and c.barcode_no='$bar_code'";

		}
		//return $sqls;

		$data_sql = sql_select($sqls);

		if (count($data_sql) <= 0) {
			return $data_array;
		}

		$all_color = str_replace("'", "", $data_sql[0]->COLOR_ID);
		$buyerId = str_replace("'", "", $data_sql[0]->BUYER_ID);
		$compId = str_replace("'", "", $data_sql[0]->COMPANY_ID);

		if (!$all_color) {
			$all_color = 0;
		}

		$color_sql = "SELECT ID,COLOR_NAME from lib_color where id in($all_color)";
		$color_arr = array();
		$color_arr[0] = 0;

		$machine_sql = "SELECT ID,DIA_WIDTH from lib_machine_name  ";
		$machine_arr = array();
		$machine_arr[0] = 0;
		foreach (sql_select($machine_sql) as $vals) {
			$machine_arr[$vals->ID] = $vals->DIA_WIDTH;
		}

		$color_names = "";
		foreach (sql_select($color_sql) as $val) {
			if ($color_names) {
				$color_names .= "," . $val->COLOR_NAME;
			} else {
				$color_names = $val->COLOR_NAME;
			}

		}

		$sql_deter = "SELECT a.ID, a.CONSTRUCTION, b.COPMPOSITION_ID, b.PERCENT from lib_yarn_count_determina_mst a, lib_yarn_count_determina_dtls b where a.id=b.mst_id";
		$data = sql_select($sql_deter);
		foreach ($data as $row) {
			$constructtion_arr[$row->ID] = $row->CONSTRUCTION;
			if (isset($composition_arr[$row->ID])) {
				if (isset($composition[$row->COPMPOSITION_ID])) {
					$composition_arr[$row->ID] .= $composition[$row->COPMPOSITION_ID] . " " . $row->PERCENT . "% ";
				}

			} else {
				if (isset($composition[$row->COPMPOSITION_ID])) {
					$composition_arr[$row->ID] = $composition[$row->COPMPOSITION_ID] . " " . $row->PERCENT . "% ";
				}

			}

		}

		$barcode_chk = return_field_value("barcode_no", "PRO_QC_RESULT_MST", "BARCODE_NO='$bar_code' and status_active=1 and is_deleted=0 ", "barcode_no");

		if (trim($barcode_chk))
		{

			$sql = "SELECT  ROLL_STATUS, ID,QC_NAME, ROLL_WIDTH, ROLL_WEIGHT,  ROLL_LENGTH, REJECT_QNTY, QC_DATE, TOTAL_PENALTY_POINT, TOTAL_POINT, FABRIC_GRADE, COMMENTS FROM PRO_QC_RESULT_MST where status_active=1 and is_deleted=0 and barcode_no='$bar_code'";//,QC_MC_NAME
			$data_array["index"]["MODE"] = "update";
			foreach ($data_sql as $rows) {

				$yarn_count_arr = array_unique(explode(",", $rows->YARN_COUNT));
				$all_yarn_count = "";
				foreach ($yarn_count_arr as $count_id) {
					$all_yarn_count .= return_field_value("yarn_count", "lib_yarn_count", "id='$count_id'", "yarn_count") . ",";
				}
				$all_yarn_count = chop($all_yarn_count, ",");

				$data_array["index"]["MST_ID"] = trim($rows->MST_ID);
				$data_array["index"]["COMPANY_ID"] = $compId;
				$data_array["index"]["BUYER_ID"] = trim($buyerId)?trim($buyerId):0;
				$data_array["index"]["DTLS_ID"] = trim($rows->DTLS_ID);
				if (isset($rows->ROLL_MAINTAINED)) {
					$data_array["index"]["ROLL_MAINTAINED"] = trim($rows->ROLL_MAINTAINED);
				} else {
					$data_array["index"]["ROLL_MAINTAINED"] = 0;
				}

				$data_array["index"]["BARCODE_NO"] = trim($rows->BARCODE_NO);
				if (isset($rows->ROLL_ID)) {
					$data_array["index"]["ROLL_ID"] = trim($rows->ROLL_ID);
				} else {
					$data_array["index"]["ROLL_ID"] = 0;
				}

				if (isset($rows->ROLL_NO)) {
					$data_array["index"]["ROLL_NO"] = trim($rows->ROLL_NO);
				} else {
					$data_array["index"]["ROLL_NO"] = 0;
				}

				if (isset($rows->GSM)) {
					$data_array["index"]["GSM"] = trim($rows->GSM);
				} else {
					$data_array["index"]["GSM"] = 0;
				}

				if (isset($rows->WIDTH)) {
					$data_array["index"]["DIA"] = $rows->WIDTH." ";
				} else {
					$data_array["index"]["DIA"] = "";
				}

				if (isset($machine_arr[$rows->MACHINE_NO_ID])) {
					$data_array["index"]["MC_DIA"] = trim($machine_arr[$rows->MACHINE_NO_ID]);
				} else {
					$data_array["index"]["MC_DIA"] = 0;
				}

				$composition_st = "";
				if (isset($constructtion_arr[$rows->FEBRIC_DESCRIPTION_ID])) {
					$composition_st .= $constructtion_arr[$rows->FEBRIC_DESCRIPTION_ID];
				}

				if (isset($composition_arr[$rows->FEBRIC_DESCRIPTION_ID])) {
					$composition_st .= ' ' . $composition_arr[$rows->FEBRIC_DESCRIPTION_ID];
				}

				$yarn_prod_arr = array_filter(array_unique(explode(",", $rows->YARN_PROD_ID)));
				$all_supplier = "";

				if (!empty($yarn_prod_arr)) {
					$yarn_prod_sql = sql_select("select SUPPLIER_ID from PRODUCT_DETAILS_MASTER where item_category_id =1 and id in (" . implode(",", $yarn_prod_arr) . ")");
					foreach ($yarn_prod_sql as $row) {
						if ($all_supplier) {
							$all_supplier .= "," . $supplier_arr[$row->SUPPLIER_ID];
						} else {
							$all_supplier = $supplier_arr[$row->SUPPLIER_ID];
						}

					}
				}
				$all_supplier = implode(",", array_unique(explode(",", chop($all_supplier, ','))));

				$data_array["index"]["COLOR"] = trim($color_names);
				$data_array["index"]["CONSTRUCTION"] = trim($composition_st);
				$data_array["index"]["YARN_COUNT"] = trim($all_yarn_count);
				$data_array["index"]["YARN_LOT"] = $rows->YARN_LOT." ";
				$data_array["index"]["SPINNING_MILL"] = trim($all_supplier);
			}
			foreach (sql_select($sql) as $v) {
				if (isset($v->QC_NAME)) {
					$data_array["index"]["QC_NAME"] = $v->QC_NAME;
				} else {
					$data_array["index"]["QC_NAME"] = "";
				}

				if (isset($v->ROLL_STATUS)) {
					$data_array["index"]["ROLL_STATUS"] = $v->ROLL_STATUS;
				} else {
					$data_array["index"]["ROLL_STATUS"] = 0;
				}

				$data_array["index"]["UPDATE_ID"] = $v->ID;

				$data_array["index"]["ROLL_KG"] = $v->ROLL_WEIGHT;
				$data_array["index"]["ROLL_INCH"] = ($v->ROLL_WIDTH)?$v->ROLL_WIDTH:0;

				if($v->ROLL_LENGTH){
					$data_array["index"]["ROLL_YDS"] = $v->ROLL_LENGTH;
				}
				else{
					$data_array["index"]["ROLL_YDS"] = 0;
				}



				if (isset($v->REJECT_QNTY)) {
					$data_array["index"]["REJECT_QNTY"] = $v->REJECT_QNTY;
				} else {
					$data_array["index"]["REJECT_QNTY"] = 0;
				}

				$data_array["index"]["TOTAL_PENALTY_POINT"] = $v->TOTAL_PENALTY_POINT;
				$data_array["index"]["TOTAL_POINT"] = $v->TOTAL_POINT;
				if (isset($v->FABRIC_GRADE)) {
					$data_array["index"]["FABRIC_GRADE"] = $v->FABRIC_GRADE;
				} else {
					$data_array["index"]["FABRIC_GRADE"] = "";
				}

				if (isset($v->COMMENTS)) {
					$data_array["index"]["COMMENTS"] = $v->COMMENTS." ";
				} else {
					$data_array["index"]["COMMENTS"] = "";
				}

				if ($v->QC_DATE) {
					$data_array["index"]["QC_DATE"] = date("d-m-Y", strtotime($v->QC_DATE));
				} else {
					$data_array["index"]["QC_DATE"] = "";
				}
				//$data_array["index"]["QC_MC_NAME"] = $v->QC_MC_NAME?$v->QC_MC_NAME:0;
				$mst_id = $v->ID;

			}

			$dtls_sql = "SELECT  DEFECT_NAME,DEFECT_COUNT,FOUND_IN_INCH, PENALTY_POINT FROM pro_qc_result_dtls Where MST_ID = '$mst_id'   AND  FORM_TYPE <> 2";
			$dtls_array = array();
			$defect_wise_val = array();
			foreach (sql_select($dtls_sql) as $vals) {
				$defect_wise_val[$vals->DEFECT_NAME]["DEFECT_COUNT"] = $vals->DEFECT_COUNT;
				$defect_wise_val[$vals->DEFECT_NAME]["FOUND_IN_INCH"] = $vals->FOUND_IN_INCH;
				$defect_wise_val[$vals->DEFECT_NAME]["PENALTY_POINT"] = $vals->PENALTY_POINT;
			}
			$data_array["index"]["array_ref_data"] = $this->kniting_ref_data_array($compId, $defect_wise_val, 1, $mst_id);

			return $data_array;

		}
		else {

			$i = 0;
			foreach ($data_sql as $rows) {

				$yarn_count_arr = array_unique(explode(",", $rows->YARN_COUNT));
				$all_yarn_count = "";
				foreach ($yarn_count_arr as $count_id) {
					$all_yarn_count .= return_field_value("yarn_count", "lib_yarn_count", "id='$count_id'", "yarn_count") . ",";
				}
				$all_yarn_count = chop($all_yarn_count, ",");
				$data_array["index"]["MODE"] = "save";
				$data_array["index"]["MST_ID"] = trim($rows->MST_ID);
				$data_array["index"]["COMPANY_ID"] = $compId;
				$data_array["index"]["BUYER_ID"] = trim($buyerId)?trim($buyerId):0;
				$data_array["index"]["DTLS_ID"] = trim($rows->DTLS_ID);
				if (isset($rows->ROLL_MAINTAINED)) {
					$data_array["index"]["ROLL_MAINTAINED"] = trim($rows->ROLL_MAINTAINED);
				} else {
					$data_array["index"]["ROLL_MAINTAINED"] = 0;
				}

				$data_array["index"]["BARCODE_NO"] = trim($rows->BARCODE_NO);
				if (isset($rows->ROLL_ID)) {
					$data_array["index"]["ROLL_ID"] = trim($rows->ROLL_ID);
				} else {
					$data_array["index"]["ROLL_ID"] = 0;
				}

				if (isset($rows->ROLL_NO)) {
					$data_array["index"]["ROLL_NO"] = trim($rows->ROLL_NO);
				} else {
					$data_array["index"]["ROLL_NO"] = 0;
				}

				if (isset($rows->GSM)) {
					$data_array["index"]["GSM"] = trim($rows->GSM);
				} else {
					$data_array["index"]["GSM"] = 0;
				}

				if (isset($rows->WIDTH)) {
					$data_array["index"]["DIA"] = trim($rows->WIDTH)." ";
				} else {
					$data_array["index"]["DIA"] = "";
				}

				if (isset($machine_arr[$rows->MACHINE_NO_ID])) {
					$data_array["index"]["MC_DIA"] = trim($machine_arr[$rows->MACHINE_NO_ID]);
				} else {
					$data_array["index"]["MC_DIA"] = "";
				}

				$data_array["index"]["UPDATE_ID"] = 0;
				if (isset($rows->REJECT_QNTY)) {
					$data_array["index"]["REJECT_QNTY"] = $rows->REJECT_QNTY;
				} else {
					$data_array["index"]["REJECT_QNTY"] = 0;
				}

				$data_array["index"]["ROLL_STATUS"] = 0;
				$data_array["index"]["TOTAL_PENALTY_POINT"] = 0;
				$data_array["index"]["TOTAL_POINT"] = 0;
				$data_array["index"]["FABRIC_GRADE"] = "";
				$data_array["index"]["COMMENTS"] = "";
				$data_array["index"]["QC_DATE"] = "";
				$data_array["index"]["QC_NAME"] = "";


				//$data_array["index"]["QC_MC_NAME"] = 0;




				$composition_st = "";
				if (isset($constructtion_arr[$rows->FEBRIC_DESCRIPTION_ID])) {
					$composition_st .= $constructtion_arr[$rows->FEBRIC_DESCRIPTION_ID];
				}

				if (isset($composition_arr[$rows->FEBRIC_DESCRIPTION_ID])) {
					$composition_st .= ' ' . $composition_arr[$rows->FEBRIC_DESCRIPTION_ID];
				}

				$yarn_prod_arr = array_filter(array_unique(explode(",", $rows->YARN_PROD_ID)));
				$all_supplier = "";

				if (!empty($yarn_prod_arr)) {
					$yarn_prod_sql = sql_select("select SUPPLIER_ID from PRODUCT_DETAILS_MASTER where item_category_id =1 and id in (" . implode(",", $yarn_prod_arr) . ")");
					foreach ($yarn_prod_sql as $row) {
						if ($all_supplier) {
							$all_supplier .= "," . $supplier_arr[$row->SUPPLIER_ID];
						} else {
							$all_supplier = $supplier_arr[$row->SUPPLIER_ID];
						}

					}
				}
				$all_supplier = implode(",", array_unique(explode(",", chop($all_supplier, ','))));

				$data_array["index"]["COLOR"] = trim($color_names);
				$data_array["index"]["CONSTRUCTION"] = trim($composition_st);
				$data_array["index"]["ROLL_KG"] = trim($rows->QNTY);
				$data_array["index"]["ROLL_INCH"] = 0;
				$data_array["index"]["ROLL_YDS"] = 0;
				$data_array["index"]["YARN_COUNT"] = trim($all_yarn_count);
				$data_array["index"]["YARN_LOT"] = $rows->YARN_LOT." ";
				$data_array["index"]["SPINNING_MILL"] = trim($all_supplier);
				$data_array["index"]["array_ref_data"] = $this->kniting_ref_data_array($compId, "", 1, 0);
				$i++;

			}
			return $data_array;

		}

	}

	public function observation_finish_barcode_data($barcode_no) {
		$return_array = array();
		$scanned_barcode_array = array();
		$barcode_dtlsId_array = array();
		$barcode_rollTableId_array = array();
		$dtls_data_arr = array();

		$is_exists = sql_select("SELECT barcode_no from PRO_FINISH_FABRIC_RCV_DTLS where status_active=1 and barcode_no=$barcode_no and is_deleted=0");
			
			

		if (count($is_exists) > 0) {
			$sqls = "SELECT  b.ROLL_WIDTH, b.ROLL_WEIGHT, b.ROLL_LENGTH,b.TOTAL_PENALTY_POINT, b.TOTAL_POINT, b.FABRIC_GRADE, b.COMMENTS, b.ROLL_STATUS,b.QC_DATE, a.PROD_ID ,b.id as QC_MST_ID ,a.TRANS_ID ,d.id as MST_ID,a.id as DTLS_ID, a.ORDER_ID as PO_BREAKDOWN_ID ,d.LOCATION_ID as LOCATION,d.KNITTING_LOCATION_ID as SERVICE_LOCATION,d.KNITTING_COMPANY as SERVING_COMPANY, d.SOURCE,d.COMPANY_ID, a.PROD_ID,a.GSM, a.WIDTH,  a.FABRIC_DESCRIPTION_ID,a.BODY_PART_ID,a.RECEIVE_QNTY,a.BATCH_ID,a.BARCODE_NO,b.ROLL_ID, b.ROLL_NO from INV_RECEIVE_MASTER d, PRO_FINISH_FABRIC_RCV_DTLS a,PRO_QC_RESULT_MST b ,pro_qc_result_dtls c where d.id=a.mst_id   and d.status_active=1 and a.id=b.pro_dtls_id and b.id=c.mst_id and b.status_active=1 and b.entry_form=267 and c.status_active=1 and  a.status_active=1    and a.barcode_no=$barcode_no  and a.is_deleted=0";
			$qc_mst_tble_id = 0;
			foreach (sql_select($sqls) as $row) {

				$qc_mst_tble_id = $row->QC_MST_ID;
				$return_array["index"]['mode'] = "update";
				if (isset($row->TOTAL_PENALTY_POINT)) {
					$return_array["index"]['total_penalty_point'] = $row->TOTAL_PENALTY_POINT;
				}

				$return_array["index"]['total_penalty_point'] = 0;
				if (isset($row->TOTAL_POINT)) {
					$return_array["index"]['total_point'] = $row->TOTAL_POINT;
				} else {
					$return_array["index"]['total_point'] = 0;
				}

				if (isset($row->FABRIC_GRADE)) {
					$return_array["index"]['fabric_grade'] = $row->FABRIC_GRADE;
				} else {
					$return_array["index"]['fabric_grade'] = "";
				}

				if (isset($row->COMMENTS)) {
					$return_array["index"]['comments'] = $row->COMMENTS." ";
				} else {
					$return_array["index"]['comments'] = "";
				}

				if (isset($row->ROLL_STATUS)) {
					$return_array["index"]['roll_status'] = $row->ROLL_STATUS;
				} else {
					$return_array["index"]['roll_status'] = 0;
				}

				if (isset($row->QC_DATE)) {
					$return_array["index"]['qc_date'] = $row->QC_DATE;
				} else {
					$return_array["index"]['qc_date'] = "";
				}

				$return_array["index"]['mst_id'] = $row->MST_ID;
				$return_array["index"]['roll_weight'] = $row->ROLL_WEIGHT;
				$return_array["index"]['roll_length'] = $row->ROLL_LENGTH;
				$return_array["index"]['roll_width'] = $row->ROLL_WIDTH;
				$return_array["index"]['prod_id'] = $row->PROD_ID;
				$return_array["index"]['trans_id'] = $row->TRANS_ID;
				$return_array["index"]['dtls_id'] = $row->DTLS_ID;
				$return_array["index"]['qc_mst_id'] = $row->QC_MST_ID;
				$return_array["index"]['barcode_no'] = $row->BARCODE_NO;
				$return_array["index"]['roll_id'] = $row->ROLL_ID;
				$return_array["index"]['roll_no'] = $row->ROLL_NO;
				$return_array["index"]['batch_no'] = "";
				$return_array["index"]['color'] = "";
				$return_array["index"]['batch_id'] = $row->BATCH_ID;
				$return_array["index"]['width_dia_id'] = 0;
				$return_array["index"]['width_dia_val'] = "";
				$return_array["index"]['qc_pass_qty'] = $row->RECEIVE_QNTY;
				$return_array["index"]['prod_qnty'] = $row->RECEIVE_QNTY;
				$return_array["index"]['body_part'] = "";
				$return_array["index"]['body_part_id'] = $row->BODY_PART_ID;
				$return_array["index"]['prod_id'] = $row->PROD_ID;
				$return_array["index"]['deter_d'] = $row->FABRIC_DESCRIPTION_ID;
				$return_array["index"]['gsm'] = $row->GSM;
				$return_array["index"]['width'] = $row->WIDTH;
				$return_array["index"]['is_sales'] = 0;
				$return_array["index"]['construction'] = "";
				$return_array["index"]['company_id'] = $row->COMPANY_ID;
				$return_array["index"]['source'] = $row->SOURCE;
				$return_array["index"]['serving_company'] = $row->SERVING_COMPANY;
				$return_array["index"]['service_location'] = $row->SERVICE_LOCATION;
				$return_array["index"]['location'] = $row->LOCATION;
				$return_array["index"]['po_breakdown_id'] = $row->PO_BREAKDOWN_ID;
				$return_array["index"]['po_number'] = "";
				$return_array["index"]['job_number'] = "";
				$return_array["index"]['style_ref_no'] = "";
				$return_array["index"]['qnty'] = $row->RECEIVE_QNTY;
				$return_array["index"]['booking_without_order'] = 0;
				$return_array["index"]['booking_no'] = "";

			}
			if (count(sql_select($sqls)) > 0) {
				$return_array["index"]["array_ref_data"] = $this->finish_ref_data_array(0, "", 2, $qc_mst_tble_id);
			}

			return $return_array;
		}

		$all_extra_cond = "";

		$composition = return_library_array("SELECT id,composition_name from  lib_composition_array where status_active=1 and is_deleted=0 order by composition_name", "id", "composition_name");
		$composition[0] = 0;
		$composition_arr = array();
		$constructtion_arr = array();
		$sql_deter = "SELECT a.ID, a.CONSTRUCTION, b.COPMPOSITION_ID, b.PERCENT from lib_yarn_count_determina_mst a, lib_yarn_count_determina_dtls b where a.id=b.mst_id";
		$data_array = sql_select($sql_deter);
		foreach ($data_array as $row) {
			$constructtion_arr[$row->ID] = $row->CONSTRUCTION;
			if (isset($composition_arr[$row->ID])) {
				$composition_arr[$row->ID] .= $composition[$row->COPMPOSITION_ID] . " " . $row->PERCENT . "% ";
			} else {
				if (isset($composition[$row->COPMPOSITION_ID])) {
					$composition_arr[$row->ID] = $composition[$row->COPMPOSITION_ID] . " " . $row->PERCENT . "% ";
				} else {
					$composition_arr[$row->ID] = "";
				}

			}
		}


		$fabric_typee = array(1 => "Open Width", 2 => "Tubular", 3 => "Needle Open");
		$body_part = return_library_array("SELECT id,body_part_full_name from  lib_body_part where status_active=1 and is_deleted=0 order by body_part_full_name", "id", "body_part_full_name");

		$color_arr = return_library_array("select id, color_name from lib_color where status_active=1 and is_deleted=0", "id", "color_name");

		$roll_split_id = sql_select("SELECT roll_id, barcode_no from PRO_ROLL_DETAILS where ROLL_SPLIT_FROM > 0 AND ENTRY_FORM = 62 and barcode_no=$barcode_no and status_active=1 and is_deleted=0");
		$roll_splt_before_batch_id = "";
		$split_roll_bar_bf_batch_arr = array();
		foreach ($roll_split_id as $row) {
			if (isset($roll_splt_before_batch_id)) {
				$roll_splt_before_batch_id .= $row->ROLL_ID . ",";
			} else {
				$roll_splt_before_batch_id = $row->ROLL_ID;
			}

			$split_roll_bar_bf_batch_arr[$row->ROLL_ID] = $row->BARCODE_NO;
		}

		$roll_splt_before_batch_id = chop($roll_splt_before_batch_id, ",");

		$sql_check_barcode_with_booking = sql_select("SELECT  c.BARCODE_NO FROM INV_RECEIVE_MASTER a, pro_grey_prod_entry_dtls b, PRO_ROLL_DETAILS c WHERE a.id=b.mst_id and b.id=c.dtls_id and a.receive_basis<>9  and c.entry_form in(64) and c.status_active=1 and c.is_deleted=0 $all_extra_cond and c.barcode_no=$barcode_no");
		$barcode_batch = "";
		foreach ($sql_check_barcode_with_booking as $row) {
			$barcode_batch = $row->BARCODE_NO;
		}

		$sql_check_barcode_in_transfter = sql_select("SELECT  c.barcode_no FROM INV_RECEIVE_MASTER a, pro_grey_prod_entry_dtls b, PRO_ROLL_DETAILS c WHERE a.id=b.mst_id and b.id=c.dtls_id and a.receive_basis<>9  and c.entry_form in(180) and c.status_active=1 and c.is_deleted=0 $all_extra_cond and c.barcode_no =$barcode_no");

		foreach ($sql_check_barcode_in_transfter as $row) {
			$barcode_transfer = $row->BARCODE_NO;
		}

		if ($barcode_batch != "") // check latest batch creation for booking
		{
			if ($roll_splt_before_batch_id != "") {

				if ($barcode_transfer != "") // check booking  transfer for booking
				{
					$sql = "SELECT a.COMPANY_ID,a.KNITTING_SOURCE as SOURCE, a.KNITTING_COMPANY as SERVICE_COMPANY,  a.LOCATION_ID as LOCATION,  a.KNITTING_LOCATION_ID as SERVICE_LOCATION, b.PROD_ID, b.BODY_PART_ID, b.FEBRIC_DESCRIPTION_ID, b.GSM, b.WIDTH, c.BARCODE_NO, c.id as ROLL_ID, c.ROLL_NO, c.PO_BREAKDOWN_ID,c.QNTY,c.IS_SALES, c.roll_id as ROLL_ORIGIN_ID,c.BOOKING_WITHOUT_ORDER,c.BOOKING_NO, 1 as TYPE FROM INV_RECEIVE_MASTER a, pro_grey_prod_entry_dtls b, PRO_ROLL_DETAILS c where a.id=b.mst_id and b.id=c.is_sales and b.id=c.dtls_id and a.receive_basis<>9 and a.entry_form in(2,22,58) and c.entry_form in(2,22,58) and b.trans_id>0 and c.status_active=1 and c.is_deleted=0 $all_extra_cond and c.barcode_no =$barcode_no
                union all
                SELECT a.COMPANY_ID,a.KNITTING_SOURCE as SOURCE, a.KNITTING_COMPANY as SERVICE_COMPANY,  a.LOCATION_ID as LOCATION,  a.KNITTING_LOCATION_ID as SERVICE_LOCATION,  b.PROD_ID, b.BODY_PART_ID, b.FEBRIC_DESCRIPTION_ID, b.GSM, b.WIDTH, c.BARCODE_NO, c.id as ROLL_ID, c.ROLL_NO, c.PO_BREAKDOWN_ID,c.QNTY,c.IS_SALES, c.id as ROLL_ORIGIN_ID,c.BOOKING_WITHOUT_ORDER,c.BOOKING_NO, 2 as TYPE from INV_RECEIVE_MASTER a, pro_grey_prod_entry_dtls b, PRO_ROLL_DETAILS c where a.id=b.mst_id and b.id=c.dtls_id and a.receive_basis<>9 and a.entry_form in(2,22,58) and c.entry_form in(2,22,58) $all_extra_cond and c.status_active=1 and c.is_deleted=0 and c.roll_id=0 and c.id in($roll_splt_before_batch_id)";
				} else {
					$sql = "SELECT a.COMPANY_ID,a.KNITTING_SOURCE as SOURCE, a.KNITTING_COMPANY as SERVICE_COMPANY,  a.LOCATION_ID as LOCATION,  a.KNITTING_LOCATION_ID as SERVICE_LOCATION, b.PROD_ID, b.BODY_PART_ID, b.FEBRIC_DESCRIPTION_ID, b.GSM, b.WIDTH, c.BARCODE_NO, c.id as ROLL_ID, c.ROLL_NO, c.PO_BREAKDOWN_ID,c.QNTY,c.IS_SALES,c.ROLL_ID as roll_origin_id,c.booking_without_order,c.booking_no, 1 as type FROM INV_RECEIVE_MASTER a, pro_grey_prod_entry_dtls b, PRO_ROLL_DETAILS c where a.id=b.mst_id and b.id=c.dtls_id and a.receive_basis<>9 and c.entry_form in(64) and c.status_active=1 and c.is_deleted=0 $all_extra_cond and c.barcode_no =$barcode_no
                union all
                SELECT a.COMPANY_ID,a.KNITTING_SOURCE as SOURCE, a.KNITTING_COMPANY as SERVICE_COMPANY,  a.LOCATION_ID as LOCATION,  a.KNITTING_LOCATION_ID as SERVICE_LOCATION, b.PROD_ID, b.BODY_PART_ID, b.FEBRIC_DESCRIPTION_ID,b.GSM, b.WIDTH, c.BARCODE_NO, c.id as ROLL_ID, c.ROLL_NO, c.PO_BREAKDOWN_ID,c.QNTY,c.IS_SALES, c.id as ROLL_ORIGIN_ID,c.BOOKING_WITHOUT_ORDER,c.BOOKING_NO, 2 as TYPE
                from INV_RECEIVE_MASTER a, pro_grey_prod_entry_dtls b, PRO_ROLL_DETAILS c
                where a.id=b.mst_id and b.id=c.dtls_id and a.receive_basis<>9 and c.entry_form in(64) and c.status_active=1 and c.is_deleted=0 and c.roll_id=0 $all_extra_cond and c.id in($roll_splt_before_batch_id)";
				}

			} else {

				$sql = "SELECT a.COMPANY_ID,a.KNITTING_SOURCE as SOURCE, a.KNITTING_COMPANY as SERVICE_COMPANY,  a.LOCATION_ID as LOCATION,  a.KNITTING_LOCATION_ID as SERVICE_LOCATION,  b.PROD_ID, b.BODY_PART_ID, b.FEBRIC_DESCRIPTION_ID, b.GSM, b.WIDTH, c.BARCODE_NO, c.id as ROLL_ID, c.ROLL_NO, c.PO_BREAKDOWN_ID, c.QNTY,c.IS_SALES, c.roll_id as ROLL_ORIGIN_ID,c.BOOKING_WITHOUT_ORDER,c.BOOKING_NO, 1 as TYPE FROM INV_RECEIVE_MASTER a, pro_grey_prod_entry_dtls b, PRO_ROLL_DETAILS c WHERE a.id=b.mst_id and b.id=c.dtls_id and a.receive_basis<>9  and c.entry_form in(64)  and c.status_active=1 and c.is_deleted=0 $all_extra_cond and c.barcode_no=$barcode_no";
			}
		} else {
			if ($roll_splt_before_batch_id != "") {
				$sql = "SELECT a.COMPANY_ID,a.KNITTING_SOURCE as SOURCE, a.KNITTING_COMPANY as SERVICE_COMPANY,  a.LOCATION_ID as LOCATION,  a.KNITTING_LOCATION_ID as SERVICE_LOCATION, b.PROD_ID, b.BODY_PART_ID, b.FEBRIC_DESCRIPTION_ID, b.GSM, b.WIDTH, c.BARCODE_NO, c.id as ROLL_ID, c.ROLL_NO, c.PO_BREAKDOWN_ID,c.QNTY,c.IS_SALES, c.roll_id as ROLL_ORIGIN_ID,c.BOOKING_WITHOUT_ORDER,c.BOOKING_NO, 1 as TYPE FROM INV_RECEIVE_MASTER a, pro_grey_prod_entry_dtls b, PRO_ROLL_DETAILS c where a.id=b.mst_id and b.id=c.is_sales and b.id=c.dtls_id and a.receive_basis<>9 and a.entry_form in(2,22,58) and c.entry_form in(2,22,58) and b.trans_id>0 and c.status_active=1 and c.is_deleted=0 $all_extra_cond and c.barcode_no=$barcode_no
            union all
            SELECT a.COMPANY_ID,a.KNITTING_SOURCE as SOURCE, a.KNITTING_COMPANY as SERVICE_COMPANY,  a.LOCATION_ID as LOCATION,  a.KNITTING_LOCATION_ID as SERVICE_LOCATION, b.PROD_ID, b.BODY_PART_ID, b.FEBRIC_DESCRIPTION_ID, b.GSM, b.WIDTH, c.BARCODE_NO, c.id as ROLL_ID, c.ROLL_NO, c.PO_BREAKDOWN_ID,c.QNTY,c.IS_SALES, c.id as ROLL_ORIGIN_ID,c.BOOKING_WITHOUT_ORDER,c.BOOKING_NO, 2 as TYPE from INV_RECEIVE_MASTER a, pro_grey_prod_entry_dtls b, PRO_ROLL_DETAILS c where a.id=b.mst_id and b.id=c.dtls_id and a.receive_basis<>9 and a.entry_form in(2,22,58) and c.entry_form in(2,22,58) and c.status_active=1 and c.is_deleted=0 and c.roll_id=0 $all_extra_cond and c.id in($roll_splt_before_batch_id)";
			} else {
				$sql = "SELECT a.COMPANY_ID,a.KNITTING_SOURCE as SOURCE, a.KNITTING_COMPANY as SERVICE_COMPANY,  a.LOCATION_ID as LOCATION,  a.KNITTING_LOCATION_ID as SERVICE_LOCATION, b.PROD_ID, b.BODY_PART_ID, b.FEBRIC_DESCRIPTION_ID, b.GSM, b.WIDTH, c.BARCODE_NO, c.id as ROLL_ID, c.ROLL_NO, c.PO_BREAKDOWN_ID, c.QNTY,c.IS_SALES, c.roll_id as ROLL_ORIGIN_ID,c.BOOKING_WITHOUT_ORDER,c.BOOKING_NO, 1 as TYPE FROM INV_RECEIVE_MASTER a, pro_grey_prod_entry_dtls b, PRO_ROLL_DETAILS c WHERE a.id=b.mst_id and b.id=c.dtls_id and a.receive_basis<>9 and a.entry_form in(2,22,58) and c.entry_form in(2,22,58) and b.trans_id>0 $all_extra_cond and c.status_active=1 and c.is_deleted=0 and c.barcode_no =$barcode_no";
			}
		}

		 //return $sql;
		$data_array = sql_select($sql);
		$poIDs = "";
		$salesIDs = "";
		foreach ($data_array as $row) {
			if ($row->IS_SALES == 1) {
				if (isset($salesIDs)) {
					$salesIDs .= $row->PO_BREAKDOWN_ID . ',';
				} else {
					$salesIDs = $row->PO_BREAKDOWN_ID;
				}

			} else {
				if (isset($row->PO_BREAKDOWN_ID)) {
					$poIDs .= $row->PO_BREAKDOWN_ID . ',';
				} else {
					$poIDs = $row->PO_BREAKDOWN_ID;
				}

			}
		}



		$poIDs_all = rtrim($poIDs, ",");
		$poIDs_alls = explode(",", $poIDs_all);
		$poIDs_alls = array_chunk($poIDs_alls, 999); // chunk for PO ID
		$po_id_cond = " and";
		foreach ($poIDs_alls as $dtls_id) {
			$ids = implode(',', $dtls_id);
			if (!$ids) {
				$ids = 0;
			}

			if ($po_id_cond == " and") {
				$po_id_cond .= "(a.id in(" . $ids . ")";
			} else {
				$po_id_cond .= " or a.id in(" . $ids . ")";
			}

		}
		$po_id_cond .= ")";

		$po_arr = array();
		$po_sql = sql_select("SELECT a.ID,a.PO_NUMBER,b.STYLE_REF_NO,a.JOB_NO_MST from wo_po_break_down a, wo_po_details_master b where a.job_id=b.id and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0  $po_id_cond");

		foreach ($po_sql as $po_row) {
			$po_arr[$po_row->ID]['po_number'] = $po_row->PO_NUMBER?$po_row->PO_NUMBER:'';
			$po_arr[$po_row->ID]['job_number'] = $po_row->JOB_NO_MST?$po_row->JOB_NO_MST:'';
			$po_arr[$po_row->ID]['style_ref_no'] = $po_row->STYLE_REF_NO?$po_row->STYLE_REF_NO:'';
		}

		$sales_arr = array();
		$sql_sales = sql_select("SELECT ID,JOB_NO,STYLE_REF_NO from fabric_sales_order_mst where status_active=1 and is_deleted=0");

		foreach ($sql_sales as $sales_row) {
			$sales_arr[$sales_row->ID]["po_number"] = $sales_row->JOB_NO?$sales_row->JOB_NO:"";
			$sales_arr[$sales_row->ID]["style_ref_no"] = $sales_row->STYLE_REF_NO?$sales_row->STYLE_REF_NO:"";
		}

		$transPoIds = sql_select("SELECT a.BARCODE_NO, a.PO_BREAKDOWN_ID from PRO_ROLL_DETAILS a where a.entry_form=83 and a.status_active=1 and a.is_deleted=0 and a.barcode_no=$barcode_no and a.re_transfer=0");

		$po_ids_arr = array();
		$transPoIdsArr = array();
		foreach ($transPoIds as $rowP) {
			$po_ids_arr[$rowP->PO_BREAKDOWN_ID] = $rowP->PO_BREAKDOWN_ID;
			$transPoIdsArr[$rowP->BARCODE_NO]['po_breakdown_id'] = $rowP->PO_BREAKDOWN_ID;
			if (isset($po_arr[$rowP->PO_BREAKDOWN_ID]['po_number'])) {
				$transPoIdsArr[$rowP->BARCODE_NO]['po_number'] = $po_arr[$rowP->PO_BREAKDOWN_ID]['po_number'];
				$transPoIdsArr[$rowP->BARCODE_NO]['job_number'] = $po_arr[$rowP->PO_BREAKDOWN_ID]['job_number'];
				$transPoIdsArr[$rowP->BARCODE_NO]['style_ref_no'] = $po_arr[$rowP->PO_BREAKDOWN_ID]['style_ref_no'];

			} else {
				$transPoIdsArr[$rowP->BARCODE_NO]['po_number'] = "";
				$transPoIdsArr[$rowP->BARCODE_NO]['job_number'] = "";
				$transPoIdsArr[$rowP->BARCODE_NO]['style_ref_no'] = "";
			}
			if (isset($sales_arr[$rowP->PO_BREAKDOWN_ID]['po_number'])) {
				$transPoIdsArr[$rowP->BARCODE_NO]['po_number'] = $sales_arr[$rowP->PO_BREAKDOWN_ID]['po_number'];
				$transPoIdsArr[$rowP->BARCODE_NO]['style_ref_no'] = $sales_arr[$rowP->PO_BREAKDOWN_ID]['style_ref_no'];

			} else {
				$transPoIdsArr[$rowP->BARCODE_NO]['po_number'] = "";
				$transPoIdsArr[$rowP->BARCODE_NO]['style_ref_no'] = "";
			}

		}
		$batch_dtls_arr = array();
		$batch_barcode_arr = array();
		$sql = "SELECT a.ID, a.ENTRY_FORM, a.BATCH_NO, a.COLOR_ID, b.BARCODE_NO, b.WIDTH_DIA_TYPE, b.BATCH_QNTY FROM pro_batch_create_mst a, pro_batch_create_dtls b WHERE a.id=b.mst_id and a.entry_form in(0,66) and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0 and b.barcode_no>0 and b.barcode_no =$barcode_no";
		$result = sql_select($sql);
		foreach ($result as $row) {
			$batch_dtls_arr[$row->BARCODE_NO]['batch_id'] = $row->ID;
			$batch_dtls_arr[$row->BARCODE_NO]['batch_no'] = $row->BATCH_NO." ";
			$batch_dtls_arr[$row->BARCODE_NO]['color_id'] = $row->COLOR_ID." ";
			$batch_dtls_arr[$row->BARCODE_NO]['color'] = $color_arr[$row->COLOR_ID];
			$batch_dtls_arr[$row->BARCODE_NO]['entry_form'] = $row->ENTRY_FORM;
			$batch_dtls_arr[$row->BARCODE_NO]['width_dia_type'] = $row->WIDTH_DIA_TYPE;
			$batch_dtls_arr[$row->BARCODE_NO]['batch_qnty'] = $row->BATCH_QNTY;
			$batch_barcode_arr[$row->BARCODE_NO] = $row->BARCODE_NO;
		}

		$compacting_arr = array();
		$compacting_details_arr = array();
		$sql_compact = sql_select("SELECT a.BARCODE_NO,b.PRODUCTION_QTY from PRO_ROLL_DETAILS a,pro_fab_subprocess_dtls b where b.roll_id=a.id and b.is_deleted=0 and b.status_active=1 and a.is_deleted=0 and a.status_active=1 and b.entry_page=33 and a.barcode_no in($barcode_no)");
		foreach ($sql_compact as $c_id) {
			$compacting_arr[] = $c_id->BARCODE_NO;
			$compacting_details_arr[$c_id->BARCODE_NO]['prod_qty'] = $c_id->PRODUCTION_QTY;
		}
		//return $compacting_details_arr;

		$k = 0;
		if (count($data_array) == 0) {
			return $return_array;
		}

		foreach ($data_array as $row) {

			if ($row->TYPE == 1) {
				$b_code = $row->BARCODE_NO;
			} else {
				$b_code = $split_roll_bar_bf_batch_arr[$row->ROLL_ORIGIN_ID];
			}
			$production_qty = 0;
			if (in_array($b_code, $compacting_arr)) {
				$production_qty = $compacting_details_arr[$b_code]['prod_qty'];
			} else {
				if (isset($batch_dtls_arr[$b_code]['batch_qnty'])) {
					$production_qty = $batch_dtls_arr[$b_code]['batch_qnty'];
				}

			}
			$return_array["index"]['roll_weight'] = 0;
			$return_array["index"]['roll_length'] = 0;
			$return_array["index"]['roll_width'] = 0;
			$return_array["index"]['mode'] = "save";
			$return_array["index"]['prod_id'] = 0;
			$return_array["index"]['mst_id'] = 0;
			$return_array["index"]['trans_id'] = 0;
			$return_array["index"]['dtls_id'] = 0;
			$return_array["index"]['qc_mst_id'] = 0;
			$return_array["index"]['total_penalty_point'] = 0;
			$return_array["index"]['total_point'] = 0;
			$return_array["index"]['fabric_grade'] = "";
			$return_array["index"]['comments'] = "";
			$return_array["index"]['roll_status'] = 0;
			$return_array["index"]['qc_date'] = "";
			$return_array["index"]['barcode_no'] = $b_code;
			$return_array["index"]['roll_id'] = $row->ROLL_ORIGIN_ID;
			$return_array["index"]['roll_no'] = $row->ROLL_NO;

			if (isset($batch_dtls_arr[$b_code]['batch_id'])) {
				$return_array["index"]['batch_no'] = $batch_dtls_arr[$b_code]['batch_no']." ";
				$return_array["index"]['color'] = $batch_dtls_arr[$b_code]['color']." ";
				$return_array["index"]['batch_id'] = $batch_dtls_arr[$b_code]['batch_id'];
				$return_array["index"]['width_dia_id'] = $batch_dtls_arr[$b_code]['width_dia_type'];
				$return_array["index"]['width_dia_val'] = $fabric_typee[$batch_dtls_arr[$b_code]['width_dia_type']];
				$return_array["index"]['qc_pass_qty'] = $batch_dtls_arr[$b_code]['batch_qnty'];

			} else {
				$return_array["index"]['batch_no'] = "";
				$return_array["index"]['color'] = "";
				$return_array["index"]['batch_id'] = 0;
				$return_array["index"]['width_dia_id'] = 0;
				$return_array["index"]['width_dia_val'] = "";
				$return_array["index"]['qc_pass_qty'] = 0;
			}

			$return_array["index"]['prod_qnty'] = $production_qty;
			if (isset($body_part[$row->BODY_PART_ID])) {
				$return_array["index"]['body_part'] = $body_part[$row->BODY_PART_ID];
			} else {
				$return_array["index"]['body_part'] = "";
			}

			$return_array["index"]['body_part_id'] = $row->BODY_PART_ID;
			$return_array["index"]['prod_id'] = $row->PROD_ID;
			$return_array["index"]['deter_d'] = $row->FEBRIC_DESCRIPTION_ID;
			$return_array["index"]['gsm'] = $row->GSM;
			$return_array["index"]['width'] = $row->WIDTH;
			$cons_comp = $constructtion_arr[$row->FEBRIC_DESCRIPTION_ID] . ", " . $composition_arr[$row->FEBRIC_DESCRIPTION_ID];
			$return_array["index"]['is_sales'] = $row->IS_SALES;
			$return_array["index"]['construction'] = $cons_comp;

			if (isset($row->COMPANY_ID)) {
				$return_array["index"]['company_id'] = $row->COMPANY_ID;
			} else {
				$return_array["index"]['company_id'] = 0;
			}

			if (isset($row->SOURCE)) {
				$return_array["index"]['source'] = $row->SOURCE;
			} else {
				$return_array["index"]['source'] = 0;
			}

			if (isset($row->SERVING_COMPANY)) {
				$return_array["index"]['serving_company'] = $row->SERVING_COMPANY;
			} else {
				$return_array["index"]['serving_company'] = 0;
			}

			if (isset($row->SERVICE_LOCATION)) {
				$return_array["index"]['service_location'] = $row->SERVICE_LOCATION;
			} else {
				$return_array["index"]['service_location'] = 0;
			}

			if (isset($row->LOCATION)) {
				$return_array["index"]['location'] = $row->LOCATION;
			} else {
				$return_array["index"]['location'] = 0;
			}

			if (!isset($transPoIdsArr[$b_code])) {
				$return_array["index"]['po_breakdown_id'] = $row->PO_BREAKDOWN_ID;
				$return_array["index"]['po_number'] = $po_arr[$row->PO_BREAKDOWN_ID]['po_number']?$po_arr[$row->PO_BREAKDOWN_ID]['po_number']:"";
				$return_array["index"]['job_number'] = $po_arr[$row->PO_BREAKDOWN_ID]['job_number']?$po_arr[$row->PO_BREAKDOWN_ID]['job_number']:"";
				$return_array["index"]['style_ref_no'] = $po_arr[$row->PO_BREAKDOWN_ID]['style_ref_no']?$po_arr[$row->PO_BREAKDOWN_ID]['style_ref_no']:"";

			}
			else {
				$return_array["index"]['po_breakdown_id'] = $transPoIdsArr[$b_code]['po_breakdown_id'];
				if (isset($po_arr[$transPoIdsArr[$b_code]['po_breakdown_id']]['po_number'])) {
					$return_array["index"]['po_number'] = $po_arr[$transPoIdsArr[$b_code]['po_breakdown_id']]['po_number'];
					$return_array["index"]['job_number'] = $po_arr[$transPoIdsArr[$b_code]['po_breakdown_id']]['job_number'];

					$return_array["index"]['style_ref_no'] = $po_arr[$transPoIdsArr[$b_code]['po_breakdown_id']]['style_ref_no'];

				}
				else {
					$return_array["index"]['po_number'] = "";
					$return_array["index"]['job_number'] = "";
					$return_array["index"]['style_ref_no'] = "";
				}



				if (isset($sales_arr[$row->PO_BREAKDOWN_ID]['po_number'])) {
					$return_array["index"]['po_number'] = $sales_arr[$row->PO_BREAKDOWN_ID]['po_number'];
					$return_array["index"]['style_ref_no'] = $sales_arr[$row->PO_BREAKDOWN_ID]['style_ref_no'];
					$return_array["index"]['job_number'] = "";

				} else {
					$return_array["index"]['po_number'] = "";
					$return_array["index"]['style_ref_no'] = "";
					$return_array["index"]['job_number'] = "";
				}

			}




			$return_array["index"]['qnty'] = number_format($row->QNTY, 2, '.', '');
			$return_array["index"]['booking_without_order'] = $row->BOOKING_WITHOUT_ORDER;
			if (isset($row->BOOKING_NO)) {
				$return_array["index"]['booking_no'] = $row->BOOKING_NO;
			} else {
				$return_array["index"]['booking_no'] = "";
			}

			$barcode_array[$b_code] = $b_code;
			$k++;
		}
		$return_array["index"]["array_ref_data"] = $this->finish_ref_data_array(0, "", 2, 0);
		return $return_array;

	}



	public function barcode_report_data($bar_code) {
		$data_array = array();
		$composition[0] = 0;
		$roll_status_arr = array(1 => 'QC Pass', 2 => 'Held Up', 3 => 'Reject');

		$composition = return_library_array("select id,composition_name from  lib_composition_array where status_active=1 and is_deleted=0 order by composition_name", "id", "composition_name");
		$supplier_arr = return_library_array("select id, short_name from  lib_supplier", "id", "short_name");
		$lib_buyer = return_library_array("select id, buyer_name from  lib_buyer", "id", "buyer_name");
		$lib_brand = return_library_array("select id, brand_name from  lib_brand", "id", "brand_name");
		$color_arr = return_library_array("select id, color_name from  lib_color", "id", "color_name");

		$bar_code = trim($bar_code);
		$data_sql = sql_select("SELECT a.RECV_NUMBER,a.RECEIVE_DATE, e.JOB_NO,e.STYLE_REF_NO, a.COMPANY_ID,a.BUYER_ID,a.ROLL_MAINTAINED, c.BARCODE_NO,c.MST_ID,c.DTLS_ID ,  b.PROD_ID, b.BODY_PART_ID, b.FEBRIC_DESCRIPTION_ID, b.MACHINE_NO_ID, b.GSM, b.WIDTH, b.COLOR_ID,b.YARN_PROD_ID, b.YARN_PROD_ID,b.YARN_LOT,b.BRAND_ID, b.YARN_COUNT , c.id as ROLL_ID, c.ROLL_NO, c.QNTY
          FROM INV_RECEIVE_MASTER a, pro_grey_prod_entry_dtls b, PRO_ROLL_DETAILS c ,wo_po_break_down d ,wo_po_details_master e
          WHERE a.id=b.mst_id and b.id=c.dtls_id and a.entry_form in(2) and c.entry_form in(2) and c.status_active=1 and c.is_deleted=0 and d.id=c.po_breakdown_id  and e.id=d.job_id and
          e.status_active=1 and d.is_deleted=0 and c.barcode_no='$bar_code' group by  a.RECV_NUMBER,a.RECEIVE_DATE,e.JOB_NO,e.STYLE_REF_NO, a.COMPANY_ID,a.BUYER_ID,a.ROLL_MAINTAINED, c.BARCODE_NO,c.MST_ID,c.DTLS_ID ,  b.PROD_ID, b.BODY_PART_ID, b.FEBRIC_DESCRIPTION_ID, b.MACHINE_NO_ID, b.GSM, b.WIDTH, b.COLOR_ID,b.YARN_PROD_ID, b.YARN_PROD_ID,b.YARN_LOT, b.BRAND_ID,b.YARN_COUNT , c.id , c.ROLL_NO, c.QNTY ");

		if (count($data_sql) <= 0) {
			return $data_array;
		}

		if (isset($lib_buyer[$data_sql[0]->BUYER_ID])) {
			$data_array["BASIC_INFO"]["BUYER"] = $lib_buyer[$data_sql[0]->BUYER_ID];
		} else {
			$data_array["BASIC_INFO"]["BUYER"] = "";
		}

		$data_array["BASIC_INFO"]["JOB"] = $data_sql[0]->JOB_NO;
		$data_array["BASIC_INFO"]["STYLE"] = $data_sql[0]->STYLE_REF_NO;
		//return $data_array;
		if (count($data_sql) <= 0) {
			return $data_array;
		}

		$all_color = str_replace("'", "", $data_sql[0]->COLOR_ID);
		$buyerId = str_replace("'", "", $data_sql[0]->BUYER_ID);
		$compId = str_replace("'", "", $data_sql[0]->COMPANY_ID);

		if (!$all_color) {
			$all_color = 0;
		}

		$color_sql = "SELECT ID,COLOR_NAME from lib_color where id in($all_color)";

		$machine_sql = "SELECT ID,DIA_WIDTH from lib_machine_name  ";
		$machine_arr = array();
		$machine_arr[0] = 0;
		foreach (sql_select($machine_sql) as $vals) {
			$machine_arr[$vals->ID] = $vals->DIA_WIDTH;
		}

		$color_names = "";
		foreach (sql_select($color_sql) as $val) {
			if ($color_names) {
				$color_names .= "," . $val->COLOR_NAME;
			} else {
				$color_names = $val->COLOR_NAME;
			}

		}

		$sql_deter = "SELECT a.ID, a.CONSTRUCTION, b.COPMPOSITION_ID, b.PERCENT from lib_yarn_count_determina_mst a, lib_yarn_count_determina_dtls b where a.id=b.mst_id";
		$data = sql_select($sql_deter);
		foreach ($data as $row) {
			$constructtion_arr[$row->ID] = $row->CONSTRUCTION;
			if (isset($composition_arr[$row->ID])) {
				if (isset($composition[$row->COPMPOSITION_ID])) {
					$composition_arr[$row->ID] .= $composition[$row->COPMPOSITION_ID] . " " . $row->PERCENT . "% ";
				}

			} else {
				if (isset($composition[$row->COPMPOSITION_ID])) {
					$composition_arr[$row->ID] = $composition[$row->COPMPOSITION_ID] . " " . $row->PERCENT . "% ";
				}

			}

		}

		foreach ($data_sql as $rows) {

			$yarn_count_arr = array_unique(explode(",", $rows->YARN_COUNT));
			$all_yarn_count = "";
			foreach ($yarn_count_arr as $count_id) {
				$all_yarn_count .= return_field_value("yarn_count", "lib_yarn_count", "id='$count_id'", "yarn_count") . ",";
			}
			$all_yarn_count = chop($all_yarn_count, ",");

			$composition_st = "";
			if (isset($constructtion_arr[$rows->FEBRIC_DESCRIPTION_ID])) {
				$composition_st .= $constructtion_arr[$rows->FEBRIC_DESCRIPTION_ID];
			}

			if (isset($composition_arr[$rows->FEBRIC_DESCRIPTION_ID])) {
				$composition_st .= ' ' . $composition_arr[$rows->FEBRIC_DESCRIPTION_ID];
			}

			$yarn_prod_arr = array_filter(array_unique(explode(",", $rows->YARN_PROD_ID)));
			$all_supplier = "";

			if (!empty($yarn_prod_arr)) {
				$yarn_prod_sql = sql_select("select SUPPLIER_ID from PRODUCT_DETAILS_MASTER where item_category_id =1 and id in (" . implode(",", $yarn_prod_arr) . ")");
				foreach ($yarn_prod_sql as $row) {
					if ($all_supplier) {
						$all_supplier .= "," . $supplier_arr[$row->SUPPLIER_ID];
					} else {
						$all_supplier = $supplier_arr[$row->SUPPLIER_ID];
					}

				}
			}

			$all_supplier = implode(",", array_unique(explode(",", chop($all_supplier, ','))));
			$data_array["KNITTING_INFO"]["PRODUCTION_ID"] = $rows->RECV_NUMBER;
			$data_array["KNITTING_INFO"]["DATE"] = $rows->RECEIVE_DATE;
			$data_array["YARN_INFO"]["DESCRIPTION"] = trim($composition_st);
			$data_array["YARN_INFO"]["YARN_COUNT"] = trim($all_yarn_count);
			$data_array["YARN_INFO"]["LOT"] = trim($rows->YARN_LOT);
			if (isset($lib_brand[$rows->BRAND_ID])) {
				$data_array["YARN_INFO"]["BRAND"] = $lib_brand[$rows->BRAND_ID];
			} else {
				$data_array["YARN_INFO"]["BRAND"] = "";
			}

			//$data_array["index"]["array_ref_data"]= $this->array_ref_data($buyerId);
		}
		$qc_mst_sql = sql_select("SELECT  ROLL_STATUS, ID,QC_NAME, ROLL_WIDTH, ROLL_WEIGHT,  ROLL_LENGTH, REJECT_QNTY, QC_DATE, TOTAL_PENALTY_POINT, TOTAL_POINT, FABRIC_GRADE, COMMENTS FROM PRO_QC_RESULT_MST where status_active=1 and is_deleted=0 and barcode_no='$bar_code'");
		if (count($qc_mst_sql) <= 0) {
			$data_array["QA_INFO"]["QC_NAME"] = "";
			$data_array["QA_INFO"]["QC_STATUS"] = 0;
			$data_array["QA_INFO"]["QC_DATE"] = "";
			$data_array["QA_INFO"]["ROLL_WEIGHT"] = 0;
			$data_array["QA_INFO"]["FABRIC_GRADE"] = "";
			$data_array["QA_INFO"]["TOTAL_PENALTY_POINT"] = 0;
			$data_array["QA_INFO"]["TOTAL_POINT"] = 0;
		}
		foreach ($qc_mst_sql as $v) {

			if (isset($v->QC_NAME)) {
				$data_array["QA_INFO"]["QC_NAME"] = $v->QC_NAME;
			} else {
				$data_array["QA_INFO"]["QC_NAME"] = "";
			}

			if (isset($roll_status_arr[$v->ROLL_STATUS])) {
				$data_array["QA_INFO"]["QC_STATUS"] = $roll_status_arr[$v->ROLL_STATUS];
			} else {
				$data_array["QA_INFO"]["QC_STATUS"] = 0;
			}

			if ($v->QC_DATE) {
				$data_array["QA_INFO"]["QC_DATE"] = date("d-m-Y", strtotime($v->QC_DATE));
			} else {
				$data_array["QA_INFO"]["QC_DATE"] = "";
			}

			$data_array["QA_INFO"]["ROLL_WEIGHT"] = $v->ROLL_WEIGHT;

			if (isset($v->FABRIC_GRADE)) {
				$data_array["QA_INFO"]["FABRIC_GRADE"] = $v->FABRIC_GRADE;
			} else {
				$data_array["QA_INFO"]["FABRIC_GRADE"] = "";
			}

			//$data_array["QA_INFO"]["ROLL_INCH"]=$v->ROLL_WIDTH;
			//$data_array["QA_INFO"]["ROLL_YDS"]=$v->ROLL_LENGTH;
			/*if(isset($v->REJECT_QNTY))
	            $data_array["QA_INFO"]["REJECT_QNTY"]=$v->REJECT_QNTY;
	            else
			*/

			$data_array["QA_INFO"]["TOTAL_PENALTY_POINT"] = $v->TOTAL_PENALTY_POINT;
			$data_array["QA_INFO"]["TOTAL_POINT"] = $v->TOTAL_POINT;

			/*if(isset($v->COMMENTS))
				            $data_array["QA_INFO"]["COMMENTS"]=$v->COMMENTS;
				            else
			*/

		}

		$batch_info = sql_select("SELECT a.COLOR_ID, a.BATCH_NO,a.BATCH_DATE   FROM pro_batch_create_mst a,pro_batch_create_dtls b where a.id=b.mst_id and  a.status_active=1 and b.is_deleted=0 and b.barcode_no='$bar_code'");
		if (count($batch_info) <= 0) {
			$data_array["BATCH_INFO"]["BATCH_NO"] = "";
			$data_array["BATCH_INFO"]["BATCH_DATE"] = "";
			$data_array["BATCH_INFO"]["COLOR_ID"] = "";
		}
		foreach ($batch_info as $v) {

			if (isset($v->BATCH_NO)) {
				$data_array["BATCH_INFO"]["BATCH_NO"] = $v->BATCH_NO;
			} else {
				$data_array["BATCH_INFO"]["BATCH_NO"] = "";
			}

			if (isset($v->BATCH_DATE)) {
				$data_array["BATCH_INFO"]["BATCH_DATE"] = $v->BATCH_DATE;
			} else {
				$data_array["BATCH_INFO"]["BATCH_DATE"] = "";
			}

			if (isset($color_arr[$v->COLOR_ID])) {
				$data_array["BATCH_INFO"]["COLOR_ID"] = $color_arr[$v->COLOR_ID];
			} else {
				$data_array["BATCH_INFO"]["COLOR_ID"] = "";
			}

		}
		return $data_array;
	}
	function tabwise_sewingline_data($mac = "") {
		$data_array = array();
		$sqls = sql_select("SELECT  ID, COMPANY_ID, LOCATION_ID, FLOOR_ID, SEWING_LINE, MAC FROM tabwise_sewing_line Where MAC = '$mac' ORDER BY ID desc");
		$i = 0;
		foreach ($sqls as $v) {
			if ($i == 1) {
				break;
			}

			$data_array[$i]["company_id"] = $v->COMPANY_ID;
			$data_array[$i]["location_id"] = $v->LOCATION_ID;
			$data_array[$i]["floor_id"] = $v->FLOOR_ID;
			$data_array[$i]["sewing_line"] = $v->SEWING_LINE;
			$data_array[$i]["mac"] = $v->MAC;

			$i++;
		}
		return $data_array;
	}

	function tabwise_sewingline_style_item_data($company_id, $location_id, $floor_id, $line_id, $job_no="", $po_number="", $internal_ref="", $style_ref="") 
	{
		$data_array = array();
		$production_date = date("d-M-Y");
		$prev_prod_date = date('d-M-Y',strtotime('-10 days',strtotime($production_date)));

		$buyer_arr = return_library_array("select id,buyer_name from  lib_buyer", "id", "buyer_name");
		
		$sqls = sql_select("SELECT a.ID as JOB_ID,A.JOB_NO,b.ID as PO_ID,b.PO_NUMBER,a.BUYER_NAME, A.STYLE_REF_NO,B.GROUPING, C.ITEM_NUMBER_ID, E.ITEM_NAME
		FROM WO_PO_DETAILS_MASTER a, WO_PO_break_down b, wo_po_color_size_breakdown c,pro_garments_production_mst d, lib_garment_item e, lib_country f
		WHERE a.id = b.JOB_ID AND b.id = c.PO_BREAK_DOWN_ID and b.id=d.PO_BREAK_DOWN_ID and d.item_number_id=e.id and d.country_id=f.id and d.production_type=4 AND a.status_active = 1 AND a.is_deleted = 0 AND b.status_active = 1 AND b.is_deleted = 0 AND c.status_active = 1 AND c.is_deleted = 0 and d.serving_company=$company_id and d.location=$location_id and d.floor_id=$floor_id and d.sewing_line=$line_id and d.production_date between '$prev_prod_date' and  '$production_date'
		GROUP BY a.ID,A.JOB_NO, a.BUYER_NAME, A.STYLE_REF_NO,B.GROUPING, C.ITEM_NUMBER_ID, E.ITEM_NAME, b.ID,b.PO_NUMBER");
		//, C.COUNTRY_ID
		$i = 0;
		$job_id_arr = [];
		foreach ($sqls as $v) {
			$job_id_arr[$v->JOB_ID]=$v->JOB_ID;
		}

		$var_production_config = fnc_variable_engine($company_id, 83);

		if(!empty($job_id_arr))
		{
			$job_ids = implode(",", $job_id_arr);
			$issue_qnty_arr=sql_select("SELECT A.ITEM_NUMBER_ID, A.COUNTRY_ID,c.JOB_NO_MST,c.JOB_ID, a.PO_BREAK_DOWN_ID,
			(CASE WHEN A.PRODUCTION_TYPE=5 THEN B.PRODUCTION_QNTY ELSE 0 END) AS OUTPUT_QNTY,
			(CASE WHEN A.PRODUCTION_TYPE=4 THEN B.PRODUCTION_QNTY ELSE 0 END) AS INPUT_QNTY
			from pro_garments_production_mst a, pro_garments_production_dtls b, wo_po_color_size_breakdown c
			where a.id=b.mst_id and b.COLOR_SIZE_BREAK_DOWN_ID=c.id and a.production_type in(4,5) and a.SERVING_COMPANY=$company_id and a.LOCATION=$location_id and a.FLOOR_ID=$floor_id and SEWING_LINE=$line_id and c.JOB_ID in($job_ids)
			and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0");
			$issue_data_arr=array();
			$sewing_output_arr=array();
			$sewing_input_arr=array();
			foreach($issue_qnty_arr as $row)
			{
				if($var_production_config->SEWING_PRODUCTION==2)
				{
					$sewing_output_arr[$row->JOB_ID][$row->PO_BREAK_DOWN_ID][$row->ITEM_NUMBER_ID]+=$row->OUTPUT_QNTY;
					$sewing_input_arr[$row->JOB_ID][$row->PO_BREAK_DOWN_ID][$row->ITEM_NUMBER_ID]+=$row->INPUT_QNTY;
				}
				else
				{
					$sewing_output_arr[$row->JOB_ID][$row->ITEM_NUMBER_ID]+=$row->OUTPUT_QNTY;//[$row->COUNTRY_ID]
					$sewing_input_arr[$row->JOB_ID][$row->ITEM_NUMBER_ID]+=$row->INPUT_QNTY;//[$row->COUNTRY_ID]
				}
			}
		} 

		foreach ($sqls as $v) {
			if($var_production_config->SEWING_PRODUCTION==2)
			{
				$input_qnty = $sewing_input_arr[$v->JOB_ID][$v->PO_ID][$v->ITEM_NUMBER_ID];
				$output_qnty = $sewing_output_arr[$v->JOB_ID][$v->PO_ID][$v->ITEM_NUMBER_ID];
			}
			else
			{
				$input_qnty = $sewing_input_arr[$v->JOB_ID][$v->ITEM_NUMBER_ID];
				$output_qnty = $sewing_output_arr[$v->JOB_ID][$v->ITEM_NUMBER_ID];
			}
			
			if($output_qnty < $input_qnty)
			{
				$data_array[$i]["JOB_ID"] = $v->JOB_ID;
				$data_array[$i]["JOB_NO"] = $v->JOB_NO;
				$data_array[$i]["BUYER_NAME"] = $buyer_arr[$v->BUYER_NAME];
				$data_array[$i]["STYLE_REF_NO"] = $v->STYLE_REF_NO;
				$data_array[$i]["PO_NUMBER"] =($var_production_config->SEWING_PRODUCTION==2)? $v->PO_NUMBER :"";
				$data_array[$i]["PO_ID"] = ($var_production_config->SEWING_PRODUCTION==2)? $v->PO_ID :"";
				$data_array[$i]["ITEM_NUMBER_ID"] = $v->ITEM_NUMBER_ID;
				$data_array[$i]["ITEM_NAME"] = $v->ITEM_NAME;
				$data_array[$i]["IR_NUMBER"] = $v->GROUPING;
				$data_array[$i]["INPUT_QNTY"] = $input_qnty;
				$data_array[$i]["OUTPUT_QNTY"] = $output_qnty;
				$i++;
			}
		}
		return $data_array;
	}

	function tabwise_sewingline_style_item_data_old($company_id, $location_id, $floor_id, $line_id, $job_no="", $po_number="", $internal_ref="", $style_ref="") 
	{
		$data_array = array();
		$production_date = date("d-M-Y");
		$prev_prod_date = date('d-M-Y',strtotime('-10 days',strtotime($production_date)));

		$buyer_arr = return_library_array("select id,buyer_name from  lib_buyer", "id", "buyer_name");

		$query_pro_variable = "SELECT SEWING_PRODUCTION FROM VARIABLE_SETTINGS_PRODUCTION WHERE VARIABLE_LIST =83 and company_name=$company_id and status_active=1 and is_deleted=0 order by id ASC";
		
		$table_pro_variable = $this->db->query($query_pro_variable)->result();
		
		$sqls = sql_select("SELECT a.ID as JOB_ID,A.JOB_NO,b.ID as PO_ID,b.PO_NUMBER,a.BUYER_NAME, A.STYLE_REF_NO,B.GROUPING, C.ITEM_NUMBER_ID, E.ITEM_NAME, F.COUNTRY_NAME
		FROM WO_PO_DETAILS_MASTER a, WO_PO_break_down b, wo_po_color_size_breakdown c,pro_garments_production_mst d, lib_garment_item e, lib_country f
		WHERE a.id = b.JOB_ID AND b.id = c.PO_BREAK_DOWN_ID and b.id=d.PO_BREAK_DOWN_ID and d.item_number_id=e.id and d.country_id=f.id and d.production_type=4 AND a.status_active = 1 AND a.is_deleted = 0 AND b.status_active = 1 AND b.is_deleted = 0 AND c.status_active = 1 AND c.is_deleted = 0 and d.serving_company=$company_id and d.location=$location_id and d.floor_id=$floor_id and d.sewing_line=$line_id and d.production_date between '$prev_prod_date' and  '$production_date'
		GROUP BY a.ID,A.JOB_NO, a.BUYER_NAME, A.STYLE_REF_NO,B.GROUPING, C.ITEM_NUMBER_ID, E.ITEM_NAME, F.COUNTRY_NAME,b.ID,b.PO_NUMBER");
		//, C.COUNTRY_ID
		//print_r("SELECT a.ID as JOB_ID,A.JOB_NO,a.BUYER_NAME, A.STYLE_REF_NO,B.GROUPING, C.ITEM_NUMBER_ID, E.ITEM_NAME, C.COUNTRY_ID, F.COUNTRY_NAME FROM WO_PO_DETAILS_MASTER a, WO_PO_break_down b, wo_po_color_size_breakdown c,pro_garments_production_mst d, lib_garment_item e, lib_country f WHERE a.id = b.JOB_ID AND b.id = c.PO_BREAK_DOWN_ID and b.id=d.PO_BREAK_DOWN_ID and d.item_number_id=e.id and d.country_id=f.id and d.production_type=4 AND a.status_active = 1 AND a.is_deleted = 0 AND b.status_active = 1 AND b.is_deleted = 0 AND c.status_active = 1 AND c.is_deleted = 0 and d.serving_company=$company_id and d.location=$location_id and d.floor_id=$floor_id and d.sewing_line=$line_id and d.production_date between '$prev_prod_date' and  '$production_date' GROUP BY a.ID,A.JOB_NO, a.BUYER_NAME, A.STYLE_REF_NO,B.GROUPING, C.ITEM_NUMBER_ID, C.COUNTRY_ID, E.ITEM_NAME, F.COUNTRY_NAME");die;
		//and d.production_date='$production_date'
		//, B.ID AS PO_ID
		//, B.ID
		$i = 0;
		$job_id_arr = [];
		foreach ($sqls as $v) {
			$job_id_arr[$v->JOB_ID]=$v->JOB_ID;
		}
		if(!empty($job_id_arr))
		{
			$job_ids = implode(",", $job_id_arr);
			$issue_qnty_arr=sql_select("SELECT A.ITEM_NUMBER_ID, A.COUNTRY_ID,c.JOB_NO_MST,c.JOB_ID,
			(CASE WHEN A.PRODUCTION_TYPE=5 THEN B.PRODUCTION_QNTY ELSE 0 END) AS OUTPUT_QNTY,
			(CASE WHEN A.PRODUCTION_TYPE=4 THEN B.PRODUCTION_QNTY ELSE 0 END) AS INPUT_QNTY
			from pro_garments_production_mst a, pro_garments_production_dtls b, wo_po_color_size_breakdown c
			where a.id=b.mst_id and b.COLOR_SIZE_BREAK_DOWN_ID=c.id and a.production_type in(4,5) and a.SERVING_COMPANY=$company_id and a.LOCATION=$location_id and a.FLOOR_ID=$floor_id and SEWING_LINE=$line_id and c.JOB_ID in($job_ids)
			and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0");
			$issue_data_arr=array();
			$sewing_output_arr=array();
			$sewing_input_arr=array();
			foreach($issue_qnty_arr as $row)
			{
				$sewing_output_arr[$row->JOB_ID][$row->COUNTRY_ID][$row->ITEM_NUMBER_ID]+=$row->OUTPUT_QNTY;
				$sewing_input_arr[$row->JOB_ID][$row->COUNTRY_ID][$row->ITEM_NUMBER_ID]+=$row->INPUT_QNTY;
			}
		} 

		foreach ($sqls as $v) {
			$input_qnty = $sewing_input_arr[$v->JOB_ID][$v->COUNTRY_ID][$v->ITEM_NUMBER_ID];
			$output_qnty = $sewing_output_arr[$v->JOB_ID][$v->COUNTRY_ID][$v->ITEM_NUMBER_ID];

			if($output_qnty < $input_qnty)
			{
				$data_array[$i]["JOB_ID"] = $v->JOB_ID;
				$data_array[$i]["JOB_NO"] = $v->JOB_NO;
				$data_array[$i]["BUYER_NAME"] = $buyer_arr[$v->BUYER_NAME];
				$data_array[$i]["STYLE_REF_NO"] = $v->STYLE_REF_NO;
				$data_array[$i]["PO_NUMBER"] =($table_pro_variable[0]->SEWING_PRODUCTION==2)? $v->PO_NUMBER :"";
				$data_array[$i]["PO_ID"] = ($table_pro_variable[0]->SEWING_PRODUCTION==2)? $v->PO_ID :"";
				$data_array[$i]["ITEM_NUMBER_ID"] = $v->ITEM_NUMBER_ID;
				$data_array[$i]["ITEM_NAME"] = $v->ITEM_NAME;
				$data_array[$i]["COUNTRY_ID"] = $v->COUNTRY_ID;
				$data_array[$i]["COUNTRY_NAME"] = $v->COUNTRY_NAME;
				$data_array[$i]["IR_NUMBER"] = $v->GROUPING;
				$data_array[$i]["INPUT_QNTY"] = $input_qnty;
				$data_array[$i]["OUTPUT_QNTY"] = $output_qnty;
				$i++;
			}
			
		}
		return $data_array;
	}

	function create_tracking($save_obj) {

		$response_obj = json_decode($save_obj);
		$mst_arr = array();

		$db_type = return_db_type();

		$mst_tbl = "TRACKING_INFO";
		if ($db_type == 0) {
			$mst_tbl = strtolower($mst_tbl);

		}

		if ($response_obj->status == true) {

			$this->db->trans_start();
			$phone = $response_obj->phone;
			$latitude = $response_obj->latitude;
			$longitude = $response_obj->longitude;

			$pc_date_time = date("d-M-Y h:i:s A", time());
			if ($db_type == 0) {
				$pc_date_time = date("Y-m-d H:i:s", time());
			}

			$id = return_next_id("id", $mst_tbl, "", "", $db_type);

			if ($response_obj->mode == "save") {

				$mst_arr = array(
					'phone' => $phone,
					'latitude' => $latitude,
					'longitude' => $longitude,
					'insert_date' => $pc_date_time,
				);
				$mst_arr['id'] = $id;
				$this->insertData($mst_arr, $mst_tbl);

			}

			$this->db->trans_complete();
			if ($this->db->trans_status() == TRUE) {
				return $resultset["status"] = "Successful";
			} else {
				$resultset["status"] = "Failed";
			}
		} else {
			return $resultset["status"] = "Failed";
		}
	}

	function create_tabwise_line($save_obj) {

		$response_obj = json_decode($save_obj);
		$mst_arr = array();

		$db_type = return_db_type();

		$mst_tbl = "TABWISE_SEWING_LINE";
		if ($db_type == 0) {
			$mst_tbl = strtolower($mst_tbl);

		}

		if ($response_obj->status == true) {

			$this->db->trans_start();
			$company_id = $response_obj->company_id;
			$location_id = $response_obj->location_id;
			$floor_id = $response_obj->floor_id;
			$sewing_line = $response_obj->sewing_line;
			$mac = $response_obj->mac;
			$device_id = $response_obj->device_id;
			$user_id = $response_obj->user_id;

			$pc_date_time = date("d-M-Y h:i:s A", time());
			if ($db_type == 0) {
				$pc_date_time = date("Y-m-d H:i:s", time());
			}

			$sewing_qc_config_data = $this->db->query("SELECT F.FLOOR_NAME, d.LINE_NUMBER, A.DEVICE_ID,B.ITEM_NAME, A.PO_NUMBER,A.JOB_NO,A.INTERNAL_REF
			from tabwise_sewing_line a,lib_garment_item b, prod_resource_mst d,lib_prod_floor f
			where a.status_active=1 and a.item_number_id=b.id and a.sewing_line=d.id and a.floor_id=f.id and a.inserted_by=$user_id")->row();
			if(!empty($sewing_qc_config_data) && $device_id!=$sewing_qc_config_data->DEVICE_ID)
			{
				$line_library = return_library_array("SELECT ID,LINE_NAME from lib_sewing_line", "id", "line_name");
				$line_numbers = explode(",", $sewing_qc_config_data->LINE_NUMBER);
				$line_names = "";
				foreach($line_numbers as $line)
				{
					$line_names .= $line_library[$line] . ", ";
				}
				$line_names = rtrim($line_names, ", ");

				$ref_data = "IR Number:$sewing_qc_config_data->INTERNAL_REF**Item:$sewing_qc_config_data->ITEM_NAME**Floor:$sewing_qc_config_data->FLOOR_NAME**Line:$line_names";
				return array("status" => "Failed", "msg"=> "Configuration found with this account on another device. ", "reference_data" => $ref_data);
			}
			
			$id = return_next_id("id", $mst_tbl, "", "", $db_type);

			if ($response_obj->mode == "save") {

				$mst_arr = array(
					'COMPANY_ID' => $company_id,
					'LOCATION_ID' => $location_id,
					'FLOOR_ID' => $floor_id,
					'SEWING_LINE' => $sewing_line,
					'MAC' => $mac,
					'DEVICE_ID' => $device_id,
					'INSERTED_BY' => $user_id,
					'INSERT_DATE' => $pc_date_time,
					'JOB_ID' => $response_obj->job_id,
					'JOB_NO' => $response_obj->job_no,
					'PO_BREAK_DOWN_ID' => $response_obj->po_break_down_id,
					'PO_NUMBER' => $response_obj->po_number,
					'ITEM_NUMBER_ID' => $response_obj->item_number_id,					
					'OPERATION_IDS' => $response_obj->operation_ids,
					'IR_NUMBER' => $response_obj->ir_number
				);//'COUNTRY_ID' => $response_obj->country_id,
				$mst_arr['ID'] = $id;
				$this->insertData($mst_arr, $mst_tbl);
			}

			$this->db->trans_complete();
			if ($this->db->trans_status() == TRUE) {
				$this->db->query("UPDATE tabwise_sewing_line SET status_active=0, is_deleted=0 where inserted_by=$user_id and id!=$id");
				return $resultset["status"] = "Successful";
			} else {
				$resultset["status"] = "Failed";
			}
		} else {
			return $resultset["status"] = "Failed";
		}
	}

	//kniting...............
	function create_qc_result($save_obj) {

		//$save_obj='{"status":true,"mode":"save","UPDATE_ID":0,"data":{"index":{"BARCODE_NO":19023496688,"BUYER_ID":4,"COMPANY_ID":1,"DTLS_ID":1228897,"ROLL_MAINTAINED":1,"QC_DATE":"12-12-2012","ROLL_ID":8190553,"ROLL_NO":15,"QC_NAME":"test","ROLL_INCH":"5","ROLL_KG":22.6,"ROLL_YDS":1390.0779527557077,"TOTAL_PENALTY_POINT":"28","TOTAL_POINT":"14.5028","INSERTED_BY":1,"UPDATED_BY":1,"UPDATE_ID":1075,"REJECT_QNTY":"0.0","FABRIC_GRADE":"A","ROLL_STATUS":1,"COMMENTS":""},"list_data":[{"DEFECT_ID":11,"COUNT":4,"INCH_ID":6,"PENALTY":16},{"DEFECT_ID":15,"COUNT":3,"INCH_ID":4,"PENALTY":12}]}}';

		$response_obj = json_decode($save_obj);
		//return $response_obj->status;
		$qc_mst_arr = array();
		$qc_dtls_arr = array();
		$db_type = return_db_type();
		if ($db_type == 0) {
			$mst_tbl = "PRO_QC_RESULT_MST";
			$dtls_tbl = "pro_qc_result_dtls";
		} else {
			$mst_tbl = "PRO_QC_RESULT_MST";
			$dtls_tbl = "PRO_QC_RESULT_DTLS";
		}

		if ($response_obj->status == true) {

			$BARCODE_NO = $response_obj->data->index->BARCODE_NO;
			$barcode_no = "'" . str_replace("'", "", $BARCODE_NO) . "'";
			$is_exists = sql_select("SELECT   barcode_no from PRO_QC_RESULT_MST where status_active=1    and barcode_no in($barcode_no)  and is_deleted=0");
			if (count($is_exists) > 0 && $response_obj->mode == 'save') {
				return $resultset["status"] = "PleaseChangeMode";
			}

			$this->db->trans_start();
			$plan_to_delete = "";
			$qc_mst = return_next_id_by_sequence("PRO_QC_RESULT_MST_SEQ", "PRO_QC_RESULT_MST", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
			$rejectQty = $response_obj->data->index->REJECT_QNTY;
			$roll_status_id = $response_obj->data->index->ROLL_STATUS;
			$company_id = $response_obj->data->index->COMPANY_ID;
			$variable_sqls = sql_select("SELECT AUTO_UPDATE from variable_settings_production where company_name =$company_id and variable_list in(47) and item_category_id=13 and is_deleted=0 and status_active=1");
			foreach ($variable_sqls as $val) {
				$autoProductionQuantityUpdatebyQC = $val->AUTO_UPDATE;
			}
			$qnty = $response_obj->data->index->ROLL_KG;
			$qc_qnty = ($roll_status_id != 2) ? ($qnty - $rejectQty) : $qnty;
			$DTLS_ID = $response_obj->data->index->DTLS_ID;
			$ROLL_MAINTAINED = $response_obj->data->index->ROLL_MAINTAINED;

			$QC_DATE = $response_obj->data->index->QC_DATE;
			$ROLL_ID = $response_obj->data->index->ROLL_ID;
			$ROLL_NO = $response_obj->data->index->ROLL_NO;
			$QC_NAME = $response_obj->data->index->QC_NAME;
			$COMMENTS = $response_obj->data->index->COMMENTS;
			$ROLL_KG = $response_obj->data->index->ROLL_KG;
			$ROLL_YDS = $response_obj->data->index->ROLL_YDS;
			$ROLL_INCH = $response_obj->data->index->ROLL_INCH;
			$TOTAL_PENALTY_POINT = $response_obj->data->index->TOTAL_PENALTY_POINT;
			$TOTAL_POINT = $response_obj->data->index->TOTAL_POINT;
			$FABRIC_GRADE = $response_obj->data->index->FABRIC_GRADE;
			$INSERTED_BY = $response_obj->data->index->INSERTED_BY;
			$UPDATED_BY = $response_obj->data->index->UPDATED_BY;
			$update_id = $response_obj->data->index->UPDATE_ID;
			if ($db_type == 0) {
				$pc_date_time = date("Y-m-d H:i:s", time());
				$qc_dates_up = date("Y-m-d", strtotime($QC_DATE));
			} else {
				$pc_date_time = date("d-M-Y h:i:s A", time());
				$qc_dates_up = date("d-M-Y", strtotime($QC_DATE));

			}

			if($FABRIC_GRADE =="")
			{
				$this->db->trans_rollback();
				return $resultset["status"] = "Failed";
			}

			//return 0;die;

			if ($response_obj->mode == "save") {
				$qc_mst_arr = array(
					'PRO_DTLS_ID' => $DTLS_ID,
					'ROLL_MAINTAIN' => $ROLL_MAINTAINED,
					'BARCODE_NO' => $BARCODE_NO,
					'QC_DATE' => $qc_dates_up,
					'ROLL_ID' => $ROLL_ID,
					'ROLL_NO' => $ROLL_NO,
					'QC_NAME' => $QC_NAME,
					'COMMENTS' => $COMMENTS,
					'ROLL_WEIGHT' => $ROLL_KG,
					'ROLL_LENGTH' => $ROLL_YDS,
					'ROLL_WIDTH' => $ROLL_INCH,
					'REJECT_QNTY' => $rejectQty,
					'TOTAL_PENALTY_POINT' => $TOTAL_PENALTY_POINT,
					'TOTAL_POINT' => $TOTAL_POINT,
					'ENTRY_FORM' => 283,
					'ROLL_STATUS' => $roll_status_id,
					'FABRIC_GRADE' => $FABRIC_GRADE,
				);
				$qc_mst_arr['ID'] = $qc_mst;
				$qc_mst_arr['INSERTED_BY'] = $INSERTED_BY;
				$qc_mst_arr['INSERT_DATE'] = $pc_date_time;
				$qc_mst_arr['IS_TAB'] = 1;
				$this->insertData($qc_mst_arr, $mst_tbl);

			}
			else if ($response_obj->mode == "update") {
				$qc_mst = $update_id;
				$qc_mst_arr_up = array(
					'QC_DATE' => $qc_dates_up,
					'QC_NAME' => $QC_NAME,
					'COMMENTS' => $COMMENTS,
					'ROLL_WEIGHT' => $ROLL_KG,
					'ROLL_LENGTH' => $ROLL_YDS,
					'ROLL_WIDTH' => $ROLL_INCH,
					'REJECT_QNTY' => $rejectQty,
					'TOTAL_PENALTY_POINT' => $TOTAL_PENALTY_POINT,
					'TOTAL_POINT' => $TOTAL_POINT,
					'ROLL_STATUS' => $roll_status_id,
					'FABRIC_GRADE' => $FABRIC_GRADE,
				);
				$qc_mst_arr_up['UPDATE_DATE'] = $pc_date_time;
				$qc_mst_arr_up['UPDATE_BY'] = $INSERTED_BY;
				$this->updateData($mst_tbl, $qc_mst_arr_up, array('ID' => $update_id));

			}
			else if ($response_obj->mode == "delete") {
				//$plan_to_delete .= $response_obj->PLAN_ID . ",";
				//$this->deleteRowByAttribute('PRO_QC_RESULT_MST', array('ID' => $response_obj->PLAN_ID));
			}

			if ($response_obj->mode == "update") {
				$this->db->query("delete from pro_qc_result_dtls where mst_id ='$update_id'");
			}
			$dtls_data = $response_obj->data->list_data;
			foreach ($dtls_data as $val) {
				$qc_dtls = return_next_id_by_sequence("PRO_QC_RESULT_DTLS_SEQ", "PRO_QC_RESULT_DTLS", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
				$qc_dtls_arr = array(
					'ID' => $qc_dtls,
					'MST_ID' => $qc_mst,
					'DEFECT_NAME' => $val->DEFECT_ID,
					'DEFECT_COUNT' => $val->COUNT,
					'FOUND_IN_INCH' => $val->INCH_ID,
					'PENALTY_POINT' => $val->PENALTY,
					'INSERTED_BY' => $INSERTED_BY,
					'INSERT_DATE' => $pc_date_time,
				);
				$this->insertData($qc_dtls_arr, $dtls_tbl);
			}

			//------------------------------------------------------------------------------------
			$obs_dtls_data_arr = $response_obj->data->obs_list_data;
			foreach ($obs_dtls_data_arr as $val) {
				$qc_dtls = return_next_id_by_sequence("PRO_QC_RESULT_DTLS_SEQ", "PRO_QC_RESULT_DTLS", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
				$qc_dtls_arr = array(
					'ID' => $qc_dtls,
					'MST_ID' => $qc_mst,
					'DEFECT_NAME' => $val->OBS_ID,
					'FOUND_IN_INCH' => $val->OBS_INCH,
					'DEPARTMENT' => $val->OBS_DEPARTMENT,
					'FORM_TYPE' => 2,
					'INSERTED_BY' => $INSERTED_BY,
					'INSERT_DATE' => $pc_date_time,
				);


				$this->insertData($qc_dtls_arr, $dtls_tbl);
			}
			//------------------------------------------------------------------------------------

			$grey_prop_po = array();
			if ($autoProductionQuantityUpdatebyQC == 1 && $roll_status_id != 2) {
				$pro_roll_sql = "UPDATE PRO_ROLL_DETAILS SET qnty=$qc_qnty, qc_pass_qnty=$qc_qnty, reject_qnty='$rejectQty' WHERE barcode_no = '$BARCODE_NO' AND entry_form=2 and dtls_id=$DTLS_ID";

				$rID3 = $this->db->query($pro_roll_sql);

				if ($rID3) {
					$roll_qc_rj_result = sql_select("SELECT po_breakdown_id as PO_ID, sum(qnty) as QC_QNTY,sum(reject_qnty) as REJECT_QNTY from PRO_ROLL_DETAILS where dtls_id=$DTLS_ID and status_active=1 and is_deleted=0 and entry_form=2 group by po_breakdown_id");
					foreach ($roll_qc_rj_result as $v) {
						$grey_receive_qnty += $v->QC_QNTY;
						$reject_fabric_receive += $v->REJECT_QNTY;
						$grey_prop_po[$v->PO_ID]['RECV'] += $v->QC_QNTY;
						$grey_prop_po[$v->PO_ID]['REJECT'] += $v->REJECT_QNTY;
					}

					$pro_grey_prod_sql = "UPDATE pro_grey_prod_entry_dtls SET grey_receive_qnty='$grey_receive_qnty',reject_fabric_receive='$reject_fabric_receive' WHERE id=$DTLS_ID";

					foreach ($grey_prop_po as $key => $row) 
					{
						$pro_grey_prop_sql = "UPDATE order_wise_pro_details SET quantity=".$row['RECV'].",returnable_qnty=".$row['REJECT']." WHERE dtls_id=$DTLS_ID and po_breakdown_id=$key and entry_form=2";
						$rID5 = $this->db->query($pro_grey_prop_sql);
					}
					$rID4 = $this->db->query($pro_grey_prod_sql);
				}
			}

			if ($this->db->trans_status() === FALSE) {
				$this->db->trans_rollback();
				return $resultset["status"] = "Failed";
			} else {
				$this->db->trans_commit();
				$this->db->trans_complete();
				return $resultset["status"] = "Successful";
			}
		} else {
			return $resultset["status"] = "Failed";
		}
	}

	function create_finish_qc_result($save_obj) {

		$response_obj = json_decode($save_obj);
		//return $response_obj->status;
		$inv_receive_arr = array();
		$transaction_arr = array();
		$qc_dtls_arr = array();
		$db_type = return_db_type();
		$new_array_color = array();
		$prod_data_array = array();
		$prod_new_array = array();

		$color_arr = return_library_array("select id, color_name from lib_color", 'id', 'color_name');
		if ($response_obj->status == true) {
			$BARCODE_NO = $response_obj->data->index->BARCODE_NO;
			$barcode_no = "'" . str_replace("'", "", $BARCODE_NO) . "'";
			$is_exists = sql_select("SELECT   barcode_no from PRO_FINISH_FABRIC_RCV_DTLS where status_active=1    and barcode_no in($barcode_no)  and is_deleted=0");
			if (count($is_exists) > 0 && $response_obj->mode == 'save') {
				return $resultset["status"] = "PleaseChangeMode";
			}
			$COMPANY_ID = $response_obj->data->index->COMPANY_ID;
			$SERVICE_COMPANY = $response_obj->data->index->SERVICE_COMPANY;
			$SOURCE = $response_obj->data->index->SOURCE;
			$SERVICE_LOCATION = $response_obj->data->index->SERVICE_LOCATION;
			$LOCATION = $response_obj->data->index->LOCATION;
			$MACHINE_ID = $response_obj->data->index->MACHINE_ID;
			$SHIFT = $response_obj->data->index->SHIFT;
			$COLOR = $response_obj->data->index->COLOR;
			$CONS_COMP = $response_obj->data->index->CONS_COMP;
			$DETER_ID = $response_obj->data->index->DETER_ID;
			$DIA = $response_obj->data->index->DIA;
			$DIA_TYPE = $response_obj->data->index->DIA_TYPE;
			$GSM = $response_obj->data->index->GSM;
			$COMMENTS = $response_obj->data->index->COMMENTS;
			$TOTAL_PENALTY_POINT = $response_obj->data->index->TOTAL_PENALTY_POINT;
			$TOTAL_POINT = $response_obj->data->index->TOTAL_POINT;
			$FABRIC_GRADE = $response_obj->data->index->FABRIC_GRADE;
			$IS_SALES_ID = $response_obj->data->index->IS_SALES_ID;
			$ORDER_ID = $response_obj->data->index->ORDER_ID;
			$QC_PASS_QTY = $response_obj->data->index->QC_PASS_QTY;
			$REJECT_QTY = $response_obj->data->index->REJECT_QTY;
			$ROLL_ID = $response_obj->data->index->ROLL_ID;
			$ROLL_NO = $response_obj->data->index->ROLL_NO;
			$ROLL_WGT = $response_obj->data->index->ROLL_WGT;
			$RECEIVE_DATE = $response_obj->data->index->RECEIVE_DATE;
			$INSERTED_BY = $response_obj->data->index->INSERTED_BY;
			$UPDATED_BY = $response_obj->data->index->UPDATED_BY;
			$WGT_LOST = $response_obj->data->index->WGT_LOST;

			$BATCH_ID = $response_obj->data->index->BATCH_ID;
			$BATCH_NO = $response_obj->data->index->BATCH_NO;
			$BODY_PART_ID = $response_obj->data->index->BODY_PART_ID;
			$BOOKING_NO = $response_obj->data->index->BOOKING_NO;
			$BOOKING_WITHOUT_ORDER = $response_obj->data->index->BOOKING_WITHOUT_ORDER;
			$MST_ID = $response_obj->MST_ID;
			$PROD_ID = $response_obj->PROD_ID;
			$TRANS_ID = $response_obj->TRANS_ID;
			$DTLS_ID = $response_obj->DTLS_ID;
			$QC_MST_ID = $response_obj->QC_MST_ID;
			$UPDATE_ID = $response_obj->UPDATE_ID;

			$ROLL_STATUS = $response_obj->data->index->ROLL_STATUS;
			$ROLL_WIDTH = $response_obj->data->index->ROLL_WIDTH;
			$ROLL_WEIGHT = $response_obj->data->index->ROLL_WEIGHT;
			$ROLL_LENGTH = $response_obj->data->index->ROLL_LENGTH;
			$variable_sqls = sql_select("SELECT AUTO_UPDATE from variable_settings_production where company_name =$COMPANY_ID and variable_list in(47) and item_category_id=2 and is_deleted=0 and status_active=1");
			$autoProductionQuantityUpdatebyQC = 2;
			foreach ($variable_sqls as $val) {
				$autoProductionQuantityUpdatebyQC = $val->AUTO_UPDATE;
			}

			if ($db_type == 0) {
				$pc_date_time = date("Y-m-d H:i:s", time());
				$receive_date = date("Y-m-d", strtotime($RECEIVE_DATE));
			} else {
				$pc_date_time = date("d-M-Y h:i:s A", time());
				$receive_date = date("d-M-Y", strtotime($RECEIVE_DATE));

			}
			$this->db->trans_start();
			if ($response_obj->mode == "update") {
				if ($autoProductionQuantityUpdatebyQC == 1) {
					$pro_roll_sql = "UPDATE PRO_ROLL_DETAILS SET REJECT_QNTY='$REJECT_QTY',QC_PASS_QNTY='$QC_PASS_QTY', WGT_LOST_QTY='$WGT_LOST',  UPDATED_BY='$INSERTED_BY', UPDATE_DATE='$pc_date_time' WHERE DTLS_ID=$DTLS_ID and BARCODE_NO='$BARCODE_NO' and ENTRY_FORM=66 and ROLL_ID='$ROLL_ID'";
					$rowIdRoll = $this->db->query($pro_roll_sql);

					if($BOOKING_WITHOUT_ORDER !=1)
					{
						$pro_orderwise_sql = "UPDATE ORDER_WISE_PRO_DETAILS SET RETURNABLE_QNTY='$REJECT_QTY',QUANTITY='$QC_PASS_QTY', WGT_LOST_QTY='$WGT_LOST', UPDATED_BY='$INSERTED_BY', UPDATE_DATE='$pc_date_time' WHERE DTLS_ID=$DTLS_ID and PO_BREAKDOWN_ID='$ORDER_ID' and ENTRY_FORM=66 and PROD_ID='$PROD_ID' ";
						$rowIdOrderwise = $this->db->query($pro_orderwise_sql);
					}


					$pro_dtls_sql = "UPDATE PRO_FINISH_FABRIC_RCV_DTLS SET REJECT_QTY='$REJECT_QTY',RECEIVE_QNTY='$QC_PASS_QTY', WGT_LOST_QTY='$WGT_LOST', UPDATED_BY='$INSERTED_BY', UPDATE_DATE='$pc_date_time' WHERE id=$DTLS_ID and BARCODE_NO='$BARCODE_NO' and PROD_ID='$PROD_ID'";
					$rowIdDtls = $this->db->query($pro_dtls_sql);

					$pro_trans_sql = "UPDATE inv_transaction SET CONS_REJECT_QNTY='$REJECT_QTY',CONS_QUANTITY='$QC_PASS_QTY' ,UPDATED_BY='$INSERTED_BY', UPDATE_DATE='$pc_date_time' WHERE id='$TRANS_ID' and MST_ID='$MST_ID' and PROD_ID='$PROD_ID'";
					$rowIdTrans = $this->db->query($pro_trans_sql);

				}
				$qc_mst_arr_up = array(
					'QC_DATE' => $receive_date,

					'COMMENTS' => $COMMENTS,
					'ROLL_WEIGHT' => $QC_PASS_QTY,
					'ROLL_LENGTH' => $ROLL_LENGTH,
					'ROLL_WIDTH' => $ROLL_WIDTH,
					'REJECT_QNTY' => $REJECT_QTY,
					'TOTAL_PENALTY_POINT' => $TOTAL_PENALTY_POINT,
					'TOTAL_POINT' => $TOTAL_POINT,
					'ROLL_STATUS' => $ROLL_STATUS,
					'FABRIC_GRADE' => $FABRIC_GRADE,
				);
				$qc_mst_arr_up['UPDATE_DATE'] = $pc_date_time;
				$qc_mst_arr_up['UPDATE_BY'] = $INSERTED_BY;
				$up_qc_row = $this->updateData(csf("PRO_QC_RESULT_MST", $db_type), $qc_mst_arr_up, array('ID' => $QC_MST_ID));
				$dtls_del = $this->db->query("delete from pro_qc_result_dtls where mst_id ='$QC_MST_ID'");

				$dtls_data = $response_obj->data->list_data;
				foreach ($dtls_data as $val) {
					$qc_dtls = return_next_id_by_sequence("PRO_QC_RESULT_DTLS_SEQ", csf("PRO_QC_RESULT_DTLS", $db_type), "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
					$qc_dtls_arr = array(
						'ID' => $qc_dtls,
						'MST_ID' => $QC_MST_ID,
						'DEFECT_NAME' => $val->DEFECT_ID,
						'DEFECT_COUNT' => $val->COUNT,
						'FOUND_IN_INCH' => $val->INCH_ID,
						'PENALTY_POINT' => $val->PENALTY,
						'INSERTED_BY' => $INSERTED_BY,
						'INSERT_DATE' => $pc_date_time,
					);
					$this->insertData($qc_dtls_arr, csf("PRO_QC_RESULT_DTLS", $db_type));
				}
				if ($this->db->trans_status() === FALSE) {
					$this->db->trans_rollback();
					return $resultset["status"] = "Failed";
				} else {
					$this->db->trans_commit();
					$this->db->trans_complete();
					return $resultset["status"] = "Successful";
				}

			}

			$company_id = $response_obj->data->index->COMPANY_ID;
			$id_dtls = return_next_id_by_sequence("PRO_FIN_FAB_RCV_DTLS_PK_SEQ", "PRO_FINISH_FABRIC_RCV_DTLS", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
			$id_roll = return_next_id_by_sequence("PRO_ROLL_DTLS_PK_SEQ", "PRO_ROLL_DETAILS", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
			$id_prop = return_next_id_by_sequence("ORDER_WISE_PROP_PK_SEQ", "ORDER_WISE_PRO_DETAILS", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
			$id_dtls_batch = return_next_id_by_sequence("PRO_BATCH_CREATE_DTLS_PK_SEQ", "pro_batch_create_dtls", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);

			//$id=return_next_id_by_sequence( "INV_RECEIVE_MASTER_PK_SEQ","INV_RECEIVE_MASTER","","",0,"",0,0,0,0,0,0,0 );
			$new_mrr_number = explode("*", return_next_id_by_sequence("", "INV_RECEIVE_MASTER", "", 1, $company_id, "FFPR", 66, date("Y", time()), 0, 0, 0, 0, 0));

			$variable_sqls = sql_select("SELECT AUTO_UPDATE from variable_settings_production where company_name =$company_id and variable_list =15 and item_category_id=2 and is_deleted=0 and status_active=1");
			$fabric_store_auto_update = 0;
			foreach ($variable_sqls as $val) {
				$fabric_store_auto_update = $val->AUTO_UPDATE;
			}

			if ($response_obj->mode == "save") {
				$hour = date("h");
				$mrr_sql = "SELECT MST_ID from auto_mrr_maintain_tab where company_id='$COMPANY_ID' and source='$SOURCE' and serving_company='$SERVICE_COMPANY' and serving_location='$SERVICE_LOCATION' and mrr_date='$receive_date' and curr_hour='$hour'";
				$mrr_arr = sql_select($mrr_sql);
				$today_sql = sql_select("SELECT MST_ID from auto_mrr_maintain_tab where mrr_date='$receive_date'");
				if (count($today_sql) == 0) {
					$this->db->query("delete from  auto_mrr_maintain_tab where mrr_date<'$receive_date'");
				}
				if (count($mrr_arr) == 0) {

					$auto_mrr_id = return_next_id("id", "auto_mrr_maintain_tab", "", "", $db_type);
					$id = return_next_id_by_sequence("INV_RECEIVE_MASTER_PK_SEQ", "INV_RECEIVE_MASTER", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
					$inv_receive_arr = array(
						'ID' => $id,
						'RECV_NUMBER_PREFIX' => $new_mrr_number[1],
						'RECV_NUMBER_PREFIX_NUM' => $new_mrr_number[2],
						'RECV_NUMBER' => $new_mrr_number[0],
						'RECEIVE_DATE' => $receive_date,
						'COMPANY_ID' => $COMPANY_ID,
						'KNITTING_SOURCE' => $SOURCE,
						'KNITTING_COMPANY' => $SERVICE_COMPANY,
						'ITEM_CATEGORY' => 2,
						'ENTRY_FORM' => 66,
						'CHALLAN_NO' => 0,
						'STORE_ID' => 0,
						'LOCATION_ID' => $LOCATION,
						'KNITTING_LOCATION_ID' => $SERVICE_LOCATION,
					);
					$inv_receive_arr['INSERTED_BY'] = $INSERTED_BY;
					$inv_receive_arr['INSERT_DATE'] = $pc_date_time;

					$inv_rcv_id = $this->insertData($inv_receive_arr, csf("INV_RECEIVE_MASTER", $db_type));

					$auto_mrr_arr = array(
						'ID' => $auto_mrr_id,
						'COMPANY_ID' => $COMPANY_ID,
						'SOURCE' => $SOURCE,
						'SERVING_COMPANY' => $SERVICE_COMPANY,
						'SERVING_LOCATION' => $SERVICE_LOCATION,
						'MRR_DATE' => $receive_date,
						'MST_ID' => $id,
						'MRR_NO' => $new_mrr_number[0],
						'CURR_HOUR' => $hour,
					);

					$inv_rcv_id = $this->insertData($auto_mrr_arr, csf("AUTO_MRR_MAINTAIN_TAB", $db_type));

				} else {
					$id = $mrr_arr[0]->MST_ID;
				}

				$productDataArray = array();
				$stockArray = array();
				$productData = sql_select("SELECT ID, COMPANY_ID, DETARMINATION_ID, CURRENT_STOCK, GSM, DIA_WIDTH, COLOR from PRODUCT_DETAILS_MASTER where item_category_id=2 and status_active=1 and is_deleted=0");
				foreach ($productData as $row) {
					$productDataArray[$row->COMPANY_ID][$row->DETARMINATION_ID][$row->GSM][$row->DIA_WIDTH][$row->COLOR] = $row->ID;
					$stockArray[$row->ID] = $row->CURRENT_STOCK;
				}
			}

			/*if (!in_array($COLOR, $new_array_color)) {
				$color_id = return_id($COLOR, $color_arr, "lib_color", "color_name", "");
				$new_array_color[$color_id] = $COLOR;
			} else {
				$color_id = array_search($COLOR, $new_array_color);
			}*/

			$color_id =$COLOR;

			if (isset($productDataArray[$company_id][$DETER_ID][$GSM][$DIA][$color_id])) {
				$prod_id = $productDataArray[$company_id][$DETER_ID][$GSM][$DIA][$color_id];
			} else {
				$prod_id = "";
			}

			if (str_replace("'", "", $fabric_store_auto_update) == 1) {
				$stock_qnty = $QC_PASS_QTY;
				$last_purchased_qnty = $QC_PASS_QTY;
			} else {
				$stock_qnty = 0;
				$last_purchased_qnty = 0;
			}

			$prod_name_dtls = trim($CONS_COMP) . ", " . trim($GSM) . ", " . trim($DIA);

			if ($prod_id == "") {
				$dataString = $DETER_ID . "**" . $CONS_COMP . "**" . $prod_name_dtls . "**" . $color_id . "**" . trim($GSM) . "**" . trim($DIA);
				$prod_id = array_search($dataString, $prod_data_array);
				if ($prod_id == "") {
					$product_id = return_next_id_by_sequence("PRODUCT_DETAILS_MASTER_PK_SEQ", "PRODUCT_DETAILS_MASTER", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
					$prod_id = $product_id;
					$prod_data_array[$prod_id] = $dataString;
					$prod_new_array[$prod_id] = $stock_qnty;

				} else {
					if ($prod_new_array[$prod_id]) {
						$prod_new_array[$prod_id] += $stock_qnty;
					} else {
						$prod_new_array[$prod_id] = $stock_qnty;
					}

				}
			} else {
				$current_stock = $stockArray[$prod_id] + $stock_qnty;
				$prod_id_array[] = $prod_id;
				//$data_array_prod_update[$prod_id] = explode("*", ($avg_rate_per_unit . "*'" . $last_purchased_qnty . "'*'" . $current_stock . "'*'" . $stock_value . "'*" . $_SESSION['logic_erp']['user_id'] . "*'" . $pc_date_time . "'"));
			}

			if (str_replace("'", "", $fabric_store_auto_update) == 1) {
				$order_rate = 0;
				$order_amount = 0;
				$cons_rate = 0;
				$cons_amount = 0;
				$id_trans = return_next_id_by_sequence("INV_TRANSACTION_PK_SEQ", "inv_transaction", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
				$rate = 0;
				$amount = 0;
				$transaction_arr = array(
					'ID' => $id_trans,
					'MST_ID' => $id,
					'COMPANY_ID' => $company_id,
					'PROD_ID' => $prod_id,
					'ITEM_CATEGORY' => 2,
					'TRANSACTION_TYPE' => 1,
					'TRANSACTION_DATE' => $receive_date,
					'STORE_ID' => 0,
					'ORDER_UOM' => 12,
					'ORDER_QNTY' => $QC_PASS_QTY,
					'ORDER_RATE' => $rate,
					'ORDER_AMOUNT' => $amount,
					'CONS_UOM' => 12,
					'CONS_QUANTITY' => $QC_PASS_QTY,
					'CONS_REJECT_QNTY' => $REJECT_QTY,
					'CONS_RATE' => $rate,
					'CONS_AMOUNT' => $amount,
					'BALANCE_QNTY' => $QC_PASS_QTY,
					'BALANCE_AMOUNT' => $amount,
					'MACHINE_ID' => $MACHINE_ID,
					'RACK' => 0,
					'SELF' => 0,
				);

				$transaction_arr['INSERTED_BY'] = $INSERTED_BY;
				$transaction_arr['INSERT_DATE'] = $pc_date_time;
				$trans_row_id = $this->insertData($transaction_arr, csf("inv_transaction", $db_type));
			} else {
				$id_trans = 0;
			}
			$production_dtls_arr = array(
				'ID' => $id_dtls,
				'MST_ID' => $id,
				'TRANS_ID' => $id_trans,
				'PROD_ID' => $prod_id,
				'BATCH_ID' => $BATCH_ID,
				'BODY_PART_ID' => $BODY_PART_ID,
				'FABRIC_DESCRIPTION_ID' => $DETER_ID,
				'GSM' => $GSM,
				'WIDTH' => $DIA,
				'DIA_WIDTH_TYPE' => $DIA_TYPE,
				'COLOR_ID' => $color_id,
				'PRODUCTION_QTY' => $ROLL_WGT,
				'RECEIVE_QNTY' => $QC_PASS_QTY,
				'REJECT_QTY' => $REJECT_QTY,
				'ORDER_ID' => $ORDER_ID,
				'MACHINE_NO_ID' => $MACHINE_ID,
				'SHIFT_NAME' => $SHIFT,
				'RACK_NO' => 0,
				'SHELF_NO' => 0,
				'ROLL_ID' => $ROLL_ID,
				'ROLL_NO' => $ROLL_NO,
				'IS_TAB' => 1,
				'BARCODE_NO' => $BARCODE_NO,
				'WGT_LOST_QTY'=> $WGT_LOST
			);

			$production_dtls_arr['INSERTED_BY'] = $INSERTED_BY;
			$production_dtls_arr['INSERT_DATE'] = $pc_date_time;
			$prod_dlts_row_id = $this->insertData($production_dtls_arr, csf("PRO_FINISH_FABRIC_RCV_DTLS", $db_type));

			$roll_dtls_arr = array(
				'ID' => $id_roll,
				'BARCODE_NO' => $BARCODE_NO,
				'MST_ID' => $id,
				'DTLS_ID' => $id_dtls,
				'PO_BREAKDOWN_ID' => $ORDER_ID,
				'ENTRY_FORM' => 66,
				'QNTY' => $ROLL_WGT,
				'REJECT_QNTY' => $REJECT_QTY,
				'QC_PASS_QNTY' => $QC_PASS_QTY,
				'ROLL_NO' => $ROLL_NO,
				'ROLL_ID' => $ROLL_ID,
				'IS_SALES' => $IS_SALES_ID,
				'BOOKING_WITHOUT_ORDER' => $BOOKING_WITHOUT_ORDER,
				'BOOKING_NO' => $BOOKING_NO,
				'WGT_LOST_QTY'=> $WGT_LOST
			);

			$roll_dtls_arr['INSERTED_BY'] = $INSERTED_BY;
			$roll_dtls_arr['INSERT_DATE'] = $pc_date_time;
			$roll_dtls_row_id = $this->insertData($roll_dtls_arr, csf("PRO_ROLL_DETAILS", $db_type));

			if($BOOKING_WITHOUT_ORDER !=1)
			{
				$prop_dtls_arr = array(
					'ID' => $id_prop,
					'TRANS_ID' => $id_trans,
					'TRANS_TYPE' => 1,
					'ENTRY_FORM' => 66,
					'DTLS_ID' => $id_dtls,
					'PO_BREAKDOWN_ID' => $ORDER_ID,
					'PROD_ID' => $prod_id,
					'COLOR_ID' => $color_id,
					'QUANTITY' => $QC_PASS_QTY,
					'RETURNABLE_QNTY' => $REJECT_QTY,
					'IS_SALES' => $IS_SALES_ID,
					'WGT_LOST_QTY'=> $WGT_LOST
				);

				$prop_dtls_arr['INSERTED_BY'] = $INSERTED_BY;
				$prop_dtls_arr['INSERT_DATE'] = $pc_date_time;
				$prop_dtls_row_id = $this->insertData($prop_dtls_arr, csf("ORDER_WISE_PRO_DETAILS", $db_type));
			}

			$avg_rate_per_unit = 0;
			$stock_value = 0;
			foreach ($prod_new_array as $prod_id => $current_stock) {
				$product_data = explode("**", $prod_data_array[$prod_id]);
				$deterId = $product_data[0];
				$consComp = trim($product_data[1]);
				$prod_name_dtls = $product_data[2];
				$color_id = $product_data[3];
				$gsm = $product_data[4];
				$dia = $product_data[5];
				$last_purchased_qnty = $current_stock;

				$product_dtls_mst_arr = array(
					'ID' => $prod_id,
					'COMPANY_ID' => $COMPANY_ID,
					'ITEM_CATEGORY_ID' => 2,
					'DETARMINATION_ID' => $DETER_ID,
					'ITEM_DESCRIPTION' => $CONS_COMP,
					'PRODUCT_NAME_DETAILS' => $prod_name_dtls,
					'UNIT_OF_MEASURE' => 12,
					'AVG_RATE_PER_UNIT' => $avg_rate_per_unit,
					'LAST_PURCHASED_QNTY' => $last_purchased_qnty,
					'CURRENT_STOCK' => $current_stock,
					'STOCK_VALUE' => $stock_value,
					'COLOR' => $color_id,
					'GSM' => $gsm,
					'DIA_WIDTH' => $dia,
					'ENTRY_FORM' => 66,
				);

				$product_dtls_mst_arr['INSERTED_BY'] = $INSERTED_BY;
				$product_dtls_mst_arr['INSERT_DATE'] = $pc_date_time;
				$prod_dlts_mst_row_id = $this->insertData($product_dtls_mst_arr, csf("PRODUCT_DETAILS_MASTER", $db_type));

			}
			$qc_name_by_id = return_field_value("user_name", "user_passwd", "id='$INSERTED_BY'  ", "user_name");

			$qc_mst = return_next_id_by_sequence("PRO_QC_RESULT_MST_SEQ", "PRO_QC_RESULT_MST", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
			$qc_mst_arr = array(
				'PRO_DTLS_ID' => $id_dtls,
				'ROLL_MAINTAIN' => 1,
				'BARCODE_NO' => $BARCODE_NO,
				'QC_DATE' => $receive_date,
				'ROLL_ID' => $ROLL_ID,
				'ROLL_NO' => $ROLL_NO,
				'QC_NAME' => $qc_name_by_id,
				'COMMENTS' => $COMMENTS,
				'ROLL_WEIGHT' => $QC_PASS_QTY,
				'ROLL_LENGTH' => $ROLL_LENGTH,
				'ROLL_WIDTH' => $ROLL_WIDTH,
				'REJECT_QNTY' => $REJECT_QTY,
				'ENTRY_FORM' => 267,
				'TOTAL_PENALTY_POINT' => $TOTAL_PENALTY_POINT,
				'TOTAL_POINT' => $TOTAL_POINT,
				'FABRIC_GRADE' => $FABRIC_GRADE,
				'ROLL_STATUS' => $ROLL_STATUS,
			);
			$qc_mst_arr['ID'] = $qc_mst;
			$qc_mst_arr['INSERTED_BY'] = $INSERTED_BY;
			$qc_mst_arr['INSERT_DATE'] = $pc_date_time;
			$qc_mst_arr['IS_TAB'] = 1;
			$this->insertData($qc_mst_arr, csf("PRO_QC_RESULT_MST", $db_type));


			/*if ($response_obj->mode == "update") {
				$this->db->query("delete from pro_qc_result_dtls where mst_id ='$update_id'");
			}*/

			$dtls_data = $response_obj->data->list_data;
			foreach ($dtls_data as $val) {
				$qc_dtls = return_next_id_by_sequence("PRO_QC_RESULT_DTLS_SEQ", "PRO_QC_RESULT_DTLS", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
				$qc_dtls_arr = array(
					'ID' => $qc_dtls,
					'MST_ID' => $qc_mst,
					'DEFECT_NAME' => $val->DEFECT_ID,
					'DEFECT_COUNT' => $val->COUNT,
					'FOUND_IN_INCH' => $val->INCH_ID,
					'PENALTY_POINT' => $val->PENALTY,
					'INSERTED_BY' => $INSERTED_BY,
					'INSERT_DATE' => $pc_date_time,
				);
				$this->insertData($qc_dtls_arr, csf("pro_qc_result_dtls", $db_type));
			}



			$this->db->trans_complete();
			if ($this->db->trans_status() == TRUE) {
				return $resultset["status"] = "Successful";
			} else {
				$resultset["status"] = "Failed";
			}
		} else {
			return $resultset["status"] = "Failed";
		}
	}

	//save kniting with observation.........................................
	function create_observation_kniting_qc_result($save_obj) {

		$response_obj = json_decode($save_obj);
		$qc_mst_arr = array();
		$qc_dtls_arr = array();

		if ($response_obj->status == true) {

			$BARCODE_NO = trim($response_obj->data->index->BARCODE_NO);

			$is_exists = sql_select("SELECT   barcode_no from PRO_QC_RESULT_MST where status_active=1 and barcode_no =$BARCODE_NO  and is_deleted=0");
			if (count($is_exists) > 0 && $response_obj->mode == 'save') {
				return $resultset["status"] = "PleaseChangeMode";
			}

			$this->db->trans_start();

			$plan_to_delete = "";
			$qc_mst = return_next_id_by_sequence("PRO_QC_RESULT_MST_SEQ", "PRO_QC_RESULT_MST", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
			$rejectQty = $response_obj->data->index->REJECT_QNTY;
			$roll_status_id = $response_obj->data->index->ROLL_STATUS;
			$company_id = $response_obj->data->index->COMPANY_ID;
			$variable_sqls = sql_select("SELECT AUTO_UPDATE from variable_settings_production where company_name =$company_id and variable_list in(47) and item_category_id=13 and is_deleted=0 and status_active=1");
			foreach ($variable_sqls as $val) {
				$autoProductionQuantityUpdatebyQC = $val->AUTO_UPDATE;
			}
			$qnty = $response_obj->data->index->ROLL_KG;
			//$qc_qnty = ($roll_status_id != 2) ? ($qnty - $rejectQty) : $qnty;
			$qc_qnty =  $qnty;
			$DTLS_ID = $response_obj->data->index->DTLS_ID;
			$ROLL_MAINTAINED = $response_obj->data->index->ROLL_MAINTAINED;

			$QC_DATE = $response_obj->data->index->QC_DATE;
			$ROLL_ID = $response_obj->data->index->ROLL_ID;
			$ROLL_NO = $response_obj->data->index->ROLL_NO;
			$QC_NAME = $response_obj->data->index->QC_NAME;
			$COMMENTS = $response_obj->data->index->COMMENTS;
			$ROLL_KG = $response_obj->data->index->ROLL_KG;
			$ROLL_YDS = $response_obj->data->index->ROLL_YDS;
			$ROLL_INCH = $response_obj->data->index->ROLL_INCH;
			$TOTAL_PENALTY_POINT = $response_obj->data->index->TOTAL_PENALTY_POINT;
			$TOTAL_POINT = $response_obj->data->index->TOTAL_POINT;
			$FABRIC_GRADE = $response_obj->data->index->FABRIC_GRADE;
			$INSERTED_BY = $response_obj->data->index->INSERTED_BY;
			$UPDATED_BY = $response_obj->data->index->UPDATED_BY;
			$update_id = $response_obj->data->index->UPDATE_ID;

			//$QC_MC_NAME = $response_obj->data->index->QC_MC_NAME;

			if ($this->db->dbdriver == 'mysqli') {
				$pc_date_time = date("Y-m-d H:i:s", time());
				$qc_dates_up = date("Y-m-d", strtotime($QC_DATE));
			} else {
				$pc_date_time = date("d-M-Y h:i:s A", time());
				$qc_dates_up = date("d-M-Y", strtotime($QC_DATE));
			}

			if ($response_obj->mode == "save") {
				$qc_mst_arr = array(
					'ID' => $qc_mst,
					'PRO_DTLS_ID' => $DTLS_ID,
					'ROLL_MAINTAIN' => $ROLL_MAINTAINED,
					'BARCODE_NO' => $BARCODE_NO,
					'QC_DATE' => $qc_dates_up,
					'ROLL_ID' => $ROLL_ID,
					'ROLL_NO' => $ROLL_NO,
					'QC_NAME' => $QC_NAME,
					'COMMENTS' => $COMMENTS,
					'ROLL_WEIGHT' => $ROLL_KG,
					'ROLL_LENGTH' => $ROLL_YDS,
					'ROLL_WIDTH' => $ROLL_INCH,
					'REJECT_QNTY' => $rejectQty,
					'TOTAL_PENALTY_POINT' => $TOTAL_PENALTY_POINT,
					'TOTAL_POINT' => $TOTAL_POINT,
					'ENTRY_FORM' => 283,
					'ROLL_STATUS' => $roll_status_id,
					'FABRIC_GRADE' => $FABRIC_GRADE,
					/*'QC_MC_NAME' => $QC_MC_NAME,*/
					'INSERTED_BY' => $INSERTED_BY,
					'INSERT_DATE' => $pc_date_time,
					'IS_TAB' => 1,
				);
				$this->insertData($qc_mst_arr, 'PRO_QC_RESULT_MST');

			}
			else if ($response_obj->mode == "update") {
				$qc_mst = $update_id;
				$qc_mst_arr_up = array(
					'QC_DATE' => $qc_dates_up,
					'QC_NAME' => $QC_NAME,
					'COMMENTS' => $COMMENTS,
					'ROLL_WEIGHT' => $ROLL_KG,
					'ROLL_LENGTH' => $ROLL_YDS,
					'ROLL_WIDTH' => $ROLL_INCH,
					'REJECT_QNTY' => $rejectQty,
					'TOTAL_PENALTY_POINT' => $TOTAL_PENALTY_POINT,
					'TOTAL_POINT' => $TOTAL_POINT,
					'ROLL_STATUS' => $roll_status_id,
					'FABRIC_GRADE' => $FABRIC_GRADE,
					/*'QC_MC_NAME' => $QC_MC_NAME,*/
					'UPDATE_DATE' => $pc_date_time,
					'UPDATE_BY' => $INSERTED_BY,
				);

				$this->updateData('PRO_QC_RESULT_MST', $qc_mst_arr_up, array('ID' => $update_id));

			}
			else if ($response_obj->mode == "delete") {
				//$plan_to_delete .= $response_obj->PLAN_ID . ",";
				//$this->deleteRowByAttribute('PRO_QC_RESULT_MST', array('ID' => $response_obj->PLAN_ID));
			}



			//------------------------------------------------------------------------------------

			if ($response_obj->mode == "update") {
				$this->db->query("delete from PRO_QC_RESULT_DTLS where mst_id =$update_id");
			}
			$dtls_data = $response_obj->data->list_data;
			foreach ($dtls_data as $val) {
				$qc_dtls = return_next_id_by_sequence("PRO_QC_RESULT_DTLS_SEQ", "PRO_QC_RESULT_DTLS", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
				$qc_dtls_arr = array(
					'ID' => $qc_dtls,
					'MST_ID' => $qc_mst,
					'DEFECT_NAME' => $val->DEFECT_ID,
					'DEFECT_COUNT' => $val->COUNT,
					'FOUND_IN_INCH' => $val->INCH_ID,
					'PENALTY_POINT' => $val->PENALTY,
					'INSERTED_BY' => $INSERTED_BY,
					'INSERT_DATE' => $pc_date_time,
				);
				$this->insertData($qc_dtls_arr,'PRO_QC_RESULT_DTLS');
			}

			$obs_dtls_data_arr = $response_obj->data->obs_list_data;
			foreach ($obs_dtls_data_arr as $val) {
				$qc_dtls = return_next_id_by_sequence("PRO_QC_RESULT_DTLS_SEQ", "PRO_QC_RESULT_DTLS", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
				$qc_dtls_arr = array(
					'ID' => $qc_dtls,
					'MST_ID' => $qc_mst,
					'DEFECT_NAME' => $val->OBS_ID,
					'FOUND_IN_INCH' => $val->OBS_INCH,
					'DEPARTMENT' => $val->OBS_DEPARTMENT,
					'FORM_TYPE' => 2,
					'INSERTED_BY' => $INSERTED_BY,
					'INSERT_DATE' => $pc_date_time,
				);
				$this->insertData($qc_dtls_arr, 'PRO_QC_RESULT_DTLS');
			}
			//------------------------------------------------------------------------------------


			if ($autoProductionQuantityUpdatebyQC == 1 && $roll_status_id != 2) {
				$pro_roll_sql = "UPDATE PRO_ROLL_DETAILS SET qnty=$qc_qnty,reject_qnty=$rejectQty WHERE barcode_no = $BARCODE_NO AND entry_form=2 and dtls_id=$DTLS_ID";
				$rID3 = $this->db->query($pro_roll_sql);

				if ($rID3) {
					$roll_qc_rj_result = sql_select("SELECT sum(qnty) as QC_QNTY,sum(reject_qnty) as REJECT_QNTY from PRO_ROLL_DETAILS where dtls_id=$DTLS_ID and status_active=1 and is_deleted=0 and entry_form=2");
					foreach ($roll_qc_rj_result as $v) {
						$grey_receive_qnty = $v->QC_QNTY;
						$reject_fabric_receive = $v->REJECT_QNTY;
					}

					$pro_grey_prod_sql = "UPDATE pro_grey_prod_entry_dtls SET grey_receive_qnty=$grey_receive_qnty ,reject_fabric_receive=$reject_fabric_receive WHERE id=$DTLS_ID";

					$rID4 = $this->db->query($pro_grey_prod_sql);
				}

			}



			if ($this->db->trans_status() === FALSE) {
				$this->db->trans_rollback();
				return $resultset["status"] = "Failed";
			} else {
				$this->db->trans_commit();
				$this->db->trans_complete();
				return $resultset["status"] = "Successful";
			}
		} else {
			return $resultset["status"] = "Failed";
		}
	}

	function create_observation_finish_qc_result($save_obj) {

		$response_obj = json_decode($save_obj);
		$inv_receive_arr = array();
		$transaction_arr = array();
		$qc_dtls_arr = array();
		//$db_type = return_db_type();
		$new_array_color = array();
		$prod_data_array = array();
		$prod_new_array = array();

		$color_arr = return_library_array("select id, color_name from lib_color", 'id', 'color_name');
		if ($response_obj->status == true) {
			$BARCODE_NO = trim($response_obj->data->index->BARCODE_NO);

			$is_exists = sql_select("SELECT   barcode_no from PRO_FINISH_FABRIC_RCV_DTLS where status_active=1    and barcode_no=$BARCODE_NO  and is_deleted=0");
			if (count($is_exists) > 0 && $response_obj->mode == 'save') {
				return $resultset["status"] = "PleaseChangeMode";
			}
			$COMPANY_ID = $response_obj->data->index->COMPANY_ID;
			$SERVICE_COMPANY = $response_obj->data->index->SERVICE_COMPANY;
			$SOURCE = $response_obj->data->index->SOURCE;
			$SERVICE_LOCATION = $response_obj->data->index->SERVICE_LOCATION;
			$LOCATION = $response_obj->data->index->LOCATION;
			$MACHINE_ID = $response_obj->data->index->MACHINE_ID;
			$SHIFT = $response_obj->data->index->SHIFT;
			$COLOR = $response_obj->data->index->COLOR;
			$CONS_COMP = $response_obj->data->index->CONS_COMP;
			$DETER_ID = $response_obj->data->index->DETER_ID;
			$DIA = $response_obj->data->index->DIA;
			$DIA_TYPE = $response_obj->data->index->DIA_TYPE;
			$GSM = $response_obj->data->index->GSM;
			$COMMENTS = $response_obj->data->index->COMMENTS;
			$TOTAL_PENALTY_POINT = $response_obj->data->index->TOTAL_PENALTY_POINT;
			$TOTAL_POINT = $response_obj->data->index->TOTAL_POINT;
			$FABRIC_GRADE = $response_obj->data->index->FABRIC_GRADE;
			$IS_SALES_ID = $response_obj->data->index->IS_SALES_ID;
			$ORDER_ID = $response_obj->data->index->ORDER_ID;
			$QC_PASS_QTY = $response_obj->data->index->QC_PASS_QTY;
			$REJECT_QTY = $response_obj->data->index->REJECT_QTY;
			$ROLL_ID = $response_obj->data->index->ROLL_ID;
			$ROLL_NO = $response_obj->data->index->ROLL_NO;
			$ROLL_WGT = $response_obj->data->index->ROLL_WGT;
			$RECEIVE_DATE = $response_obj->data->index->RECEIVE_DATE;
			$INSERTED_BY = $response_obj->data->index->INSERTED_BY;
			$UPDATED_BY = $response_obj->data->index->UPDATED_BY;

			$BATCH_ID = $response_obj->data->index->BATCH_ID;
			$BATCH_NO = $response_obj->data->index->BATCH_NO;
			$BODY_PART_ID = $response_obj->data->index->BODY_PART_ID;
			$BOOKING_NO = $response_obj->data->index->BOOKING_NO;
			$BOOKING_WITHOUT_ORDER = $response_obj->data->index->BOOKING_WITHOUT_ORDER;
			$MST_ID = $response_obj->MST_ID;
			$PROD_ID = $response_obj->PROD_ID;
			$TRANS_ID = $response_obj->TRANS_ID;
			$DTLS_ID = $response_obj->DTLS_ID;
			$QC_MST_ID = $response_obj->QC_MST_ID;
			$UPDATE_ID = $response_obj->UPDATE_ID;

			$ROLL_STATUS = $response_obj->data->index->ROLL_STATUS;
			$ROLL_WIDTH = $response_obj->data->index->ROLL_WIDTH;
			$ROLL_WEIGHT = $response_obj->data->index->ROLL_WEIGHT;
			$ROLL_LENGTH = $response_obj->data->index->ROLL_LENGTH;
			$variable_sqls = sql_select("SELECT AUTO_UPDATE from variable_settings_production where company_name =$COMPANY_ID and variable_list in(47) and item_category_id=2 and is_deleted=0 and status_active=1");
			$autoProductionQuantityUpdatebyQC = 2;
			foreach ($variable_sqls as $val) {
				$autoProductionQuantityUpdatebyQC = $val->AUTO_UPDATE;
			}

			if ($this->db->dbdriver == 'mysqli') {
				$pc_date_time = date("Y-m-d H:i:s", time());
				$receive_date = date("Y-m-d", strtotime($RECEIVE_DATE));
			} else {
				$pc_date_time = date("d-M-Y h:i:s A", time());
				$receive_date = date("d-M-Y", strtotime($RECEIVE_DATE));

			}



			$this->db->trans_start();
			if ($response_obj->mode == "update") {
				if ($autoProductionQuantityUpdatebyQC == 1) {
					$pro_roll_sql = "UPDATE PRO_ROLL_DETAILS SET REJECT_QNTY='$REJECT_QTY',QC_PASS_QNTY='$QC_PASS_QTY' ,UPDATED_BY='$INSERTED_BY', UPDATE_DATE='$pc_date_time' WHERE DTLS_ID=$DTLS_ID and BARCODE_NO=$BARCODE_NO and ENTRY_FORM=66 and ROLL_ID='$ROLL_ID'";
					$rowIdRoll = $this->db->query($pro_roll_sql);

					$pro_orderwise_sql = "UPDATE ORDER_WISE_PRO_DETAILS SET RETURNABLE_QNTY='$REJECT_QTY',QUANTITY='$QC_PASS_QTY' ,UPDATED_BY='$INSERTED_BY', UPDATE_DATE='$pc_date_time' WHERE DTLS_ID=$DTLS_ID and PO_BREAKDOWN_ID='$ORDER_ID' and ENTRY_FORM=66 and PROD_ID='$PROD_ID' ";
					$rowIdOrderwise = $this->db->query($pro_orderwise_sql);

					$pro_dtls_sql = "UPDATE PRO_FINISH_FABRIC_RCV_DTLS SET REJECT_QTY='$REJECT_QTY',RECEIVE_QNTY='$QC_PASS_QTY' ,UPDATED_BY='$INSERTED_BY', UPDATE_DATE='$pc_date_time' WHERE id=$DTLS_ID and BARCODE_NO=$BARCODE_NO and PROD_ID='$PROD_ID'";
					$rowIdDtls = $this->db->query($pro_dtls_sql);

					$pro_trans_sql = "UPDATE inv_transaction SET CONS_REJECT_QNTY='$REJECT_QTY',CONS_QUANTITY='$QC_PASS_QTY' ,UPDATED_BY='$INSERTED_BY', UPDATE_DATE='$pc_date_time' WHERE id='$TRANS_ID' and MST_ID='$MST_ID' and PROD_ID='$PROD_ID'";
					$rowIdTrans = $this->db->query($pro_trans_sql);

				}

				$qc_mst_arr_up = array(
					'QC_DATE' => $receive_date,

					'COMMENTS' => $COMMENTS,
					'ROLL_WEIGHT' => $QC_PASS_QTY,
					'ROLL_LENGTH' => $ROLL_LENGTH,
					'ROLL_WIDTH' => $ROLL_WIDTH,
					'REJECT_QNTY' => $REJECT_QTY,
					'TOTAL_PENALTY_POINT' => $TOTAL_PENALTY_POINT,
					'TOTAL_POINT' => $TOTAL_POINT,
					'ROLL_STATUS' => $ROLL_STATUS,
					'FABRIC_GRADE' => $FABRIC_GRADE,
					'UPDATE_DATE' => $pc_date_time,
					'UPDATE_BY' => $INSERTED_BY,
				);

				$up_qc_row = $this->updateData("PRO_QC_RESULT_MST", $qc_mst_arr_up, array('ID' => $QC_MST_ID));


				$dtls_del = $this->db->query("delete from pro_qc_result_dtls where mst_id ='$QC_MST_ID'");
				$dtls_data = $response_obj->data->list_data;
				foreach ($dtls_data as $val) {
					$qc_dtls = return_next_id_by_sequence("PRO_QC_RESULT_DTLS_SEQ", "PRO_QC_RESULT_DTLS", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
					$qc_dtls_arr = array(
						'ID' => $qc_dtls,
						'MST_ID' => $QC_MST_ID,
						'DEFECT_NAME' => $val->DEFECT_ID,
						'DEFECT_COUNT' => $val->COUNT,
						'FOUND_IN_INCH' => $val->INCH_ID,
						'PENALTY_POINT' => $val->PENALTY,
						'INSERTED_BY' => $INSERTED_BY,
						'INSERT_DATE' => $pc_date_time,
					);
					$this->insertData($qc_dtls_arr, "PRO_QC_RESULT_DTLS");
				}

				$obs_dtls_data_arr = $response_obj->data->obs_list_data;
				foreach ($obs_dtls_data_arr as $val) {
					$qc_dtls = return_next_id_by_sequence("PRO_QC_RESULT_DTLS_SEQ", "PRO_QC_RESULT_DTLS", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
					$qc_dtls_arr = array(
						'ID' => $qc_dtls,
						'MST_ID' => $QC_MST_ID,
						'DEFECT_NAME' => $val->OBS_ID,
						'FOUND_IN_INCH' => $val->OBS_INCH,
						'DEPARTMENT' => $val->OBS_DEPARTMENT,
						'FORM_TYPE' => 2,
						'INSERTED_BY' => $INSERTED_BY,
						'INSERT_DATE' => $pc_date_time,
					);
					$this->insertData($qc_dtls_arr, 'PRO_QC_RESULT_DTLS');
				}



				if ($this->db->trans_status() === FALSE) {
					$this->db->trans_rollback();
					return $resultset["status"] = "Failed";
				} else {
					$this->db->trans_commit();
					$this->db->trans_complete();
					return $resultset["status"] = "Successful";
				}

			}

			$company_id = $response_obj->data->index->COMPANY_ID;
			$id_dtls = return_next_id_by_sequence("PRO_FIN_FAB_RCV_DTLS_PK_SEQ", "PRO_FINISH_FABRIC_RCV_DTLS", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
			$id_roll = return_next_id_by_sequence("PRO_ROLL_DTLS_PK_SEQ", "PRO_ROLL_DETAILS", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
			$id_prop = return_next_id_by_sequence("ORDER_WISE_PROP_PK_SEQ", "ORDER_WISE_PRO_DETAILS", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
			$id_dtls_batch = return_next_id_by_sequence("PRO_BATCH_CREATE_DTLS_PK_SEQ", "pro_batch_create_dtls", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);

			$new_mrr_number = explode("*", return_next_id_by_sequence("", "INV_RECEIVE_MASTER", "", 1, $company_id, "FFPR", 66, date("Y", time()), 0, 0, 0, 0, 0));

			$variable_sqls = sql_select("SELECT AUTO_UPDATE from variable_settings_production where company_name =$company_id and variable_list =15 and item_category_id=2 and is_deleted=0 and status_active=1");
			$fabric_store_auto_update = 0;
			foreach ($variable_sqls as $val) {
				$fabric_store_auto_update = $val->AUTO_UPDATE;
			}

			if ($response_obj->mode == "save") {
				$hour = date("h");
				$mrr_sql = "SELECT MST_ID from auto_mrr_maintain_tab where company_id='$COMPANY_ID' and source='$SOURCE' and serving_company='$SERVICE_COMPANY' and serving_location='$SERVICE_LOCATION' and mrr_date='$receive_date' and curr_hour='$hour'";
				$mrr_arr = sql_select($mrr_sql);
				$today_sql = sql_select("SELECT MST_ID from auto_mrr_maintain_tab where mrr_date='$receive_date'");
				if (count($today_sql) == 0) {
					$this->db->query("delete from  auto_mrr_maintain_tab where mrr_date<'$receive_date'");
				}

				if (count($mrr_arr) == 0) {

					$auto_mrr_id = return_next_id("id", "auto_mrr_maintain_tab", "", "", $db_type);
					$id = return_next_id_by_sequence("INV_RECEIVE_MASTER_PK_SEQ", "INV_RECEIVE_MASTER", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
					$inv_receive_arr = array(
						'ID' => $id,
						'RECV_NUMBER_PREFIX' => $new_mrr_number[1],
						'RECV_NUMBER_PREFIX_NUM' => $new_mrr_number[2],
						'RECV_NUMBER' => $new_mrr_number[0],
						'RECEIVE_DATE' => $receive_date,
						'COMPANY_ID' => $COMPANY_ID,
						'KNITTING_SOURCE' => $SOURCE,
						'KNITTING_COMPANY' => $SERVICE_COMPANY,
						'ITEM_CATEGORY' => 2,
						'ENTRY_FORM' => 66,
						'CHALLAN_NO' => 0,
						'STORE_ID' => 0,
						'LOCATION_ID' => $LOCATION,
						'KNITTING_LOCATION_ID' => $SERVICE_LOCATION,
					);
					$inv_receive_arr['INSERTED_BY'] = $INSERTED_BY;
					$inv_receive_arr['INSERT_DATE'] = $pc_date_time;

					$inv_rcv_id = $this->insertData($inv_receive_arr, "INV_RECEIVE_MASTER");

					$auto_mrr_arr = array(
						'ID' => $auto_mrr_id,
						'COMPANY_ID' => $COMPANY_ID,
						'SOURCE' => $SOURCE,
						'SERVING_COMPANY' => $SERVICE_COMPANY,
						'SERVING_LOCATION' => $SERVICE_LOCATION,
						'MRR_DATE' => $receive_date,
						'MST_ID' => $id,
						'MRR_NO' => $new_mrr_number[0],
						'CURR_HOUR' => $hour,
					);

					$inv_rcv_id = $this->insertData($auto_mrr_arr, "AUTO_MRR_MAINTAIN_TAB");

				} else {
					$id = $mrr_arr[0]->MST_ID;
				}

				$productDataArray = array();
				$stockArray = array();
				$productData = sql_select("SELECT ID, COMPANY_ID, DETARMINATION_ID, CURRENT_STOCK, GSM, DIA_WIDTH, COLOR from PRODUCT_DETAILS_MASTER where item_category_id=2 and status_active=1 and is_deleted=0");
				foreach ($productData as $row) {
					$productDataArray[$row->COMPANY_ID][$row->DETARMINATION_ID][$row->GSM][$row->DIA_WIDTH][$row->COLOR] = $row->ID;
					$stockArray[$row->ID] = $row->CURRENT_STOCK;
				}

			}


			if (!in_array($COLOR, $new_array_color)) {
				$color_id = return_id($COLOR, $color_arr, "lib_color", "color_name", "");
				$new_array_color[$color_id] = $COLOR;
			} else {
				$color_id = array_search($COLOR, $new_array_color);
			}

			if (isset($productDataArray[$company_id][$DETER_ID][$GSM][$DIA][$color_id])) {
				$prod_id = $productDataArray[$company_id][$DETER_ID][$GSM][$DIA][$color_id];
			} else {
				$prod_id = "";
			}

			if (str_replace("'", "", $fabric_store_auto_update) == 1) {
				$stock_qnty = $QC_PASS_QTY;
				$last_purchased_qnty = $QC_PASS_QTY;
			} else {
				$stock_qnty = 0;
				$last_purchased_qnty = 0;
			}

			$prod_name_dtls = trim($CONS_COMP) . ", " . trim($GSM) . ", " . trim($DIA);

			if ($prod_id == "") {
				$dataString = $DETER_ID . "**" . $CONS_COMP . "**" . $prod_name_dtls . "**" . $color_id . "**" . trim($GSM) . "**" . trim($DIA);
				$prod_id = array_search($dataString, $prod_data_array);
				if ($prod_id == "") {
					$product_id = return_next_id_by_sequence("PRODUCT_DETAILS_MASTER_PK_SEQ", "PRODUCT_DETAILS_MASTER", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
					$prod_id = $product_id;
					$prod_data_array[$prod_id] = $dataString;
					$prod_new_array[$prod_id] = $stock_qnty;

				} else {
					if ($prod_new_array[$prod_id]) {
						$prod_new_array[$prod_id] += $stock_qnty;
					} else {
						$prod_new_array[$prod_id] = $stock_qnty;
					}

				}
			} else {
				$current_stock = $stockArray[$prod_id] + $stock_qnty;
				$prod_id_array[] = $prod_id;
			}

			if (str_replace("'", "", $fabric_store_auto_update) == 1) {
				$order_rate = 0;
				$order_amount = 0;
				$cons_rate = 0;
				$cons_amount = 0;
				$id_trans = return_next_id_by_sequence("INV_TRANSACTION_PK_SEQ", "inv_transaction", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
				$rate = 0;
				$amount = 0;
				$transaction_arr = array(
					'ID' => $id_trans,
					'MST_ID' => $id,
					'COMPANY_ID' => $company_id,
					'PROD_ID' => $prod_id,
					'ITEM_CATEGORY' => 2,
					'TRANSACTION_TYPE' => 1,
					'TRANSACTION_DATE' => $receive_date,
					'STORE_ID' => 0,
					'ORDER_UOM' => 12,
					'ORDER_QNTY' => $QC_PASS_QTY,
					'ORDER_RATE' => $rate,
					'ORDER_AMOUNT' => $amount,
					'CONS_UOM' => 12,
					'CONS_QUANTITY' => $QC_PASS_QTY,
					'CONS_REJECT_QNTY' => $REJECT_QTY,
					'CONS_RATE' => $rate,
					'CONS_AMOUNT' => $amount,
					'BALANCE_QNTY' => $QC_PASS_QTY,
					'BALANCE_AMOUNT' => $amount,
					'MACHINE_ID' => $MACHINE_ID,
					'RACK' => 0,
					'SELF' => 0,
				);

				$transaction_arr['INSERTED_BY'] = $INSERTED_BY;
				$transaction_arr['INSERT_DATE'] = $pc_date_time;
				$trans_row_id = $this->insertData($transaction_arr, "inv_transaction");
			} else {
				$id_trans = 0;
			}

			$production_dtls_arr = array(
				'ID' => $id_dtls,
				'MST_ID' => $id,
				'TRANS_ID' => $id_trans,
				'PROD_ID' => $prod_id,
				'BATCH_ID' => $BATCH_ID,
				'BODY_PART_ID' => $BODY_PART_ID,
				'FABRIC_DESCRIPTION_ID' => $DETER_ID,
				'GSM' => $GSM,
				'WIDTH' => $DIA,
				'DIA_WIDTH_TYPE' => $DIA_TYPE,
				'COLOR_ID' => $color_id,
				'PRODUCTION_QTY' => $ROLL_WGT,
				'RECEIVE_QNTY' => $QC_PASS_QTY,
				'REJECT_QTY' => $REJECT_QTY,
				'ORDER_ID' => $ORDER_ID,
				'MACHINE_NO_ID' => $MACHINE_ID,
				'SHIFT_NAME' => $SHIFT,
				'RACK_NO' => 0,
				'SHELF_NO' => 0,
				'ROLL_ID' => $ROLL_ID,
				'ROLL_NO' => $ROLL_NO,
				'IS_TAB' => 1,
				'BARCODE_NO' => $BARCODE_NO,
			);


			$production_dtls_arr['INSERTED_BY'] = $INSERTED_BY;
			$production_dtls_arr['INSERT_DATE'] = $pc_date_time;
			$prod_dlts_row_id = $this->insertData($production_dtls_arr, "PRO_FINISH_FABRIC_RCV_DTLS");

			$roll_dtls_arr = array(
				'ID' => $id_roll,
				'BARCODE_NO' => $BARCODE_NO,
				'MST_ID' => $id,
				'DTLS_ID' => $id_dtls,
				'PO_BREAKDOWN_ID' => $ORDER_ID,
				'ENTRY_FORM' => 66,
				'QNTY' => $ROLL_WGT,
				'REJECT_QNTY' => $REJECT_QTY,
				'QC_PASS_QNTY' => $QC_PASS_QTY,
				'ROLL_NO' => $ROLL_NO,
				'ROLL_ID' => $ROLL_ID,
				'IS_SALES' => $IS_SALES_ID,
				'BOOKING_WITHOUT_ORDER' => $BOOKING_WITHOUT_ORDER,
				'BOOKING_NO' => $BOOKING_NO,
			);

			$roll_dtls_arr['INSERTED_BY'] = $INSERTED_BY;
			$roll_dtls_arr['INSERT_DATE'] = $pc_date_time;
			$roll_dtls_row_id = $this->insertData($roll_dtls_arr, "PRO_ROLL_DETAILS");


			$prop_dtls_arr = array(
				'ID' => $id_prop,
				'TRANS_ID' => $id_trans,
				'TRANS_TYPE' => 1,
				'ENTRY_FORM' => 66,
				'DTLS_ID' => $id_dtls,
				'PO_BREAKDOWN_ID' => $ORDER_ID,
				'PROD_ID' => $prod_id,
				'COLOR_ID' => $color_id,
				'QUANTITY' => $QC_PASS_QTY,
				'RETURNABLE_QNTY' => $REJECT_QTY,
				'IS_SALES' => $IS_SALES_ID,
			);

			$prop_dtls_arr['INSERTED_BY'] = $INSERTED_BY;
			$prop_dtls_arr['INSERT_DATE'] = $pc_date_time;
			$prop_dtls_row_id = $this->insertData($prop_dtls_arr, "ORDER_WISE_PRO_DETAILS");

			$avg_rate_per_unit = 0;
			$stock_value = 0;
			foreach ($prod_new_array as $prod_id => $current_stock) {
				$product_data = explode("**", $prod_data_array[$prod_id]);
				$deterId = $product_data[0];
				$consComp = trim($product_data[1]);
				$prod_name_dtls = $product_data[2];
				$color_id = $product_data[3];
				$gsm = $product_data[4];
				$dia = $product_data[5];
				$last_purchased_qnty = $current_stock;

				$product_dtls_mst_arr = array(
					'ID' => $prod_id,
					'COMPANY_ID' => $COMPANY_ID,
					'ITEM_CATEGORY_ID' => 2,
					'DETARMINATION_ID' => $DETER_ID,
					'ITEM_DESCRIPTION' => $CONS_COMP,
					'PRODUCT_NAME_DETAILS' => $prod_name_dtls,
					'UNIT_OF_MEASURE' => 12,
					'AVG_RATE_PER_UNIT' => $avg_rate_per_unit,
					'LAST_PURCHASED_QNTY' => $last_purchased_qnty,
					'CURRENT_STOCK' => $current_stock,
					'STOCK_VALUE' => $stock_value,
					'COLOR' => $color_id,
					'GSM' => $gsm,
					'DIA_WIDTH' => $dia,
					'ENTRY_FORM' => 66,
				);

				$product_dtls_mst_arr['INSERTED_BY'] = $INSERTED_BY;
				$product_dtls_mst_arr['INSERT_DATE'] = $pc_date_time;
				$prod_dlts_mst_row_id = $this->insertData($product_dtls_mst_arr, "PRODUCT_DETAILS_MASTER");

			}
			$qc_name_by_id = return_field_value("user_name", "user_passwd", "id='$INSERTED_BY'  ", "user_name");

			$qc_mst = return_next_id_by_sequence("PRO_QC_RESULT_MST_SEQ", "PRO_QC_RESULT_MST", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
			$qc_mst_arr = array(
				'ID' => $qc_mst,
				'PRO_DTLS_ID' => $id_dtls,
				'ROLL_MAINTAIN' => 1,
				'BARCODE_NO' => $BARCODE_NO,
				'QC_DATE' => $receive_date,
				'ROLL_ID' => $ROLL_ID,
				'ROLL_NO' => $ROLL_NO,
				'QC_NAME' => $qc_name_by_id,
				'COMMENTS' => $COMMENTS,
				'ROLL_WEIGHT' => $QC_PASS_QTY,
				'ROLL_LENGTH' => $ROLL_LENGTH,
				'ROLL_WIDTH' => $ROLL_WIDTH,
				'REJECT_QNTY' => $REJECT_QTY,
				'ENTRY_FORM' => 267,
				'TOTAL_PENALTY_POINT' => $TOTAL_PENALTY_POINT,
				'TOTAL_POINT' => $TOTAL_POINT,
				'FABRIC_GRADE' => $FABRIC_GRADE,
				'ROLL_STATUS' => $ROLL_STATUS,
				'INSERTED_BY' => $INSERTED_BY,
				'INSERT_DATE' => $pc_date_time,
				'IS_TAB' => 1,
			);
			$this->insertData($qc_mst_arr, "PRO_QC_RESULT_MST");


			$dtls_data = $response_obj->data->list_data;
			foreach ($dtls_data as $val) {
				$qc_dtls = return_next_id_by_sequence("PRO_QC_RESULT_DTLS_SEQ", "PRO_QC_RESULT_DTLS", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
				$qc_dtls_arr = array(
					'ID' => $qc_dtls,
					'MST_ID' => $qc_mst,
					'DEFECT_NAME' => $val->DEFECT_ID,
					'DEFECT_COUNT' => $val->COUNT,
					'FOUND_IN_INCH' => $val->INCH_ID,
					'PENALTY_POINT' => $val->PENALTY,
					'INSERTED_BY' => $INSERTED_BY,
					'INSERT_DATE' => $pc_date_time,
				);
				$this->insertData($qc_dtls_arr, "PRO_QC_RESULT_DTLS");
			}


			$obs_dtls_data_arr = $response_obj->data->obs_list_data;
			foreach ($obs_dtls_data_arr as $val) {
				$qc_dtls = return_next_id_by_sequence("PRO_QC_RESULT_DTLS_SEQ", "PRO_QC_RESULT_DTLS", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
				$qc_dtls_arr = array(
					'ID' => $qc_dtls,
					'MST_ID' => $qc_mst,
					'DEFECT_NAME' => $val->OBS_ID,
					'FOUND_IN_INCH' => $val->OBS_INCH,
					'DEPARTMENT' => $val->OBS_DEPARTMENT,
					'FORM_TYPE' => 2,
					'INSERTED_BY' => $INSERTED_BY,
					'INSERT_DATE' => $pc_date_time,
				);
				$this->insertData($qc_dtls_arr, 'PRO_QC_RESULT_DTLS');
			}





			$this->db->trans_complete();
			if ($this->db->trans_status() == TRUE) {
				return $resultset["status"] = "Successful";
			} else {
				$resultset["status"] = "Failed";
			}
		} else {
			return $resultset["status"] = "Failed";
		}
	}



 ////====End=======////=====

	function save_update_sewing_input($save_obj) {

		$db_type = return_db_type();

		$response_obj = json_decode($save_obj);
		$qc_mst_arr = array();
		$qc_dtls_arr = array();
 
		if($this->getDuration( $response_obj->data->index->user_id , trim($response_obj->data->list_data[0]->barcode_no)) <=5){
			return $resultset["status"] = "দুঃখিত! ডেটা সংরক্ষিত হয়নি । পুনরায় চেস্টা করুন।";
			exit();
		}
		else{
			foreach ($response_obj->data->list_data as $val) {
				$barcodeNo = $val->barcode_no;
				$inQtyArr[$val->bundle_no] += $val->qnty;
				$outQtyArr[$val->bundle_no] += $val->qc_qnty;
			}
			
			if($response_obj->production_type==5 && array_sum($inQtyArr) < array_sum($outQtyArr) ){
				return $resultset["status"] = "আউটপুট এর পরিমান ইনপুট এর চেয়ে বেশি হতে পারবে না";		
			}


	 
			// ========================== check line alocation ==========================
			$sewing_line = $response_obj->data->index->sewing_line;
			$pr_date = date("d-M-Y");
			$is_line_allo = return_field_value("mst_id", "PROD_RESOURCE_DTLS", "mst_id=$sewing_line and pr_date='$pr_date' and is_deleted=0", "mst_id");
			// echo "select mst_id from PROD_RESOURCE_DTLS where mst_id=$sewing_line and pr_date='$pr_date' and is_deleted=0";die;
			if(!$is_line_allo)
			{
				return $resultset["status"] = "এই লাইনটি এলোকেশন করা নাই। দয়া করে এলোকেশন করুন। ";
			}
			

			//lc company get using barcode......................................start;
			$lc_company_data = sql_select("SELECT COMPANY_ID  from PRO_GARMENTS_PRODUCTION_MST a,PRO_GARMENTS_PRODUCTION_DTLS b where a.id=b.mst_id and a.status_active=1  and b.status_active=1 and a.production_type=1 and b.production_type=1 and barcode_no ='$barcodeNo'");
			//lc company get using barcode......................................end;

			

			if ($response_obj->status == true)
			{
				$production_types = $response_obj->production_type;
				if ($production_types == 4) {
					$entry_forms = 96;
				} else {
					$entry_forms = 0;
				}

				$mst_tbl_id = 0;
				$dtls_tbl_id = 0;
				$this->db->trans_start();
				$production_date = $response_obj->data->index->production_date;
				$remarks = $response_obj->data->index->remarks;
				$txt_reporting_hour = $response_obj->data->index->hour;
				$shift_id = $response_obj->data->index->shift_id;


				if ($db_type == 0) {
					$year_cond = "YEAR(insert_date)";
					$pc_date_time = date("Y-m-d H:i:s", time());
					// $production_date = date("Y-m-d", strtotime($production_date));
					$production_date = date("Y-m-d");
					$txt_reporting_hour = str_replace("'", "", $production_date) . " " . str_replace("'", "", $txt_reporting_hour);
					//$txt_reporting_hour="to_date('".$txt_reporting_hour."','DD MONTH YYYY HH24:MI:SS')";
					// $txt_reporting_hour = date("Y-m-d H:i:s", strtotime($txt_reporting_hour));
					$txt_reporting_hour = date("Y-m-d H:i:s", strtotime($txt_reporting_hour));
				} else {
					$year_cond = "to_char(insert_date,'YYYY')";
					$pc_date_time = date("d-M-Y h:i:s A", time());
					// $production_date = date("d-M-Y", strtotime($production_date));
					$production_date = date("d-M-Y");
					// $txt_reporting_hour = str_replace("'", "", $production_date) . " " . str_replace("'", "", $txt_reporting_hour);
					$txt_reporting_hour = str_replace("'", "", $production_date) . " " . date('H:i:s');
					$txt_reporting_hour = "to_date('" . $txt_reporting_hour . "','DD MONTH YYYY HH24:MI:SS')";

				}
				// echo $txt_reporting_hour."==qqq";die;
				$cbo_company_name = $lc_company_data[0]->COMPANY_ID; //$response_obj->data->index->company_id ;
				$location_id = $response_obj->data->index->location_id;
				$production_source = $response_obj->data->index->production_source;
				$serving_company = $response_obj->data->index->serving_company;
				$floor_id = $response_obj->data->index->floor_id;
				$sewing_line = $response_obj->data->index->sewing_line;
				$organic = $response_obj->data->index->organic;
				$user_id = $response_obj->data->index->user_id;
				$txt_system_id = $response_obj->data->index->txt_system_id;

				$actual_reject = str_replace("'", "", $response_obj->data->actual_reject);
				$actual_alter = str_replace("'", "", $response_obj->data->actual_alter);
				$actual_spot = str_replace("'", "", $response_obj->data->actual_spot);

				// echo $actual_alter;die('ok');

				$is_prod_reso_allo = return_field_value("auto_update", "variable_settings_production", "company_name=$serving_company and  variable_list=23 and is_deleted=0 and status_active=1", "auto_update");

				if (str_replace("'", "", $txt_system_id) == "") 
				{
					if ($production_types == 4) {
						$mrr_sty = "SWI";
					} else {
						$mrr_sty = "SWO";
					}

					$new_sys_number = explode("*", return_next_id_by_sequence("", "PRO_GMTS_DELIVERY_MST", "", 1, $cbo_company_name, $mrr_sty, 0, date("Y", time()), 0, 0, $production_types, 0, 0));

					$mst_id = return_next_id_by_sequence("PRO_GMTS_DELIVERY_MST_SEQ", "PRO_GMTS_DELIVERY_MST_SEQ", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
					$challan_no = (int) $new_sys_number[2];
					$txt_challan_no = $new_sys_number[0];

					$bundle_mst_arr = array(
						'ID' => $mst_id,
						'SYS_NUMBER_PREFIX' => $new_sys_number[1],
						'SYS_NUMBER_PREFIX_NUM' => (int) $new_sys_number[2],
						'SYS_NUMBER' => $new_sys_number[0],
						'DELIVERY_DATE' => $production_date,
						'COMPANY_ID' => $cbo_company_name,
						'PRODUCTION_TYPE' => $production_types,
						'LOCATION_ID' => $location_id,
						'DELIVERY_BASIS' => 3,
						'PRODUCTION_SOURCE' => $production_source,
						'SERVING_COMPANY' => $serving_company,
						'FLOOR_ID' => $floor_id,
						'SEWING_LINE' => $sewing_line,
						'ORGANIC' => $organic,
						'ENTRY_FORM' => $entry_forms,
						'INSERTED_BY' => $user_id,
						'INSERT_DATE' => $pc_date_time,
					);

					//return $bundle_mst_arr;

					$mrr_tbl_id = $this->insertData($bundle_mst_arr, "PRO_GMTS_DELIVERY_MST");

				} else {

					$bundle_mst_arr_up = array(
						'DELIVERY_DATE' => $production_date,
						'COMPANY_ID' => $cbo_company_name,
						'LOCATION_ID' => $location_id,
						'PRODUCTION_SOURCE' => $production_source,
						'SERVING_COMPANY' => $serving_company,
						'FLOOR_ID' => $floor_id,
						'SEWING_LINE' => $sewing_line,
						'ORGANIC' => $organic,
						'UPDATED_BY' => $user_id,
						'UPDATED_BY' => $pc_date_time,
					);

					$mst_id = str_replace("'", "", $txt_system_id);
					$this->updateData('PRO_GMTS_DELIVERY_MST', $bundle_mst_arr_up, array('ID' => $mst_id));

				}

				$mstArr = array();
				$dtlsArr = array();
				$colorSizeArr = array();
				$mstIdArr = array();
				$colorSizeIdArr = array();

				$bundleCutArr = array();
				$color_type_arr = array();
				$is_rescan_arr = array();
				$cutArr = array();
				$dtlsArrColorSize = array();
				$bundleRescanArr = array();
				$bundleBarcodeArr = array();
				$duplicate_bundle = array();
				$bundleCheckArr = array();
				$all_cut_no_arr = array();
				$prev_prod_qty_arr = array();
				$bundleNoArr=array();
				$dtls_data = $response_obj->data->list_data;

				foreach ($dtls_data as $v) {
					$bundleCheck = $v->bundle_no;
					$cutNo = $v->cut_no;
					$is_rescan = $v->is_rescan;
					if ($is_rescan != 1 || $is_rescan != 2) {
						$bundleCheckArr[trim($bundleCheck)] = trim($bundleCheck);
					}
					$all_cut_no_arr[$cutNo] = $cutNo;
					$bundleNoArr[$bundleCheck]=$bundleCheck;
				}

				$bundle = "'" . implode("','", $bundleNoArr) . "'";
				$receive_sql = "SELECT c.barcode_no,c.BUNDLE_NO from PRO_GARMENTS_PRODUCTION_DTLS c where  c.bundle_no  in ($bundle)  and c.production_type='$production_types' and c.status_active=1 and c.is_deleted=0 and (c.is_rescan=0 or c.is_rescan is null)";
				$receive_result = sql_select($receive_sql);
				foreach ($receive_result as $row) {
					$duplicate_bundle[trim($row->BUNDLE_NO)] = trim($row->BUNDLE_NO);
				}

				

				// ========================== prev qty ========================
				$prev_production_types = ($production_types==5) ? 4 : 1;
				$prev_receive_sql = "SELECT c.PRODUCTION_QNTY,c.BUNDLE_NO from PRO_GARMENTS_PRODUCTION_DTLS c where  c.bundle_no  in ($bundle)  and c.production_type='$prev_production_types' and c.status_active=1 and c.is_deleted=0 and (c.is_rescan=0 or c.is_rescan is null)";
				$prev_receive_result = sql_select($prev_receive_sql);
				foreach ($prev_receive_result as $row) {

					$prev_prod_qty_arr[trim($row->BUNDLE_NO)] += $row->PRODUCTION_QNTY;
				}

				
				
				foreach ($dtls_data as $val) {
					$cutNo = $val->cut_no;
					$color_type_id = $val->color_type_id;
					$bundleNo = $val->bundle_no;
					$barcodeNo = $val->barcode_no;
					$orderId = $val->order_id;
					$gmtsitemId = $val->item_id;
					$countryId = $val->country_id;
					$colorId = $val->color_id;
					$sizeId = $val->size_id;
					$colorSizeId = $val->color_size_id;
					$qty = $val->qnty;
					$checkRescan = $val->is_rescan;
					// echo $prev_prod_qty_arr[trim($bundleNo)].">=".$qty;die;
					if ($prev_prod_qty_arr[trim($bundleNo)]>=$qty) 
					{
						if($checkRescan==1 || $checkRescan==2)
						{
							$bundleCutArr[$bundleNo] = $cutNo;
							$color_type_arr[$bundleNo] = $color_type_id;
							$is_rescan_arr[$bundleNo] = $checkRescan;
							$cutArr[$orderId][$gmtsitemId][$countryId] = $cutNo;
							if (isset($mstArr[$orderId][$gmtsitemId][$countryId])) {
								$mstArr[$orderId][$gmtsitemId][$countryId] += $qty;
							} else {
								$mstArr[$orderId][$gmtsitemId][$countryId] = $qty;
							}

							$colorSizeArr[$bundleNo] = $orderId . "**" . $gmtsitemId . "**" . $countryId;
							if (isset($dtlsArr[$bundleNo])) {
								$dtlsArr[$bundleNo] += $qty;
							} else {
								$dtlsArr[$bundleNo] = $qty;
							}

							$dtlsRejQtyArr[$bundleNo] += $val->reject;
							$dtlsAltQtyArr[$bundleNo] += $val->alter;
							$dtlsSpoQtyArr[$bundleNo] += $val->spot;
							$dtlsRepQtyArr[$bundleNo] += $val->replace;
							$dtlsQcQtyArr[$bundleNo]  += $val->qc_qnty;

							$dtlsArrColorSize[$bundleNo] = $colorSizeId;
							$bundleRescanArr[$bundleNo] = $checkRescan;
							$bundleBarcodeArr[$bundleNo] = $barcodeNo;
							
						}
						else
						{
							if (!isset($duplicate_bundle[trim($bundleNo)])) {
								$duplicate_bundle[trim($bundleNo)] = trim($bundleNo);

								$bundleCutArr[$bundleNo] = $cutNo;
								$color_type_arr[$bundleNo] = $color_type_id;
								$is_rescan_arr[$bundleNo] = $checkRescan;
								$cutArr[$orderId][$gmtsitemId][$countryId] = $cutNo;
								if (isset($mstArr[$orderId][$gmtsitemId][$countryId])) {
									$mstArr[$orderId][$gmtsitemId][$countryId] += $qty;
								} else {
									$mstArr[$orderId][$gmtsitemId][$countryId] = $qty;
								}

								$colorSizeArr[$bundleNo] = $orderId . "**" . $gmtsitemId . "**" . $countryId;
								if (isset($dtlsArr[$bundleNo])) {
									$dtlsArr[$bundleNo] += $qty;
								} else {
									$dtlsArr[$bundleNo] = $qty;
								}

								$dtlsRejQtyArr[$bundleNo] += $val->reject;
								$dtlsAltQtyArr[$bundleNo] += $val->alter;
								$dtlsSpoQtyArr[$bundleNo] += $val->spot;
								$dtlsRepQtyArr[$bundleNo] += $val->replace;
								$dtlsQcQtyArr[$bundleNo]  += $val->qc_qnty;

								$dtlsArrColorSize[$bundleNo] = $colorSizeId;
								$bundleRescanArr[$bundleNo] = $checkRescan;
								$bundleBarcodeArr[$bundleNo] = $barcodeNo;
							}
						}
					}
					else
					{
						return $resultset["status"] = "দুঃখিত! আউটপুট কোয়ানটিটি ইনপুট কোয়ানটিটি এর থেকে বেশি দেওয়া যাবেনা ।";
					}

				}
				// echo "<pre>";print_r($mstArr);die;
			
				$mstIdAaary = array();

				

				if ($response_obj->mode == "save") {

					foreach ($mstArr as $orderId => $orderData) 
					{
						foreach ($orderData as $gmtsItemId => $gmtsItemIdData) {
							foreach ($gmtsItemIdData as $countryId => $qty) {
								$id = return_next_id_by_sequence("PRO_GAR_PRODUCTION_MST_SEQ", "PRO_GARMENTS_PRODUCTION_MST", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);

								$mst_part_data = array(
									'ID' => $id,
									'DELIVERY_MST_ID' => $mst_id,
									'CUT_NO' => $cutArr[$orderId][$gmtsItemId][$countryId],
									'COMPANY_ID' => $cbo_company_name,
									'GARMENTS_NATURE' => 2,
									'CHALLAN_NO' => $challan_no,
									'PO_BREAK_DOWN_ID' => $orderId,
									'ITEM_NUMBER_ID' => $gmtsItemId,
									'COUNTRY_ID' => $countryId,
									'PRODUCTION_SOURCE' => $production_source,
									'SERVING_COMPANY' => $serving_company,
									'LOCATION' => $location_id,
									'PRODUCTION_DATE' => $production_date,
									'PRODUCTION_TYPE' => $production_types,
									'ENTRY_BREAK_DOWN_TYPE' => 3,
									'REMARKS' => $remarks,
									'SHIFT_NAME' => $shift_id,
									'FLOOR_ID' => $floor_id,
									'SEWING_LINE' => $sewing_line,
									'PROD_RESO_ALLO' => $is_prod_reso_allo,
									'ENTRY_FORM' => $entry_forms,
									'IS_TAB' => 1,
									'INSERTED_BY' => $user_id,
									'INSERT_DATE' => $pc_date_time,
								);
									//'PRODUCTION_QUANTITY' => $qty,
								if ($production_types == 4) {
									$mst_part_data['PRODUCTION_QUANTITY']=$qty;
								}
								else if ($production_types == 5) {
									$mst_part_data['PRODUCTION_QUANTITY']=array_sum($dtlsQcQtyArr)*1;
									$mst_part_data['REJECT_QNTY']=array_sum($dtlsRejQtyArr)*1;
									$mst_part_data['ALTER_QNTY']=array_sum($dtlsAltQtyArr)*1;
									$mst_part_data['REPLACE_QTY']=array_sum($dtlsRepQtyArr)*1;
									$mst_part_data['SPOT_QNTY']=array_sum($dtlsSpoQtyArr)*1;
								}
									
								//return $mst_part_data;

								$mst_tbl_id = $this->insertData($mst_part_data, "PRO_GARMENTS_PRODUCTION_MST");
								
								$mstIdArr[$orderId][$gmtsItemId][$countryId] = $id;
								if ($mst_tbl_id && $production_types == 5) {
									$this->db->query("update PRO_GARMENTS_PRODUCTION_MST set production_hour=$txt_reporting_hour where id ='$id'");
								}

							}
						}
					}

					

					foreach ($dtlsArr as $bundle_no => $qty) 
					{
						$colorSizedData = explode("**", $colorSizeArr[$bundle_no]);
						$gmtsMstId = $mstIdArr[$colorSizedData[0]][$colorSizedData[1]][$colorSizedData[2]];
						
						$cut_no = $bundleCutArr[$bundle_no];
						$color_type_ids = $color_type_arr[$bundle_no];
						$is_rescan_id = $is_rescan_arr[$bundle_no];
						$dtls_id = return_next_id_by_sequence("PRO_GAR_PRODUCTION_DTLS_SEQ", "PRO_GARMENTS_PRODUCTION_DTLS", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);

						$dtls_part_data = array(
							'ID' => $dtls_id,
							'DELIVERY_MST_ID' => $mst_id,
							'MST_ID' => $gmtsMstId,
							'PRODUCTION_TYPE' => $production_types,
							'COLOR_SIZE_BREAK_DOWN_ID' => $dtlsArrColorSize[$bundle_no],
							//'PRODUCTION_QNTY' => $qty,
							'CUT_NO' => $cut_no,
							'BUNDLE_NO' => $bundle_no,
							'ENTRY_FORM' => $entry_forms,
							'BARCODE_NO' => $bundleBarcodeArr[$bundle_no],
							'IS_RESCAN' => $is_rescan_id,
							'COLOR_TYPE_ID' => $color_type_ids,
						);

						if ($production_types == 4) {
							$dtls_part_data['PRODUCTION_QNTY']=$qty;
						}
						else if ($production_types == 5) {
							$dtls_part_data['PRODUCTION_QNTY']=$dtlsQcQtyArr[$bundle_no];
							$dtls_part_data['REJECT_QTY']=$dtlsRejQtyArr[$bundle_no];
							$dtls_part_data['ALTER_QTY']=$dtlsAltQtyArr[$bundle_no];
							$dtls_part_data['REPLACE_QTY']=$dtlsRepQtyArr[$bundle_no];
							$dtls_part_data['SPOT_QTY']=$dtlsSpoQtyArr[$bundle_no];
						}

						$dtls_tbl_id = $this->insertData($dtls_part_data, "PRO_GARMENTS_PRODUCTION_DTLS");
					}
					// var_dump($mstIdAaary);die();
					// ========================== reject data =========================					
					if($actual_reject!="")
					{
						$actual_reject_info = explode("__",$actual_reject);
						$reject_data_array = array();
						for( $rls=0; $rls<count($actual_reject_info); $rls++ )
						{
							list($defectPointId,$defect_qty)=explode("*",$actual_reject_info[$rls]);
							$dft_id = return_next_id_by_sequence("PRO_GMTS_PROD_DFT_SEQ", "PRO_GMTS_PROD_DFT", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
							$reject_data_array[] = array(
								'ID' => $dft_id,
								'MST_ID' => $gmtsMstId,
								'PO_BREAK_DOWN_ID' => $orderId,
								'PRODUCTION_TYPE' => 5,
								'DEFECT_TYPE_ID' => 2,
								'DEFECT_POINT_ID' => $defectPointId,
								'DEFECT_QTY' => $defect_qty,
								'COLOR_SIZE_BREAK_DOWN_ID' => $colorSizeId,
								'BUNDLE_NO' => $barcodeNo,
								'INSERTED_BY' => $user_id,
								'INSERT_DATE' => $pc_date_time,
							);
							
						}
						//var_dump($reject_data_array);
						// $dft_tbl_id = $this->insertData($reject_data_array, "PRO_GMTS_PROD_DFT");
						$dft_tbl_id = $this->db->insert_batch("PRO_GMTS_PROD_DFT",$reject_data_array);
						// echo $this->db->last_query();die();
					}	
					// ========================== alter data =========================					
					if($actual_alter!="")
					{
						$actual_alter_info = explode("__",$actual_alter);
						$alter_data_array = array();
						for( $rls=0; $rls<count($actual_alter_info); $rls++ )
						{
							list($defectPointId,$defect_qty)=explode("*",$actual_alter_info[$rls]);
							$dft_id = return_next_id_by_sequence("PRO_GMTS_PROD_DFT_SEQ", "PRO_GMTS_PROD_DFT", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
							$alter_data_array[] = array(
								'ID' => $dft_id,
								'MST_ID' => $gmtsMstId,
								'PO_BREAK_DOWN_ID' => $orderId,
								'PRODUCTION_TYPE' => 5,
								'DEFECT_TYPE_ID' => 3,
								'DEFECT_POINT_ID' => $defectPointId,
								'DEFECT_QTY' => $defect_qty,
								'COLOR_SIZE_BREAK_DOWN_ID' => $colorSizeId,
								'BUNDLE_NO' => $barcodeNo,
								'INSERTED_BY' => $user_id,
								'INSERT_DATE' => $pc_date_time,
							);
							
						}
						//var_dump($alter_data_array);
						// $dft_tbl_id = $this->insertData($alter_data_array, "PRO_GMTS_PROD_DFT");
						$dft_tbl_id = $this->db->insert_batch("PRO_GMTS_PROD_DFT",$alter_data_array);
						// echo $this->db->last_query();die();
					}	
					// ========================== spot data =========================					
					if($actual_spot!="")
					{
						$actual_spot_info = explode("__",$actual_spot);
						$spot_data_array = array();
						for( $rls=0; $rls<count($actual_spot_info); $rls++ )
						{
							list($defectPointId,$defect_qty)=explode("*",$actual_spot_info[$rls]);
							$dft_id = return_next_id_by_sequence("PRO_GMTS_PROD_DFT_SEQ", "PRO_GMTS_PROD_DFT", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
							$spot_data_array[] = array(
								'ID' => $dft_id,
								'MST_ID' => $gmtsMstId,
								'PO_BREAK_DOWN_ID' => $orderId,
								'PRODUCTION_TYPE' => 5,
								'DEFECT_TYPE_ID' => 4,
								'DEFECT_POINT_ID' => $defectPointId,
								'DEFECT_QTY' => $defect_qty,
								'COLOR_SIZE_BREAK_DOWN_ID' => $colorSizeId,
								'BUNDLE_NO' => $barcodeNo,
								'INSERTED_BY' => $user_id,
								'INSERT_DATE' => $pc_date_time,
							);
							
						}
						//var_dump($spot_data_array);
						// $dft_tbl_id = $this->insertData($spot_data_array, "PRO_GMTS_PROD_DFT");
						$dft_tbl_id = $this->db->insert_batch("PRO_GMTS_PROD_DFT",$spot_data_array);
						// echo $this->db->last_query();die();
					}	

				}			

				


				if ($response_obj->mode == "update") {
					$this->db->query("delete from PRO_GARMENTS_PRODUCTION_DTLS where mst_id ='$update_id'");
				}
				
				if ($this->db->trans_status() == TRUE) {
					if ($mst_tbl_id && $dtls_tbl_id) {
						$this->db->trans_commit();
						$this->db->trans_complete();
						return $resultset["status"] = "ডেটা সফলভাবে সংরক্ষিত হয়েছে ।";
					} else {
						$this->db->trans_rollback();
						$this->db->trans_complete();
						return $resultset["status"] = "দুঃখিত! ডেটা সংরক্ষিত হয়নি । পুনরায় চেস্টা করুন।";
					}

				} else {
					$resultset["status"] = "দুঃখিত! ডেটা সংরক্ষিত হয়নি । পুনরায় চেস্টা করুন।";
					$this->db->trans_complete();
				}
			} else {
				return $resultset["status"] = "দুঃখিত! ডেটা সংরক্ষিত হয়নি। পুনরায় চেস্টা করুন।";
			}

		}//end duration else;


	}
	 
	// @Base URL : http://localhost/platform-v3.5/logic-api/index.php/api/android/save_update_sewing_input_gross
	// @Endpoint : save_update_sewing_input_gross
	// @Request Body : The request body must be a JSON object
	// @Response : The response will be a JSON array of objects
	function save_update_sewing_input_gross($save_obj) { 
		
		$db_type = return_db_type();

		$response_obj = json_decode($save_obj);
		// echo "<pre>";
		// print_r($response_obj);
		// echo "</pre>";
		if ($response_obj->status == true) 
		{
			$total_qnty = $response_obj->total_qnty;
			if ($response_obj->mode == "save") 
			{

				$production_types = $response_obj->production_type;
				if ($production_types == 4) {
					$entry_forms = 96;
				} else {
					$entry_forms = 0;
				}

				$mst_tbl_id = 0;
				$dtls_tbl_id = 0;
				$this->db->trans_start();
				$production_date = $response_obj->data->index->production_date;
				$remarks = $response_obj->data->index->remarks;
				$txt_reporting_hour = $response_obj->data->index->hour;
				$shift_id = $response_obj->data->index->shift_id;
				$action_type = $response_obj->action_type;

				$year_cond = "to_char(insert_date,'YYYY')";
				$pc_date_time = date("d-M-Y h:i:s A", time());
				$production_date = date("d-M-Y");
				$txt_reporting_hour = str_replace("'", "", $production_date) . " " . date('H:i');
				$txt_reporting_hour = "to_date('$txt_reporting_hour','DD MONTH YYYY HH24:MI:SS')";

				$cbo_company_name = $response_obj->data->index->company_id ;
				$location_id = $response_obj->data->index->location_id;
				$production_source = $response_obj->data->index->production_source;
				$serving_company = $response_obj->data->index->serving_company;
				$floor_id = $response_obj->data->index->floor_id;
				$sewing_line = $response_obj->data->index->sewing_line;
				
				$organic = $response_obj->data->index->organic;
				$user_id = $response_obj->data->index->user_id;
				$txt_system_id = $response_obj->data->index->txt_system_id;

				$actual_reject = ($action_type=='REJECT')?str_replace("'", "", $response_obj->data->actual_reject):"";
				$actual_alter = ($action_type=='ALTER')?str_replace("'", "", $response_obj->data->actual_alter):"";
				$actual_spot = ($action_type=='SPOT')?str_replace("'", "", $response_obj->data->actual_spot):"";

				$is_prod_reso_allo = return_field_value("auto_update", "variable_settings_production", "company_name=$serving_company and  variable_list=23 and is_deleted=0 and status_active=1", "auto_update");

				
				$prev_input_qty = 0;
				$dtls_data = $response_obj->data->list_data;
				$color_size_id=0;
				foreach ($dtls_data as $v) 
				{
					$color_size_id = $v->color_size_id;
					$colorId = $v->color_id;
					$sizeId = $v->size_id;
					$order_id = $v->order_id;
					$item_id = $v->item_id;
					$country_id = $v->country_id;
					$job_id = $v->job_id;
				}

				// ============================== prev qty ===========================
				$current_date = date("d-M-Y");
				$prev_qty_sql = "SELECT A.PO_BREAK_DOWN_ID,A.COUNTRY_ID,B.COLOR_SIZE_BREAK_DOWN_ID,B.PRODUCTION_QNTY,B.REJECT_QTY,B.PRODUCTION_TYPE,B.REPLACE_QTY,B.RECTIFIED_QTY,B.REJECT_QTY, B.ALTER_QTY, B.SPOT_QTY,C.COLOR_NUMBER_ID,a.PRODUCTION_DATE,a.INSERTED_BY from pro_garments_production_mst a, pro_garments_production_dtls b,wo_po_color_size_breakdown c where a.id=b.mst_id and b.color_size_break_down_id=c.id and b.status_active=1 and b.is_deleted=0 and b.production_type in(4,5) and c.status_active=1 and a.sewing_line=$sewing_line and c.job_id=$job_id AND a.item_number_id = $item_id AND a.country_id = $country_id";
				// and b.color_size_break_down_id=$color_size_id  and a.po_break_down_id = $order_id
				
				$receive_result = sql_select($prev_qty_sql);
				$prev_qty_array = $color_wise_production_array = array();
				foreach ($receive_result as $row) 
				{
					$sewing_production_date = strtotime($row->PRODUCTION_DATE);
					if($sewing_production_date == strtotime($current_date) && ($row->PRODUCTION_TYPE == 5))
					{
						$color_wise_production_array[$row->COLOR_NUMBER_ID] += $row->PRODUCTION_QNTY;
					}

					if($order_id == $row->PO_BREAK_DOWN_ID)
					{
						if($row->PRODUCTION_TYPE == 4)
						{
							$prod_data_array[$row->COLOR_SIZE_BREAK_DOWN_ID][$row->PRODUCTION_TYPE]["in"] += $row->PRODUCTION_QNTY;
							$country_prod_data_array[$row->COLOR_NUMBER_ID][$row->PO_BREAK_DOWN_ID][$row->COUNTRY_ID][$row->PRODUCTION_TYPE]["in"] += $row->PRODUCTION_QNTY;
							$po_prod_data_array[$row->COLOR_NUMBER_ID][$row->PO_BREAK_DOWN_ID][$row->PRODUCTION_TYPE]["in"] += $row->PRODUCTION_QNTY;
						}

						if($row->PRODUCTION_TYPE == 5)
						{
							$country_prod_data_array[$row->COLOR_NUMBER_ID][$row->PO_BREAK_DOWN_ID][$row->COUNTRY_ID][$row->PRODUCTION_TYPE]["out"] += $row->PRODUCTION_QNTY;
							$po_prod_data_array[$row->COLOR_NUMBER_ID][$row->PO_BREAK_DOWN_ID][$row->PRODUCTION_TYPE]["out"] += $row->PRODUCTION_QNTY;
						}

						if($row->PRODUCTION_TYPE == 5 && $row->COLOR_SIZE_BREAK_DOWN_ID == $color_size_id)
						{
							$prod_data_array[$row->COLOR_SIZE_BREAK_DOWN_ID][$row->PRODUCTION_TYPE]["out"] += $row->PRODUCTION_QNTY+$row->REJECT_QTY;
							$prod_data_array[$row->COLOR_SIZE_BREAK_DOWN_ID][$row->PRODUCTION_TYPE]["balance_out"] += $row->PRODUCTION_QNTY+$row->REJECT_QTY+(($row->ALTER_QTY+$row->SPOT_QTY)-$row->RECTIFIED_QTY);//+$row->RECTIFIED_QTY
							$prod_data_array[$row->COLOR_SIZE_BREAK_DOWN_ID][$row->PRODUCTION_TYPE]["rectified_balance"] += ($row->ALTER_QTY+$row->SPOT_QTY);
						}

						
						if($sewing_production_date == strtotime($current_date) && ($row->PRODUCTION_TYPE == 5) && ($row->INSERTED_BY == $user_id))
						{
							if($row->COLOR_SIZE_BREAK_DOWN_ID == $color_size_id)
							{
								$prod_data_output_array[$row->COLOR_SIZE_BREAK_DOWN_ID][$row->PRODUCTION_TYPE] += $row->PRODUCTION_QNTY+$row->REJECT_QTY+(($row->ALTER_QTY+$row->SPOT_QTY)-$row->RECTIFIED_QTY);//+$row->RECTIFIED_QTY
								
							}
							$prev_qty_array[$row->PRODUCTION_TYPE]['ok'] += $row->PRODUCTION_QNTY;
							$prev_qty_array[$row->PRODUCTION_TYPE]['rej'] += $row->REJECT_QTY;
							$prev_qty_array[$row->PRODUCTION_TYPE]['alter'] += $row->ALTER_QTY;
							$prev_qty_array[$row->PRODUCTION_TYPE]['spot'] += $row->SPOT_QTY;
							$prev_qty_array[$row->PRODUCTION_TYPE]['rectified'] += $row->RECTIFIED_QTY;
							//$color_wise_production_array[$row->COLOR_NUMBER_ID] += $row->PRODUCTION_QNTY;
						}
					}
					
				}
				// echo "<pre>";
				// print_r($prev_qty_array);
				// die;
				if(($action_type!="RECTIFIED" && ($prod_data_array[$color_size_id][5]["balance_out"]+1) > $prod_data_array[$color_size_id][4]["in"]))
				{
					$rec_balance = $prod_data_array[$color_size_id][5]["rectified_balance"];
					if($action_type=="RECTIFIED" && $rec_balance > 0)
					{
						//
					}
					else
					{
						$country_wise_input_qnty = $country_prod_data_array[$colorId][$order_id][$country_id][4]["in"]*1;
						$country_wise_output_qnty = $country_prod_data_array[$colorId][$order_id][$country_id][5]["out"]*1+$total_qnty;

						$po_wise_input_qnty = $po_prod_data_array[$colorId][$order_id][4]["in"];
						$po_wise_output_qnty = $po_prod_data_array[$colorId][$order_id][5]["out"]*1+$total_qnty;

						$resultset["update_id"] = 0;
						$resultset["update_dtls_id"] = 0;
						$resultset["update_dtls_piece_id"] = 0;

						$resultset["country_id"] = $country_id;
						$resultset["country_status"] = ($country_wise_output_qnty>=$country_wise_input_qnty)?false:true;

						$resultset["order_id"] = $order_id;
						$resultset["order_status"] = ($po_wise_output_qnty>=$po_wise_input_qnty)?false:true;

						$resultset["input_qnty"] = 0;
						$resultset["output_qnty"] = 0;
						$resultset["total_out_qnty"] = 0;
						$resultset["color_wise_chk_qnty"] = 0;
						$resultset["ok"] = 0;
						$resultset["rej"] = 0;
						$resultset["alter"] = 0;
						$resultset["spot"] = 0;
						$resultset["rectified"] = 0;
						$resultset["status"] = "দুঃখিত! আউটপুট কোয়ানটিটি ইনপুট কোয়ানটিটি এর থেকে বেশি দেওয়া যাবেনা ।";
						return $resultset;
					}
				}

				foreach ($dtls_data as $val) 
				{
					$color_type_id = $val->color_type_id;
					$orderId = $val->order_id;
					$gmtsitemId = $val->item_id;
					$countryId = $val->country_id;
					$colorSizeId = $val->color_size_id;
					$color_id = $val->color_id;
					$rectified_from_dtls_id = $val->dtls_id;
					$operation_id = $val->operation_id;
					$qty = 1;//$val->qnty;

					// ================================== prepare mst part data ===========================
					// CHECK IF 
					$production_hour = str_replace("'", "", $production_date) . " " . date('H');
					$master_data = $this->db->query("select id,production_quantity,reject_qnty from pro_garments_production_mst where production_type=5 and po_break_down_id=$orderId and item_number_id=$gmtsitemId and country_id=$countryId and production_date='$production_date' and sewing_line=$sewing_line and TO_CHAR(production_hour,'DD-Mon-YYYY HH24') = '$production_hour' and inserted_by=$user_id and status_active=1 and is_deleted=0 order by id desc")->row();
					if(empty($master_data))
					{
						$id = return_next_id_by_sequence("PRO_GAR_PRODUCTION_MST_SEQ", "PRO_GARMENTS_PRODUCTION_MST", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
						$production_qnty = ($val->good==1)?$val->qnty:0;
						$reject_qnty = ($val->reject==1)?$val->qnty:0;
					}
					else{
						$id = $master_data->ID;
						$production_qnty = ($val->good==1)?($master_data->PRODUCTION_QUANTITY+$val->qnty):$master_data->PRODUCTION_QUANTITY;
						$reject_qnty = ($val->reject==1)?($master_data->REJECT_QNTY+$val->qnty):$master_data->REJECT_QNTY;
					}
					
					if(empty($master_data))
					{
						$mst_part_data = array(
							'ID' => $id,
							'COMPANY_ID' => $cbo_company_name,
							'GARMENTS_NATURE' => 2,
							'CHALLAN_NO' => $txt_system_id,
							'PO_BREAK_DOWN_ID' => $orderId,
							'ITEM_NUMBER_ID' => $gmtsitemId,
							'COUNTRY_ID' => $countryId,
							'PRODUCTION_SOURCE' => $production_source,
							'SERVING_COMPANY' => $serving_company,
							'LOCATION' => $location_id,
							'PRODUCTION_DATE' => $production_date,
							'PRODUCTION_TYPE' => $production_types,
							'PRODUCTION_QUANTITY' => $production_qnty,
							'REJECT_QNTY' => $reject_qnty,
							'ENTRY_BREAK_DOWN_TYPE' => 3,
							'REMARKS' => $remarks,
							'SHIFT_NAME' => $shift_id,
							'FLOOR_ID' => $floor_id,
							'SEWING_LINE' => $sewing_line,
							'PROD_RESO_ALLO' => $is_prod_reso_allo,
							'ENTRY_FORM' => $entry_forms,
							'IS_TAB' => 1,
							'INSERTED_BY' => $user_id,
							'INSERT_DATE' => $pc_date_time,
							'PRODUCED_BY' => 2,
						);
						$mst_tbl_id = $this->insertData($mst_part_data, "PRO_GARMENTS_PRODUCTION_MST");
					}
					else
					{
						$mst_part_data = array(
							'PRODUCTION_QUANTITY' => $production_qnty,
							'REJECT_QNTY' => $reject_qnty,
							'UPDATED_BY' => $user_id,
							'UPDATE_DATE' => $pc_date_time,
							'PRODUCED_BY' => 2,
						);
						$mst_tbl_id = $this->updateData('PRO_GARMENTS_PRODUCTION_MST', $mst_part_data, array('ID' => $id));
					}

					if ($mst_tbl_id) {
						$this->db->query("update PRO_GARMENTS_PRODUCTION_MST set production_hour=$txt_reporting_hour where id ='$id'");
					}

					// ================================== prepare dtls part data ===========================
					$dtlsdata_rs = $this->db->query("select id,production_qnty,reject_qty,alter_qty,spot_qty,replace_qty,rectified_qty from pro_garments_production_dtls where production_type=5 and color_size_break_down_id=$colorSizeId and status_active=1 and mst_id=$id order by id desc")->row();
					if(empty($dtlsdata_rs))
					{
						$dtls_id = return_next_id_by_sequence("PRO_GAR_PRODUCTION_DTLS_SEQ", "PRO_GARMENTS_PRODUCTION_DTLS", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
						$production_qnty = ($val->good==1)?$val->qnty:0;
						$reject_qnty 	 = ($val->reject==1)?$val->qnty:0;
						$alter_qnty 	 = ($val->alter==1)?$val->qnty:0;
						$spot_qnty 		 = ($val->spot==1)?$val->qnty:0;
						$rectified_qnty  = ($val->rectified==1)?$val->qnty:0;
					}
					else{
						$dtls_id 		 = $dtlsdata_rs->ID;
						$production_qnty = ($val->good==1)?($dtlsdata_rs->PRODUCTION_QNTY+$val->qnty):$dtlsdata_rs->PRODUCTION_QNTY;
						$reject_qnty 	 = ($val->reject==1)?($dtlsdata_rs->REJECT_QTY+$val->qnty):$dtlsdata_rs->REJECT_QTY;
						$alter_qnty 	 = ($val->alter==1)?($dtlsdata_rs->ALTER_QTY+$val->qnty):$dtlsdata_rs->ALTER_QTY;
						$spot_qnty 		 = ($val->spot==1)?($dtlsdata_rs->SPOT_QTY+$val->qnty):$dtlsdata_rs->SPOT_QTY;
						$rectified_qnty  = ($val->rectified==1)?($dtlsdata_rs->RECTIFIED_QTY+$val->qnty):$dtlsdata_rs->RECTIFIED_QTY;
					}
					
					$dtls_part_data = array(
						'MST_ID' => $id,
						'PRODUCTION_TYPE' => $production_types,
						'COLOR_SIZE_BREAK_DOWN_ID' => $colorSizeId,
						'PRODUCTION_QNTY' => $production_qnty,
						'REJECT_QTY' => $reject_qnty,
						'ALTER_QTY' => $alter_qnty,
						'SPOT_QTY' => $spot_qnty,
						'RECTIFIED_QTY' => $rectified_qnty,
						'ENTRY_FORM' => $entry_forms,
						'COLOR_TYPE_ID' => $color_type_id,
					);//+$rectified_qnty

					if(empty($dtlsdata_rs))
					{
						$dtls_part_data["ID"] = $dtls_id;
						$dtls_tbl_id = $this->insertData($dtls_part_data, "PRO_GARMENTS_PRODUCTION_DTLS");
					}
					else
					{
						$dtls_tbl_id = $this->updateData('PRO_GARMENTS_PRODUCTION_DTLS', $dtls_part_data, array('ID' => $dtls_id));
					}

					
					if ($dtls_tbl_id) {
						$piece_dtls_id = return_next_id_by_sequence("PRO_GAR_PROD_DTLS_PIECE_SEQ", "PRO_GARMENTS_PROD_DTLS_PIECE", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
						$piece_dtls_part_data = array(
							'ID' => $piece_dtls_id,
							'MST_ID' => $id,
							'DTLS_ID' => $dtls_id,
							'PRODUCTION_TYPE' => $production_types,
							'COLOR_SIZE_BREAK_DOWN_ID' => $colorSizeId,
							'PRODUCTION_QNTY' => ($val->good==1)?$val->qnty:0,
							'REJECT_QTY' => ($val->reject==1)?$val->qnty:0,
							'ALTER_QTY' => ($val->alter==1)?$val->qnty:0,
							'SPOT_QTY' => ($val->spot==1)?$val->qnty:0,
							'RECTIFIED_QTY' => ($val->rectified==1)?$val->qnty:0,
							'ENTRY_FORM' => $entry_forms,
							'COLOR_TYPE_ID' => $color_type_id,
							'RECTIFIED_FROM' => $rectified_from_dtls_id,
							'OPERATION_ID' => $operation_id,
						);

						$piece_dtls_part_id = $this->insertData($piece_dtls_part_data, "PRO_GARMENTS_PROD_DTLS_PIECE");
					}

					// ========================== reject data =========================					
					if($actual_reject!="")
					{
						$operation_wise_reject_info = explode("$$$",$actual_reject);
						$alter_data_array = array();
						for( $ols=0; $ols<count($operation_wise_reject_info); $ols++ )
						{
							$actual_reject_info = explode("__",$operation_wise_reject_info[$ols]);
							$reject_data_array = array();
							for( $rls=0; $rls<count($actual_reject_info); $rls++ )
							{
								list($operationId,$defectPointId,$defect_qty)=explode("*",$actual_reject_info[$rls]);
								$dft_id = return_next_id_by_sequence("PRO_GMTS_PROD_DFT_SEQ", "PRO_GMTS_PROD_DFT", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
								if($defectPointId!="")
								{
									$reject_data_array[] = array(
										'ID' => $dft_id,
										'MST_ID' => $id,
										'PO_BREAK_DOWN_ID' => $orderId,
										'PRODUCTION_TYPE' => 5,
										'DEFECT_TYPE_ID' => 3,
										'DEFECT_POINT_ID' => $defectPointId,
										'DEFECT_QTY' => $defect_qty,
										'COLOR_SIZE_BREAK_DOWN_ID' => $colorSizeId,
										'INSERTED_BY' => $user_id,
										'INSERT_DATE' => $pc_date_time,
										'DTLS_ID' => $dtls_id,
										'OPERATION_ID' => $operationId,
										'DTLS_PIECE_ID' => $piece_dtls_id,
									);
								}
							}
						}
						$dft_tbl_id = $this->db->insert_batch("PRO_GMTS_PROD_DFT",$reject_data_array);
					}	
					// ========================== alter data =========================					
					if($actual_alter!="")
					{
						$operation_wise_alter_info = explode("$$$",$actual_alter);
						$alter_data_array = array();
						for( $ols=0; $ols<count($operation_wise_alter_info); $ols++ )
						{
							$actual_alter_info = explode("__",$operation_wise_alter_info[$ols]);
							for( $rls=0; $rls<count($actual_alter_info); $rls++ )
							{
								list($operationId,$defectPointId,$defect_qty)=explode("*",$actual_alter_info[$rls]);
								if($defectPointId!="")
								{
									$dft_id = return_next_id_by_sequence("PRO_GMTS_PROD_DFT_SEQ", "PRO_GMTS_PROD_DFT", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
									$alter_data_array[] = array(
										'ID' => $dft_id,
										'MST_ID' => $id,
										'PO_BREAK_DOWN_ID' => $orderId,
										'PRODUCTION_TYPE' => 5,
										'DEFECT_TYPE_ID' => 1,
										'DEFECT_POINT_ID' => $defectPointId,
										'DEFECT_QTY' => $defect_qty,
										'COLOR_SIZE_BREAK_DOWN_ID' => $colorSizeId,
										'INSERTED_BY' => $user_id,
										'INSERT_DATE' => $pc_date_time,
										'DTLS_ID' => $dtls_id,
										'OPERATION_ID' => $operationId,
										'DTLS_PIECE_ID' => $piece_dtls_id,
									);
								}
							}
						}
						$dft_tbl_id = $this->db->insert_batch("PRO_GMTS_PROD_DFT",$alter_data_array);
						//$total_qnty=0;
					}	
					// ========================== spot data =========================					
					if($actual_spot!="")
					{
						$operation_wise_spot_info = explode("$$$",$actual_spot);
						$spot_data_array = array();
						for( $ols=0; $ols<count($operation_wise_spot_info); $ols++ )
						{
							$actual_spot_info = explode("__",$operation_wise_spot_info[$ols]);							
							for( $rls=0; $rls<count($actual_spot_info); $rls++ )
							{
								list($operationId,$defectPointId,$defect_qty)=explode("*",$actual_spot_info[$rls]);
								if($defectPointId!="")
								{
									$dft_id = return_next_id_by_sequence("PRO_GMTS_PROD_DFT_SEQ", "PRO_GMTS_PROD_DFT", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
									$spot_data_array[] = array(
										'ID' => $dft_id,
										'MST_ID' => $id,
										'PO_BREAK_DOWN_ID' => $orderId,
										'PRODUCTION_TYPE' => 5,
										'DEFECT_TYPE_ID' => 2,
										'DEFECT_POINT_ID' => $defectPointId,
										'DEFECT_QTY' => $defect_qty,
										'COLOR_SIZE_BREAK_DOWN_ID' => $colorSizeId,
										'INSERTED_BY' => $user_id,
										'INSERT_DATE' => $pc_date_time,
										'DTLS_ID' => $dtls_id,
										'OPERATION_ID' => $operationId,
										'DTLS_PIECE_ID' => $piece_dtls_id,
									);
								}
							}
						}
						$dft_tbl_id = $this->db->insert_batch("PRO_GMTS_PROD_DFT",$spot_data_array);
					}
				}

				if ($this->db->trans_status() == TRUE) 
				{
					if ($mst_tbl_id && $dtls_tbl_id) 
					{
						$this->db->trans_commit();
						$this->db->trans_complete();
						if($actual_spot!="" || $actual_alter!="" || $actual_reject!="")
						{
							$color_wise_chk_qnty = $color_wise_production_array[$color_id]*1;
						}
						else
						{
							$color_wise_chk_qnty = ($color_wise_production_array[$color_id]+$total_qnty)*1;
						}

						$country_wise_input_qnty = $country_prod_data_array[$color_id][$orderId][$countryId][4]["in"]*1;
						$country_wise_output_qnty = $country_prod_data_array[$color_id][$orderId][$countryId][5]["out"]*1+$total_qnty;

						$po_wise_input_qnty = $po_prod_data_array[$color_id][$orderId][4]["in"];
						$po_wise_output_qnty = $po_prod_data_array[$color_id][$orderId][5]["out"]*1+$total_qnty;

						$resultset["status"] = "ডেটা সফলভাবে সংরক্ষিত হয়েছে ।";
						$resultset["update_id"] = $id;
						$resultset["update_dtls_id"] = $dtls_id;
						$resultset["update_dtls_piece_id"] = $piece_dtls_id;

						$resultset["country_id"] = $countryId;
						$resultset["country_status"] = ($country_wise_output_qnty>=$country_wise_input_qnty)?false:true;

						$resultset["order_id"] = $orderId;
						$resultset["order_status"] = ($po_wise_output_qnty>=$po_wise_input_qnty)?false:true;

						$resultset["input_qnty"] = $prod_data_array[$colorSizeId][4]["in"]*1;
						$resultset["color_wise_chk_qnty"] = $color_wise_chk_qnty*1;
						$resultset["ok"] = (($val->good==1)?($prev_qty_array[5]['ok']+$total_qnty):$prev_qty_array[5]['ok']) *1;
						$resultset["rej"] = (($val->reject==1)?($prev_qty_array[5]['rej']+$total_qnty):$prev_qty_array[5]['rej']) *1;
						$resultset["alter"] = (($val->alter==1)?($prev_qty_array[5]['alter']+$total_qnty):$prev_qty_array[5]['alter']) *1;
						$resultset["spot"] = (($val->spot==1)?($prev_qty_array[5]['spot']+$total_qnty):$prev_qty_array[5]['spot']) *1;
						$resultset["rectified"] = (($val->rectified==1)?($prev_qty_array[5]['rectified']+$total_qnty):$prev_qty_array[5]['rectified']) *1;

						if($val->alter == 1 || $val->spot == 1)
						{
							$total_qnty = 0;
						}
						$resultset["total_out_qnty"] = ($prod_data_array[$colorSizeId][5]["out"]+$total_qnty)*1;
						$resultset["output_qnty"] = ($prod_data_output_array[$colorSizeId][5]+$total_qnty)*1;

						return $resultset;
					} 
					else 
					{
						$this->db->trans_rollback();
						$this->db->trans_complete();
						return $resultset["status"] = "দুঃখিত! ডেটা সংরক্ষিত হয়নি । পুনরায় চেস্টা করুন।";
					}
				} 
				else 
				{
					$resultset["status"] = "দুঃখিত! ডেটা সংরক্ষিত হয়নি । পুনরায় চেস্টা করুন।";
					$this->db->trans_complete();
				}
			}
			elseif ($response_obj->mode == "delete") 
			{
				$update_id = $response_obj->UPDATE_ID;
				$update_dtls_id = $response_obj->UPDATE_DTLS_ID;
				$update_dtls_piece_id = $response_obj->UPDATE_DTLS_PIECE_ID;
				$delete_data_type = $response_obj->DELETE_DATA_TYPE;
				
				$mst_update_fields = $dtls_update_fields = "";
				if($delete_data_type=="GOOD")
				{
					$mst_update_fields = " PRODUCTION_QUANTITY=PRODUCTION_QUANTITY-1";
					$dtls_update_fields = " PRODUCTION_QNTY=PRODUCTION_QNTY-1";
				}
				else if($delete_data_type=="ALTER")
				{
					$dtls_update_fields = " ALTER_QTY=ALTER_QTY-1";
				}
				else if($delete_data_type=="REJECT")
				{
					$mst_update_fields = " REJECT_QNTY=REJECT_QNTY-1";
					$dtls_update_fields = " REJECT_QTY=REJECT_QTY-1";
				}
				else if($delete_data_type=="SPOT")
				{
					$dtls_update_fields = " SPOT_QTY=SPOT_QTY-1";
				}

				if($update_id>0)
				{
					$mst_dtls_piece_status = $this->db->query("update PRO_GARMENTS_PROD_DTLS_PIECE set status_active=0,is_deleted=1 where id ='$update_dtls_piece_id'");
					if($mst_update_fields!="")
					{
						$mst_status = $this->db->query("update PRO_GARMENTS_PRODUCTION_MST set $mst_update_fields where id ='$update_id'");
					}
					
					$dtls_status = $this->db->query("update PRO_GARMENTS_PRODUCTION_DTLS set $dtls_update_fields where id ='$update_dtls_id'");
					$dft_status = $this->db->query("update PRO_GMTS_PROD_DFT set status_active=0,is_deleted=1 where dtls_piece_id ='$update_dtls_piece_id'");

					$dtls_data = $response_obj->data->list_data;
					$color_size_id=0;
					foreach ($dtls_data as $v) 
					{
						$color_size_id = $v->color_size_id;
						$order_id = $v->order_id;
						$item_id = $v->item_id;
						$country_id = $v->country_id;
						$color_id = $v->color_id;
						$job_id = $v->job_id;
					}

					
					if ($this->db->trans_status() == TRUE) 
					{
						if ($mst_dtls_piece_status && $dtls_status) 
						{
							$this->db->trans_commit();
							$this->db->trans_complete();

							// ============================== prev qty ===========================
							$production_date = date("d-M-Y");
							$sewing_line = $response_obj->data->index->sewing_line;
							$user_id = $response_obj->data->index->user_id;
							
							$current_date = date("d-M-Y");
							$prev_qty_sql = "SELECT A.PO_BREAK_DOWN_ID,A.COUNTRY_ID,B.COLOR_SIZE_BREAK_DOWN_ID,B.PRODUCTION_QNTY,B.REJECT_QTY,B.PRODUCTION_TYPE,B.REPLACE_QTY,B.RECTIFIED_QTY,B.REJECT_QTY, B.ALTER_QTY, B.SPOT_QTY,C.COLOR_NUMBER_ID,a.PRODUCTION_DATE,a.INSERTED_BY from pro_garments_production_mst a, pro_garments_production_dtls b,wo_po_color_size_breakdown c where a.id=b.mst_id and b.color_size_break_down_id=c.id and b.status_active=1 and b.is_deleted=0 and b.production_type in(4,5) and c.status_active=1 and a.sewing_line=$sewing_line and c.job_id=$job_id AND a.item_number_id = $item_id AND a.country_id = $country_id";// and b.color_size_break_down_id=$color_size_id  and a.po_break_down_id = $order_id

							$receive_result = sql_select($prev_qty_sql);
							$prev_qty_array = $color_wise_production_array = $total_input_out_qnty_arr = array();
							foreach ($receive_result as $row) 
							{
								$production_date = strtotime($row->PRODUCTION_DATE);
								if($row->PRODUCTION_TYPE==4)
								{
									$total_input_out_qnty_arr[$row->COLOR_SIZE_BREAK_DOWN_ID][$row->PRODUCTION_TYPE]["in"] += $row->PRODUCTION_QNTY;
									$country_prod_data_array[$row->COLOR_NUMBER_ID][$row->PO_BREAK_DOWN_ID][$row->COUNTRY_ID][$row->PRODUCTION_TYPE]["in"] += $row->PRODUCTION_QNTY;
									$po_prod_data_array[$row->COLOR_NUMBER_ID][$row->PO_BREAK_DOWN_ID][$row->PRODUCTION_TYPE]["in"] += $row->PRODUCTION_QNTY;
								}

								if($row->PRODUCTION_TYPE == 5)
								{
									$country_prod_data_array[$row->COLOR_NUMBER_ID][$row->PO_BREAK_DOWN_ID][$row->COUNTRY_ID][$row->PRODUCTION_TYPE]["out"] += $row->PRODUCTION_QNTY;
									$po_prod_data_array[$row->COLOR_NUMBER_ID][$row->PO_BREAK_DOWN_ID][$row->PRODUCTION_TYPE]["out"] += $row->PRODUCTION_QNTY;
								}

								if($production_date == strtotime($current_date) && $row->PRODUCTION_TYPE == 5)
								{
									$color_wise_production_array[$row->COLOR_NUMBER_ID] += $row->PRODUCTION_QNTY;
								}
								
								if($row->PRODUCTION_TYPE == 5 && $row->COLOR_SIZE_BREAK_DOWN_ID == $color_size_id)
								{
									$total_input_out_qnty_arr[$row->COLOR_SIZE_BREAK_DOWN_ID][$row->PRODUCTION_TYPE]["out"] += $row->PRODUCTION_QNTY+$row->REJECT_QTY;//+$row->ALTER_QTY+$row->SPOT_QTY
								}
								
								//echo $production_date ."==". strtotime($current_date) ."&&". $row->PRODUCTION_TYPE ."== 5 && (".$row->INSERTED_BY ."==". $user_id.")<br />";
								if($production_date == strtotime($current_date) && $row->PRODUCTION_TYPE == 5 && ($row->INSERTED_BY == $user_id))
								{
									//echo "test";
									if($row->COLOR_SIZE_BREAK_DOWN_ID == $color_size_id)
									{
										$total_output_qnty_arr[$row->COLOR_SIZE_BREAK_DOWN_ID][$row->PRODUCTION_TYPE] += $row->PRODUCTION_QNTY+$row->REJECT_QTY;//+$row->ALTER_QTY+$row->SPOT_QTY
									}

									$prev_qty_array[$row->PRODUCTION_TYPE]['ok'] += $row->PRODUCTION_QNTY;
									$prev_qty_array[$row->PRODUCTION_TYPE]['rej'] += $row->REJECT_QTY;
									$prev_qty_array[$row->PRODUCTION_TYPE]['alter'] += $row->ALTER_QTY;
									$prev_qty_array[$row->PRODUCTION_TYPE]['spot'] += $row->SPOT_QTY;
									$prev_qty_array[$row->PRODUCTION_TYPE]['rectified'] += $row->RECTIFIED_QTY;
								}
							}
							// echo "<pre>";
							// print_r($prev_qty_array);
							// echo "</pre>";
							// die;
							$country_wise_input_qnty = $country_prod_data_array[$color_id][$order_id][$country_id][4]["in"]*1;
							$country_wise_output_qnty = $country_prod_data_array[$color_id][$order_id][$country_id][5]["out"]*1+$total_qnty;

							$po_wise_input_qnty = $po_prod_data_array[$color_id][$order_id][4]["in"];
							$po_wise_output_qnty = $po_prod_data_array[$color_id][$order_id][5]["out"]*1+$total_qnty;
							
							$resultset["status"] = "ডেটা সফলভাবে মুছে ফেলা হয়েছে।";
							$resultset["update_id"] = $update_id;
							$resultset["update_dtls_id"] = $update_dtls_id;
							$resultset["update_dtls_piece_id"] = $update_dtls_piece_id;

							$resultset["country_id"] = $country_id;
							$resultset["country_status"] = ($country_wise_output_qnty>=$country_wise_input_qnty)?false:true;

							$resultset["order_id"] = $orderId;
							$resultset["order_status"] = ($po_wise_output_qnty>=$po_wise_input_qnty)?false:true;
							
							$resultset["input_qnty"] = $total_input_out_qnty_arr[$color_size_id][4]["in"]*1;
							$resultset["total_out_qnty"] = $total_input_out_qnty_arr[$color_size_id][5]["out"]*1;
							$resultset["output_qnty"] = $total_output_qnty_arr[$color_size_id][5]*1;
							$resultset["color_wise_chk_qnty"] = $color_wise_production_array[$color_id]*1;
							$resultset["ok"] = $prev_qty_array[5]['ok']*1;
							$resultset["rej"] = $prev_qty_array[5]['rej']*1;
							$resultset["alter"] = $prev_qty_array[5]['alter']*1;
							$resultset["spot"] = $prev_qty_array[5]['spot']*1;
							$resultset["rectified"] = $prev_qty_array[5]['rectified']*1;
							return $resultset;
						} 
						else 
						{
							$this->db->trans_rollback();
							$this->db->trans_complete();
							return $resultset["status"] = "দুঃখিত! ডেটা মুছে ফেলা যায়নি। পুনরায় চেস্টা করুন।";
						}		
					}
				}

			}
		} 
	}

	function save_update_sewing_input_gross_old($save_obj) { 
		
		$db_type = return_db_type();

		$response_obj = json_decode($save_obj);
		// echo "<pre>";
		// print_r($response_obj);
		// echo "</pre>";
		if ($response_obj->status == true) 
		{
			$total_qnty = $response_obj->total_qnty;
			if ($response_obj->mode == "save") 
			{

				$production_types = $response_obj->production_type;
				if ($production_types == 4) {
					$entry_forms = 96;
				} else {
					$entry_forms = 0;
				}

				$mst_tbl_id = 0;
				$dtls_tbl_id = 0;
				$this->db->trans_start();
				$production_date = $response_obj->data->index->production_date;
				$remarks = $response_obj->data->index->remarks;
				$txt_reporting_hour = $response_obj->data->index->hour;
				$shift_id = $response_obj->data->index->shift_id;
				$action_type = $response_obj->action_type;

				$year_cond = "to_char(insert_date,'YYYY')";
				$pc_date_time = date("d-M-Y h:i:s A", time());
				$production_date = date("d-M-Y");
				$txt_reporting_hour = str_replace("'", "", $production_date) . " " . date('H:i');
				$txt_reporting_hour = "to_date('$txt_reporting_hour','DD MONTH YYYY HH24:MI:SS')";

				$cbo_company_name = $response_obj->data->index->company_id ;
				$location_id = $response_obj->data->index->location_id;
				$production_source = $response_obj->data->index->production_source;
				$serving_company = $response_obj->data->index->serving_company;
				$floor_id = $response_obj->data->index->floor_id;
				$sewing_line = $response_obj->data->index->sewing_line;
				
				$organic = $response_obj->data->index->organic;
				$user_id = $response_obj->data->index->user_id;
				$txt_system_id = $response_obj->data->index->txt_system_id;

				$actual_reject = ($action_type=='REJECT')?str_replace("'", "", $response_obj->data->actual_reject):"";
				$actual_alter = ($action_type=='ALTER')?str_replace("'", "", $response_obj->data->actual_alter):"";
				$actual_spot = ($action_type=='SPOT')?str_replace("'", "", $response_obj->data->actual_spot):"";

				$is_prod_reso_allo = return_field_value("auto_update", "variable_settings_production", "company_name=$serving_company and  variable_list=23 and is_deleted=0 and status_active=1", "auto_update");

				
				$prev_input_qty = 0;
				$dtls_data = $response_obj->data->list_data;
				$color_size_id=0;
				foreach ($dtls_data as $v) 
				{
					$color_size_id = $v->color_size_id;
					$colorId = $v->color_id;
					$sizeId = $v->size_id;
					$order_id = $v->order_id;
					$item_id = $v->item_id;
					$country_id = $v->country_id;
					$job_id = $v->job_id;
				}

				// ============================== prev qty ===========================
				$current_date = date("d-M-Y");
				$prev_qty_sql = "SELECT A.PO_BREAK_DOWN_ID,B.COLOR_SIZE_BREAK_DOWN_ID,B.PRODUCTION_QNTY,B.REJECT_QTY,B.PRODUCTION_TYPE,B.REPLACE_QTY,B.RECTIFIED_QTY,B.REJECT_QTY, B.ALTER_QTY, B.SPOT_QTY,C.COLOR_NUMBER_ID,a.PRODUCTION_DATE,a.INSERTED_BY from pro_garments_production_mst a, pro_garments_production_dtls b,wo_po_color_size_breakdown c where a.id=b.mst_id and b.color_size_break_down_id=c.id and b.status_active=1 and b.is_deleted=0 and b.production_type in(4,5) and c.status_active=1 and a.sewing_line=$sewing_line and c.job_id=$job_id AND a.item_number_id = $item_id AND a.country_id = $country_id";
				// and b.color_size_break_down_id=$color_size_id  and a.po_break_down_id = $order_id
				
				$receive_result = sql_select($prev_qty_sql);
				$prev_qty_array = $color_wise_production_array = array();
				foreach ($receive_result as $row) 
				{
					$sewing_production_date = strtotime($row->PRODUCTION_DATE);
					if($sewing_production_date == strtotime($current_date) && ($row->PRODUCTION_TYPE == 5))
					{
						$color_wise_production_array[$row->COLOR_NUMBER_ID] += $row->PRODUCTION_QNTY;
					}

					if($order_id == $row->PO_BREAK_DOWN_ID)
					{
						if($row->PRODUCTION_TYPE == 4)
						{
							$prod_data_array[$row->COLOR_SIZE_BREAK_DOWN_ID][$row->PRODUCTION_TYPE]["in"] += $row->PRODUCTION_QNTY;
						}

						if($row->PRODUCTION_TYPE == 5 && $row->COLOR_SIZE_BREAK_DOWN_ID == $color_size_id)
						{
							$prod_data_array[$row->COLOR_SIZE_BREAK_DOWN_ID][$row->PRODUCTION_TYPE]["out"] += $row->PRODUCTION_QNTY+$row->REJECT_QTY;
							$prod_data_array[$row->COLOR_SIZE_BREAK_DOWN_ID][$row->PRODUCTION_TYPE]["balance_out"] += $row->PRODUCTION_QNTY+$row->REJECT_QTY+(($row->ALTER_QTY+$row->SPOT_QTY)-$row->RECTIFIED_QTY);//+$row->RECTIFIED_QTY
							$prod_data_array[$row->COLOR_SIZE_BREAK_DOWN_ID][$row->PRODUCTION_TYPE]["rectified_balance"] += ($row->ALTER_QTY+$row->SPOT_QTY);
						}

						
						if($sewing_production_date == strtotime($current_date) && ($row->PRODUCTION_TYPE == 5) && ($row->INSERTED_BY == $user_id))
						{
							if($row->COLOR_SIZE_BREAK_DOWN_ID == $color_size_id)
							{
								$prod_data_output_array[$row->COLOR_SIZE_BREAK_DOWN_ID][$row->PRODUCTION_TYPE] += $row->PRODUCTION_QNTY+$row->REJECT_QTY+(($row->ALTER_QTY+$row->SPOT_QTY)-$row->RECTIFIED_QTY);//+$row->RECTIFIED_QTY
								$prev_qty_array[$row->PRODUCTION_TYPE]['ok'] += $row->PRODUCTION_QNTY;
								$prev_qty_array[$row->PRODUCTION_TYPE]['rej'] += $row->REJECT_QTY;
								$prev_qty_array[$row->PRODUCTION_TYPE]['alter'] += $row->ALTER_QTY;
								$prev_qty_array[$row->PRODUCTION_TYPE]['spot'] += $row->SPOT_QTY;
								$prev_qty_array[$row->PRODUCTION_TYPE]['rectified'] += $row->RECTIFIED_QTY;
							}
							//$color_wise_production_array[$row->COLOR_NUMBER_ID] += $row->PRODUCTION_QNTY;
						}
					}
					
				}
				// echo "<pre>";
				// print_r($prev_qty_array);
				// die;
				if(($action_type!="RECTIFIED" && ($prod_data_array[$color_size_id][5]["balance_out"]+1) > $prod_data_array[$color_size_id][4]["in"]))
				{
					$rec_balance = $prod_data_array[$color_size_id][5]["rectified_balance"];
					if($action_type=="RECTIFIED" && $rec_balance > 0)
					{
						//
					}
					else
					{
						$resultset["update_id"] = 0;
						$resultset["update_dtls_id"] = 0;
						$resultset["update_dtls_piece_id"] = 0;
						$resultset["input_qnty"] = 0;
						$resultset["output_qnty"] = 0;
						$resultset["total_out_qnty"] = 0;
						$resultset["color_wise_chk_qnty"] = 0;
						$resultset["ok"] = 0;
						$resultset["rej"] = 0;
						$resultset["alter"] = 0;
						$resultset["spot"] = 0;
						$resultset["rectified"] = 0;
						$resultset["status"] = "দুঃখিত! আউটপুট কোয়ানটিটি ইনপুট কোয়ানটিটি এর থেকে বেশি দেওয়া যাবেনা ।";
						return $resultset;
					}
				}

				foreach ($dtls_data as $val) 
				{
					$color_type_id = $val->color_type_id;
					$orderId = $val->order_id;
					$gmtsitemId = $val->item_id;
					$countryId = $val->country_id;
					$colorSizeId = $val->color_size_id;
					$color_id = $val->color_id;
					$rectified_from_dtls_id = $val->dtls_id;
					$operation_id = $val->operation_id;
					$qty = 1;//$val->qnty;

					// ================================== prepare mst part data ===========================
					// CHECK IF 
					$production_hour = str_replace("'", "", $production_date) . " " . date('H');;
					$master_data = $this->db->query("select id,production_quantity,reject_qnty from pro_garments_production_mst where production_type=5 and po_break_down_id=$orderId and item_number_id=$gmtsitemId and country_id=$countryId and production_date='$production_date' and sewing_line=$sewing_line and TO_CHAR(production_hour,'DD-Mon-YYYY HH24') = '$production_hour' and inserted_by=$user_id and status_active=1 and is_deleted=0 order by id desc")->row();
					if(empty($master_data))
					{
						$id = return_next_id_by_sequence("PRO_GAR_PRODUCTION_MST_SEQ", "PRO_GARMENTS_PRODUCTION_MST", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
						$production_qnty = ($val->good==1)?$val->qnty:0;
						$reject_qnty = ($val->reject==1)?$val->qnty:0;
					}
					else{
						$id = $master_data->ID;
						$production_qnty = ($val->good==1)?($master_data->PRODUCTION_QUANTITY+$val->qnty):$master_data->PRODUCTION_QUANTITY;
						$reject_qnty = ($val->reject==1)?($master_data->REJECT_QNTY+$val->qnty):$master_data->REJECT_QNTY;
					}
					
					$mst_part_data = array(
						'COMPANY_ID' => $cbo_company_name,
						'GARMENTS_NATURE' => 2,
						'CHALLAN_NO' => $txt_system_id,
						'PO_BREAK_DOWN_ID' => $orderId,
						'ITEM_NUMBER_ID' => $gmtsitemId,
						'COUNTRY_ID' => $countryId,
						'PRODUCTION_SOURCE' => $production_source,
						'SERVING_COMPANY' => $serving_company,
						'LOCATION' => $location_id,
						'PRODUCTION_DATE' => $production_date,
						'PRODUCTION_TYPE' => $production_types,
						'PRODUCTION_QUANTITY' => $production_qnty,
						'REJECT_QNTY' => $reject_qnty,
						'ENTRY_BREAK_DOWN_TYPE' => 3,
						'REMARKS' => $remarks,
						'SHIFT_NAME' => $shift_id,
						'FLOOR_ID' => $floor_id,
						'SEWING_LINE' => $sewing_line,
						'PROD_RESO_ALLO' => $is_prod_reso_allo,
						'ENTRY_FORM' => $entry_forms,
						'IS_TAB' => 1,
						'INSERTED_BY' => $user_id,
						'INSERT_DATE' => $pc_date_time,
						'PRODUCED_BY' => 2,						
					);

					if(empty($master_data))
					{
						$mst_part_data["ID"] = $id;
						$mst_tbl_id = $this->insertData($mst_part_data, "PRO_GARMENTS_PRODUCTION_MST");
					}
					else
					{
						$mst_tbl_id = $this->updateData('PRO_GARMENTS_PRODUCTION_MST', $mst_part_data, array('ID' => $id));
					}

					if ($mst_tbl_id) {
						$this->db->query("update PRO_GARMENTS_PRODUCTION_MST set production_hour=$txt_reporting_hour where id ='$id'");
					}

					// ================================== prepare dtls part data ===========================
					$dtlsdata_rs = $this->db->query("select id,production_qnty,reject_qty,alter_qty,spot_qty,replace_qty,rectified_qty from pro_garments_production_dtls where production_type=5 and color_size_break_down_id=$colorSizeId and status_active=1 and mst_id=$id order by id desc")->row();
					if(empty($dtlsdata_rs))
					{
						$dtls_id = return_next_id_by_sequence("PRO_GAR_PRODUCTION_DTLS_SEQ", "PRO_GARMENTS_PRODUCTION_DTLS", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
						$production_qnty = ($val->good==1)?$val->qnty:0;
						$reject_qnty 	 = ($val->reject==1)?$val->qnty:0;
						$alter_qnty 	 = ($val->alter==1)?$val->qnty:0;
						$spot_qnty 		 = ($val->spot==1)?$val->qnty:0;
						$rectified_qnty  = ($val->rectified==1)?$val->qnty:0;
					}
					else{
						$dtls_id 		 = $dtlsdata_rs->ID;
						$production_qnty = ($val->good==1)?($dtlsdata_rs->PRODUCTION_QNTY+$val->qnty):$dtlsdata_rs->PRODUCTION_QNTY;
						$reject_qnty 	 = ($val->reject==1)?($dtlsdata_rs->REJECT_QTY+$val->qnty):$dtlsdata_rs->REJECT_QTY;
						$alter_qnty 	 = ($val->alter==1)?($dtlsdata_rs->ALTER_QTY+$val->qnty):$dtlsdata_rs->ALTER_QTY;
						$spot_qnty 		 = ($val->spot==1)?($dtlsdata_rs->SPOT_QTY+$val->qnty):$dtlsdata_rs->SPOT_QTY;
						$rectified_qnty  = ($val->rectified==1)?($dtlsdata_rs->RECTIFIED_QTY+$val->qnty):$dtlsdata_rs->RECTIFIED_QTY;
					}
					
					$dtls_part_data = array(
						'MST_ID' => $id,
						'PRODUCTION_TYPE' => $production_types,
						'COLOR_SIZE_BREAK_DOWN_ID' => $colorSizeId,
						'PRODUCTION_QNTY' => $production_qnty,
						'REJECT_QTY' => $reject_qnty,
						'ALTER_QTY' => $alter_qnty,
						'SPOT_QTY' => $spot_qnty,
						'RECTIFIED_QTY' => $rectified_qnty,
						'ENTRY_FORM' => $entry_forms,
						'COLOR_TYPE_ID' => $color_type_id,
					);//+$rectified_qnty

					if(empty($dtlsdata_rs))
					{
						$dtls_part_data["ID"] = $dtls_id;
						$dtls_tbl_id = $this->insertData($dtls_part_data, "PRO_GARMENTS_PRODUCTION_DTLS");
					}
					else
					{
						$dtls_tbl_id = $this->updateData('PRO_GARMENTS_PRODUCTION_DTLS', $dtls_part_data, array('ID' => $dtls_id));
					}

					
					if ($dtls_tbl_id) {
						$piece_dtls_id = return_next_id_by_sequence("PRO_GAR_PROD_DTLS_PIECE_SEQ", "PRO_GARMENTS_PROD_DTLS_PIECE", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
						$piece_dtls_part_data = array(
							'ID' => $piece_dtls_id,
							'MST_ID' => $id,
							'DTLS_ID' => $dtls_id,
							'PRODUCTION_TYPE' => $production_types,
							'COLOR_SIZE_BREAK_DOWN_ID' => $colorSizeId,
							'PRODUCTION_QNTY' => ($val->good==1)?$val->qnty:0,
							'REJECT_QTY' => ($val->reject==1)?$val->qnty:0,
							'ALTER_QTY' => ($val->alter==1)?$val->qnty:0,
							'SPOT_QTY' => ($val->spot==1)?$val->qnty:0,
							'RECTIFIED_QTY' => ($val->rectified==1)?$val->qnty:0,
							'ENTRY_FORM' => $entry_forms,
							'COLOR_TYPE_ID' => $color_type_id,
							'RECTIFIED_FROM' => $rectified_from_dtls_id,
							'OPERATION_ID' => $operation_id,
						);

						$piece_dtls_part_id = $this->insertData($piece_dtls_part_data, "PRO_GARMENTS_PROD_DTLS_PIECE");
					}

					// ========================== reject data =========================					
					if($actual_reject!="")
					{
						$actual_reject_info = explode("__",$actual_reject);
						$reject_data_array = array();
						for( $rls=0; $rls<count($actual_reject_info); $rls++ )
						{
							list($operationId,$defectPointId,$defect_qty)=explode("*",$actual_reject_info[$rls]);
							$dft_id = return_next_id_by_sequence("PRO_GMTS_PROD_DFT_SEQ", "PRO_GMTS_PROD_DFT", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
							$reject_data_array[] = array(
								'ID' => $dft_id,
								'MST_ID' => $id,
								'PO_BREAK_DOWN_ID' => $orderId,
								'PRODUCTION_TYPE' => 5,
								'DEFECT_TYPE_ID' => 3,
								'DEFECT_POINT_ID' => $defectPointId,
								'DEFECT_QTY' => $defect_qty,
								'COLOR_SIZE_BREAK_DOWN_ID' => $colorSizeId,
								'INSERTED_BY' => $user_id,
								'INSERT_DATE' => $pc_date_time,
								'DTLS_ID' => $dtls_id,
								'OPERATION_ID' => $operationId,
								'DTLS_PIECE_ID' => $piece_dtls_id,
							);
							
						}
						$dft_tbl_id = $this->db->insert_batch("PRO_GMTS_PROD_DFT",$reject_data_array);
					}	
					// ========================== alter data =========================					
					if($actual_alter!="")
					{
						$actual_alter_info = explode("__",$actual_alter);
						$alter_data_array = array();
						for( $rls=0; $rls<count($actual_alter_info); $rls++ )
						{
							list($operationId,$defectPointId,$defect_qty)=explode("*",$actual_alter_info[$rls]);
							$dft_id = return_next_id_by_sequence("PRO_GMTS_PROD_DFT_SEQ", "PRO_GMTS_PROD_DFT", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
							$alter_data_array[] = array(
								'ID' => $dft_id,
								'MST_ID' => $id,
								'PO_BREAK_DOWN_ID' => $orderId,
								'PRODUCTION_TYPE' => 5,
								'DEFECT_TYPE_ID' => 1,
								'DEFECT_POINT_ID' => $defectPointId,
								'DEFECT_QTY' => $defect_qty,
								'COLOR_SIZE_BREAK_DOWN_ID' => $colorSizeId,
								'INSERTED_BY' => $user_id,
								'INSERT_DATE' => $pc_date_time,
								'DTLS_ID' => $dtls_id,
								'OPERATION_ID' => $operationId,
								'DTLS_PIECE_ID' => $piece_dtls_id,
							);
							
						}
						$dft_tbl_id = $this->db->insert_batch("PRO_GMTS_PROD_DFT",$alter_data_array);
						//$total_qnty=0;
					}	
					// ========================== spot data =========================					
					if($actual_spot!="")
					{
						$actual_spot_info = explode("__",$actual_spot);
						$spot_data_array = array();
						for( $rls=0; $rls<count($actual_spot_info); $rls++ )
						{
							list($operationId,$defectPointId,$defect_qty)=explode("*",$actual_spot_info[$rls]);
							$dft_id = return_next_id_by_sequence("PRO_GMTS_PROD_DFT_SEQ", "PRO_GMTS_PROD_DFT", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
							$spot_data_array[] = array(
								'ID' => $dft_id,
								'MST_ID' => $id,
								'PO_BREAK_DOWN_ID' => $orderId,
								'PRODUCTION_TYPE' => 5,
								'DEFECT_TYPE_ID' => 2,
								'DEFECT_POINT_ID' => $defectPointId,
								'DEFECT_QTY' => $defect_qty,
								'COLOR_SIZE_BREAK_DOWN_ID' => $colorSizeId,
								'INSERTED_BY' => $user_id,
								'INSERT_DATE' => $pc_date_time,
								'DTLS_ID' => $dtls_id,
								'OPERATION_ID' => $operationId,
								'DTLS_PIECE_ID' => $piece_dtls_id,
							);
							
						}
						$dft_tbl_id = $this->db->insert_batch("PRO_GMTS_PROD_DFT",$spot_data_array);
					}
				}

				if ($this->db->trans_status() == TRUE) 
				{
					if ($mst_tbl_id && $dtls_tbl_id) 
					{
						$this->db->trans_commit();
						$this->db->trans_complete();
						if($actual_spot!="" || $actual_alter!="" || $actual_reject!="")
						{
							$color_wise_chk_qnty = $color_wise_production_array[$color_id]*1;
						}
						else
						{
							$color_wise_chk_qnty = ($color_wise_production_array[$color_id]+$total_qnty)*1;
						}

						$resultset["status"] = "ডেটা সফলভাবে সংরক্ষিত হয়েছে ।";
						$resultset["update_id"] = $id;
						$resultset["update_dtls_id"] = $dtls_id;
						$resultset["update_dtls_piece_id"] = $piece_dtls_id;
						$resultset["input_qnty"] = $prod_data_array[$colorSizeId][4]["in"]*1;
						$resultset["color_wise_chk_qnty"] = $color_wise_chk_qnty*1;
						$resultset["ok"] = (($val->good==1)?($prev_qty_array[5]['ok']+$total_qnty):$prev_qty_array[5]['ok']) *1;
						$resultset["rej"] = (($val->reject==1)?($prev_qty_array[5]['rej']+$total_qnty):$prev_qty_array[5]['rej']) *1;
						$resultset["alter"] = (($val->alter==1)?($prev_qty_array[5]['alter']+$total_qnty):$prev_qty_array[5]['alter']) *1;
						$resultset["spot"] = (($val->spot==1)?($prev_qty_array[5]['spot']+$total_qnty):$prev_qty_array[5]['spot']) *1;
						$resultset["rectified"] = (($val->rectified==1)?($prev_qty_array[5]['rectified']+$total_qnty):$prev_qty_array[5]['rectified']) *1;

						if($val->alter == 1 || $val->spot == 1)
						{
							$total_qnty = 0;
						}
						$resultset["total_out_qnty"] = ($prod_data_array[$colorSizeId][5]["out"]+$total_qnty)*1;
						$resultset["output_qnty"] = ($prod_data_output_array[$colorSizeId][5]+$total_qnty)*1;

						return $resultset;
					} 
					else 
					{
						$this->db->trans_rollback();
						$this->db->trans_complete();
						return $resultset["status"] = "দুঃখিত! ডেটা সংরক্ষিত হয়নি । পুনরায় চেস্টা করুন।";
					}
				} 
				else 
				{
					$resultset["status"] = "দুঃখিত! ডেটা সংরক্ষিত হয়নি । পুনরায় চেস্টা করুন।";
					$this->db->trans_complete();
				}
			}
			elseif ($response_obj->mode == "delete") 
			{
				$update_id = $response_obj->UPDATE_ID;
				$update_dtls_id = $response_obj->UPDATE_DTLS_ID;
				$update_dtls_piece_id = $response_obj->UPDATE_DTLS_PIECE_ID;
				$delete_data_type = $response_obj->DELETE_DATA_TYPE;
				
				$mst_update_fields = $dtls_update_fields = "";
				if($delete_data_type=="GOOD")
				{
					$mst_update_fields = " PRODUCTION_QUANTITY=PRODUCTION_QUANTITY-1";
					$dtls_update_fields = " PRODUCTION_QNTY=PRODUCTION_QNTY-1";
				}
				else if($delete_data_type=="ALTER")
				{
					$dtls_update_fields = " ALTER_QTY=ALTER_QTY-1";
				}
				else if($delete_data_type=="REJECT")
				{
					$mst_update_fields = " REJECT_QNTY=REJECT_QNTY-1";
					$dtls_update_fields = " REJECT_QTY=REJECT_QTY-1";
				}
				else if($delete_data_type=="SPOT")
				{
					$dtls_update_fields = " SPOT_QTY=SPOT_QTY-1";
				}

				if($update_id>0)
				{
					$mst_dtls_piece_status = $this->db->query("update PRO_GARMENTS_PROD_DTLS_PIECE set status_active=0,is_deleted=1 where id ='$update_dtls_piece_id'");
					if($mst_update_fields!="")
					{
						$mst_status = $this->db->query("update PRO_GARMENTS_PRODUCTION_MST set $mst_update_fields where id ='$update_id'");
					}
					
					$dtls_status = $this->db->query("update PRO_GARMENTS_PRODUCTION_DTLS set $dtls_update_fields where id ='$update_dtls_id'");
					$dft_status = $this->db->query("update PRO_GMTS_PROD_DFT set status_active=0,is_deleted=1 where dtls_piece_id ='$update_dtls_piece_id'");

					$dtls_data = $response_obj->data->list_data;
					$color_size_id=0;
					foreach ($dtls_data as $v) 
					{
						$color_size_id = $v->color_size_id;
						$order_id = $v->order_id;
						$item_id = $v->item_id;
						$country_id = $v->country_id;
						$color_id = $v->color_id;
						$job_id = $v->job_id;
					}

					
					if ($this->db->trans_status() == TRUE) 
					{
						if ($mst_dtls_piece_status && $dtls_status) 
						{
							$this->db->trans_commit();
							$this->db->trans_complete();

							// ============================== prev qty ===========================
							$production_date = date("d-M-Y");
							$sewing_line = $response_obj->data->index->sewing_line;
							
							$current_date = date("d-M-Y");
							$prev_qty_sql = "SELECT B.COLOR_SIZE_BREAK_DOWN_ID,B.PRODUCTION_QNTY,B.REJECT_QTY,B.PRODUCTION_TYPE,B.REPLACE_QTY,B.RECTIFIED_QTY,B.REJECT_QTY, B.ALTER_QTY, B.SPOT_QTY,C.COLOR_NUMBER_ID,a.PRODUCTION_DATE,a.INSERTED_BY from pro_garments_production_mst a, pro_garments_production_dtls b,wo_po_color_size_breakdown c where a.id=b.mst_id and b.color_size_break_down_id=c.id and b.status_active=1 and b.is_deleted=0 and b.production_type in(4,5) and c.status_active=1 and a.sewing_line=$sewing_line and c.job_id=$job_id AND a.item_number_id = $item_id AND a.country_id = $country_id";// and b.color_size_break_down_id=$color_size_id  and a.po_break_down_id = $order_id

							$receive_result = sql_select($prev_qty_sql);
							$prev_qty_array = $color_wise_production_array = $total_input_out_qnty_arr = array();
							foreach ($receive_result as $row) 
							{
								$production_date = strtotime($row->PRODUCTION_DATE);
								if($row->PRODUCTION_TYPE==4)
								{
									$total_input_out_qnty_arr[$row->COLOR_SIZE_BREAK_DOWN_ID][$row->PRODUCTION_TYPE]["in"] += $row->PRODUCTION_QNTY;
								}

								if($production_date == strtotime($current_date) && $row->PRODUCTION_TYPE == 5)
								{
									$color_wise_production_array[$row->COLOR_NUMBER_ID] += $row->PRODUCTION_QNTY;
								}
								
								if($row->PRODUCTION_TYPE == 5 && $row->COLOR_SIZE_BREAK_DOWN_ID == $color_size_id)
								{
									$total_input_out_qnty_arr[$row->COLOR_SIZE_BREAK_DOWN_ID][$row->PRODUCTION_TYPE]["out"] += $row->PRODUCTION_QNTY+$row->REJECT_QTY;//+$row->ALTER_QTY+$row->SPOT_QTY
								}
								
								
								if($production_date == strtotime($current_date) && $row->PRODUCTION_TYPE == 5 && ($row->INSERTED_BY == $user_id))
								{
									if($row->COLOR_SIZE_BREAK_DOWN_ID == $color_size_id)
									{
										$total_output_qnty_arr[$row->COLOR_SIZE_BREAK_DOWN_ID][$row->PRODUCTION_TYPE] += $row->PRODUCTION_QNTY+$row->REJECT_QTY;//+$row->ALTER_QTY+$row->SPOT_QTY
										$prev_qty_array[$row->PRODUCTION_TYPE]['ok'] += $row->PRODUCTION_QNTY;
										$prev_qty_array[$row->PRODUCTION_TYPE]['rej'] += $row->REJECT_QTY;
										$prev_qty_array[$row->PRODUCTION_TYPE]['alter'] += $row->ALTER_QTY;
										$prev_qty_array[$row->PRODUCTION_TYPE]['spot'] += $row->SPOT_QTY;
										$prev_qty_array[$row->PRODUCTION_TYPE]['rectified'] += $row->RECTIFIED_QTY;
									}
								}
							}
							//echo $color_wise_production_array[$color_id];die;
							$resultset["status"] = "ডেটা সফলভাবে মুছে ফেলা হয়েছে।";
							$resultset["update_id"] = $update_id;
							$resultset["update_dtls_id"] = $update_dtls_id;
							$resultset["update_dtls_piece_id"] = $update_dtls_piece_id;
							$resultset["input_qnty"] = $total_input_out_qnty_arr[$color_size_id][4]["in"]*1;
							$resultset["total_out_qnty"] = $total_input_out_qnty_arr[$color_size_id][5]["out"]*1;
							$resultset["output_qnty"] = $total_output_qnty_arr[$color_size_id][5]*1;
							$resultset["color_wise_chk_qnty"] = $color_wise_production_array[$color_id]*1;
							$resultset["ok"] = $prev_qty_array[5]['ok']*1;
							$resultset["rej"] = $prev_qty_array[5]['rej']*1;
							$resultset["alter"] = $prev_qty_array[5]['alter']*1;
							$resultset["spot"] = $prev_qty_array[5]['spot']*1;
							$resultset["rectified"] = $prev_qty_array[5]['rectified']*1;
							return $resultset;
						} 
						else 
						{
							$this->db->trans_rollback();
							$this->db->trans_complete();
							return $resultset["status"] = "দুঃখিত! ডেটা মুছে ফেলা যায়নি । পুনরায় চেস্টা করুন।";
						}		
					}
				}

			}
		} 
	}

	function save_update_sewing_input_gross_rectified_old($save_obj) { 
		
		$db_type = return_db_type();

		$response_obj = json_decode($save_obj);
		// echo "<pre>";
		// print_r($response_obj);
		// echo "</pre>";
		if ($response_obj->status == true) 
		{
			$total_qnty = $response_obj->total_qnty;
			if ($response_obj->mode == "save") 
			{

				$production_types = $response_obj->production_type;
				if ($production_types == 4) {
					$entry_forms = 96;
				} else {
					$entry_forms = 0;
				}
				
				$mst_tbl_id = 0;
				$dtls_tbl_id = 0;
				$this->db->trans_start();
				$production_date = $response_obj->data->index->production_date;
				
				$action_type = $response_obj->action_type;

				$year_cond = "to_char(insert_date,'YYYY')";
				$pc_date_time = date("d-M-Y h:i:s A", time());
				

				$cbo_company_name = $response_obj->data->index->company_id ;
				$location_id = $response_obj->data->index->location_id;
				$production_source = $response_obj->data->index->production_source;
				$serving_company = $response_obj->data->index->serving_company;
				$floor_id = $response_obj->data->index->floor_id;
				$sewing_line = $response_obj->data->index->sewing_line;
				$user_id = $response_obj->data->index->user_id;

				
				
				$dtls_data = $response_obj->data->list_data;

				foreach ($dtls_data as $v) 
				{
					$color_size_id = $v->color_size_id;
					$colorId = $v->color_id;
					$sizeId = $v->size_id;
					$order_id = $v->order_id;
					$item_id = $v->item_id;
					$country_id = $v->country_id;
					$job_id = $v->job_id;
					$color_id = $v->color_id;
				}

				// ============================== prev qty ===========================
				$current_date = date("d-M-Y");
				$prev_qty_sql = "SELECT A.PO_BREAK_DOWN_ID,B.COLOR_SIZE_BREAK_DOWN_ID,B.PRODUCTION_QNTY,B.REJECT_QTY,B.PRODUCTION_TYPE,B.REPLACE_QTY,B.RECTIFIED_QTY,B.REJECT_QTY, B.ALTER_QTY, B.SPOT_QTY,C.COLOR_NUMBER_ID,a.PRODUCTION_DATE,a.INSERTED_BY from pro_garments_production_mst a, pro_garments_production_dtls b,wo_po_color_size_breakdown c where a.id=b.mst_id and b.color_size_break_down_id=c.id and b.status_active=1 and b.is_deleted=0 and b.production_type in(4,5) and c.status_active=1 and a.sewing_line=$sewing_line and c.job_id=$job_id AND a.item_number_id = $item_id AND a.country_id = $country_id";
				// and b.color_size_break_down_id=$color_size_id  and a.po_break_down_id = $order_id
				
				$receive_result = sql_select($prev_qty_sql);
				$prev_qty_array = $color_wise_production_array = array();
				foreach ($receive_result as $row) 
				{
					$sewing_production_date = strtotime($row->PRODUCTION_DATE);
					if($row->PRODUCTION_TYPE == 4)
					{
						$prod_data_array[$row->COLOR_SIZE_BREAK_DOWN_ID][$row->PRODUCTION_TYPE]["in"] += $row->PRODUCTION_QNTY;
					}

					if($row->PRODUCTION_TYPE == 5 && $row->COLOR_SIZE_BREAK_DOWN_ID == $color_size_id)
					{
						$prod_data_array[$row->COLOR_SIZE_BREAK_DOWN_ID][$row->PRODUCTION_TYPE]["out"] += $row->PRODUCTION_QNTY+$row->REJECT_QTY;
					}

					if($sewing_production_date == strtotime($current_date) && ($row->PRODUCTION_TYPE == 5))
					{
						$color_wise_production_array[$row->COLOR_NUMBER_ID] += $row->PRODUCTION_QNTY;
					}

					if($sewing_production_date == strtotime($current_date) && ($row->PRODUCTION_TYPE == 5) && ($row->INSERTED_BY == $user_id))
					{
						if($row->COLOR_SIZE_BREAK_DOWN_ID == $color_size_id)
						{
							$prod_data_output_array[$row->COLOR_SIZE_BREAK_DOWN_ID][$row->PRODUCTION_TYPE] += $row->PRODUCTION_QNTY+$row->REJECT_QTY+(($row->ALTER_QTY+$row->SPOT_QTY)-$row->RECTIFIED_QTY);
							$prev_qty_array[$row->PRODUCTION_TYPE]['ok'] += $row->PRODUCTION_QNTY-$row->RECTIFIED_QTY;
							$prev_qty_array[$row->PRODUCTION_TYPE]['rej'] += $row->REJECT_QTY;
							$prev_qty_array[$row->PRODUCTION_TYPE]['alter'] += $row->ALTER_QTY;
							$prev_qty_array[$row->PRODUCTION_TYPE]['spot'] += $row->SPOT_QTY;
							$prev_qty_array[$row->PRODUCTION_TYPE]['rectified'] += $row->RECTIFIED_QTY;
						}
					}
				}

				$dtls_prod_qnty_arr = array();
				foreach ($dtls_data as $val) 
				{
					// ================================== prepare dtls part data ===========================
					$piece_dtls_id = return_next_id_by_sequence("PRO_GAR_PROD_DTLS_PIECE_SEQ", "PRO_GARMENTS_PROD_DTLS_PIECE", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
					$piece_dtls_part_data = array(
						'ID' => $piece_dtls_id,
						'MST_ID' => $val->mst_id,
						'DTLS_ID' => $val->dtls_id,
						'PRODUCTION_TYPE' => $production_types,
						'COLOR_SIZE_BREAK_DOWN_ID' => $val->color_size_id,
						'PRODUCTION_QNTY' => 1,
						'REJECT_QTY' => 0,
						'ALTER_QTY' => 0,
						'SPOT_QTY' => 0,
						'RECTIFIED_QTY' => 1,
						'ENTRY_FORM' => $entry_forms,
						'COLOR_TYPE_ID' => $val->color_type_id,
						'RECTIFIED_FROM' => $val->dtls_piece_id,
						'OPERATION_ID' => $val->operation_id,
					);
					
					$piece_dtls_part_id = $this->insertData($piece_dtls_part_data, "PRO_GARMENTS_PROD_DTLS_PIECE");
					
					if ($piece_dtls_part_id && $val->dtls_id!="") {
						$this->db->query("update PRO_GARMENTS_PROD_DTLS_PIECE set IS_RECTIFIED=1 where id=$val->dtls_piece_id");
						$dtls_prod_qnty_arr[$val->dtls_id][]=$val->dtls_piece_id;
						$dtls_id_arr[$val->dtls_id]=$val->dtls_id;
						$dtls_mst_id_arr[$val->dtls_id]=$val->mst_id;
					}
				}
				
				foreach ($dtls_id_arr as $val) 
				{
					$dtls_id = $val;
					$mst_id = $dtls_mst_id_arr[$dtls_id];
					$total_qnty = count($dtls_prod_qnty_arr[$dtls_id]);
					$defect_piece_ids = implode(",",$dtls_prod_qnty_arr[$dtls_id]);
					
					// ================================== prepare dtls part data ===========================
					/*$dtlsdata_rs = $this->db->query("select id,production_qnty,reject_qty,alter_qty,spot_qty,replace_qty,rectified_qty from pro_garments_production_dtls where production_type=5 and status_active=1 and id=$dtls_id")->row();
					if(empty($dtlsdata_rs))
					{
						$total_qnty  = $dtlsdata_rs->rectified_qty+$total_qnty;
					}*/
					
					$dtls_tbl_id = $this->db->query("update PRO_GARMENTS_PRODUCTION_DTLS set PRODUCTION_QNTY=PRODUCTION_QNTY+$total_qnty,RECTIFIED_QTY=RECTIFIED_QTY+$total_qnty where id=$dtls_id");

					if($dtls_tbl_id)
					{
						$mst_tbl_id = $this->db->query("update PRO_GARMENTS_PRODUCTION_MST set PRODUCTION_QUANTITY=PRODUCTION_QUANTITY+$total_qnty where id=$mst_id");
						$mst_tbl_id = $this->db->query("update PRO_GMTS_PROD_DFT set IS_RECTIFIED=1 where dtls_piece_id in($defect_piece_ids)");
					}
					
				}

				if ($this->db->trans_status() == TRUE) 
				{
					if ($mst_tbl_id && $dtls_tbl_id) 
					{
						$this->db->trans_commit();
						$this->db->trans_complete();
						$color_wise_chk_qnty = ($color_wise_production_array[$color_id]+$total_qnty)*1;

						$resultset["status"] = "ডেটা সফলভাবে সংরক্ষিত হয়েছে ।";
						$resultset["update_id"] = $id;
						$resultset["input_qnty"] = $prod_data_array[$color_size_id][4]["in"]*1;
						$resultset["color_wise_chk_qnty"] = $color_wise_chk_qnty*1;
						$resultset["ok"] = $prev_qty_array[5]['ok'];
						$resultset["rej"] = $prev_qty_array[5]['rej'];
						$resultset["alter"] = $prev_qty_array[5]['alter'];
						$resultset["spot"] = $prev_qty_array[5]['spot'];

						$resultset["rectified"] = $prev_qty_array[5]['rectified']+$total_qnty *1;

						if($val->alter == 1 || $val->spot == 1)
						{
							$total_qnty = 0;
						}
						$resultset["total_out_qnty"] = ($prod_data_array[$color_size_id][5]["out"]+$total_qnty)*1;
						$resultset["output_qnty"] = ($prod_data_output_array[$color_size_id][5]+$total_qnty)*1;

						return $resultset;
					} 
					else 
					{
						$this->db->trans_rollback();
						$this->db->trans_complete();
						return $resultset["status"] = "দুঃখিত! ডেটা সংরক্ষিত হয়নি । পুনরায় চেস্টা করুন।";
					}
				} 
				else 
				{
					$resultset["status"] = "দুঃখিত! ডেটা সংরক্ষিত হয়নি । পুনরায় চেস্টা করুন।";
					$this->db->trans_complete();
				}
			}
		} 
	}

	function save_update_sewing_input_gross_rectified($save_obj) { 
		
		$db_type = return_db_type();

		$response_obj = json_decode($save_obj);
		// echo "<pre>";
		// print_r($response_obj);
		// echo "</pre>";
		if ($response_obj->status == true) 
		{
			$total_qnty = $response_obj->total_qnty;
			if ($response_obj->mode == "save") 
			{

				$production_types = $response_obj->production_type;
				if ($production_types == 4) {
					$entry_forms = 96;
				} else {
					$entry_forms = 0;
				}
				
				$mst_tbl_id = 0;
				$dtls_tbl_id = 0;
				$this->db->trans_start();
				$production_date = $response_obj->data->index->production_date;
				
				$action_type = $response_obj->action_type;

				$year_cond = "to_char(insert_date,'YYYY')";
				$pc_date_time = date("d-M-Y h:i:s A", time());
				

				$cbo_company_name = $response_obj->data->index->company_id ;
				$location_id = $response_obj->data->index->location_id;
				$production_source = $response_obj->data->index->production_source;
				$serving_company = $response_obj->data->index->serving_company;
				$floor_id = $response_obj->data->index->floor_id;
				$sewing_line = $response_obj->data->index->sewing_line;
				$user_id = $response_obj->data->index->user_id;

				
				
				$dtls_data = $response_obj->data->list_data;

				foreach ($dtls_data as $v) 
				{
					$color_size_id = $v->color_size_id;
					$colorId = $v->color_id;
					$sizeId = $v->size_id;
					$order_id = $v->order_id;
					$item_id = $v->item_id;
					$country_id = $v->country_id;
					$job_id = $v->job_id;
					$color_id = $v->color_id;
				}

				// ============================== prev qty ===========================
				$current_date = date("d-M-Y");
				$prev_qty_sql = "SELECT A.PO_BREAK_DOWN_ID,A.COUNTRY_ID,B.COLOR_SIZE_BREAK_DOWN_ID,B.PRODUCTION_QNTY,B.REJECT_QTY,B.PRODUCTION_TYPE,B.REPLACE_QTY,B.RECTIFIED_QTY,B.REJECT_QTY, B.ALTER_QTY, B.SPOT_QTY,C.COLOR_NUMBER_ID,a.PRODUCTION_DATE,a.INSERTED_BY from pro_garments_production_mst a, pro_garments_production_dtls b,wo_po_color_size_breakdown c where a.id=b.mst_id and b.color_size_break_down_id=c.id and b.status_active=1 and b.is_deleted=0 and b.production_type in(4,5) and c.status_active=1 and a.sewing_line=$sewing_line and c.job_id=$job_id AND a.item_number_id = $item_id AND a.country_id = $country_id";
				// and b.color_size_break_down_id=$color_size_id  and a.po_break_down_id = $order_id
				
				$receive_result = sql_select($prev_qty_sql);
				$prev_qty_array = $color_wise_production_array = array();
				foreach ($receive_result as $row) 
				{
					$sewing_production_date = strtotime($row->PRODUCTION_DATE);

					if($row->PRODUCTION_TYPE == 4)
					{
						$prod_data_array[$row->COLOR_SIZE_BREAK_DOWN_ID][$row->PRODUCTION_TYPE]["in"] += $row->PRODUCTION_QNTY;
						$country_prod_data_array[$row->COLOR_NUMBER_ID][$row->PO_BREAK_DOWN_ID][$row->COUNTRY_ID][$row->PRODUCTION_TYPE]["in"] += $row->PRODUCTION_QNTY;
						$po_prod_data_array[$row->COLOR_NUMBER_ID][$row->PO_BREAK_DOWN_ID][$row->PRODUCTION_TYPE]["in"] += $row->PRODUCTION_QNTY;
					}

					if($row->PRODUCTION_TYPE == 5)
					{
						$country_prod_data_array[$row->COLOR_NUMBER_ID][$row->PO_BREAK_DOWN_ID][$row->COUNTRY_ID][$row->PRODUCTION_TYPE]["out"] += $row->PRODUCTION_QNTY;
						$po_prod_data_array[$row->COLOR_NUMBER_ID][$row->PO_BREAK_DOWN_ID][$row->PRODUCTION_TYPE]["out"] += $row->PRODUCTION_QNTY;
					}

					if($row->PRODUCTION_TYPE == 5 && $row->COLOR_SIZE_BREAK_DOWN_ID == $color_size_id)
					{
						$prod_data_array[$row->COLOR_SIZE_BREAK_DOWN_ID][$row->PRODUCTION_TYPE]["out"] += $row->PRODUCTION_QNTY+$row->REJECT_QTY;
					}

					if($sewing_production_date == strtotime($current_date) && ($row->PRODUCTION_TYPE == 5))
					{
						$color_wise_production_array[$row->COLOR_NUMBER_ID] += $row->PRODUCTION_QNTY;
					}

					if($sewing_production_date == strtotime($current_date) && ($row->PRODUCTION_TYPE == 5) && ($row->INSERTED_BY == $user_id))
					{
						if($row->COLOR_SIZE_BREAK_DOWN_ID == $color_size_id)
						{
							$prod_data_output_array[$row->COLOR_SIZE_BREAK_DOWN_ID][$row->PRODUCTION_TYPE] += $row->PRODUCTION_QNTY+$row->REJECT_QTY+(($row->ALTER_QTY+$row->SPOT_QTY)-$row->RECTIFIED_QTY);
						}

						$prev_qty_array[$row->PRODUCTION_TYPE]['ok'] += $row->PRODUCTION_QNTY;
						$prev_qty_array[$row->PRODUCTION_TYPE]['rej'] += $row->REJECT_QTY;
						$prev_qty_array[$row->PRODUCTION_TYPE]['alter'] += $row->ALTER_QTY;
						$prev_qty_array[$row->PRODUCTION_TYPE]['spot'] += $row->SPOT_QTY;
						$prev_qty_array[$row->PRODUCTION_TYPE]['rectified'] += $row->RECTIFIED_QTY;
					}
				}

				$dtls_prod_qnty_arr = array();
				
				foreach ($dtls_data as $val) 
				{
					// ================================== prepare dtls part data ===========================
					$piece_dtls_id = return_next_id_by_sequence("PRO_GAR_PROD_DTLS_PIECE_SEQ", "PRO_GARMENTS_PROD_DTLS_PIECE", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
					$piece_dtls_part_data = array(
						'ID' => $piece_dtls_id,
						'MST_ID' => $val->mst_id,
						'DTLS_ID' => $val->dtls_id,
						'PRODUCTION_TYPE' => $production_types,
						'COLOR_SIZE_BREAK_DOWN_ID' => $val->color_size_id,
						'PRODUCTION_QNTY' => 1,
						'REJECT_QTY' => 0,
						'ALTER_QTY' => 0,
						'SPOT_QTY' => 0,
						'RECTIFIED_QTY' => 1,
						'ENTRY_FORM' => $entry_forms,
						'COLOR_TYPE_ID' => $val->color_type_id,
						'RECTIFIED_FROM' => $val->dtls_piece_id,
						'OPERATION_ID' => $val->operation_id,
					);
					
					$piece_dtls_part_id = $this->insertData($piece_dtls_part_data, "PRO_GARMENTS_PROD_DTLS_PIECE");
					
					if ($piece_dtls_part_id && $val->dtls_id!="") {
						$this->db->query("update PRO_GARMENTS_PROD_DTLS_PIECE set IS_RECTIFIED=1 where id=$val->dtls_piece_id");
						$dtls_prod_qnty_arr[$val->dtls_id][]=$val->dtls_piece_id;
						$dtls_id_arr[$val->dtls_id]=$val->dtls_id;
						$dtls_mst_id_arr[$val->dtls_id]=$val->mst_id;
					}
				}
				
				foreach ($dtls_id_arr as $val) 
				{
					$dtls_id = $val;
					$mst_id = $dtls_mst_id_arr[$dtls_id];
					$total_qnty = count($dtls_prod_qnty_arr[$dtls_id]);
					$defect_piece_ids = implode(",",$dtls_prod_qnty_arr[$dtls_id]);
					
					// ================================== prepare dtls part data ===========================
					/*$dtlsdata_rs = $this->db->query("select id,production_qnty,reject_qty,alter_qty,spot_qty,replace_qty,rectified_qty from pro_garments_production_dtls where production_type=5 and status_active=1 and id=$dtls_id")->row();
					if(empty($dtlsdata_rs))
					{
						$total_qnty  = $dtlsdata_rs->rectified_qty+$total_qnty;
					}*/
					
					$dtls_tbl_id = $this->db->query("update PRO_GARMENTS_PRODUCTION_DTLS set PRODUCTION_QNTY=PRODUCTION_QNTY+$total_qnty,RECTIFIED_QTY=RECTIFIED_QTY+$total_qnty where id=$dtls_id");

					if($dtls_tbl_id)
					{
						$mst_tbl_id = $this->db->query("update PRO_GARMENTS_PRODUCTION_MST set PRODUCTION_QUANTITY=PRODUCTION_QUANTITY+$total_qnty where id=$mst_id");
						$mst_tbl_id = $this->db->query("update PRO_GMTS_PROD_DFT set IS_RECTIFIED=1 where dtls_piece_id in($defect_piece_ids)");
					}
					
				}

				if ($this->db->trans_status() == TRUE) 
				{
					if ($mst_tbl_id && $dtls_tbl_id) 
					{
						$this->db->trans_commit();
						$this->db->trans_complete();
						$color_wise_chk_qnty = ($color_wise_production_array[$color_id]+$total_qnty)*1;

						$country_wise_input_qnty = $country_prod_data_array[$colorId][$order_id][$country_id][4]["in"]*1;
						$country_wise_output_qnty = $country_prod_data_array[$colorId][$order_id][$country_id][5]["out"]*1+$total_qnty;

						$po_wise_input_qnty = $po_prod_data_array[$colorId][$order_id][4]["in"];
						$po_wise_output_qnty = $po_prod_data_array[$colorId][$order_id][5]["out"]*1+$total_qnty;

						$resultset["status"] = "ডেটা সফলভাবে সংরক্ষিত হয়েছে ।";
						$resultset["update_id"] = $id;
						$resultset["input_qnty"] = $prod_data_array[$color_size_id][4]["in"]*1;

						$resultset["country_id"] = $country_id;
						$resultset["country_status"] = ($country_wise_output_qnty>=$country_wise_input_qnty)?false:true;

						$resultset["order_id"] = $orderId;
						$resultset["order_status"] = ($po_wise_output_qnty>=$po_wise_input_qnty)?false:true;

						$resultset["color_wise_chk_qnty"] = $color_wise_chk_qnty*1;
						$resultset["ok"] = $prev_qty_array[5]['ok']+$total_qnty;
						$resultset["rej"] = $prev_qty_array[5]['rej'];
						$resultset["alter"] = $prev_qty_array[5]['alter'];
						$resultset["spot"] = $prev_qty_array[5]['spot'];

						$resultset["rectified"] = $prev_qty_array[5]['rectified']+$total_qnty *1;

						if($val->alter == 1 || $val->spot == 1)
						{
							$total_qnty = 0;
						}
						$resultset["total_out_qnty"] = ($prod_data_array[$color_size_id][5]["out"]+$total_qnty)*1;
						$resultset["output_qnty"] = ($prod_data_output_array[$color_size_id][5]+$total_qnty)*1;

						return $resultset;
					} 
					else 
					{
						$this->db->trans_rollback();
						$this->db->trans_complete();
						return $resultset["status"] = "দুঃখিত! ডেটা সংরক্ষিত হয়নি । পুনরায় চেস্টা করুন।";
					}
				} 
				else 
				{
					$resultset["status"] = "দুঃখিত! ডেটা সংরক্ষিত হয়নি । পুনরায় চেস্টা করুন।";
					$this->db->trans_complete();
				}
			}
		} 
	}

	function save_update_sewing_input_gross_gmts_rectified($save_obj) { 
		
		$db_type = return_db_type();

		$response_obj = json_decode($save_obj);
		
		if ($response_obj->status == true) 
		{
			$total_qnty = $response_obj->total_qnty;
			if ($response_obj->mode == "save") 
			{

				$production_types = $response_obj->production_type;

				$mst_tbl_id = 0;
				$dtls_tbl_id = 0;
				$this->db->trans_start();
				$production_date = $response_obj->data->index->production_date;
				
				$action_type = $response_obj->action_type;

				$year_cond = "to_char(insert_date,'YYYY')";
				$pc_date_time = date("d-M-Y h:i:s A", time());

				$cbo_company_name = $response_obj->data->index->company_id ;
				$location_id = $response_obj->data->index->location_id;
				$production_source = $response_obj->data->index->production_source;
				$serving_company = $response_obj->data->index->serving_company;
				$floor_id = $response_obj->data->index->floor_id;
				$sewing_line = $response_obj->data->index->sewing_line;
				$user_id = $response_obj->data->index->user_id;
				
				$dtls_data = $response_obj->data->list_data;

				foreach ($dtls_data as $v) 
				{
					$color_size_id = $v->color_size_id;
					$colorId = $v->color_id;
					$sizeId = $v->size_id;
					$order_id = $v->order_id;
					$item_id = $v->item_id;
					$country_id = $v->country_id;
					$job_id = $v->job_id;
					$color_id = $val->color_id;
				}

				// ============================== prev qty ===========================
				$current_date = date("d-M-Y");
				$prev_qty_sql = "SELECT A.PO_BREAK_DOWN_ID,B.COLOR_SIZE_BREAK_DOWN_ID,B.PRODUCTION_QNTY,B.REJECT_QTY,B.PRODUCTION_TYPE,B.REPLACE_QTY,B.RECTIFIED_QTY,B.REJECT_QTY, B.ALTER_QTY, B.SPOT_QTY,C.COLOR_NUMBER_ID,a.PRODUCTION_DATE,a.INSERTED_BY from pro_garments_production_mst a, pro_garments_production_dtls b,wo_po_color_size_breakdown c where a.id=b.mst_id and b.color_size_break_down_id=c.id and b.status_active=1 and b.is_deleted=0 and b.production_type in(4,5) and c.status_active=1 and a.sewing_line=$sewing_line and c.job_id=$job_id AND a.item_number_id = $item_id AND a.country_id = $country_id";
				// and b.color_size_break_down_id=$color_size_id  and a.po_break_down_id = $order_id
				
				$receive_result = sql_select($prev_qty_sql);
				$prev_qty_array = $color_wise_production_array = array();
				foreach ($receive_result as $row) 
				{
					$sewing_production_date = strtotime($row->PRODUCTION_DATE);
					if($sewing_production_date == strtotime($current_date) && ($row->PRODUCTION_TYPE == 5))
					{
						$color_wise_production_array[$row->COLOR_NUMBER_ID] += $row->PRODUCTION_QNTY;
					}
				}

				foreach ($dtls_data as $val) 
				{
					$mst_id = $val->mst_id;
					$dtls_id = $val->dtls_id;
					$total_qnty = $val->rectified_qnty;

					// ================================== prepare dtls part data ===========================
					$dtlsdata_rs = $this->db->query("select id,production_qnty,reject_qty,alter_qty,spot_qty,replace_qty,rectified_qty from pro_garments_production_dtls where production_type=5 and status_active=1 and id=$dtls_id")->row();
					if(empty($dtlsdata_rs))
					{
						$total_qnty  = $dtlsdata_rs->rectified_qty+$total_qnty;
						$good_qnty  = $dtlsdata_rs->production_qnty;
					}
					
					$dtls_tbl_id = $this->db->query("update PRO_GARMENTS_PRODUCTION_DTLS set PRODUCTION_QNTY=PRODUCTION_QNTY+$total_qnty,RECTIFIED_QTY=RECTIFIED_QTY+$total_qnty where id=$dtls_id");

					if($dtls_tbl_id)
					{
						$mst_tbl_id = $this->db->query("update PRO_GARMENTS_PRODUCTION_MST set PRODUCTION_QUANTITY=PRODUCTION_QUANTITY+$total_qnty where id=$mst_id");
					}
				}

				if ($this->db->trans_status() == TRUE) 
				{
					if ($mst_tbl_id && $dtls_tbl_id) 
					{
						$this->db->trans_commit();
						$this->db->trans_complete();
						$color_wise_chk_qnty = ($color_wise_production_array[$color_id]+$total_qnty)*1;

						$resultset["status"] = "ডেটা সফলভাবে সংরক্ষিত হয়েছে ।";
						$resultset["update_id"] = $id;
						$resultset["input_qnty"] = $prod_data_array[$colorSizeId][4]["in"]*1;
						$resultset["color_wise_chk_qnty"] = $color_wise_chk_qnty*1;
						$resultset["ok"] = 0;
						$resultset["rej"] = 0;
						$resultset["alter"] = 0;
						$resultset["spot"] = 0;
						$resultset["rectified"] = $prev_qty_array[5]['rectified']+$total_qnty *1;

						if($val->alter == 1 || $val->spot == 1)
						{
							$total_qnty = 0;
						}
						$resultset["total_out_qnty"] = ($prod_data_array[$colorSizeId][5]["out"]+$total_qnty)*1;
						$resultset["output_qnty"] = ($prod_data_output_array[$colorSizeId][5]+$total_qnty)*1;

						return $resultset;
					} 
					else 
					{
						$this->db->trans_rollback();
						$this->db->trans_complete();
						return $resultset["status"] = "দুঃখিত! ডেটা সংরক্ষিত হয়নি । পুনরায় চেস্টা করুন।";
					}
				} 
				else 
				{
					$resultset["status"] = "দুঃখিত! ডেটা সংরক্ষিত হয়নি । পুনরায় চেস্টা করুন।";
					$this->db->trans_complete();
				}
			}
		} 
	}


	

	function get_exfactory_details($company_id = 0, $date_from = "", $date_to = "") {

		$buyer_arr = return_library_array("select id,buyer_name from  lib_buyer", "id", "buyer_name");
		$company_cond = "";
		if ($company_id) {
			$company_cond = " and a.company_name in($company_id)";
		}

		if ($date_from != "" && $date_to != "") {
			if ($this->db->dbdriver == 'mysqli') {
				$date_from = date("d-M-Y", strtotime($date_from));
				$date_to = date("d-M-Y", strtotime($date_to));
			} else {
				$date_from = date("d-M-Y", strtotime($date_from));
				$date_to = date("d-M-Y", strtotime($date_to));

			}
		} else {

			if ($this->db->dbdriver == 'mysqli') {
				$date_from = date("Y-m-d", time());
				$date_to = date('Y-m-d', strtotime('-14 day', strtotime($date_from)));
			} else {
				$date_from = date("d-M-Y", time());
				$date_to = date('d-M-Y', strtotime('-14 day', strtotime($date_from)));
			}
		}

		$date_cond = "";
		if ($date_from != "" && $date_to != "") {
			$date_cond = "and c.ex_factory_date between '$date_from' and  '$date_to' ";
		}

		$data_array = array();
		$sql = "SELECT A.COMPANY_NAME,A.JOB_NO_PREFIX_NUM, A.BUYER_NAME, A.STYLE_REF_NO,A.SHIP_MODE AS PO_SHIP_MODE,B.ID AS PO_ID, B.PO_NUMBER,B.SHIPING_STATUS,B.UNIT_PRICE, C.SHIPING_MODE, E.DELIVERY_COMPANY_ID AS DEL_COM,E.DELIVERY_LOCATION_ID AS  DEL_LOC,F.CUTUP_DATE,F.COUNTRY_SHIP_DATE, MAX(C.EX_FACTORY_DATE) AS EX_FACTORY_DATE, SUM(D.PRODUCTION_QNTY) AS EX_FACT_QTY, SUM(C.TOTAL_CARTON_QNTY) AS CARTON_QNTY,E.ATTENTION, MAX(B.PO_QUANTITY*A.TOTAL_SET_QNTY) AS PO_QTY
			from WO_PO_DETAILS_MASTER a, WO_PO_BREAK_DOWN b, PRO_EX_FACTORY_MST c, PRO_EX_FACTORY_DTLS d, PRO_EX_FACTORY_DELIVERY_MST e, WO_PO_COLOR_SIZE_BREAKDOWN f
			where a.id=b.job_id and b.id=c.po_break_down_id and a.id=f.job_id and b.id=f.po_break_down_id and c.id=d.mst_id and e.id=c.delivery_mst_id and f.id=d.color_size_break_down_id and a.status_active=1 and b.status_active=1 and c.status_active=1 and e.status_active=1 and f.status_active=1 $company_cond $buyer_cond $del_comp_cond $del_location_cond $shiping_status_cond $date_cond
			group by a.company_name,a.job_no_prefix_num,a.buyer_name,a.style_ref_no, a.ship_mode,b.id ,b.po_number,b.shiping_status,c.shiping_mode, e.delivery_company_id,e.delivery_location_id,f.cutup_date,f.country_ship_date,b.unit_price,e.attention";

		$buyer_summary_array = array();
		$po_id_arr = array();
		$buyer_po_qty_arr = array();

		$sqls = sql_select($sql);
		$i = 0;
		foreach ($sqls as $row) {

			$buyer_po_qty_arr[$row->BUYER_NAME][$row->PO_ID] = $row->PO_QTY;
			// ================== for buyer summary =====================
			$buyer_summary_array[$row->BUYER_NAME]['CUR_EX_FACT_QTY'] += $row->EX_FACT_QTY;
			$buyer_summary_array[$row->BUYER_NAME]['UNIT_PRICE'] += $row->UNIT_PRICE;
			$buyer_bufer_days = $buyer_buffer_arr[$row->BUYER_NAME];
			$cutup_date = $row->CUTUP_DATE;
			$ex_factory_date = $row->EX_FACTORY_DATE;
			$country_ship_date = $row->COUNTRY_SHIP_DATE;
			// ========== add buyer_bufer_days ================
			if ($buyer_bufer_days) {
				$cutup_date = strtotime($cutup_date);
				$exten_date = date('d-M-y', strtotime("+ $buyer_bufer_days", $cutup_date));
			} else {
				$exten_date = $cutup_date;
			}
			// ================ for shipment status wise qnty ==========================
			if (strtotime($country_ship_date) > strtotime($ex_factory_date)) {
				$buyer_summary_array[$row->BUYER_NAME]['EARLY_QTY'] += $row->EX_FACT_QTY;
			} else if (strtotime($exten_date) > strtotime($ex_factory_date)) {
				$buyer_summary_array[$row->BUYER_NAME]['ONTIME_QTY'] += $row->EX_FACT_QTY;
			} else if (strtotime($exten_date) < strtotime($ex_factory_date)) {
				$buyer_summary_array[$row->BUYER_NAME]['LATE_QTY'] += $row->EX_FACT_QTY;
			}
		}

		$i = 0;
		foreach ($buyer_summary_array as $buyer_key => $row) {
			$cur_ex_fact_qty = $row['CUR_EX_FACT_QTY'];
			$unit_price = $row['UNIT_PRICE'];
			$early_qty = $row['EARLY_QTY'] / $cur_ex_fact_qty * 100;
			$late_qty = $row['LATE_QTY'] / $cur_ex_fact_qty * 100;
			$ontime_qty = $row['ONTIME_QTY'] / $cur_ex_fact_qty * 100;

			$cur_ex_fact_val = $cur_ex_fact_qty * $unit_price;
			$avg_price = $cur_ex_fact_val / $cur_ex_fact_qty;
			$order_quantity = array_sum($buyer_po_qty_arr[$buyer_key]);
			//$buyer_po_qnty_array[$buyer_key];
			$extra_quantity = $order_quantity - $cur_ex_fact_qty;
			$extra_value = $extra_quantity * $unit_price;
			$short_quantity = $order_quantity - $cur_ex_fact_qty;
			$short_value = $extra_quantity * $unit_price;

			if ($extra_quantity > 0) {$extra_quantity = $extra_quantity;} else { $extra_quantity = 0;}
			if ($extra_value > 0) {$extra_value = $extra_value;} else { $extra_value = 0;}

			if ($extra_quantity < 0) {$short_quantity = $extra_quantity;} else { $short_quantity = 0;}
			if ($extra_value < 0) {$short_value = $extra_value;} else { $short_value = 0;}

			$data_array[$i]["BUYER_NAME"] = $buyer_arr[$buyer_key];
			$data_array[$i]["CUR_EX_FACT_QTY"] = $cur_ex_fact_qty;
			$data_array[$i]["AVG_PRICE"] = $avg_price;
			$data_array[$i]["CUR_EX_FACT_VAL"] = $cur_ex_fact_val;
			$data_array[$i]["EARLY_QTY"] = $early_qty;
			$data_array[$i]["ONTIME_QTY"] = $ontime_qty;
			$data_array[$i]["LATE_QTY"] = $late_qty;
			$data_array[$i]["EXTRA_QUANTITY"] = $extra_quantity;
			$data_array[$i]["EXTRA_VALUE"] = $extra_value;
			$data_array[$i]["SHORT_QTY"] = $short_quantity;
			$data_array[$i]["SHORT_VALUE"] = $short_value;
			$i++;
		}

		return $data_array;
	}

	function get_pending_shipment_monitoring_report($company_id = 0, $date_from = "", $date_to = "") {

		//$buyer_arr=return_library_array("select id,buyer_name from  lib_buyer","id","buyer_name");
		$company_details = return_library_array("select id,company_name from lib_company", 'id', 'company_name');

		$company_cond = "";
		if ($company_id) {
			$company_cond = " and a.company_name =$company_id";
		}

		if ($date_from != "" && $date_to != "") {
			if ($this->db->dbdriver == 'mysqli') {
				$date_from = date("d-M-Y", strtotime($date_from));
				$date_to = date("d-M-Y", strtotime($date_to));
			} else {
				$date_from = date("d-M-Y", strtotime($date_from));
				$date_to = date("d-M-Y", strtotime($date_to));
			}
		} else {

			if ($this->db->dbdriver == 'mysqli') {
				$date_from = date("Y-m-d", time());
				$date_to = date('Y-m-d', strtotime('-14 day', strtotime($date_from)));
			} else {
				$date_from = date("d-M-Y", time());
				$date_to = date('d-M-Y', strtotime('-14 day', strtotime($date_from)));
			}
		}

		$date_cond = "";
		if ($date_from != "" && $date_to != "") {
			$date_cond = "and b.pub_shipment_date between '$date_from' and  '$date_to' ";
		}
		// function add_date($orgDate, $days) {
		// 	$cd = strtotime($orgDate);
		// 	$retDAY = date('Y-m-d', mktime(0, 0, 0, date('m', $cd), date('d', $cd) + $days, date('Y', $cd)));
		// 	return $retDAY;
		// }
		for ($i = 0; $i <= 8; $i++) {
			$cdate = add_date($date_from, -$i);
			if (date("D", strtotime($cdate)) == "Sat") {
				$weekstdate = change_date_format($cdate, 'yyyy-mm-dd', '-', 1);
				break;
			}
		}

		$month_st_date = change_date_format(date("Y-m", strtotime($date_to)) . "-01", 'yyyy-mm-dd', '-', 1);
		//echo $month_st_date;die;
		//$month_query_cond2 = "and to_char(b.pub_shipment_date ,'YYYY-MM-DD') like '$month_query'";
		//echo $month_st_date ;die;

		$partial_ex_factory = array();
		$sql = "select a.company_name,b.id, b.shiping_status, b.po_quantity, a.total_set_qnty, b.plan_cut, (b.unit_price/a.total_set_qnty) as order_rate,b.pub_shipment_date
			from wo_po_details_master a, wo_po_break_down b where a.id=b.job_id  $date_cond and b.is_confirmed=1 and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0 and b.shiping_status != 3 $company_cond";

		//echo $sql;die;
		$result = sql_select($sql);
		$company_order_qnty = array();
		//$po_id_arr = array();$buyer_po_qty_arr = array();
		foreach ($result as $row) {
			if ($row->SHIPING_STATUS == 2) {
				$buyer_ex_quantity = 0;
				$partial_ex_factory[$row->ID] = $row->ID;
			}
			$po_quantity = $row->PO_QUANTITY * $row->TOTAL_SET_QNTY;
				$po_value = $row->PO_QUANTITY * $row->ORDER_RATE;

			if (date("Y-m-d", strtotime($row->PUB_SHIPMENT_DATE)) == date("Y-m-d", strtotime($date_to))) {



				$company_order_qnty_day[$row->ID]['DEMAND_DATE'] = $date_to;
				$company_order_qnty_day[$row->ID]['ORDER_QNTY'] = $po_quantity;
				$company_order_qnty_day[$row->ID]['ORDER_RATE'] = $row->ORDER_RATE;
				$company_order_qnty_day[$row->ID]['ORDER_VALUE'] = $po_value;
				$company_order_qnty_day[$row->ID]['COMPANY_NAME'] = $row->COMPANY_NAME;

				$company_wise_data[0]['DEMAND_DATE'] = $date_to;
				$company_wise_data[0]['ORDER_QNTY'] = $po_quantity;
				$company_wise_data[0]['ORDER_RATE'] = $row->ORDER_RATE;
				$company_wise_data[0]['ORDER_VALUE'] = $po_value;
				$company_wise_data[0]['COMPANY_NAME'] = $row->COMPANY_NAME;
				$company_wise_data[0]['ID'] = $row->ID;
			}
			//echo date("Y-m-d", strtotime($weekstdate));die;
			if (date("Y-m-d", strtotime($row->PUB_SHIPMENT_DATE)) >= date("Y-m-d", strtotime($weekstdate))) {


				$company_order_qnty_week[$row->ID]['DEMAND_DATE'] = $weekstdate;
				$company_order_qnty_week[$row->ID]['ORDER_QNTY'] = $po_quantity;
				$company_order_qnty_week[$row->ID]['ORDER_RATE'] = $row->ORDER_RATE;
				$company_order_qnty_week[$row->ID]['ORDER_VALUE'] = $po_value;
				$company_order_qnty_week[$row->ID]['COMPANY_NAME'] = $row->COMPANY_NAME;

				$company_wise_data[1]['DEMAND_DATE'] = $weekstdate;
				$company_wise_data[1]['ORDER_QNTY'] = $po_quantity;
				$company_wise_data[1]['ORDER_RATE'] = $row->ORDER_RATE;
				$company_wise_data[1]['ORDER_VALUE'] = $po_value;
				$company_wise_data[1]['COMPANY_NAME'] = $row->COMPANY_NAME;
				$company_wise_data[1]['ID'] = $row->ID;
			}

			if (date("Y-m-d", strtotime($row->PUB_SHIPMENT_DATE)) >= date("Y-m-d", strtotime($month_st_date))) {

				$po_quantity = $row->PO_QUANTITY * $row->TOTAL_SET_QNTY;
				$po_value = $row->PO_QUANTITY * $row->ORDER_RATE;

				$company_order_qnty_month[$row->ID]['DEMAND_DATE'] = $month_st_date;
				$company_order_qnty_month[$row->ID]['ORDER_QNTY'] = $po_quantity;
				$company_order_qnty_month[$row->ID]['ORDER_RATE'] = $row->ORDER_RATE;
				$company_order_qnty_month[$row->ID]['ORDER_VALUE'] = $po_value;
				$company_order_qnty_month[$row->ID]['COMPANY_NAME'] = $row->COMPANY_NAME;

				$company_wise_data[2]['DEMAND_DATE'] = $month_st_date;
				$company_wise_data[2]['ORDER_QNTY'] = $po_quantity;
				$company_wise_data[2]['ORDER_RATE'] = $row->ORDER_RATE;
				$company_wise_data[2]['ORDER_VALUE'] = $po_value;
				$company_wise_data[2]['COMPANY_NAME'] = $row->COMPANY_NAME;
				$company_wise_data[2]['ID'] = $row->ID;
			}
			//$po_quantity = $row->PO_QUANTITY * $row->TOTAL_SET_QNTY;
			//$company_order_qnty[$row->ID]['ORDER_QNTY'] = $po_quantity;
			//$company_order_qnty[$row->ID]['ORDER_RATE'] = $row->ORDER_RATE;
			//$company_order_qnty[$row->ID]['COMPANY_NAME'] = $row->COMPANY_NAME;

			//$po_value = $row->PO_QUANTITY * $row->ORDER_RATE;
			//echo $po_value;die;
			$partial_ex_factory[$row->ID] = $row->ID;

			//$company_order_qnty[$row->ID]["ORDER_QNTY"] = $po_quantity;
			//$company_order_qnty[$row->ID]["ORDER_RATE"] = $row->ORDER_RATE;
			//$company_order_qnty[$row->ID]["COMPANY_NAME"] = $row->COMPANY_NAME;
			//$company_order_qnty[$row->ID]["ORDER_VALUE"] = $po_value;

		}
		echo "<pre>";
		print_r($company_order_qnty_week);die;
		echo "</pre>";
		if (count($partial_ex_factory) > 0) {
			$sql_ex_factory = "select po_break_down_id,sum(ex_factory_qnty) as ex_factory_qnty from pro_ex_factory_mst  where po_break_down_id in (" . implode(",", $partial_ex_factory) . ") and status_active=1 and is_deleted=0 group by po_break_down_id";
			//echo $sql_ex_factory;die;

			$result_ex_factory = sql_select($sql_ex_factory);

			foreach ($result_ex_factory as $row) {
				$summery_ex_factory[$row->PO_BREAK_DOWN_ID] = number_format($row->EX_FACTORY_QNTY);
			}
		}

		//print_r($summery_ex_factory);die;

		$pending_po_data = array();
		$company_wise_data = array();

		foreach ($company_order_qnty as $po_break_down_id => $data_value) {
			$pending_po_data["PO_QUANTITY"] = number_format($data_value["ORDER_QNTY"]) - number_format($summery_ex_factory[$po_break_down_id]);

			//print_r($pending_po_data);die;
			$pending_po_data["PO_VALUE"] = ($data_value["ORDER_QNTY"] * 1) * ($data_value["ORDER_RATE"] * 1);

			//$freight_on_board = 'sumon';

			$company_wise_data[$data_value["COMPANY_NAME"]]["PENDING_PO_QNTY"] += $pending_po_data["PO_QUANTITY"];
			$company_wise_data[$data_value["COMPANY_NAME"]]["PENDING_PO_VALUE"] += $pending_po_data["PO_VALUE"];

		}

		$i = 0;
		$data_array = array();
		foreach ($company_wise_data as $company => $pending_data_value) {

			$freight_on_board = number_format($pending_data_value["PENDING_PO_VALUE"]) / number_format($pending_data_value["PENDING_PO_QNTY"]);
			$data_array[$i]["COMPANY_NAME"] = number_format($company);
			$data_array[$i]["PO_QTY"] = number_format($pending_data_value["PENDING_PO_QNTY"]);
			$data_array[$i]["PO_VAL"] = number_format($pending_data_value["PENDING_PO_VALUE"]);
			$data_array[$i]["FOB"] = $freight_on_board;
			$i++;
		}
		//echo "<pre>"; print_r($FOB);die;

		return $data_array;
	}

	function get_shipment_pending($cbo_company_id = 0, $cbo_year = 0, $cbo_date_category = 0) {
		if ($cbo_year == 0) {$cbo_year = date('Y');}
		if ($cbo_date_category == 0) {$cbo_date_category = 2;}

		if ($cbo_date_category == 1) {
			$select_fill = "b.shipment_date as shipment_date";
			$date_con = " and b.shipment_date < '" . date("d-M-Y", time()) . "'";
			$dateField = "Ship Date";

			if ($this->db->dbdriver != 'mysqli' && $cbo_year > 0) {
				$year_con = " and to_char(b.shipment_date,'YYYY')=$cbo_year";
			} elseif ($cbo_year > 0) {
				$year_con = " and date(b.shipment_date,'Y')=$cbo_year";
			}
		} else if ($cbo_date_category == 2) {
			$select_fill = "b.pub_shipment_date as shipment_date";
			$date_con = " and b.pub_shipment_date < '" . date("d-M-Y", time()) . "'";
			$dateField = "Publish Ship Date";

			if ($this->db->dbdriver != 'mysqli' && $cbo_year > 0) {
				$year_con = " and to_char(b.pub_shipment_date,'YYYY')=$cbo_year";
			} elseif ($cbo_year > 0) {
				$year_con = " and date(b.pub_shipment_date,'Y')=$cbo_year";
			}

		} else if ($cbo_date_category == 3) {
			$select_fill = "c.country_ship_date as shipment_date";
			$date_con = " and c.country_ship_date < '" . date("d-M-Y", time()) . "'";
			$dateField = "Country Ship Date";

			if ($db_type == 2 && $cbo_year > 0) {
				$year_con = " and to_char(c.country_ship_date,'YYYY')=$cbo_year";
			} elseif ($cbo_year > 0) {
				$year_con = " and date(c.country_ship_date,'Y')=$cbo_year";
			}
		}

		$order_sql = "SELECT A.ID,A.JOB_NO, A.STYLE_REF_NO, A.COMPANY_NAME, A.BUYER_NAME, A.SHIP_MODE,A.TOTAL_SET_QNTY,A.SET_SMV,A.INSERT_DATE,
		A.UPDATE_DATE, A.ORDER_UOM,B.PO_NUMBER,B.PO_QUANTITY,B.PO_TOTAL_PRICE,B.DETAILS_REMARKS, C.PO_BREAK_DOWN_ID,C.ORDER_QUANTITY AS PO_QUANTITY_PCS,C.PLAN_CUT_QNTY, $select_fill , C.ORDER_TOTAL,C.ITEM_NUMBER_ID FROM WO_PO_DETAILS_MASTER A,WO_PO_BREAK_DOWN B,WO_PO_COLOR_SIZE_BREAKDOWN C WHERE A.id=B.job_id AND B.job_id=C.job_id AND B.ID=C.PO_BREAK_DOWN_ID AND A.COMPANY_NAME=$cbo_company_id $buyer_cond AND B.IS_CONFIRMED=1  AND B.SHIPING_STATUS != 3 AND A.STATUS_ACTIVE = 1 AND A.IS_DELETED = 0 AND B.STATUS_ACTIVE = 1 AND B.IS_DELETED = 0  AND C.STATUS_ACTIVE = 1 AND C.IS_DELETED = 0 $date_con $year_con $buyer_com  ORDER BY B.PUB_SHIPMENT_DATE DESC";

		//return $order_sql;

		$order_sql_relsult = sql_select($order_sql);
		foreach ($order_sql_relsult as $row) {
			$key = date("M, Y", strtotime($row->SHIPMENT_DATE));
			$po_avg_rate = ($row->PO_TOTAL_PRICE / $row->PO_QUANTITY) / $row->TOTAL_SET_QNTY;

			$dataArr['month_buyer_wise_po_id'][$key][$row->BUYER_NAME][$row->PO_BREAK_DOWN_ID] = $row->PO_NUMBER;
			$dataArr['po_id'][$row->PO_BREAK_DOWN_ID] = $row->PO_BREAK_DOWN_ID;
			$dataArr['job_no'][$row->PO_BREAK_DOWN_ID] = $row->JOB_NO;
			$dataArr['remarks'][$row->PO_BREAK_DOWN_ID] = $row->DETAILS_REMARKS;

			$dataArr['order_wise_po_qty_pcs'][$row->PO_BREAK_DOWN_ID] += $row->PO_QUANTITY_PCS;
			$dataArr['order_wise_po_val'][$row->PO_BREAK_DOWN_ID] += ($row->PO_QUANTITY_PCS * $po_avg_rate);
			$dataArr['po_avg_rate'][$row->PO_BREAK_DOWN_ID] = $po_avg_rate;

			//$job_no_arr[$row->ID]=$row->ID;

			$poDataArr[$row->PO_BREAK_DOWN_ID] = array(
				shipment_date => $row->SHIPMENT_DATE,
				po_total_price => $row->PO_TOTAL_PRICE,
				po_total_price => $row->PO_TOTAL_PRICE,
				po_avg_rate => $po_avg_rate,
			);

		}
		unset($order_sql_relsult);

		/*
			//Prec cost....................................
			if($db_type==2 && count($job_arr)>1000)
			{
				$sql_con=" and (";
				$chunk_arr=array_chunk($job_no_arr,999);
				foreach($chunk_arr as $ids)
				{
					$sql_con.=" b.JOB_ID in(".implode(",",$ids).") or";
				}
				$sql_con=chop($sql_con,'or');
				$sql_con.=")";
			}
			else
			{
				$sql_con=" and b.JOB_ID in(".implode(",",$job_no_arr).")";
			}

			$sql="SELECT A.COSTING_PER,B.ID,B.JOB_NO,B.TOTAL_COST,B.CM_COST FROM WO_PRE_COST_MST A,WO_PRE_COST_DTLS B WHERE b.STATUS_ACTIVE=1 AND b.IS_DELETED=0 $sql_con";

			foreach(sql_select($sql) as $rows)
			{
				$cm_cost_arr[$rows->job_no]=$rows->cm_cost;
				$total_cost_arr[$rows->job_no]=$rows->total_cost;
				$costing_per_arr[$rows->job_no]=$rows->costing_per;
		*/

		//production........................................................
		$sql_con = '';
		if ($db_type == 2 && count($dataArr['po_id']) > 999) {
			$po_chunk = array_chunk($dataArr['po_id'], 999);
			foreach ($po_chunk as $row) {
				$po_ids = implode(",", $row);
				if ($sql_con == "") {
					$sql_con = " and (po_break_down_id in ($po_ids)";
				} else {
					$sql_con .= " or po_break_down_id in ($po_ids)";
				}
			}
			$sql_con .= ")";
		} else {
			$sql_con = " and po_break_down_id in (" . implode(',', $dataArr['po_id']) . ")";
		}

		$cutting_qnty = return_library_array("SELECT po_break_down_id,sum(production_quantity) AS production_quantity  from pro_garments_production_mst where production_type ='1' and is_deleted=0 and status_active=1 $sql_con group by po_break_down_id", 'po_break_down_id', 'production_quantity');

		$sql_summary_ex_factory = return_library_array("SELECT po_break_down_id,sum(ex_factory_qnty) AS ex_factory_qnty from pro_ex_factory_mst  where status_active=1 and is_deleted=0 $sql_con group by po_break_down_id", 'po_break_down_id', 'ex_factory_qnty');

		$sewingin_qnty = return_library_array("SELECT po_break_down_id,sum(production_quantity) AS production_quantity  from pro_garments_production_mst where production_type ='5' and is_deleted=0 and status_active=1 $sql_con group by po_break_down_id", 'po_break_down_id', 'production_quantity');

		$finish_qnty = return_library_array("SELECT po_break_down_id,sum(production_quantity) AS production_quantity  from pro_garments_production_mst where production_type ='8' and is_deleted=0 and status_active=1 $sql_con group by po_break_down_id", 'po_break_down_id', 'production_quantity');

		foreach ($dataArr['month_buyer_wise_po_id'] as $key => $buyer_arr) {
			foreach ($buyer_arr as $buyer_id => $po_id_arr) {
				foreach ($po_id_arr as $po_id => $po_no) {

					//monthly_qty...........................
					$dataArr['po_qty_pcs'][$key] += $dataArr['order_wise_po_qty_pcs'][$po_id];
					$dataArr['cutting_qty_pcs'][$key] += $cutting_qnty[$po_id];
					$dataArr['exfact_qty_pcs'][$key] += $sql_summary_ex_factory[$po_id];
					$dataArr['sewing_qty_pcs'][$key] += $sewingin_qnty[$po_id];
					$dataArr['finish_qty_pcs'][$key] += $finish_qnty[$po_id];
					//monthly_val...........................
					$dataArr['po_val'][$key] += $dataArr['order_wise_po_val'][$po_id];
					$dataArr['cutting_val'][$key] += $cutting_qnty[$po_id] * $dataArr['po_avg_rate'][$po_id];
					$dataArr['exfact_val'][$key] += $sql_summary_ex_factory[$po_id] * $dataArr['po_avg_rate'][$po_id];
					$dataArr['sewing_val'][$key] += $sewingin_qnty[$po_id] * $dataArr['po_avg_rate'][$po_id];
					$dataArr['finish_val'][$key] += $finish_qnty[$po_id] * $dataArr['po_avg_rate'][$po_id];

					$dataArr['ship_to_po_bal_fob_val'][$key] += ($dataArr['order_wise_po_qty_pcs'][$po_id] - $sql_summary_ex_factory[$po_id]) * $dataArr['po_avg_rate'][$po_id];
					$dataArr['sewing_to_ship_bal_fob_val'][$key] += ($sewingin_qnty[$po_id] - $sql_summary_ex_factory[$po_id]) * $dataArr['po_avg_rate'][$po_id];

					//monthly_buyer...........................
					$dataArr['month_buyer_po_qty_pcs'][$key][$buyer_id] += $dataArr['order_wise_po_qty_pcs'][$po_id];
					$dataArr['month_buyer_exfact_qty_pcs'][$key][$buyer_id] += $sql_summary_ex_factory[$po_id];

					$dataArr['month_buyer_po_val'][$key][$buyer_id] += $dataArr['order_wise_po_val'][$po_id];
					$dataArr['month_buyer_exfact_val'][$key][$buyer_id] += $sql_summary_ex_factory[$po_id] * $dataArr['po_avg_rate'][$po_id];
					//po wise data....................
					$poDataArr[$po_id]['cutting_qty'] = $cutting_qnty[$po_id];
					$poDataArr[$po_id]['sewing_qty'] = $sewingin_qnty[$po_id];
					$poDataArr[$po_id]['finish_qty'] = $finish_qnty[$po_id];
					$poDataArr[$po_id]['exfact_qty'] = $sql_summary_ex_factory[$po_id];
					$poDataArr[$po_id]['po_quantity'] = $dataArr['order_wise_po_qty_pcs'][$po_id];

					//CM calculation..............................................
					if ($costing_per_arr[$dataArr['job_no'][$po_id]] == 1) {
						$dzn_qnty = 12;
					} else if ($costing_per_arr[$dataArr['job_no'][$po_id]] == 3) {
						$dzn_qnty = 12 * 2;
					} else if ($costing_per_arr[$dataArr['job_no'][$po_id]] == 4) {
						$dzn_qnty = 12 * 3;
					} else if ($costing_per_arr[$dataArr['job_no'][$po_id]] == 5) {
						$dzn_qnty = 12 * 4;
					} else {
						$dzn_qnty = 1;
					}

					$cm_per_pcs = (($dataArr['po_avg_rate'][$po_id] * $dzn_qnty) - $total_cost_arr[$dataArr['job_no'][$po_id]]) + $cm_cost_arr[$dataArr['job_no'][$po_id]];

					$dataArr['sewing_cm_val'][$key] += $cm_per_pcs * $sewingin_qnty[$po_id];
					$dataArr['po_cm_val'][$key] += $cm_per_pcs * $dataArr['order_wise_po_qty_pcs'][$po_id];

					$poDataArr[$po_id]['sewing_cm_val'] = $cm_per_pcs * $sewingin_qnty[$po_id];

				}
			}
		}

		unset($cutting_qnty);
		unset($sql_summary_ex_factory);
		unset($sewingin_qnty);
		unset($finish_qnty);
		$cmy = date("M, Y", time()); //current_month_year

		$shipPenDataArr['PRE_MONTH'] = array(
			MONTH => 'Previous Month',
			PO_QTY => array_sum($dataArr['po_qty_pcs']) - $dataArr['po_qty_pcs'][$cmy],
			PO_VALUE => array_sum($dataArr['po_val']) - $dataArr['po_val'][$cmy],
			CUT_QTY => array_sum($dataArr['cutting_qty_pcs']) - $dataArr['cutting_qty_pcs'][$cmy],
			CUT_BAL_ACCESS => (array_sum($dataArr['po_qty_pcs']) - $dataArr['po_qty_pcs'][$cmy]) - (array_sum($dataArr['cutting_qty_pcs']) - $dataArr['cutting_qty_pcs'][$cmy]),
			SEWING_QTY => array_sum($dataArr['sewing_qty_pcs']) - $dataArr['sewing_qty_pcs'][$cmy],
			SEWING_BALANCE => (array_sum($dataArr['cutting_qty_pcs']) - $dataArr['cutting_qty_pcs'][$cmy]) - (array_sum($dataArr['sewing_qty_pcs']) - $dataArr['sewing_qty_pcs'][$cmy]),

			FINIS_QTY => (array_sum($dataArr['finish_qty_pcs']) - $dataArr['finish_qty_pcs'][$cmy]),

			FINISHING_BALANCE => (array_sum($dataArr['sewing_qty_pcs']) - $dataArr['sewing_qty_pcs'][$cmy]) - (array_sum($dataArr['finish_qty_pcs']) - $dataArr['finish_qty_pcs'][$cmy]),

			SHIP_OUT => array_sum($dataArr['exfact_qty_pcs']) - $dataArr['exfact_qty_pcs'][$cmy],
			EXPORT_FOB_VALUE => array_sum($dataArr['exfact_val']) - $dataArr['exfact_val'][$cmy],

			SHIP_BAL_TO_PO_QTY => (array_sum($dataArr['po_qty_pcs']) - $dataArr['po_qty_pcs'][$cmy]) - array_sum($dataArr['exfact_qty_pcs']) - $dataArr['exfact_qty_pcs'][$cmy],

			SHIP_BAL_TO_PO_FOB_VALUE => (array_sum($dataArr['sewing_qty_pcs']) - $dataArr['sewing_qty_pcs'][$cmy]) - (array_sum($dataArr['finish_qty_pcs']) - (array_sum($dataArr['exfact_qty_pcs']) - $dataArr['exfact_qty_pcs'][$cmy]))
			,
			SEW_TO_SHIP_BALQTY => (array_sum($dataArr['sewing_qty_pcs']) - $dataArr['sewing_qty_pcs'][$cmy]) - (array_sum($dataArr['exfact_qty_pcs']) - $dataArr['exfact_qty_pcs'][$cmy]),
			SEW_TO_SHIP_BAL_FOB_VALUE => array_sum($dataArr['sewing_to_ship_bal_fob_val']) - $dataArr['sewing_to_ship_bal_fob_val'][$cmy],
		);

		$shipPenDataArr['CRR_MONTH'] = array(
			MONTH => $cmy,
			PO_QTY => $dataArr['po_qty_pcs'][$cmy],
			PO_VALUE => $dataArr['po_val'][$cmy],
			CUT_QTY => $dataArr['cutting_qty_pcs'][$cmy],
			CUT_BAL_ACCESS => $dataArr['po_qty_pcs'][$cmy] - $dataArr['cutting_qty_pcs'][$cmy],
			SEWING_QTY => $dataArr['sewing_qty_pcs'][$cmy],
			SEWING_BALANCE => $dataArr['cutting_qty_pcs'][$cmy] - $dataArr['sewing_qty_pcs'][$cmy],
			FINIS_QTY => $dataArr['finish_qty_pcs'][$cmy],
			FINISHING_BALANCE => $dataArr['sewing_qty_pcs'][$cmy] - $dataArr['finish_qty_pcs'][$cmy],
			SHIP_OUT => $dataArr['exfact_qty_pcs'][$cmy],
			EXPORT_FOB_VALUE => $dataArr['exfact_val'][$cmy],
			SHIP_BAL_TO_PO_QTY => $dataArr['po_qty_pcs'][$cmy] - $dataArr['exfact_qty_pcs'][$cmy],
			SHIP_BAL_TO_PO_FOB_VALUE => $dataArr['ship_to_po_bal_fob_val'][$cmy],
			SEW_TO_SHIP_BALQTY => round($dataArr['sewing_qty_pcs'][$cmy] - $dataArr['exfact_qty_pcs'][$cmy]),
			SEW_TO_SHIP_BAL_FOB_VALUE => $dataArr['sewing_to_ship_bal_fob_val'][$cmy],
		);

		return $shipPenDataArr;
	}



	function get_shipment_schedule_management($company_id=0,$date_category=1,$start_date,$end_date){

		$company_id=str_replace("'","",$company_id);
		$cbo_category_by=str_replace("'","",$date_category);

		$buyer_arr=return_library_array("select id,buyer_name from  lib_buyer","id","buyer_name");
		$company_library=return_library_array( "select id,company_name from lib_company", "id", "company_name"  );

		if ($start_date != "" && $end_date != "") {
			if ($this->db->dbdriver == 'mysqli') {
				$start_date = date("d-M-Y", strtotime($start_date));
				$end_date = date("d-M-Y", strtotime($end_date));
			} else {
				$start_date = date("d-M-Y", strtotime($start_date));
				$end_date = date("d-M-Y", strtotime($end_date));

			}
		}



		if($cbo_category_by==1 && $start_date!="" && $end_date!="")
		{
			$date_cond="and b.pub_shipment_date between '$start_date' and  '$end_date'";
		}
		else if($cbo_category_by==2 && $start_date!="" && $end_date!="")
		{
			$date_cond=" and b.po_received_date between '$start_date' and  '$end_date'";
		}
		elseif($cbo_category_by==3  && $start_date!="" && $end_date!="")
		{
			$date_cond=" and b.shipment_date between '$start_date' and  '$end_date'";
		}
		else
		{
			$date_cond="";
		}

		if($company_id>0){
			$company_con=" and a.company_name=$company_id";
		}


		$sql="select a.COMPANY_NAME,a.BUYER_NAME,b.id as PO_ID,b.SHIPING_STATUS,SUM(b.PO_QUANTITY*a.TOTAL_SET_QNTY) AS PO_QUANTITY, SUM(b.PO_TOTAL_PRICE) AS PO_TOTAL_PRICE   from WO_PO_DETAILS_MASTER a, WO_PO_BREAK_DOWN b where a.id=b.job_id $date_cond $company_con and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0 group by a.company_name,a.buyer_name,b.id,b.shiping_status order by a.company_name";
		$data_array=sql_select($sql);//b.unit_price
		foreach ($data_array as $row)
		{
			$status_wise_po_id_arr[$row->SHIPING_STATUS][$row->PO_ID]=$row->PO_ID;
			$po_id_arr[$row->PO_ID]=$row->PO_ID;
		}



		$ex_factory_qty_arr=return_library_array( "select po_break_down_id,sum(ex_factory_qnty) as EX_FACTORY_QNTY from  PRO_EX_FACTORY_MST where  status_active=1 and is_deleted=0 and po_break_down_id in(".implode(',',$po_id_arr).") group by po_break_down_id",'po_break_down_id','ex_factory_qnty');

		foreach($status_wise_po_id_arr[3] as $po_id){
			$full_shiped_qty_arr[$po_id]=$ex_factory_qty_arr[$po_id];
		}

		foreach($status_wise_po_id_arr[2] as $po_id){
			$partial_shiped_qty_arr[$po_id]=$ex_factory_qty_arr[$po_id];
		}


		foreach ($data_array as $row){
			$key=$row->COMPANY_NAME.'*'.$row->BUYER_NAME;
			$dataArr[$key]['COMPANY_NAME']=$company_library[$row->COMPANY_NAME];
			$dataArr[$key]['BUYER_NAME']=$buyer_arr[$row->BUYER_NAME];
			$dataArr[$key]['QUANTITY']+=$row->PO_QUANTITY;
			$dataArr[$key]['QUANTITY_VALUE']+=$row->PO_TOTAL_PRICE;
			$totalBuyerValue[$key]+=$row->PO_TOTAL_PRICE;
			$dataArr[$key]['FULL_SHIPPED']+=$full_shiped_qty_arr[$row->PO_ID];
			$dataArr[$key]['PARTIAL_SHIPPED']+=$partial_shiped_qty_arr[$row->PO_ID];
			$dataArr[$key]['RUNNING']+=$row->PO_QUANTITY-($full_shiped_qty_arr[$row->PO_ID]+$partial_shiped_qty_arr[$row->PO_ID]);
		}

		foreach ($dataArr as $key=>$row){
			$returnDataArr[]=array(
				'COMPANY_NAME'=>$dataArr[$key]['COMPANY_NAME'],
				'BUYER_NAME'=>$dataArr[$key]['BUYER_NAME'],
				'QUANTITY'=>$dataArr[$key]['QUANTITY'],
				'QUANTITY_VALUE'=>$dataArr[$key]['QUANTITY_VALUE'],
				'QUANTITY_VALUE_PERCENTAGE'=>number_format(($dataArr[$key]['QUANTITY_VALUE']/array_sum($totalBuyerValue))*100,2),
				'FULL_SHIPPED'=>$dataArr[$key]['FULL_SHIPPED'],
				'PARTIAL_SHIPPED'=>$dataArr[$key]['PARTIAL_SHIPPED'],
				'RUNNING'=>$dataArr[$key]['RUNNING'],
				'EX_FACTORY_PERCENTAGE'=>number_format((($dataArr[$key]['FULL_SHIPPED']+$dataArr[$key]['PARTIAL_SHIPPED'])/$dataArr[$key]['QUANTITY'])*100,4),
			);
		}

		return $returnDataArr;


	}//end if;



	public function get_consolidated_order_summery_data($company_id, $date_from, $date_to, $date_type) {


		$company_details = return_library_array("select id,company_name from lib_company", 'id', 'company_name');

		$company_cond = "";
		if($company_id != 0 || $company_id!=""){
			$company_cond = " and a.company_name =$company_id";
			$company_cond2 = " and a.company_id = $company_id";
		}
		if ($date_from != "" && $date_to != "") {
			//echo "tipu";die;
			if ($this->db->dbdriver == 'mysqli') {
				$date_from = date("d-M-Y", strtotime($date_from));
				$date_to = date("d-M-Y", strtotime($date_to));
			} else {
				$date_from = date("d-M-Y", strtotime($date_from));
				$date_to = date("d-M-Y", strtotime($date_to));
			}
		} else {

			if ($this->db->dbdriver == 'mysqli') {
				$date_from = date("Y-m-d", time());
				$date_to = date('Y-m-d', strtotime('-14 day', strtotime($date_from)));
			} else {
				$date_from = date("d-M-Y", time());
				$date_to = date('d-M-Y', strtotime('-14 day', strtotime($date_from)));
			}
		}

		function month_add($orgDate, $mon) {
			$cd = strtotime($orgDate);
			$retDAY = date('Y-m-d', mktime(0, 0, 0, date('m', $cd) + $mon, 1, date('Y', $cd)));
			return $retDAY;
		}

		$tot_month = datediff( 'm', $date_from,$date_to);
		for($i=0; $i<= $tot_month; $i++ )
		{
			$next_month=month_add($date_from,$i);
			$month_arr[]=date("Y-m",strtotime($next_month));
		}

		$date_cond = "";


		//echo $date_type;die;
		if ($date_type==2 ) {
			//$company_cond = " and a.company_id =$company_id";
			$date_cond2 = " and b.sales_target_date between '$date_from' and  '$date_to' ";

			$date_cond = " and b.pub_shipment_date between '$date_from' and  '$date_to' ";
		}else{
			$date_cond = " and c.country_ship_date between '$date_from' and  '$date_to' ";
			$date_cond2 = " and b.sales_target_date between '$date_from' and  '$date_to' ";

		}




		if($date_type==1)
		{
			$sql="select a.company_name, sum(c.order_quantity) as po_quantity,c.country_ship_date as shipment_date, sum(c.order_total) as amount,b.is_confirmed,c.order_rate from wo_po_details_master a, wo_po_break_down b,wo_po_color_size_breakdown c where  a.id=b.job_id and b.id=c.po_break_down_id and b.job_id=c.job_id $company_cond and a.status_active=1 and b.status_active=1 and b.is_deleted=0 and  c.status_active=1 and c.is_deleted=0 $date_cond GROUP BY b.is_confirmed,a.company_name,c.country_ship_date,c.order_rate";
		}
		else
		{
			$sql="select a.company_name, sum(b.po_quantity*a.total_set_qnty) as po_quantity,b.pub_shipment_date as shipment_date, sum((b.unit_price/a.total_set_qnty)*(b.po_quantity*a.total_set_qnty)) as amount,b.is_confirmed from wo_po_details_master a, wo_po_break_down b where  a.id=b.job_id $company_cond and a.status_active=1 and b.status_active=1 and b.is_deleted=0 $date_cond  GROUP BY b.is_confirmed,a.company_name,b.pub_shipment_date";
			//echo $sql; die;
		}

		$sql_order= sql_select($sql);
		$i=0;
		foreach ($sql_order as $row)
		{
			if($row->IS_CONFIRMED == 1){

				$month_wise_data_array[$i]['MONTH']=date("Y-m",strtotime($row->SHIPMENT_DATE));
				$month_wise_data_array[$i]['COMPANY']=$company_details[$row->COMPANY_NAME];
				$month_wise_data_array[$i]['CONFIRM']="CONFIRM";
				$month_wise_data_array[$i]['PROJECTION']="0";
				$month_wise_data_array[$i]['CONFIRM_QTY']+=$row->PO_QUANTITY;
				$month_wise_data_array[$i]['CONFIRM_AMOUNT']+=$row->AMOUNT;
				$month_wise_data_array[$i]['AVG']=
				$avg =$month_wise_data_array[$i]['CONFIRM_AMOUNT']/$month_wise_data_array[$i]['CONFIRM_QTY'];
				if($avg<0 || $avg=="NAN")
				{
					$month_wise_data_array[$i]['AVG']=0;
				}else{
					$month_wise_data_array[$i]['AVG']=$avg;
				}

			}
			else if($row->IS_CONFIRMED==2)
			{
				$month_wise_data_array[$i]['MONTH']=date("Y-m",strtotime($row->SHIPMENT_DATE));
				$month_wise_data_array[$i]['COMPANY']=$company_details[$row->COMPANY_NAME];
				$month_wise_data_array[$i]['PROJECTION']="PROJECTION";
				$month_wise_data_array[$i]['PROJECTION_QTY']+=$row->PO_QUANTITY;
				$month_wise_data_array[$i]['PROJECTION_AMOUNT']+=$row->AMOUNT;
				$avg =$month_wise_data_array[$i]['PROJECTION_AMOUNT']/$month_wise_data_array[$i]['PROJECTION_QTY'];
				if($avg<0 || $avg=="NAN")
				{
					$month_wise_data_array[$i]['AVG']=0;
				}else{
					$month_wise_data_array[$i]['AVG']=$avg;
				}
			}
			$i++;

		}
		//print_r($order_data_arr);
		//var_dump($month_wise_data_array);	die;
		$sales_sql = "select a.company_id,a.team_leader, b.sales_target_date ,a.agent,b.sales_target_qty as sales_target_qty,b.sales_target_value from wo_sales_target_mst a,wo_sales_target_dtls b where a.id=b.sales_target_mst_id $company_cond2 and a.status_active=1 and a.is_deleted=0  $date_cond2 order by b.sales_target_date,a.company_id"; //die;
			$sql_sales=sql_select($sales_sql);
			$sale_data_arr=array();$buyer_tem_arr=array();$agent_tem_arr=array();
			foreach($sql_sales as $row)
			{
				$month_wise_data_array[$i]['MONTH']=date("Y-m",strtotime($row->SALES_TARGET_DATE));
				$month_wise_data_array[$i]['COMPANY']=$company_details[$row->COMPANY_ID];
				$month_wise_data_array[$i]['FORECAST']="FORECAST";
				$month_wise_data_array[$i]['FORECAST_QTY']+=$row->SALES_TARGET_QTY;
				$month_wise_data_array[$i]['FORECAST_AMOUNT']+=$row->SALES_TARGET_VALUE;
				$avg =$month_wise_data_array[$i]['FORECAST_AMOUNT']/$month_wise_data_array[$i]['FORECAST_QTY'];
				if($avg<0 || $avg=="NAN")
				{
					$month_wise_data_array[$i]['AVG']=0;
				}else{
					$month_wise_data_array[$i]['AVG']=$avg;
				}

				// $month_wise_data_array[date("Y-m",strtotime($row->SALES_TARGET_DATE))][$row->COMPANY_ID]['FORECAST']['TARGET_QTY']+=$row->SALES_TARGET_QTY;
				// $month_wise_data_array[date("Y-m",strtotime($row->SALES_TARGET_DATE))][$row->COMPANY_ID]['FORECAST']['TARGET_VAL']+=$row->SALES_TARGET_VALUE;
				// $month_wise_data_array[date("Y-m",strtotime($row->SALES_TARGET_DATE))][$row->COMPANY_ID]['FORECAST']['AVG']=$month_wise_data_array[date("Y-m",strtotime($row->SALES_TARGET_DATE))][$row->COMPANY_ID]['FORECAST']['TARGET_VAL']/$month_wise_data_array[date("Y-m",strtotime($row->SALES_TARGET_DATE))][$row->COMPANY_ID]['FORECAST']['TARGET_QTY'];
			}

			foreach ($month_wise_data_array as $key => $value) {
				$data_array[$key] = $value;

			}

		//var_dump($data_array);die;

		return $data_array;
	}
	
	function save_update_linking_input_output_data($save_obj) {

		$db_type = return_db_type();
		$response_obj = json_decode($save_obj);
		$qc_mst_arr = array();
		$qc_dtls_arr = array();
		//print_r($response_obj);die;
		foreach ($response_obj->data->list_data as $val) {
			$barcodeNo = $val->barcode_no;

		}
		
		//lc company get using barcode......................................start;
		$lc_company_data = sql_select("SELECT COMPANY_ID,LOCATION  from PRO_GARMENTS_PRODUCTION_MST a,PRO_GARMENTS_PRODUCTION_DTLS b where a.id=b.mst_id and a.status_active=1  and b.status_active=1 and barcode_no ='$barcodeNo'");//and a.production_type=1 and b.production_type=1
		
		//lc company get using barcode......................................end;

		//$cbo_company_name=3;

		if ($response_obj->status == true) {
			$production_types = $response_obj->production_type;
			if ($production_types == 55) {
				$entry_forms = 321;
			} else {
				$entry_forms = 322;
			}

			$mst_tbl_id = 0;
			$dtls_tbl_id = 0;
			$this->db->trans_start();
			$production_date = $response_obj->data->index->production_date;
			$remarks = $response_obj->data->index->remarks;
			$txt_reporting_hour = $response_obj->data->index->hour;

			if ($db_type == 0) {
				$year_cond = "YEAR(insert_date)";
				$pc_date_time = date("Y-m-d H:i:s", time());
				$production_date = date("Y-m-d", strtotime($production_date));
				$txt_reporting_hour = str_replace("'", "", $production_date) . " " . str_replace("'", "", $txt_reporting_hour);
				$txt_reporting_hour = date("Y-m-d H:i:s", strtotime($txt_reporting_hour));
			} else {
				$year_cond = "to_char(insert_date,'YYYY')";
				$pc_date_time = date("d-M-Y h:i:s A", time());
				$production_date = date("d-M-Y", strtotime($production_date));
				$txt_reporting_hour = str_replace("'", "", $production_date) . " " . str_replace("'", "", $txt_reporting_hour);
				$txt_reporting_hour = "to_date('" . $txt_reporting_hour . "','DD MONTH YYYY HH24:MI:SS')";

			}

			$cbo_company_name = $lc_company_data[0]->COMPANY_ID;
			$lc_company_location = $lc_company_data[0]->LOCATION;
			$location_id = $response_obj->data->index->location_id;
			$production_source = $response_obj->data->index->production_source;
			$serving_company = $response_obj->data->index->serving_company;
			$floor_id = $response_obj->data->index->floor_id;
			$sewing_line = $response_obj->data->index->sewing_line;
			$organic = $response_obj->data->index->organic;
			$user_id = $response_obj->data->index->user_id;
			$txt_system_id = $response_obj->data->index->txt_system_id;


			//$is_prod_reso_allo = return_field_value("auto_update", "variable_settings_production", "company_name=$serving_company and  variable_list=23 and is_deleted=0 and status_active=1", "auto_update");

			if (str_replace("'", "", $txt_system_id) == "") {
				if ($production_types == 55) {
					$mrr_sty = "ILK";
				} else {
					$mrr_sty = "OLK";
				}

				
				
				$new_sys_number = explode("*", return_next_id_by_sequence("", "PRO_GMTS_DELIVERY_MST", "", 1, $cbo_company_name, $mrr_sty, 0, date("Y", time()), 0, 0, $production_types, 0, 0));
				
				//print_r($new_sys_number);die;
				
				
				
				$mst_id = return_next_id_by_sequence("PRO_GMTS_DELIVERY_MST_SEQ", "PRO_GMTS_DELIVERY_MST_SEQ", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
				$challan_no = (int) $new_sys_number[2];
				$txt_challan_no = $new_sys_number[0];

				$bundle_mst_arr = array(
					'ID' => $mst_id,
					'SYS_NUMBER_PREFIX' => $new_sys_number[1],
					'SYS_NUMBER_PREFIX_NUM' => (int) $new_sys_number[2],
					'SYS_NUMBER' => $new_sys_number[0],
					'DELIVERY_DATE' => $production_date,
					'COMPANY_ID' => $cbo_company_name,
					'PRODUCTION_TYPE' => $production_types,
					'LOCATION_ID' => $lc_company_location,
					'DELIVERY_BASIS' => 3,
					'PRODUCTION_SOURCE' => $production_source,
					'WORKING_COMPANY_ID' => $serving_company,
					'WORKING_LOCATION_ID' => $location_id,
					'FLOOR_ID' => $floor_id,
					'SEWING_LINE' => $sewing_line,
					'ORGANIC' => $organic,
					'ENTRY_FORM' => $entry_forms,
					'INSERTED_BY' => $user_id,
					'INSERT_DATE' => $pc_date_time,
				);
				 //return $bundle_mst_arr;
				$mrr_tbl_id = $this->insertData($bundle_mst_arr, "PRO_GMTS_DELIVERY_MST");
			}else{

				$bundle_mst_arr_up = array(
					'DELIVERY_DATE' => $production_date,
					'COMPANY_ID' => $cbo_company_name,
					'LOCATION_ID' => $lc_company_location,
					'PRODUCTION_SOURCE' => $production_source,
					'WORKING_COMPANY_ID' => $serving_company,
					'WORKING_LOCATION_ID' => $location_id,
					'FLOOR_ID' => $floor_id,
					'SEWING_LINE' => $sewing_line,
					'ORGANIC' => $organic,
					'UPDATED_BY' => $user_id,
					'UPDATED_BY' => $pc_date_time,
				);

				$mst_id = str_replace("'", "", $txt_system_id);
				$this->updateData('PRO_GMTS_DELIVERY_MST', $bundle_mst_arr_up, array('ID' => $mst_id));

			}

			$mstArr = array();
			$dtlsArr = array();
			$colorSizeArr = array();
			$mstIdArr = array();
			$colorSizeIdArr = array();

			$bundleCutArr = array();
			$color_type_arr = array();
			$is_rescan_arr = array();
			$cutArr = array();
			$dtlsArrColorSize = array();
			$bundleRescanArr = array();
			$bundleBarcodeArr = array();
			$duplicate_bundle = array();
			$bundleCheckArr = array();
			$all_cut_no_arr = array();
			$dtls_data = $response_obj->data->list_data;

			foreach ($dtls_data as $v) {
				$bundleCheck = $v->bundle_no;
				$cutNo = $v->cut_no;
				$is_rescan = $v->is_rescan;
				if ($is_rescan != 1) {
					$bundleCheckArr[trim($bundleCheck)] = trim($bundleCheck);
				}
				$all_cut_no_arr[$cutNo] = $cutNo;
			}

			$bundle = "'" . implode("','", $bundleCheckArr) . "'";
			$receive_sql = "SELECT c.barcode_no,c.BUNDLE_NO from PRO_GARMENTS_PRODUCTION_DTLS c where  c.bundle_no  in ($bundle)  and c.production_type='$production_types' and c.status_active=1 and c.is_deleted=0 and (c.is_rescan=0 or c.is_rescan is null)";
			$receive_result = sql_select($receive_sql);
			foreach ($receive_result as $row) {

				$duplicate_bundle[trim($row->BUNDLE_NO)] = trim($row->BUNDLE_NO);
			}

			foreach ($dtls_data as $val) {
				$cutNo = $val->cut_no;
				$color_type_id = $val->color_type_id;
				$bundleNo = $val->bundle_no;
				$barcodeNo = $val->barcode_no;
				$orderId = $val->order_id;
				$gmtsitemId = $val->item_id;
				$countryId = $val->country_id;
				$colorId = $val->color_id;
				$sizeId = $val->size_id;
				$colorSizeId = $val->color_size_id;
				$qty = $val->qnty;
				$checkRescan = $val->is_rescan;
				
				
				if (!isset($duplicate_bundle[trim($bundleNo)])) {
					$bundleCutArr[$bundleNo] = $cutNo;
					$color_type_arr[$bundleNo] = $color_type_id;
					$is_rescan_arr[$bundleNo] = $checkRescan;
					$cutArr[$orderId][$gmtsitemId][$countryId] = $cutNo;
					if (isset($mstArr[$orderId][$gmtsitemId][$countryId])) {
						$mstArr[$orderId][$gmtsitemId][$countryId] += $qty;
					} else {
						$mstArr[$orderId][$gmtsitemId][$countryId] = $qty;
					}

					$colorSizeArr[$bundleNo] = $orderId . "**" . $gmtsitemId . "**" . $countryId;
					if (isset($dtlsArr[$bundleNo])) {
						$dtlsArr[$bundleNo] += $qty;
					} else {
						$dtlsArr[$bundleNo] = $qty;
					}


					$dtlsRejQtyArr[$bundleNo] += $val->reject;
					$dtlsAltQtyArr[$bundleNo] += $val->alter;
					$dtlsSpoQtyArr[$bundleNo] += $val->spot;
					$dtlsRepQtyArr[$bundleNo] += $val->replace;
					$dtlsQcQtyArr[$bundleNo]  += $val->qc_qnty;

					$dtlsArrColorSize[$bundleNo] = $colorSizeId;
					$bundleRescanArr[$bundleNo] = $checkRescan;
					$bundleBarcodeArr[$bundleNo] = $barcodeNo;
				}

			}


			if ($response_obj->mode == "save") {

				foreach ($mstArr as $orderId => $orderData) {
					foreach ($orderData as $gmtsItemId => $gmtsItemIdData) {
						foreach ($gmtsItemIdData as $countryId => $qty) {
							$id = return_next_id_by_sequence("PRO_GAR_PRODUCTION_MST_SEQ", "PRO_GARMENTS_PRODUCTION_MST", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);

							$mst_part_data = array(
								'ID' => $id,
								'DELIVERY_MST_ID' => $mst_id,
								'CUT_NO' => $cutArr[$orderId][$gmtsItemId][$countryId],
								'COMPANY_ID' => $cbo_company_name,
								'LOCATION' => $lc_company_location,
								'GARMENTS_NATURE' => 100,
								'CHALLAN_NO' => $challan_no,
								'PO_BREAK_DOWN_ID' => $orderId,
								'ITEM_NUMBER_ID' => $gmtsItemId,
								'COUNTRY_ID' => $countryId,
								'PRODUCTION_SOURCE' => $production_source,
								'SERVING_COMPANY' => $serving_company,
								'SENDING_LOCATION' => $location_id,
								'PRODUCTION_DATE' => $production_date,
								'PRODUCTION_TYPE' => $production_types,
								'ENTRY_BREAK_DOWN_TYPE' => 3,
								'REMARKS' => $remarks,
								'FLOOR_ID' => $floor_id,
								'SEWING_LINE' => $sewing_line,
								//'PROD_RESO_ALLO' => $is_prod_reso_allo,
								'ENTRY_FORM' => $entry_forms,
								'IS_TAB' => 1,
								'INSERTED_BY' => $user_id,
								'INSERT_DATE' => $pc_date_time,
							);
								//'PRODUCTION_QUANTITY' => $qty,
							if ($production_types == 55) {
								$mst_part_data['PRODUCTION_QUANTITY']=$qty;
							}
							else if ($production_types == 56) {
								$mst_part_data['PRODUCTION_QUANTITY']=array_sum($dtlsQcQtyArr)*1;
								$mst_part_data['REJECT_QNTY']=array_sum($dtlsRejQtyArr)*1;
								$mst_part_data['ALTER_QNTY']=array_sum($dtlsAltQtyArr)*1;
								$mst_part_data['REPLACE_QTY']=array_sum($dtlsRepQtyArr)*1;
								$mst_part_data['SPOT_QNTY']=array_sum($dtlsSpoQtyArr)*1;
							}
								 
							 //return $mst_part_data;

							$mst_tbl_id = $this->insertData($mst_part_data, "PRO_GARMENTS_PRODUCTION_MST");
							$mstIdArr[$orderId][$gmtsItemId][$countryId] = $id;
							if ($mst_tbl_id && $production_types == 56) {
								$this->db->query("update PRO_GARMENTS_PRODUCTION_MST set production_hour=$txt_reporting_hour where id ='$id'");
							}

						}
					}
				}

				foreach ($dtlsArr as $bundle_no => $qty) {

					$colorSizedData = explode("**", $colorSizeArr[$bundle_no]);
					$gmtsMstId = $mstIdArr[$colorSizedData[0]][$colorSizedData[1]][$colorSizedData[2]];
					$cut_no = $bundleCutArr[$bundle_no];
					$color_type_ids = $color_type_arr[$bundle_no];
					$is_rescan_id = $is_rescan_arr[$bundle_no];
					$dtls_id = return_next_id_by_sequence("PRO_GAR_PRODUCTION_DTLS_SEQ", "PRO_GARMENTS_PRODUCTION_DTLS", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);

					$dtls_part_data = array(
						'ID' => $dtls_id,
						'DELIVERY_MST_ID' => $mst_id,
						'MST_ID' => $gmtsMstId,
						'PRODUCTION_TYPE' => $production_types,
						'COLOR_SIZE_BREAK_DOWN_ID' => $dtlsArrColorSize[$bundle_no],
						'CUT_NO' => $cut_no,
						'BUNDLE_NO' => $bundle_no,
						'ENTRY_FORM' => $entry_forms,
						'BARCODE_NO' => $bundleBarcodeArr[$bundle_no],
						'IS_RESCAN' => $is_rescan_id,
						'COLOR_TYPE_ID' => $color_type_ids,
					);

					if ($production_types == 55) {
						$dtls_part_data['PRODUCTION_QNTY']=$qty;
					}
					else if ($production_types == 56) {
						$dtls_part_data['PRODUCTION_QNTY']=$dtlsQcQtyArr[$bundle_no];
						$dtls_part_data['REJECT_QTY']=$dtlsRejQtyArr[$bundle_no];
						$dtls_part_data['ALTER_QTY']=$dtlsAltQtyArr[$bundle_no];
						$dtls_part_data['REPLACE_QTY']=$dtlsRepQtyArr[$bundle_no];
						$dtls_part_data['SPOT_QTY']=$dtlsSpoQtyArr[$bundle_no];
					}




					$dtls_tbl_id = $this->insertData($dtls_part_data, "PRO_GARMENTS_PRODUCTION_DTLS");
				}

			}
			
			if ($response_obj->mode == "update") {
				//$this->db->query("delete from PRO_GARMENTS_PRODUCTION_DTLS where mst_id ='$update_id'");
			}

			if ($this->db->trans_status() == TRUE) {
				if ($mst_tbl_id && $dtls_tbl_id) {
					$this->db->trans_commit();
					$this->db->trans_complete();
					return $resultset["status"] = "Successful";
				} else {
					$this->db->trans_rollback();
					$this->db->trans_complete();
					return $resultset["status"] = "Failed";
				}

			} else {
				$resultset["status"] = "Failed";
				$this->db->trans_complete();
			}
		} else {
			return $resultset["status"] = "Failed";
		}
	
	}
	
	
	
	
	public function shift_duration_data() {
		
		$shift_name = array(1 => "A", 2 => "B", 3 => "C");
		$sql = "select SHIFT_NAME from SHIFT_DURATION_ENTRY where STATUS_ACTIVE=1 and IS_DELETED=0 and PRODUCTION_TYPE = 3";
		$sql_result = sql_select($sql);
		$shift_arr = array();
		foreach ($sql_result as $row) {
			$shift_arr[]=array(
				id    => $row->SHIFT_NAME,
				shift => $shift_name[$row->SHIFT_NAME]
			);
			
		}
		return $shift_arr;
	}
	
	public function grey_fab_wo_data_bk_26_07_2023($job_id) {
		
		//$db_type=return_db_type();

		if($job_id)
		{
			$job_cond= " and c.job_no like '%$job_id%'";  
		}

		$job_sql = sql_select("SELECT c.job_no as JOB_NO, c.buyer_name as BUYER_NAME, c.id as JOB_ID,c.KD_PLAN_STATUS, c.style_ref_no as STYLE_REF_NO, b.is_confirmed as IS_CONFIRMED, a.gmts_color_id as GMTS_COLOR_ID, a.fabric_color_id as FABRIC_COLOR_ID, a.gsm_weight as GSM_WEIGHT, d.lib_yarn_count_deter_id as DETER_ID, a.dia_width as DIA_WIDTH, SUM(a.grey_fab_qnty) as GREY_QNTY, a.color_type as COLOR_TYPE from wo_booking_dtls a, wo_po_break_down b, wo_po_details_master c, wo_pre_cost_fabric_cost_dtls d  where a.po_break_down_id=b.id and b.job_id=c.id and a.pre_cost_fabric_cost_dtls_id=d.id and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and c.status_active=1 and d.status_active=1 and d.is_deleted=0 and b.shiping_status!=3  $job_cond  group by c.job_no, c.buyer_name, c.id,c.KD_PLAN_STATUS, c.style_ref_no, b.is_confirmed, a.gmts_color_id, a.fabric_color_id, a.gsm_weight, d.lib_yarn_count_deter_id, a.dia_width, a.color_type");
		//and c.id=$job_id //and c.kd_plan_status!=0

		
		$lib_yarn_count_arr = return_library_array("select id, yarn_count from lib_yarn_count where status_active=1 and is_deleted=0", "id", "yarn_count");
		$composition = return_library_array("SELECT id,composition_name from  lib_composition_array where status_active=1 and is_deleted=0 order by composition_name", "id", "composition_name");
		$color_arr 		= return_library_array( "select id,color_name from lib_color", "id", "color_name"  );
		$buyer_arr 		= return_library_array( "select id,buyer_name from lib_buyer", "id", "buyer_name"  );
		$color_type = array(1 => "Solid", 2 => "Stripe[Y/D]", 3 => "Cross Over [Y/D]", 4 => "Check [Y/D]", 5 => "AOP", 6 => "Solid [Y/D]", 7 => "AOP Stripe", 20 => "Florecent", 25 => "Reactive", 26 => "Melange", 27 => "Marl", 28 => "Burn Out", 29 => "Gmts Dyeing", 30 => "Cross Dyeing", 31 => "Over Dyed", 32 => "Space Y/D", 33 => "Faulty Y/D", 34 => "Solid Stripe", 35 => "One Part Dye", 36 => "Space Dyeing", 37 => "Dope Dye", 38 => "INDIGO", 39 => "Neon",40=>"RND Shade",41=>"Tie Dyed",42=>"RFD",43=>"Inject",44=>"Stripe [Y/D Melange]",45=>"AOP [Melange]",46=>"RFD Shade",47=>"Stripe [Y/D AOP]",48=>"Stripe [Y/D Burn-Out AOP]",49=>"AOP on RFD",50=>"Dip Dye",51=>"Solid[Discharge Able Dyeing]",52=>"Discharge Dyeing",53=>"Acid Wash",54=>"AOP [Pigment]",55=>"AOP [Reactive]",56=>"AOP [Discharge]",57=>"AOP [Disperse]",58=>"AOP [Acid Print]",59=>"AOP [Burn Out]",60=>"AOP [Digital Print]",61=>"Siro",62=>"Normal Wash",63=>"Solid [Y/D AOP]",64=>"Double Dyeing",65=>"Vertical Stripe",66=>"Solid[Dry hand feel]",67=>"AOP + Over Dyed",68=>"Solid [Snow Marl]",69=>"AOP Solid",70=>"Neps",71=>"Solid [Y/D Melange]",72=>"MESH",73=>"TRICOT",74=>"Vertical Stripe Y/D",75=>"Wash",76=>"Solid[Y/D AOP Melange]",77=>"AOP[Rubber Print]",78=>"AOP[Metallic Print]",79=>"Multi Neps.",80=>"Melange[Dry hand Feel]",81=>"PFD",82=>"Eng Stripe[Y/D]",83=>"Jacquard Y/D",84=>"Foil Stripe Print"); 
		$composition[0] = 0;
		$composition_arr = array();
		$constructtion_arr = array();
		$sql_deter = "SELECT a.ID, a.CONSTRUCTION, b.COPMPOSITION_ID, b.PERCENT from lib_yarn_count_determina_mst a, lib_yarn_count_determina_dtls b where a.id=b.mst_id";
		$data_array = sql_select($sql_deter);
		foreach ($data_array as $row) {
			$constructtion_arr[$row->ID] = $row->CONSTRUCTION;
			if (isset($composition_arr[$row->ID])) {
				$composition_arr[$row->ID] .= $composition[$row->COPMPOSITION_ID] . " " . $row->PERCENT . "% ";
			} else {
				if (isset($composition[$row->COPMPOSITION_ID])) {
					$composition_arr[$row->ID] = $composition[$row->COPMPOSITION_ID] . " " . $row->PERCENT . "% ";
				} else {
					$composition_arr[$row->ID] = "";
				}

			}
		}

		if($job_id)
		{
			$job_cond= " and e.job_no_mst like '%$job_id%'";  
		}

		$program_sql = sql_select("SELECT e.job_id as JOB_ID, a.determination_id as DETERMINATION_ID, b.machine_dia as MACHINE_DIA,  b.stitch_length as STITCH_LENGTH, f.yarn_count_id as YARN_COUNT_ID
		from ppl_planning_info_entry_mst a, ppl_planning_info_entry_dtls b 
		left join ppl_yarn_requisition_entry d on b.id=d.knit_id and d.status_active=1 
		left join product_details_master f on d.prod_id=f.id, ppl_planning_entry_plan_dtls c, wo_po_break_down e
		where a.id=b.mst_id and b.id=c.dtls_id and c.PO_ID=e.id and a.is_deleted=0 and a.status_active=1 and b.is_deleted=0 and b.status_active=1 and c.is_deleted=0 and c.status_active=1 and c.is_sales =0 $job_cond
		group by e.job_id, a.determination_id, b.machine_dia,  b.stitch_length, f.yarn_count_id"); // and e.job_id=$job_id

		$program_data=array();
		foreach ($program_sql as $row) 
		{
			$program_data[$row->JOB_ID][$row->DETERMINATION_ID]['MACHINE_DIA'] .=$row->MACHINE_DIA.",";
			$program_data[$row->JOB_ID][$row->DETERMINATION_ID]['STITCH_LENGTH'] .=$row->STITCH_LENGTH.",";
			$program_data[$row->JOB_ID][$row->DETERMINATION_ID]['YARN_COUNT_ID'] .=$lib_yarn_count_arr[$row->YARN_COUNT_ID].",";
		}

		$confirm_arr = array(1=>'Confirmed',2=>'Block');

		$al_job_data=array();
		$i=1;
		foreach ($job_sql as $row) 
		{
			//$MACHINE_DIA = implode(",",array_unique(explode(",",chop($program_data[$row->JOB_ID][$row->DETER_ID]['MACHINE_DIA'],','))));
			$STITCH_LENGTH = implode(",",array_unique(explode(",",chop($program_data[$row->JOB_ID][$row->DETER_ID]['STITCH_LENGTH'],','))));
			$YARN_COUNT_ID = implode(",",array_unique(explode(",",chop($program_data[$row->JOB_ID][$row->DETER_ID]['YARN_COUNT_ID'],','))));

			if($row->GREY_QNTY =="")
			{
				$grey_quantity = 0;
			}else{
				$grey_quantity = $row->GREY_QNTY;
			}

			if($STITCH_LENGTH =="")
			{
				$stitchLenth = 0;
			}else{
				$stitchLenth = $STITCH_LENGTH;
			}

			if($row->JOB_NO  && $row->STYLE_REF_NO  && $row->BUYER_NAME && $row->IS_CONFIRMED && $row->GMTS_COLOR_ID && $row->GSM_WEIGHT && $row->DETER_ID && $row->DIA_WIDTH)
			{
				$al_job_data[$i]['GFWorkOrderRefNo']=$row->JOB_NO;
				$al_job_data[$i]['StyleReference']=$row->STYLE_REF_NO;
				$al_job_data[$i]['Buyer']=$buyer_arr[$row->BUYER_NAME];
				$al_job_data[$i]['ProdOrderType']=$confirm_arr[$row->IS_CONFIRMED];
				$al_job_data[$i]['GarmentColor']=$color_arr[$row->GMTS_COLOR_ID];
				$al_job_data[$i]['FabricType']=$color_type[$row->COLOR_TYPE];
				$al_job_data[$i]['FinishFabricColor']=$color_arr[$row->FABRIC_COLOR_ID];
				$al_job_data[$i]['FinishedFabGSM']=$row->GSM_WEIGHT;
				$al_job_data[$i]['Composition']=$composition_arr[$row->DETER_ID];
				$al_job_data[$i]['Construction']=$constructtion_arr[$row->DETER_ID];
				$al_job_data[$i]['GreyFabricDia']= $row->DIA_WIDTH;
				$al_job_data[$i]['StitchLength']=$stitchLenth;
				$al_job_data[$i]['YarnCount']=$YARN_COUNT_ID;
				$al_job_data[$i]['OrderQtyInKG']=$grey_quantity;
				$al_job_data[$i]['ChangeStatus']=$row->KD_PLAN_STATUS;
				$i++;
			}
		}
		return $al_job_data;
		die;

	}
	
	public function finish_fab_wo_data_26_07_2023($job_id) {
		
		//$db_type=return_db_type();

		if($job_id)
		{
			$job_cond= " and c.job_no like '%$job_id%'";  
		}

		$job_sql = sql_select("SELECT c.buyer_name as BUYER_NAME, c.job_no as JOB_NO, c.id as JOB_ID,c.KD_PLAN_STATUS, c.style_ref_no as STYLE_REF_NO, b.is_confirmed as IS_CONFIRMED, a.gmts_color_id as GMTS_COLOR_ID, a.fabric_color_id as FABRIC_COLOR_ID, a.color_type as COLOR_TYPE, a.gsm_weight as GSM_WEIGHT, a.dia_width as DIA_WIDTH, d.lib_yarn_count_deter_id as DETER_ID, d.avg_process_loss as AVG_PROCESS_LOSS, SUM(a.fin_fab_qnty) as FIN_QNTY from wo_booking_dtls a, wo_po_break_down b, wo_po_details_master c, wo_pre_cost_fabric_cost_dtls d  where a.po_break_down_id=b.id and b.job_id=c.id and a.pre_cost_fabric_cost_dtls_id=d.id and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and c.status_active=1 and d.status_active=1 and d.is_deleted=0 and b.shiping_status!=3  $job_cond  group by c.buyer_name, c.job_no, c.id,c.KD_PLAN_STATUS, c.style_ref_no, b.is_confirmed, a.gmts_color_id, a.fabric_color_id, a.color_type, a.gsm_weight, a.dia_width, d.lib_yarn_count_deter_id, d.avg_process_loss");
		//and c.id=$job_id //and c.kd_plan_status!=0

		
		$lib_yarn_count_arr = return_library_array("select id, yarn_count from lib_yarn_count where status_active=1 and is_deleted=0", "id", "yarn_count");
		$composition = return_library_array("SELECT id,composition_name from  lib_composition_array where status_active=1 and is_deleted=0 order by composition_name", "id", "composition_name");
		$color_arr 		= return_library_array( "select id,color_name from lib_color", "id", "color_name"  );
		$buyer_arr 		= return_library_array( "select id,buyer_name from lib_buyer", "id", "buyer_name"  );
		$composition[0] = 0;
		$composition_arr = array();
		$constructtion_arr = array();
		$sql_deter = "SELECT a.ID, a.CONSTRUCTION, b.COPMPOSITION_ID, b.PERCENT from lib_yarn_count_determina_mst a, lib_yarn_count_determina_dtls b where a.id=b.mst_id";
		$data_array = sql_select($sql_deter);
		foreach ($data_array as $row) {
			$constructtion_arr[$row->ID] = $row->CONSTRUCTION;
			if (isset($composition_arr[$row->ID])) {
				$composition_arr[$row->ID] .= $composition[$row->COPMPOSITION_ID] . " " . $row->PERCENT . "% ";
			} else {
				if (isset($composition[$row->COPMPOSITION_ID])) {
					$composition_arr[$row->ID] = $composition[$row->COPMPOSITION_ID] . " " . $row->PERCENT . "% ";
				} else {
					$composition_arr[$row->ID] = "";
				}

			}
		}

		$color_type = array(1 => "Solid", 2 => "Stripe[Y/D]", 3 => "Cross Over [Y/D]", 4 => "Check [Y/D]", 5 => "AOP", 6 => "Solid [Y/D]", 7 => "AOP Stripe", 20 => "Florecent", 25 => "Reactive", 26 => "Melange", 27 => "Marl", 28 => "Burn Out", 29 => "Gmts Dyeing", 30 => "Cross Dyeing", 31 => "Over Dyed", 32 => "Space Y/D", 33 => "Faulty Y/D", 34 => "Solid Stripe", 35 => "One Part Dye", 36 => "Space Dyeing", 37 => "Dope Dye", 38 => "INDIGO", 39 => "Neon",40=>"RND Shade",41=>"Tie Dyed",42=>"RFD",43=>"Inject",44=>"Stripe [Y/D Melange]",45=>"AOP [Melange]",46=>"RFD Shade",47=>"Stripe [Y/D AOP]",48=>"Stripe [Y/D Burn-Out AOP]",49=>"AOP on RFD",50=>"Dip Dye",51=>"Solid[Discharge Able Dyeing]",52=>"Discharge Dyeing",53=>"Acid Wash",54=>"AOP [Pigment]",55=>"AOP [Reactive]",56=>"AOP [Discharge]",57=>"AOP [Disperse]",58=>"AOP [Acid Print]",59=>"AOP [Burn Out]",60=>"AOP [Digital Print]",61=>"Siro",62=>"Normal Wash",63=>"Solid [Y/D AOP]",64=>"Double Dyeing",65=>"Vertical Stripe",66=>"Solid[Dry hand feel]",67=>"AOP + Over Dyed",68=>"Solid [Snow Marl]",69=>"AOP Solid",70=>"Neps",71=>"Solid [Y/D Melange]",72=>"MESH",73=>"TRICOT",74=>"Vertical Stripe Y/D",75=>"Wash");

		if($job_id)
		{
			$job_cond= " and e.job_no_mst like '%$job_id%'";  
		}
		$program_sql = sql_select("SELECT e.job_id as JOB_ID, a.determination_id as DETERMINATION_ID, b.machine_dia as MACHINE_DIA,  b.stitch_length as STITCH_LENGTH, f.yarn_count_id as YARN_COUNT_ID
		from ppl_planning_info_entry_mst a, ppl_planning_info_entry_dtls b 
		left join ppl_yarn_requisition_entry d on b.id=d.knit_id and d.status_active=1 
		left join product_details_master f on d.prod_id=f.id, ppl_planning_entry_plan_dtls c, wo_po_break_down e
		where a.id=b.mst_id and b.id=c.dtls_id and c.PO_ID=e.id and a.is_deleted=0 and a.status_active=1 and b.is_deleted=0 and b.status_active=1 and c.is_deleted=0 and c.status_active=1 and c.is_sales =0 $job_cond
		group by e.job_id, a.determination_id, b.machine_dia,  b.stitch_length, f.yarn_count_id"); // and e.job_id=$job_id

		$program_data=array();
		foreach ($program_sql as $row) 
		{
			$program_data[$row->JOB_ID][$row->DETERMINATION_ID]['YARN_COUNT_ID'] .=$lib_yarn_count_arr[$row->YARN_COUNT_ID].",";
		}

		$confirm_arr = array(1=>'Confirmed',2=>'Block');

		$al_job_data=array();
		$i=1;
		foreach ($job_sql as $row) 
		{
			$YARN_COUNT_ID = implode(",",array_unique(explode(",",chop($program_data[$row->JOB_ID][$row->DETER_ID]['YARN_COUNT_ID'],','))));

			if($row->FIN_QNTY=="")
			{
				$finQuantity = 0;
			}else{
				$finQuantity = $row->FIN_QNTY;
			}

			if($row->AVG_PROCESS_LOSS=="")
			{
				$avgProcessLoss = 0;
			}else{
				$avgProcessLoss = $row->AVG_PROCESS_LOSS;
			}


			if($row->JOB_NO && $row->STYLE_REF_NO && $row->IS_CONFIRMED && $row->BUYER_NAME && $row->GMTS_COLOR_ID && $row->FABRIC_COLOR_ID && $row->GSM_WEIGHT && $row->DIA_WIDTH && $row->COLOR_TYPE && $row->DETER_ID)
			{
				$al_job_data[$i]['FFWorkOrderRefNo']=$row->JOB_NO;
				$al_job_data[$i]['GarmentStyle']=$row->STYLE_REF_NO;
				$al_job_data[$i]['ProdOrderType']=$confirm_arr[$row->IS_CONFIRMED];
				$al_job_data[$i]['Buyer']=$buyer_arr[$row->BUYER_NAME];
				$al_job_data[$i]['GarmentColor']=$color_arr[$row->GMTS_COLOR_ID];
				$al_job_data[$i]['FinFabricColor']=$color_arr[$row->FABRIC_COLOR_ID];
				$al_job_data[$i]['FinFabricGSM']=$row->GSM_WEIGHT;
				$al_job_data[$i]['FinFabricDia']=$row->DIA_WIDTH;
				$al_job_data[$i]['FabricType']=$color_type[$row->COLOR_TYPE];
				$al_job_data[$i]['Composition']=$composition_arr[$row->DETER_ID];
				$al_job_data[$i]['Construction']=$constructtion_arr[$row->DETER_ID];
				$al_job_data[$i]['YarnCount']=$YARN_COUNT_ID;
				$al_job_data[$i]['ProcessLossPerc']=$avgProcessLoss;
				$al_job_data[$i]['OrderQtyInKG']=$finQuantity;
				$al_job_data[$i]['ChangeStatus']=$row->KD_PLAN_STATUS;
				$i++;
			}
		}
		return $al_job_data;
		die;

	}

	public function grey_fab_wo_data($job_id) {
		
		//$db_type=return_db_type();

		if($job_id)
		{
			$job_cond= " and c.job_no like '%$job_id%'";  
		}

		$job_sql = sql_select("SELECT c.job_no as JOB_NO, c.buyer_name as BUYER_NAME, c.id as JOB_ID,c.KD_PLAN_STATUS, c.style_ref_no as STYLE_REF_NO, b.is_confirmed as IS_CONFIRMED, a.gmts_color_id as GMTS_COLOR_ID, a.fabric_color_id as FABRIC_COLOR_ID, a.gsm_weight as GSM_WEIGHT, d.lib_yarn_count_deter_id as DETER_ID, a.dia_width as DIA_WIDTH, SUM(a.grey_fab_qnty) as GREY_QNTY, a.color_type as COLOR_TYPE, e.booking_date as BOOKING_DATE, min(b.po_received_date) as PO_RECEIVED_DATE, max(d.update_date) as MAX_UPDATE_DATE from wo_booking_dtls a, wo_po_break_down b, wo_po_details_master c, wo_pre_cost_fabric_cost_dtls d, wo_booking_mst e  where a.po_break_down_id=b.id and b.job_id=c.id and a.pre_cost_fabric_cost_dtls_id=d.id and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and c.status_active=1 and d.status_active=1 and d.is_deleted=0 and b.shiping_status!=3 and a.booking_no=e.booking_no and e.is_approved=1 $job_cond  group by c.job_no, c.buyer_name, c.id,c.KD_PLAN_STATUS, c.style_ref_no, b.is_confirmed, a.gmts_color_id, a.fabric_color_id, a.gsm_weight, d.lib_yarn_count_deter_id, a.dia_width,a.color_type, e.booking_date");
		//and c.id=$job_id //and c.kd_plan_status!=0

		
		$lib_yarn_count_arr = return_library_array("select id, yarn_count from lib_yarn_count where status_active=1 and is_deleted=0", "id", "yarn_count");
		$composition = return_library_array("SELECT id,composition_name from  lib_composition_array where status_active=1 and is_deleted=0 order by composition_name", "id", "composition_name");
		$color_arr 		= return_library_array( "select id,color_name from lib_color", "id", "color_name"  );
		$buyer_arr 		= return_library_array( "select id,buyer_name from lib_buyer", "id", "buyer_name"  );
		$color_type = array(1 => "Solid", 2 => "Stripe[Y/D]", 3 => "Cross Over [Y/D]", 4 => "Check [Y/D]", 5 => "AOP", 6 => "Solid [Y/D]", 7 => "AOP Stripe", 20 => "Florecent", 25 => "Reactive", 26 => "Melange", 27 => "Marl", 28 => "Burn Out", 29 => "Gmts Dyeing", 30 => "Cross Dyeing", 31 => "Over Dyed", 32 => "Space Y/D", 33 => "Faulty Y/D", 34 => "Solid Stripe", 35 => "One Part Dye", 36 => "Space Dyeing", 37 => "Dope Dye", 38 => "INDIGO", 39 => "Neon",40=>"RND Shade",41=>"Tie Dyed",42=>"RFD",43=>"Inject",44=>"Stripe [Y/D Melange]",45=>"AOP [Melange]",46=>"RFD Shade",47=>"Stripe [Y/D AOP]",48=>"Stripe [Y/D Burn-Out AOP]",49=>"AOP on RFD",50=>"Dip Dye",51=>"Solid[Discharge Able Dyeing]",52=>"Discharge Dyeing",53=>"Acid Wash",54=>"AOP [Pigment]",55=>"AOP [Reactive]",56=>"AOP [Discharge]",57=>"AOP [Disperse]",58=>"AOP [Acid Print]",59=>"AOP [Burn Out]",60=>"AOP [Digital Print]",61=>"Siro",62=>"Normal Wash",63=>"Solid [Y/D AOP]",64=>"Double Dyeing",65=>"Vertical Stripe",66=>"Solid[Dry hand feel]",67=>"AOP + Over Dyed",68=>"Solid [Snow Marl]",69=>"AOP Solid",70=>"Neps",71=>"Solid [Y/D Melange]",72=>"MESH",73=>"TRICOT",74=>"Vertical Stripe Y/D",75=>"Wash",76=>"Solid[Y/D AOP Melange]",77=>"AOP[Rubber Print]",78=>"AOP[Metallic Print]",79=>"Multi Neps.",80=>"Melange[Dry hand Feel]",81=>"PFD",82=>"Eng Stripe[Y/D]",83=>"Jacquard Y/D",84=>"Foil Stripe Print"); 
		$composition[0] = 0;
		$composition_arr = array();
		$constructtion_arr = array();
		$sql_deter = "SELECT a.ID, a.CONSTRUCTION, b.COPMPOSITION_ID, b.PERCENT from lib_yarn_count_determina_mst a, lib_yarn_count_determina_dtls b where a.id=b.mst_id";
		$data_array = sql_select($sql_deter);
		foreach ($data_array as $row) {
			$constructtion_arr[$row->ID] = $row->CONSTRUCTION;
			if (isset($composition_arr[$row->ID])) {
				$composition_arr[$row->ID] .= $composition[$row->COPMPOSITION_ID] . " " . $row->PERCENT . "% ";
			} else {
				if (isset($composition[$row->COPMPOSITION_ID])) {
					$composition_arr[$row->ID] = $composition[$row->COPMPOSITION_ID] . " " . $row->PERCENT . "% ";
				} else {
					$composition_arr[$row->ID] = "";
				}

			}
		}

		if($job_id)
		{
			$job_cond= " and e.job_no_mst like '%$job_id%'";  
		}

		$program_sql = sql_select("SELECT e.job_id as JOB_ID, a.determination_id as DETERMINATION_ID, b.machine_dia as MACHINE_DIA,  b.stitch_length as STITCH_LENGTH, f.yarn_count_id as YARN_COUNT_ID
		from ppl_planning_info_entry_mst a, ppl_planning_info_entry_dtls b 
		left join ppl_yarn_requisition_entry d on b.id=d.knit_id and d.status_active=1 
		left join product_details_master f on d.prod_id=f.id, ppl_planning_entry_plan_dtls c, wo_po_break_down e
		where a.id=b.mst_id and b.id=c.dtls_id and c.PO_ID=e.id and a.is_deleted=0 and a.status_active=1 and b.is_deleted=0 and b.status_active=1 and c.is_deleted=0 and c.status_active=1 and c.is_sales =0 $job_cond
		group by e.job_id, a.determination_id, b.machine_dia,  b.stitch_length, f.yarn_count_id"); // and e.job_id=$job_id

		$program_data=array();
		foreach ($program_sql as $row) 
		{
			$program_data[$row->JOB_ID][$row->DETERMINATION_ID]['MACHINE_DIA'] .=$row->MACHINE_DIA.",";
			$program_data[$row->JOB_ID][$row->DETERMINATION_ID]['STITCH_LENGTH'] .=$row->STITCH_LENGTH.",";
			$program_data[$row->JOB_ID][$row->DETERMINATION_ID]['YARN_COUNT_ID'] .=$lib_yarn_count_arr[$row->YARN_COUNT_ID].",";
		}

		$confirm_arr = array(1=>'Confirmed',2=>'Block');

		$al_job_data=array();
		$i=1;
		foreach ($job_sql as $row) 
		{
			//$MACHINE_DIA = implode(",",array_unique(explode(",",chop($program_data[$row->JOB_ID][$row->DETER_ID]['MACHINE_DIA'],','))));
			$STITCH_LENGTH = implode(",",array_unique(explode(",",chop($program_data[$row->JOB_ID][$row->DETER_ID]['STITCH_LENGTH'],','))));
			$YARN_COUNT_ID = implode(",",array_unique(explode(",",chop($program_data[$row->JOB_ID][$row->DETER_ID]['YARN_COUNT_ID'],','))));

			if($row->GREY_QNTY =="")
			{
				$grey_quantity = 0;
			}else{
				$grey_quantity = $row->GREY_QNTY;
			}

			if($STITCH_LENGTH =="")
			{
				$stitchLenth = 0;
			}else{
				$stitchLenth = $STITCH_LENGTH;
			}

			if($row->PO_RECEIVED_DATE)
			{
				$PO_RECEIVED_DATE = date("d-M-Y",strtotime($row->PO_RECEIVED_DATE));
			}
			else
			{
				$PO_RECEIVED_DATE ="";
			}
			if($row->MAX_UPDATE_DATE)
			{
				$MAX_UPDATE_DATE = date("d-M-Y",strtotime($row->MAX_UPDATE_DATE));
			}
			else
			{
				$MAX_UPDATE_DATE ="";
			}

			if($row->JOB_NO  && $row->STYLE_REF_NO  && $row->BUYER_NAME && $row->IS_CONFIRMED && $row->GMTS_COLOR_ID && $row->GSM_WEIGHT && $row->DETER_ID && $row->DIA_WIDTH)
			{
				$al_job_data[$i]['GFWorkOrderRefNo']=$row->JOB_NO;
				$al_job_data[$i]['JobCreationDate']=$row->BOOKING_DATE;
				$al_job_data[$i]['StyleReference']=$row->STYLE_REF_NO;
				$al_job_data[$i]['Buyer']=$buyer_arr[$row->BUYER_NAME];
				$al_job_data[$i]['ProdOrderType']=$confirm_arr[$row->IS_CONFIRMED];
				$al_job_data[$i]['GarmentColor']=$color_arr[$row->GMTS_COLOR_ID];
				$al_job_data[$i]['FabricType']=$color_type[$row->COLOR_TYPE];
				$al_job_data[$i]['FinishFabricColor']=$color_arr[$row->FABRIC_COLOR_ID];
				$al_job_data[$i]['FinishedFabGSM']=$row->GSM_WEIGHT;
				$al_job_data[$i]['Composition']=$composition_arr[$row->DETER_ID];
				$al_job_data[$i]['Construction']=$constructtion_arr[$row->DETER_ID];
				$al_job_data[$i]['GreyFabricDia']= $row->DIA_WIDTH;   
				$al_job_data[$i]['StitchLength']=$stitchLenth;
				$al_job_data[$i]['YarnCount']=$YARN_COUNT_ID;
				$al_job_data[$i]['OrderQtyInKG']=$grey_quantity;
				$al_job_data[$i]['ChangeStatus']=$row->KD_PLAN_STATUS*1;
				$al_job_data[$i]['OpDate']=$PO_RECEIVED_DATE;
				$al_job_data[$i]['JobUpdatedDate']=$MAX_UPDATE_DATE;
				$i++;
			}
		}
		return $al_job_data;
		die;

	}
	
	public function finish_fab_wo_data($job_id) {
		
		//$db_type=return_db_type();

		if($job_id)
		{
			$job_cond= " and c.job_no like '%$job_id%'";  
		}

		$job_sql = sql_select("SELECT c.buyer_name as BUYER_NAME, c.job_no as JOB_NO, c.id as JOB_ID,c.KD_PLAN_STATUS, c.style_ref_no as STYLE_REF_NO, b.is_confirmed as IS_CONFIRMED, a.gmts_color_id as GMTS_COLOR_ID, a.fabric_color_id as FABRIC_COLOR_ID, a.color_type as COLOR_TYPE, a.gsm_weight as GSM_WEIGHT, a.dia_width as DIA_WIDTH, d.lib_yarn_count_deter_id as DETER_ID, d.avg_process_loss as AVG_PROCESS_LOSS, SUM(a.fin_fab_qnty) as FIN_QNTY, e.booking_date as BOOKING_DATE, min(b.po_received_date) as PO_RECEIVED_DATE, max(d.update_date) as MAX_UPDATE_DATE from wo_booking_dtls a, wo_po_break_down b, wo_po_details_master c, wo_pre_cost_fabric_cost_dtls d, wo_booking_mst e  where a.po_break_down_id=b.id and b.job_id=c.id and a.pre_cost_fabric_cost_dtls_id=d.id and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and c.status_active=1 and d.status_active=1 and d.is_deleted=0 and b.shiping_status!=3 and a.booking_no=e.booking_no and e.is_approved=1 $job_cond  group by c.buyer_name, c.job_no, c.id,c.KD_PLAN_STATUS, c.style_ref_no, b.is_confirmed, a.gmts_color_id, a.fabric_color_id, a.color_type, a.gsm_weight, a.dia_width, d.lib_yarn_count_deter_id, d.avg_process_loss, e.booking_date");
		//and c.id=$job_id //and c.kd_plan_status!=0

		
		$lib_yarn_count_arr = return_library_array("select id, yarn_count from lib_yarn_count where status_active=1 and is_deleted=0", "id", "yarn_count");
		$composition = return_library_array("SELECT id,composition_name from  lib_composition_array where status_active=1 and is_deleted=0 order by composition_name", "id", "composition_name");
		$color_arr 		= return_library_array( "select id,color_name from lib_color", "id", "color_name"  );
		$buyer_arr 		= return_library_array( "select id,buyer_name from lib_buyer", "id", "buyer_name"  );
		$composition[0] = 0;
		$composition_arr = array();
		$constructtion_arr = array();
		$sql_deter = "SELECT a.ID, a.CONSTRUCTION, b.COPMPOSITION_ID, b.PERCENT from lib_yarn_count_determina_mst a, lib_yarn_count_determina_dtls b where a.id=b.mst_id";
		$data_array = sql_select($sql_deter);
		foreach ($data_array as $row) {
			$constructtion_arr[$row->ID] = $row->CONSTRUCTION;
			if (isset($composition_arr[$row->ID])) {
				$composition_arr[$row->ID] .= $composition[$row->COPMPOSITION_ID] . " " . $row->PERCENT . "% ";
			} else {
				if (isset($composition[$row->COPMPOSITION_ID])) {
					$composition_arr[$row->ID] = $composition[$row->COPMPOSITION_ID] . " " . $row->PERCENT . "% ";
				} else {
					$composition_arr[$row->ID] = "";
				}

			}
		}

		$color_type = array(1 => "Solid", 2 => "Stripe[Y/D]", 3 => "Cross Over [Y/D]", 4 => "Check [Y/D]", 5 => "AOP", 6 => "Solid [Y/D]", 7 => "AOP Stripe", 20 => "Florecent", 25 => "Reactive", 26 => "Melange", 27 => "Marl", 28 => "Burn Out", 29 => "Gmts Dyeing", 30 => "Cross Dyeing", 31 => "Over Dyed", 32 => "Space Y/D", 33 => "Faulty Y/D", 34 => "Solid Stripe", 35 => "One Part Dye", 36 => "Space Dyeing", 37 => "Dope Dye", 38 => "INDIGO", 39 => "Neon",40=>"RND Shade",41=>"Tie Dyed",42=>"RFD",43=>"Inject",44=>"Stripe [Y/D Melange]",45=>"AOP [Melange]",46=>"RFD Shade",47=>"Stripe [Y/D AOP]",48=>"Stripe [Y/D Burn-Out AOP]",49=>"AOP on RFD",50=>"Dip Dye",51=>"Solid[Discharge Able Dyeing]",52=>"Discharge Dyeing",53=>"Acid Wash",54=>"AOP [Pigment]",55=>"AOP [Reactive]",56=>"AOP [Discharge]",57=>"AOP [Disperse]",58=>"AOP [Acid Print]",59=>"AOP [Burn Out]",60=>"AOP [Digital Print]",61=>"Siro",62=>"Normal Wash",63=>"Solid [Y/D AOP]",64=>"Double Dyeing",65=>"Vertical Stripe",66=>"Solid[Dry hand feel]",67=>"AOP + Over Dyed",68=>"Solid [Snow Marl]",69=>"AOP Solid",70=>"Neps",71=>"Solid [Y/D Melange]",72=>"MESH",73=>"TRICOT",74=>"Vertical Stripe Y/D",75=>"Wash");

		if($job_id)
		{
			$job_cond= " and e.job_no_mst like '%$job_id%'";  
		}
		$program_sql = sql_select("SELECT e.job_id as JOB_ID, a.determination_id as DETERMINATION_ID, b.machine_dia as MACHINE_DIA,  b.stitch_length as STITCH_LENGTH, f.yarn_count_id as YARN_COUNT_ID
		from ppl_planning_info_entry_mst a, ppl_planning_info_entry_dtls b 
		left join ppl_yarn_requisition_entry d on b.id=d.knit_id and d.status_active=1 
		left join product_details_master f on d.prod_id=f.id, ppl_planning_entry_plan_dtls c, wo_po_break_down e
		where a.id=b.mst_id and b.id=c.dtls_id and c.PO_ID=e.id and a.is_deleted=0 and a.status_active=1 and b.is_deleted=0 and b.status_active=1 and c.is_deleted=0 and c.status_active=1 and c.is_sales =0 $job_cond
		group by e.job_id, a.determination_id, b.machine_dia,  b.stitch_length, f.yarn_count_id"); // and e.job_id=$job_id

		$program_data=array();
		foreach ($program_sql as $row) 
		{
			$program_data[$row->JOB_ID][$row->DETERMINATION_ID]['YARN_COUNT_ID'] .=$lib_yarn_count_arr[$row->YARN_COUNT_ID].",";
		}

		$confirm_arr = array(1=>'Confirmed',2=>'Block');

		$al_job_data=array();
		$i=1;
		foreach ($job_sql as $row) 
		{
			$YARN_COUNT_ID = implode(",",array_unique(explode(",",chop($program_data[$row->JOB_ID][$row->DETER_ID]['YARN_COUNT_ID'],','))));

			if($row->FIN_QNTY=="")
			{
				$finQuantity = 0;
			}else{
				$finQuantity = $row->FIN_QNTY;
			}

			if($row->AVG_PROCESS_LOSS=="")
			{
				$avgProcessLoss = 0;
			}else{
				$avgProcessLoss = $row->AVG_PROCESS_LOSS;
			}

			if($row->PO_RECEIVED_DATE)
			{
				$PO_RECEIVED_DATE = date("d-M-Y",strtotime($row->PO_RECEIVED_DATE));
			}
			else
			{
				$PO_RECEIVED_DATE ="";
			}
			if($row->MAX_UPDATE_DATE)
			{
				$MAX_UPDATE_DATE = date("d-M-Y",strtotime($row->MAX_UPDATE_DATE));
			}
			else
			{
				$MAX_UPDATE_DATE ="";
			}


			if($row->JOB_NO && $row->STYLE_REF_NO && $row->IS_CONFIRMED && $row->BUYER_NAME && $row->GMTS_COLOR_ID && $row->FABRIC_COLOR_ID && $row->GSM_WEIGHT && $row->DIA_WIDTH && $row->COLOR_TYPE && $row->DETER_ID)
			{
				$al_job_data[$i]['FFWorkOrderRefNo']=$row->JOB_NO;
				$al_job_data[$i]['GarmentStyle']=$row->STYLE_REF_NO;
				$al_job_data[$i]['JobCreationDate']=$row->BOOKING_DATE;
				$al_job_data[$i]['ProdOrderType']=$confirm_arr[$row->IS_CONFIRMED];
				$al_job_data[$i]['Buyer']=$buyer_arr[$row->BUYER_NAME];
				$al_job_data[$i]['GarmentColor']=$color_arr[$row->GMTS_COLOR_ID];
				$al_job_data[$i]['FinFabricColor']=$color_arr[$row->FABRIC_COLOR_ID];
				$al_job_data[$i]['FinFabricGSM']=$row->GSM_WEIGHT;
				$al_job_data[$i]['FinFabricDia']=$row->DIA_WIDTH;
				$al_job_data[$i]['FabricType']=$color_type[$row->COLOR_TYPE];
				$al_job_data[$i]['Composition']=$composition_arr[$row->DETER_ID];
				$al_job_data[$i]['Construction']=$constructtion_arr[$row->DETER_ID];
				$al_job_data[$i]['YarnCount']=$YARN_COUNT_ID;
				$al_job_data[$i]['ProcessLossPerc']=$avgProcessLoss;
				$al_job_data[$i]['OrderQtyInKG']=$finQuantity;
				$al_job_data[$i]['ChangeStatus']=$row->KD_PLAN_STATUS*1;
				$al_job_data[$i]['OpDate']=$PO_RECEIVED_DATE;
				$al_job_data[$i]['JobUpdatedDate']=$MAX_UPDATE_DATE;
				$i++;
			}
		}
		return $al_job_data;
		die;

	}
	
	public function machine_list_data() {
		
		//$db_type=return_db_type();

		$unit_of_measurement = array(1 => "Pcs", 2 => "Dzn", 3 => "Grs", 4 => "GG", 10 => "Mg", 11 => "Gm", 12 => "Kg", 13 => "Quintal", 14 => "Ton", 15 => "Lbs", 20 => "Km", 21 => "Hm", 22 => "Dm", 23 => "Mtr", 24 => "Dcm", 25 => "CM", 26 => "MM", 27 => "Yds", 28 => "Feet", 29 => "Inch", 30 => "CFT", 31 => "SFT", 40 => "Ltr", 41 => "ML", 50 => "Roll", 51 => "Coil", 52 => "Cone", 53 => "Bag", 54 => "Box", 55 => "Drum", 56 => "Bottle", 57 => "Pack", 58 => "Set", 59 => "Can", 60 => "Each", 61 => "Gallon", 62 => "Lachi", 63 => "Pair", 64 => "Lot", 65 => "Packet", 66 => "Pot", 67 => "Book", 68 => "Culind", 69 => "Rim", 70 => "Cft", 71 => "Syp", 72 => "K.V", 73 => "CU-M3", 74 => "Bundle", 75 => "Strip", 76 => "SQM", 77 => "Ounce", 78 => "Cylinder", 79 => "Course", 80 => "Sheet", 81 => "RFT", 82 => "Square Inch", 83 => "Carton", 84 => "Thane", 85 => "Gross Yds", 86 => "Jar", 87 => "Reel", 88 => "CBM",89=>"Tub");

		$machine_category = array(1 => "Knitting", 2 => "Dyeing", 3 => "Printing", 4 => "Finishing", 5 => "Embroidery", 6 => "Washing", 7 => "Cutting", 8 => "Sewing", 9 => "CAD Machine", 10 => "Vehicles", 11 => "Others", 12 => "ETP", 13 => "Seamless", 14 => "Maintenance", 15 => "Ring Machine", 16 => " Auto Cone Machine", 17 => " Uniflex", 18 => " Carding", 19 => " Breaker Draw Frame", 20 => " Lap Former", 21 => " Comber", 22 => " Finisher Draw Frame", 23 => " Simplex", 24 => " Spinning", 25 =>"Trims/Accessories",26 =>"Insp",27 =>"Link",28 =>"Attachment",29 =>"Hole Button",30 =>"Iron",31 =>"Final",32 =>"Packing",33 =>"AOP",34 =>"WTP",35 =>"Lab",36 =>"Yarn Dyeing",37 =>"Rotor Machine");

		$machine_sql = sql_select("SELECT machine_no as MACHINE_NO, machine_group as MACHINE_GROUP, category_id as CATEGORY_ID,brand as BRAND, prod_capacity as PROD_CAPACITY, capacity_uom_id as CAPACITY_UOM_ID, gauge as GAUGE, dia_width as DIA_WIDTH, origin as ORIGIN, no_of_feeder as NO_OF_FEEDER, id as ID from lib_machine_name where category_id in (1,2) and status_active=1 order by machine_no");
		//and c.id=$job_id


		$al_machine_data=array();
		$i=1;
		foreach ($machine_sql as $row) 
		{
			if($row->PROD_CAPACITY =="")
			{
				$VesselCapacity = 0;
			}else{
				$VesselCapacity = $row->PROD_CAPACITY;
			}

			if($row->DIA_WIDTH =="")
			{
				$MachineDia = 0;
			}else{
				$MachineDia = $row->DIA_WIDTH;
			}

			if($row->GAUGE =="")
			{
				$MachineGuage = 0;
			}else{
				$MachineGuage =$row->GAUGE;
			}


			if($row->MACHINE_NO && $row->MACHINE_GROUP && $machine_category[$row->CATEGORY_ID] && $row->BRAND)
			{
				$al_machine_data[$i]['MachineNo']=$row->MACHINE_NO;
				$al_machine_data[$i]['MachineId']=$row->ID;
				$al_machine_data[$i]['MachineName']=$row->MACHINE_GROUP;
				$al_machine_data[$i]['ProductionUnit']=$machine_category[$row->CATEGORY_ID];
				$al_machine_data[$i]['MachineBrand']=$row->BRAND;
				$al_machine_data[$i]['VesselCapacity']=$VesselCapacity;
				$al_machine_data[$i]['CapacityUOM']=$unit_of_measurement[$row->CAPACITY_UOM_ID];
				$al_machine_data[$i]['MachineDia']=$MachineDia;
				$al_machine_data[$i]['MachineGuage']=$MachineGuage;
				$al_machine_data[$i]['CountryOrigin']=$row->ORIGIN;
				$al_machine_data[$i]['NoOfFeeder']=$row->NO_OF_FEEDER;
				$i++;
			}
		}
		return $al_machine_data;
		die;

	}

	public function yarn_issue_data($job_id) {
		
		//$db_type=return_db_type();

		if($job_id)
		{
			$job_cond= " and f.job_no_mst like '%$job_id%'";  
		}

		$job_sql = sql_select("SELECT f.job_no_mst as JOB_NO, e.id as PROGRAM_NO, a.issue_date as ISSUE_DATE,  c.id as PROP_ID, b.prod_id as PROD_ID, g.product_name_details as PRODUCT_NAME_DETAILS, g.brand as BRAND, g.lot as LOT, b.cons_uom as CONS_UOM, c.quantity as QUANTITY
		from inv_issue_master a, inv_transaction b, order_wise_pro_details c, ppl_yarn_requisition_entry d, ppl_planning_info_entry_dtls e, wo_po_break_down f, product_details_master g
		where a.issue_basis in (3,8) and a.entry_form=3 and a.id=b.mst_id and b.transaction_type=2 and b.item_category=1 and b.receive_basis in (3,8) and b.id=c.trans_id and f.shiping_status!=3 and c.po_breakdown_id=f.id and c.prod_id=g.id and b.requisition_no=d.requisition_no and d.knit_id=e.id and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0 and c.status_active=1 and c.is_deleted=0 $job_cond
		group by f.job_no_mst, a.issue_date, c.id, b.prod_id, g.product_name_details, g.brand, g.lot, b.cons_uom, c.quantity, e.id"); //g.item_code as ITEM_CODE, 

		if(empty($job_sql))
		{
			return "";
			die;
		}
		//return $job_sql;die;
		$brand_name_arr = return_library_array("select id, brand_name from lib_brand", "id", "brand_name");
		$unit_of_measurement = array(1 => "Pcs", 2 => "Dzn", 3 => "Grs", 4 => "GG", 10 => "Mg", 11 => "Gm", 12 => "Kg", 13 => "Quintal", 14 => "Ton", 15 => "Lbs", 20 => "Km", 21 => "Hm", 22 => "Dm", 23 => "Mtr", 24 => "Dcm", 25 => "CM", 26 => "MM", 27 => "Yds", 28 => "Feet", 29 => "Inch", 30 => "CFT", 31 => "SFT", 40 => "Ltr", 41 => "ML", 50 => "Roll", 51 => "Coil", 52 => "Cone", 53 => "Bag", 54 => "Box", 55 => "Drum", 56 => "Bottle", 57 => "Pack", 58 => "Set", 59 => "Can", 60 => "Each", 61 => "Gallon", 62 => "Lachi", 63 => "Pair", 64 => "Lot", 65 => "Packet", 66 => "Pot", 67 => "Book", 68 => "Culind", 69 => "Rim", 70 => "Cft", 71 => "Syp", 72 => "K.V", 73 => "CU-M3", 74 => "Bundle", 75 => "Strip", 76 => "SQM", 77 => "Ounce", 78 => "Cylinder", 79 => "Course", 80 => "Sheet", 81 => "RFT", 82 => "Square Inch", 83 => "Carton", 84 => "Thane", 85 => "Gross Yds", 86 => "Jar", 87 => "Reel", 88 => "CBM",89=>"Tub");
		$dupli_qnty_chk = array(); $data_arr = array();
		foreach ($job_sql as $row) 
		{
			if($dupli_qnty_chk[$row->PROP_ID] =="")
			{
				$dupli_qnty_chk[$row->PROP_ID] =$row->PROP_ID;
				$datastring= $row->JOB_NO."*".$row->PROGRAM_NO."*".$row->ISSUE_DATE."*".$row->PROD_ID."*".$row->PRODUCT_NAME_DETAILS."*".$brand_name_arr[$row->BRAND]."*".$row->LOT."*".$unit_of_measurement[$row->CONS_UOM];
				$data_arr[$datastring] +=$row->QUANTITY;
			}
		}

		$al_yarn_data=array(); $datakey_arr=array();
		$i=1;
		foreach ($data_arr as $key=>$row) 
		{
			$datakey_arr = explode("*", $key);

			$JobNo				=	$datakey_arr[0];
			$ProgramNo			=	$datakey_arr[1];
			$RecvDate			=	$datakey_arr[2];
			$YarnItemCode		=	$datakey_arr[3];
			$YarnItemDescription=	$datakey_arr[4];
			$YarnBrand			=	$datakey_arr[5];
			$YarnLot			=	$datakey_arr[6];
			$QtyUOM				=	$datakey_arr[7];

			if($JobNo && $RecvDate && $YarnItemCode && $YarnItemDescription && $YarnBrand && $YarnLot && $QtyUOM && $row )
			{
				$al_yarn_data[$i]['JobNo']=$JobNo;
				$al_yarn_data[$i]['ProgramNo']=$ProgramNo;
				$al_yarn_data[$i]['RecvDate']=$RecvDate;
				$al_yarn_data[$i]['YarnItemCode']=trim($YarnItemCode);
				$al_yarn_data[$i]['YarnItemDescription']=$YarnItemDescription;
				$al_yarn_data[$i]['YarnBrand']=$YarnBrand;
				$al_yarn_data[$i]['YarnLot']=$YarnLot;
				$al_yarn_data[$i]['QtyUOM']=$QtyUOM;
				$al_yarn_data[$i]['RcvdQty']=$row;
				$i++;
			}
		}
		return $al_yarn_data;
		die;

	}

	public function knitting_production_data($job_id) {
			
		//$db_type=return_db_type();

		if($job_id)
		{
			$job_cond= " and d.job_no_mst like '%$job_id%'";  
		}

		/* $job_sql = sql_select("SELECT a.recv_number as RECV_NUMBER, d.job_no_mst as JOB_NO, a.booking_id as PROGRAM_NO, a.receive_date as RECEIVE_DATE, b.shift_name as SHIFT_NAME, b.prod_id as PROD_ID, e.product_name_details as PRODUCT_NAME_DETAILS, b.machine_no_id as MACHINE_NO, b.uom as UOM, b.febric_description_id as FEBRIC_DESCRIPTION_ID, b.gsm as GSM, b.width as WIDTH, b.stitch_length as STITCH_LENGTH, b.color_id as COLOR_ID, sum(c.quantity) as QUANTITY
		from inv_receive_master a, pro_grey_prod_entry_dtls b, order_wise_pro_details c, wo_po_break_down d, product_details_master e
		where a.entry_form=2 and a.receive_basis=2 and a.id=b.mst_id and c.entry_form=2 and c.is_sales=0 and b.id=c.dtls_id and b.prod_id=e.id and c.po_breakdown_id=d.id and d.shiping_status !=3 and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0 and c.status_active=1 and c.is_deleted=0 $job_cond
		group by a.recv_number, d.job_no_mst, a.booking_id, a.receive_date, b.shift_name, b.prod_id, e.product_name_details, b.machine_no_id, b.uom, b.febric_description_id, b.gsm, b.width, b.stitch_length, b.color_id"); */

		$job_sql = sql_select("SELECT d.job_no_mst as JOB_NO, a.booking_id as PROGRAM_NO, a.receive_date as RECEIVE_DATE, b.shift_name as SHIFT_NAME, b.prod_id as PROD_ID, e.product_name_details as PRODUCT_NAME_DETAILS, b.machine_no_id as MACHINE_NO, b.uom as UOM, b.febric_description_id as FEBRIC_DESCRIPTION_ID, b.gsm as GSM, b.width as WIDTH, b.stitch_length as STITCH_LENGTH, b.color_id as COLOR_ID, sum(c.quantity) as QUANTITY, g.color_type_id as COLOR_TYPE_ID, f.knitting_pdo as KNITTING_PDO, a.knitting_source as KNITTING_SOURCE, a.knitting_company as KNITTING_COMPANY
		from inv_receive_master a left join ppl_planning_info_entry_dtls f on a.booking_id=f.id left join ppl_planning_info_entry_mst g on f.mst_id=g.id, pro_grey_prod_entry_dtls b, order_wise_pro_details c, wo_po_break_down d, product_details_master e
		where a.entry_form=2 and a.receive_basis=2 and a.id=b.mst_id and c.entry_form=2 and c.is_sales=0 and b.id=c.dtls_id and b.prod_id=e.id and c.po_breakdown_id=d.id and d.shiping_status !=3 and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0 and c.status_active=1 and c.is_deleted=0 and d.status_active=1 and d.is_deleted=0 $job_cond
		group by d.job_no_mst, a.booking_id, a.receive_date, b.shift_name, b.prod_id, e.product_name_details, b.machine_no_id, b.uom, b.febric_description_id, b.gsm, b.width, b.stitch_length, b.color_id, g.color_type_id, f.knitting_pdo, a.knitting_source, a.knitting_company");

		if(empty($job_sql))
		{
			return "";
			die;
		}

		$shift_name_arr = array(1 => "A", 2 => "B", 3 => "C");
		$machine_name_arr = return_library_array("select id, machine_no from lib_machine_name", "id", "machine_no");
		$unit_of_measurement = array(1 => "Pcs", 2 => "Dzn", 3 => "Grs", 4 => "GG", 10 => "Mg", 11 => "Gm", 12 => "Kg", 13 => "Quintal", 14 => "Ton", 15 => "Lbs", 20 => "Km", 21 => "Hm", 22 => "Dm", 23 => "Mtr", 24 => "Dcm", 25 => "CM", 26 => "MM", 27 => "Yds", 28 => "Feet", 29 => "Inch", 30 => "CFT", 31 => "SFT", 40 => "Ltr", 41 => "ML", 50 => "Roll", 51 => "Coil", 52 => "Cone", 53 => "Bag", 54 => "Box", 55 => "Drum", 56 => "Bottle", 57 => "Pack", 58 => "Set", 59 => "Can", 60 => "Each", 61 => "Gallon", 62 => "Lachi", 63 => "Pair", 64 => "Lot", 65 => "Packet", 66 => "Pot", 67 => "Book", 68 => "Culind", 69 => "Rim", 70 => "Cft", 71 => "Syp", 72 => "K.V", 73 => "CU-M3", 74 => "Bundle", 75 => "Strip", 76 => "SQM", 77 => "Ounce", 78 => "Cylinder", 79 => "Course", 80 => "Sheet", 81 => "RFT", 82 => "Square Inch", 83 => "Carton", 84 => "Thane", 85 => "Gross Yds", 86 => "Jar", 87 => "Reel", 88 => "CBM",89=>"Tub");
		
		$knitting_source = array(1 => "In-house", 2 => "In-bound Subcontract", 3 => "Out-bound Subcontract");
		
		$company_sql = "select id,company_name from lib_company";
		$company_data = $this->db->query($company_sql)->result();
		foreach ($company_data as $row) {
			$company_arr[$row->ID] = $row->COMPANY_NAME;
		}

		$supplier_sql = "select id, supplier_name from lib_supplier";
		$supplier_data = $this->db->query($supplier_sql)->result();
		foreach ($supplier_data as $row) {
			$supplier_arr[$row->ID] = $row->SUPPLIER_NAME;
		}
		

		$composition = return_library_array("SELECT id,composition_name from  lib_composition_array where status_active=1 and is_deleted=0 order by composition_name", "id", "composition_name");

		$composition[0] = 0;
		$composition_arr = array();
		$constructtion_arr = array();
		$sql_deter = "SELECT a.ID, a.CONSTRUCTION, b.COPMPOSITION_ID, b.PERCENT from lib_yarn_count_determina_mst a, lib_yarn_count_determina_dtls b where a.id=b.mst_id";
		$deter_array = sql_select($sql_deter);
		foreach ($deter_array as $row) {
			$constructtion_arr[$row->ID] = $row->CONSTRUCTION;
			if (isset($composition_arr[$row->ID])) {
				$composition_arr[$row->ID] .= $composition[$row->COPMPOSITION_ID] . " " . $row->PERCENT . "% ";
			} else {
				if (isset($composition[$row->COPMPOSITION_ID])) {
					$composition_arr[$row->ID] = $composition[$row->COPMPOSITION_ID] . " " . $row->PERCENT . "% ";
				} else {
					$composition_arr[$row->ID] = "";
				}

			}
		}
		$color_arr 		= return_library_array( "select id,color_name from lib_color", "id", "color_name"  );			
		$color_type = array(1 => "Solid", 2 => "Stripe[Y/D]", 3 => "Cross Over [Y/D]", 4 => "Check [Y/D]", 5 => "AOP", 6 => "Solid [Y/D]", 7 => "AOP Stripe", 20 => "Florecent", 25 => "Reactive", 26 => "Melange", 27 => "Marl", 28 => "Burn Out", 29 => "Gmts Dyeing", 30 => "Cross Dyeing", 31 => "Over Dyed", 32 => "Space Y/D", 33 => "Faulty Y/D", 34 => "Solid Stripe", 35 => "One Part Dye", 36 => "Space Dyeing", 37 => "Dope Dye", 38 => "INDIGO", 39 => "Neon",40=>"RND Shade",41=>"Tie Dyed",42=>"RFD",43=>"Inject",44=>"Stripe [Y/D Melange]",45=>"AOP [Melange]",46=>"RFD Shade",47=>"Stripe [Y/D AOP]",48=>"Stripe [Y/D Burn-Out AOP]",49=>"AOP on RFD",50=>"Dip Dye",51=>"Solid[Discharge Able Dyeing]",52=>"Discharge Dyeing",53=>"Acid Wash",54=>"AOP [Pigment]",55=>"AOP [Reactive]",56=>"AOP [Discharge]",57=>"AOP [Disperse]",58=>"AOP [Acid Print]",59=>"AOP [Burn Out]",60=>"AOP [Digital Print]",61=>"Siro",62=>"Normal Wash",63=>"Solid [Y/D AOP]",64=>"Double Dyeing",65=>"Vertical Stripe",66=>"Solid[Dry hand feel]",67=>"AOP + Over Dyed",68=>"Solid [Snow Marl]",69=>"AOP Solid",70=>"Neps",71=>"Solid [Y/D Melange]",72=>"MESH",73=>"TRICOT",74=>"Vertical Stripe Y/D",75=>"Wash");

		$al_knit_data=array(); 
		$i=1;
		foreach ($job_sql as $row) 
		{
			$colorArr = explode(",",$row->COLOR_ID);
			$color_names="";
			foreach ($colorArr as  $val) {
				$color_names .= $color_arr[$val].",";
			}
			$color_names = chop($color_names,",");
		if($row->KNITTING_PDO =="")
		{
		$knitting_pdo=0;
		}
		else
		{
		$knitting_pdo=$row->KNITTING_PDO;
		}



			if($row->JOB_NO && $row->PROGRAM_NO && $row->RECEIVE_DATE && $row->PROD_ID && $row->PRODUCT_NAME_DETAILS && $row->QUANTITY && $row->UOM && $row->FEBRIC_DESCRIPTION_ID && $row->GSM && $row->WIDTH && $color_names)
			{
				$al_knit_data[$i]['JobNo']=$row->JOB_NO;
				$al_knit_data[$i]['KnitProdRefNo']=$knitting_pdo;
				$al_knit_data[$i]['ProgramNo']=$row->PROGRAM_NO;
				$al_knit_data[$i]['ProductionDate']=$row->RECEIVE_DATE;
				$al_knit_data[$i]['KnittingSource']=$knitting_source[$row->KNITTING_SOURCE];
				
				if ($row->KNITTING_SOURCE == 1) {
				$al_knit_data[$i]['KnittingCom']=$company_arr[$row->KNITTING_COMPANY];
			} else if ($row->KNITTING_SOURCE == 3) {
				$al_knit_data[$i]['KnittingCom']=$supplier_arr[$row->KNITTING_COMPANY];
			}

				$al_knit_data[$i]['ProductionShift']=$shift_name_arr[$row->SHIFT_NAME];
				$al_knit_data[$i]['GreigeItemCode']=$row->PROD_ID;
				$al_knit_data[$i]['GreigeItemDescription']=$row->PRODUCT_NAME_DETAILS;
				$al_knit_data[$i]['FabricType']=$color_type[$row->COLOR_TYPE_ID];

				$al_knit_data[$i]['Construction']=$constructtion_arr[$row->FEBRIC_DESCRIPTION_ID];
				$al_knit_data[$i]['Composition']=$composition_arr[$row->FEBRIC_DESCRIPTION_ID];
				$al_knit_data[$i]['FinishedFabGSM']=$row->GSM;
				$al_knit_data[$i]['GreyFabricDia']=$row->WIDTH;
				$al_knit_data[$i]['StitchLength']=$row->STITCH_LENGTH;
				$al_knit_data[$i]['FinishFabricColor']=$color_names;
				$al_knit_data[$i]['MachineId']=$row->MACHINE_NO;
				$al_knit_data[$i]['MachineNumber']=$machine_name_arr[$row->MACHINE_NO];
				$al_knit_data[$i]['ProducedQty']=$row->QUANTITY;
				$al_knit_data[$i]['QtyUOM']=$unit_of_measurement[$row->UOM];
				$i++;
			}
		}
		return $al_knit_data;
		die;

	}
	
	public function grey_recv_data($job_id) {
			
		//$db_type=return_db_type();

		if($job_id)
		{
			$job_cond= " and e.job_no_mst like '%$job_id%'";  
		}

		$job_sql = sql_select("SELECT e.job_no_mst as JOB_NO, d.booking_no as BOOKING_NO, a.receive_date as RECEIVE_DATE, b.prod_id as PROD_ID, f.product_name_details as PRODUCT_NAME_DETAILS, f.unit_of_measure as UOM, b.febric_description_id as FEBRIC_DESCRIPTION_ID, b.gsm as GSM, b.width as WIDTH, b.stitch_length as STITCH_LENGTH, b.color_id as COLOR_ID, sum(c.QNTY) QNTY
		from inv_receive_master a, pro_grey_prod_entry_dtls b, pro_roll_details c, pro_roll_details d, wo_po_break_down e, product_details_master f
		where a.entry_form=58 and a.id= b.mst_id and b.id=c.dtls_id and c.entry_form=58 and d.is_sales=0 and c.barcode_no=d.barcode_no and d.entry_form=2 and d.receive_basis=2 and c.po_breakdown_id=e.id and e.shiping_status !=3 and b.prod_id=f.id and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0 and c.status_active=1 and c.is_deleted=0 and d.status_active=1 and d.is_deleted=0 $job_cond group by e.job_no_mst, d.booking_no , a.receive_date , b.prod_id , f.product_name_details, f.unit_of_measure, b.febric_description_id, b.gsm, b.width, b.stitch_length, b.color_id");

		if(empty($job_sql))
		{
			return "";
			die;
		}

		$unit_of_measurement = array(1 => "Pcs", 2 => "Dzn", 3 => "Grs", 4 => "GG", 10 => "Mg", 11 => "Gm", 12 => "Kg", 13 => "Quintal", 14 => "Ton", 15 => "Lbs", 20 => "Km", 21 => "Hm", 22 => "Dm", 23 => "Mtr", 24 => "Dcm", 25 => "CM", 26 => "MM", 27 => "Yds", 28 => "Feet", 29 => "Inch", 30 => "CFT", 31 => "SFT", 40 => "Ltr", 41 => "ML", 50 => "Roll", 51 => "Coil", 52 => "Cone", 53 => "Bag", 54 => "Box", 55 => "Drum", 56 => "Bottle", 57 => "Pack", 58 => "Set", 59 => "Can", 60 => "Each", 61 => "Gallon", 62 => "Lachi", 63 => "Pair", 64 => "Lot", 65 => "Packet", 66 => "Pot", 67 => "Book", 68 => "Culind", 69 => "Rim", 70 => "Cft", 71 => "Syp", 72 => "K.V", 73 => "CU-M3", 74 => "Bundle", 75 => "Strip", 76 => "SQM", 77 => "Ounce", 78 => "Cylinder", 79 => "Course", 80 => "Sheet", 81 => "RFT", 82 => "Square Inch", 83 => "Carton", 84 => "Thane", 85 => "Gross Yds", 86 => "Jar", 87 => "Reel", 88 => "CBM",89=>"Tub");

		$composition = return_library_array("SELECT id,composition_name from  lib_composition_array where status_active=1 and is_deleted=0 order by composition_name", "id", "composition_name");

		$composition[0] = 0;
		$composition_arr = array();
		$constructtion_arr = array();
		$sql_deter = "SELECT a.ID, a.CONSTRUCTION, b.COPMPOSITION_ID, b.PERCENT from lib_yarn_count_determina_mst a, lib_yarn_count_determina_dtls b where a.id=b.mst_id";
		$deter_array = sql_select($sql_deter);
		foreach ($deter_array as $row) {
			$constructtion_arr[$row->ID] = $row->CONSTRUCTION;
			if (isset($composition_arr[$row->ID])) {
				$composition_arr[$row->ID] .= $composition[$row->COPMPOSITION_ID] . " " . $row->PERCENT . "% ";
			} else {
				if (isset($composition[$row->COPMPOSITION_ID])) {
					$composition_arr[$row->ID] = $composition[$row->COPMPOSITION_ID] . " " . $row->PERCENT . "% ";
				} else {
					$composition_arr[$row->ID] = "";
				}

			}
		}
		$color_arr 		= return_library_array( "select id,color_name from lib_color", "id", "color_name"  );

		$all_rcv_data=array(); 
		$i=1;
		foreach ($job_sql as $row) 
		{
			$colorArr = explode(",",$row->COLOR_ID);
			$color_names="";
			foreach ($colorArr as  $val) {
				$color_names .= $color_arr[$val].",";
			}
			$color_names = chop($color_names,",");

			if($row->JOB_NO && $row->BOOKING_NO && $row->RECEIVE_DATE && $row->FEBRIC_DESCRIPTION_ID && $row->GSM && $row->WIDTH && $color_names)
			{
				$all_rcv_data[$i]['JobNo']=$row->JOB_NO;
				$all_rcv_data[$i]['ProgramNo']=$row->BOOKING_NO;
				$all_rcv_data[$i]['RecvDate']=$row->RECEIVE_DATE;

				$all_rcv_data[$i]['Construction']=$constructtion_arr[$row->FEBRIC_DESCRIPTION_ID];
				$all_rcv_data[$i]['Composition']=$composition_arr[$row->FEBRIC_DESCRIPTION_ID];
				$all_rcv_data[$i]['GreigeFabGSM']=$row->GSM;
				$all_rcv_data[$i]['GreyFabricDia']=$row->WIDTH;
				$all_rcv_data[$i]['StitchLength']=$row->STITCH_LENGTH;
				$all_rcv_data[$i]['FinishFabricColor']=$color_names;

				$all_rcv_data[$i]['GreigeItemCode']=$row->PROD_ID;
				$all_rcv_data[$i]['GreigeItemDescription']=$row->PRODUCT_NAME_DETAILS;
				$all_rcv_data[$i]['QtyUOM']=$unit_of_measurement[$row->UOM];
				$all_rcv_data[$i]['RecvQty']=$row->QNTY;
				$i++;
			}
		}
		return $all_rcv_data;
		die;

	}

	public function batch_header_data($job_id) {
			
		//$db_type=return_db_type();

		if($job_id)
		{
			$job_cond= " and c.job_no_mst like '%$job_id%'";  
		}

		$job_sql = sql_select("SELECT c.job_no_mst as JOB_NO, a.id as BATCH_ID, a.batch_no as BATCH_NO, a.batch_sl_no as BATCH_SL_NO, a.dyeing_machine as DYEING_MACHINE, a.color_id as COLOR_ID, a.color_range_id as COLOR_RANGE_ID, a.double_dyeing as DOUBLE_DYEING, a.batch_against as BATCH_AGAINST, a.extention_no as EXTENTION_NO, a.batch_type_id as BATCH_TYPE_ID, sum(b.batch_qnty) as BATCH_WEIGHT
		from pro_batch_create_mst a, pro_batch_create_dtls b left join wo_po_break_down c on b.po_id=c.id and c.shiping_status !=3
		where a.id=b.mst_id and a.entry_form=0 and b.status_active=1 and b.is_deleted=0 $job_cond
		group by c.job_no_mst, a.id, a.batch_no, a.batch_sl_no, a.dyeing_machine, a.color_id, a.color_range_id, a.double_dyeing, a.batch_against, a.extention_no, a.batch_type_id");

		if(empty($job_sql))
		{
			return "";
			die;
		}


		$recipe_array = return_library_array("select id, batch_id from pro_recipe_entry_mst where entry_form=59 and status_active=1 and is_deleted=0", "id", "batch_id");

		$yes_no = array(1 => "Yes", 2 => "No");
		$batch_type_arr=array(1=>"Bulk Batch",2=>"Trail Batch");
		$batch_against = array(1 => "Buyer Order", 2 => "Re-Dyeing", 3 => "Sample", 4 => "External", 5 => "Without Booking", 6 => "Gmts Wash", 7 => "Gmts Dyeing", 8 => "Fabric Wash", 9 => "Without Job", 10 => "Gmts Printing", 11 => "Re-Wash", 12 => "Return-Re-Wash");
		$machine_name_arr = return_library_array("select id, machine_no from lib_machine_name", "id", "machine_no");
		$color_arr 		= return_library_array( "select id,color_name from lib_color", "id", "color_name"  );
		$color_range = array(1 => "Dark Color", 2 => "Light Color", 3 => "Black Color", 4 => "White Color", 5 => "Average Color", 6 => "Melange", 7 => "Wash", 8 => "Scouring", 9 => "Extra Dark", 10 => "Medium Color", 11 => "Super Dark", 12 => "Royal color",13 => "Average-Double Dyeing",14 => "Dark - Double Dyeing",15 => "Black-Double Dyeing",16 => "Light-Double Dyeing",17 => "Medium-Double Dyeing",18 => "Extra Dark-Double Dyeing",19 => "Peroxide Wash",20 => "White / G.Mell / Scouring / H2o2",21 => "Green / Turquoise Color",22 => "Reactive Black",23 => "Light Royal",24 => "Dark Royal",25 => "Green / Turquoise Color- Double Dyeing",26 => "Reactive Black- Double Dyeing",27 => "Light Royal - Double Dyeing",28 => "Dark Royal - Double Dyeing",29 => "Light Melange",30 => "Dark Melange",31 => "Navy",32 => "Light Lemon");

		$all_batch_data=array(); 
		$i=1;
		foreach ($job_sql as $row) 
		{
			if($row->EXTENTION_NO =="")
			{
				$extention_no= 0;
			}
			else
			{
				$extention_no= $row->EXTENTION_NO;
			}
			if($row->BATCH_SL_NO =="")
			{
				$batchSlNo= 0;
			}
			else
			{
				$batchSlNo= $row->BATCH_SL_NO;
			}
			if($batch_type_arr[$row->BATCH_TYPE_ID] =="")
			{
				$batchTypeId= 0;
			}
			else
			{
				$batchTypeId= $batch_type_arr[$row->BATCH_TYPE_ID];
			}

			if($row->JOB_NO && $row->DYEING_MACHINE && $row->BATCH_NO  && $row->COLOR_ID && $row->COLOR_RANGE_ID && $row->DOUBLE_DYEING && $row->BATCH_AGAINST && $row->BATCH_WEIGHT  )
			{
				$all_batch_data[$i]['JobNo']=$row->JOB_NO;
				$all_batch_data[$i]['MachineNumber']=$machine_name_arr[$row->DYEING_MACHINE];
				$all_batch_data[$i]['BatchNo']=$row->BATCH_NO;
				$all_batch_data[$i]['BatchColor']=$color_arr[$row->COLOR_ID];
				$all_batch_data[$i]['ColorRange']=$color_range[$row->COLOR_RANGE_ID];
				$all_batch_data[$i]['RecipeNumber']=$recipe_array[$row->BATCH_ID];
				$all_batch_data[$i]['IsTwoPartDye']=$yes_no[$row->DOUBLE_DYEING];
				$all_batch_data[$i]['BatchAgainst']=$batch_against[$row->BATCH_AGAINST];
				$all_batch_data[$i]['BatchSL']=$batchSlNo;
				$all_batch_data[$i]['BatchExt']=$extention_no;
				$all_batch_data[$i]['BatchWeight']=$row->BATCH_WEIGHT;
				$all_batch_data[$i]['WeightUOM']="Kg";
				$all_batch_data[$i]['BatchType']=$batchTypeId;
				$i++;
			}
		}
		return $all_batch_data;
		die;

	}

	public function batch_details_data($job_id) {
			
		//$db_type=return_db_type();

		if($job_id)
		{
			$job_cond= " and d.job_no_mst like '%$job_id%'";  
		}

		$job_sql = sql_select("SELECT d.job_no_mst as JOB_NO, a.batch_no as BATCH_NO, a.extention_no as EXTENTION_NO, b.width_dia_type as WIDTH_DIA_TYPE, b.prod_id as PROD_ID, b.item_description as ITEM_DESCRIPTION, e.detarmination_id as DETARMINATION_ID, b.body_part_id as BODY_PART_ID, g.yarn_count as YARN_COUNT, g.yarn_lot as YARN_LOT, g.stitch_length as STITCH_LENGTH, g.machine_dia as MACHINE_DIA, g.machine_gg as MACHINE_GG, sum(b.batch_qnty) as BATCH_QNTY from pro_batch_create_mst a, pro_batch_create_dtls b, pro_roll_details c, wo_po_break_down d, product_details_master e, pro_roll_details f, pro_grey_prod_entry_dtls g 
		where a.id=b.mst_id and b.id=c.dtls_id and b.prod_id=e.id and c.entry_form=64 and a.entry_form=0 and b.status_active=1 and b.is_deleted=0 $job_cond and c.po_breakdown_id=d.id and d.shiping_status !=3 and b.roll_id=f.id and f.entry_form=2 and f.dtls_id=g.id group by d.job_no_mst, a.batch_no, a.extention_no, b.width_dia_type, b.prod_id, b.item_description, e.detarmination_id, b.body_part_id, g.yarn_count, g.yarn_lot, g.stitch_length, g.machine_dia, g.machine_gg");

		if(empty($job_sql))
		{
			return "";
			die;
		}
		$body_part = return_library_array("select id,body_part_full_name from  lib_body_part where status_active=1 and is_deleted=0 order by body_part_full_name", "id", "body_part_full_name");

		$lib_yarn_count_arr = return_library_array("select id, yarn_count from lib_yarn_count where status_active=1 and is_deleted=0", "id", "yarn_count");
		$composition = return_library_array("SELECT id,composition_name from  lib_composition_array where status_active=1 and is_deleted=0 order by composition_name", "id", "composition_name");
		$color_arr 		= return_library_array( "select id,color_name from lib_color", "id", "color_name"  );
		$buyer_arr 		= return_library_array( "select id,buyer_name from lib_buyer", "id", "buyer_name"  );
		$composition[0] = 0;
		$composition_arr = array();
		$constructtion_arr = array();
		$sql_deter = "SELECT a.ID, a.CONSTRUCTION, b.COPMPOSITION_ID, b.PERCENT from lib_yarn_count_determina_mst a, lib_yarn_count_determina_dtls b where a.id=b.mst_id";
		$deter_array = sql_select($sql_deter);
		foreach ($deter_array as $row) {
			$constructtion_arr[$row->ID] = $row->CONSTRUCTION;
			if (isset($composition_arr[$row->ID])) {
				$composition_arr[$row->ID] .= $composition[$row->COPMPOSITION_ID] . " " . $row->PERCENT . "% ";
			} else {
				if (isset($composition[$row->COPMPOSITION_ID])) {
					$composition_arr[$row->ID] = $composition[$row->COPMPOSITION_ID] . " " . $row->PERCENT . "% ";
				} else {
					$composition_arr[$row->ID] = "";
				}

			}
		}

																			

		$all_batch_data=array(); 
		$i=1;
		foreach ($job_sql as $row) 
		{
			$count_arr = explode(",",$row->YARN_COUNT);
			$yarn_count_arr =array();
			foreach ($count_arr as $count ) {
				$yarn_count_arr[$lib_yarn_count_arr[$count]]= $lib_yarn_count_arr[$count];
			}

			$yarn_count = implode(",",$yarn_count_arr);
			


			$all_batch_data[$i]['JobNo']=$row->JOB_NO;
			$all_batch_data[$i]['BatchNo']=$row->BATCH_NO;
			$all_batch_data[$i]['BatchExt']=$row->EXTENTION_NO;
			$all_batch_data[$i]['ItemType']=$body_part[$row->BODY_PART_ID];
			$all_batch_data[$i]['ItemCode']=$row->PROD_ID;
			$all_batch_data[$i]['ItemDescription']=$row->ITEM_DESCRIPTION;
			$all_batch_data[$i]['Construction']=$constructtion_arr[$row->DETARMINATION_ID];
			$all_batch_data[$i]['Composition']=$composition_arr[$row->DETARMINATION_ID];
			$all_batch_data[$i]['StitchLength']=$row->STITCH_LENGTH;
			$all_batch_data[$i]['MachineDia']=$row->MACHINE_DIA;
			$all_batch_data[$i]['MachineGuage']=$row->MACHINE_GG;
			$all_batch_data[$i]['DiaType']=$row->WIDTH_DIA_TYPE;
			$all_batch_data[$i]['YarnLot']=$row->YARN_LOT;
			$all_batch_data[$i]['YarnCount']=$yarn_count;
			$all_batch_data[$i]['BatchQtyUOM']="Kg";
			$all_batch_data[$i]['BatchQty']=$row->BATCH_QNTY;
			$all_batch_data[$i]['TrimsItemUOM']="";
			$all_batch_data[$i]['TrimsItemQty']="";


		
			
			$i++;
		}
		return $all_batch_data;
		die;

	}

	public function dyeing_production_data($job_id) {

		if($job_id)
		{
			 $job_cond= " and c.job_no_mst like '%$job_id%'";  
		}

		$dyeing_sql = sql_select("SELECT g.id as PROCESS_DTLS_ID, c.job_no_mst as JOB_NO, f.batch_id as BATCH_ID, a.batch_no as BATCH_NO, a.extention_no as EXTENTION_NO, g.batch_qty AS BATCH_QNTY, g.production_qty as PRODUCTION_QTY, f.process_id as PROCESS_ID,f.load_unload_id as LOAD_UNLOAD_ID, f.production_date as PROCESS_END_DATE, f.process_end_date as PRODUCTION_DATE, f.end_hours as END_HOURS, f.end_minutes as END_MINUTES, f.machine_id as MACHINE_ID, f.result as RESULT, a.double_dyeing as DOUBLE_DYEING, f.id as FID
		from pro_batch_create_dtls b, wo_po_break_down c, pro_batch_create_mst a, pro_fab_subprocess f, pro_fab_subprocess_dtls g
		where f.batch_id=a.id and f.batch_id=b.mst_id and a.entry_form=0 and a.id=b.mst_id and f.id=g.mst_id and a.batch_against in(1,2) and b.po_id=c.id and b.status_active=1 and b.is_deleted=0 and a.status_active=1 and a.is_deleted=0 and f.status_active=1 and f.is_deleted=0 and g.entry_page in(35) and f.load_unload_id=2 and f.result=1 and c.shiping_status !=3 $job_cond
		group by g.id, a.batch_no, f.batch_id, a.extention_no, g.batch_qty, g.production_qty, c.job_no_mst, f.production_date, f.process_end_date, f.end_hours, f.end_minutes, f.machine_id, f.entry_form, f.result,f.process_id ,f.load_unload_id, a.double_dyeing, f.id
		order by f.batch_id, f.process_id,f.load_unload_id, f.id");

		$conversion_cost_head_array = array(
			 30 => "Yarn Dyeing", 32 => "Tube Opening/Sliting", 31 => "Fabric Dyeing",  33 => "Heat Setting",  65 => "Stentering",
			 156 => "Compacting", 166 => "Sliting", 426=>"Slitting"
	  ); 
	  
	  $machine_name_arr = return_library_array("select id, machine_no from lib_machine_name", "id", "machine_no");
	  $dyeing_result = array(1 => 'Shade Matched', 2 => 'Re-Dyeing Needed', 3 => 'Fabric Damaged', 4 => 'Incomplete/Running', 5 => 'Under Trial', 6 => 'Re-Wash Needed',11 => 'Complete',12 => 'Next process Stentering',13 => 'Next process Dryer',14 => 'Next process Compacting',15 => 'Next process Brush',16 => 'Next process Peach',17 => 'Waiting for Fastness',18 => 'Waiting for Shrinkage',19 => 'Waiting for Decision',100 => 'Others');
		$other_process_sql = sql_select("SELECT c.job_no_mst as JOB_NO, f.batch_id as BATCH_ID, a.batch_no as BATCH_NO, a.extention_no as EXTENTION_NO, g.id as PROCESS_DTLS_ID, g.batch_qty AS BATCH_QNTY, g.production_qty as PRODUCTION_QTY, f.process_id as PROCESS_ID,f.load_unload_id as LOAD_UNLOAD_ID, f.production_date as PROCESS_END_DATE,f.process_end_date as PRODUCTION_DATE, f.end_hours as END_HOURS, f.end_minutes as END_MINUTES, f.machine_id as MACHINE_ID, f.process_start_date as PROCESS_START_DATE, f.start_minutes as START_MINUTES,f.start_hours as START_HOURS, f.result as RESULT, a.double_dyeing as DOUBLE_DYEING, f.id as FID from pro_batch_create_dtls b, wo_po_break_down c, pro_batch_create_mst a, pro_fab_subprocess f, pro_fab_subprocess_dtls g where f.batch_id=a.id and f.batch_id=b.mst_id and a.entry_form=0 and a.id=b.mst_id and f.id=g.mst_id and a.batch_against in(1,2) and b.po_id=c.id and b.status_active=1 and b.is_deleted=0 and a.status_active=1 and a.is_deleted=0 and f.status_active=1 and f.is_deleted=0 and g.entry_page in(30,31,32,33,34,48) and f.process_id in ('30','31','32','33','65','56','166','426') and f.result=11 and c.shiping_status !=3 $job_cond group by a.batch_no, f.batch_id, a.extention_no, f.process_id, g.id, g.batch_qty, g.production_qty, c.job_no_mst, f.load_unload_id, f.production_date,f.process_end_date, f.end_hours, f.end_minutes, f.machine_id, f.process_start_date, f.start_minutes, f.start_hours, f.result, a.double_dyeing, f.id order by f.batch_id, f.process_id,f.load_unload_id, f.id");

		if(empty($dyeing_sql) && empty($other_process_sql))
		{
			 return "";die;
		}
		$dye_dupli_chk = array(); $all_process_data_arr=array();
		foreach ($other_process_sql as $row) 
		{
			 if($dye_dupli_chk[$row->PROCESS_DTLS_ID] =="")
			 {
				  $dye_dupli_chk[$row->PROCESS_DTLS_ID]=$row->PROCESS_DTLS_ID;
				  $dye_string = $row->PROCESS_ID."*".$row->JOB_NO."*".$row->BATCH_ID."*".$row->BATCH_NO."*".$row->EXTENTION_NO."*".$row->DOUBLE_DYEING."*".$row->FID;

				  $all_process_data_arr[$dye_string]['unload'] =$row->PROCESS_END_DATE;
				  $all_process_data_arr[$dye_string]['load'] =$row->PRODUCTION_DATE;
				  $all_process_data_arr[$dye_string]['production'] +=$row->PRODUCTION_QTY;
				  $all_process_data_arr[$dye_string]['batch'] +=$row->BATCH_QNTY;
				  $all_process_data_arr[$dye_string]['machine_id'] =$row->MACHINE_ID;
				  $all_process_data_arr[$dye_string]['result'] =$row->RESULT;

				  $end_time=$row->END_HOURS .':'.$row->END_MINUTES;
				  $start_time=$row->START_HOURS.':'.$row->START_MINUTES;
				  
				  $new_date_time_start=($row->PROCESS_START_DATE.' '.$start_time.':'.'00');
				  $new_date_time_end=($row->PROCESS_END_DATE.' '.$end_time.':'.'00');
				  $total_time=datediff(n,$new_date_time_start,$new_date_time_end);
				  //$all_process_data_arr[$dye_string]['duration'] =floor($total_time/60).":".$total_time%60;
				  $all_process_data_arr[$dye_string]['duration'] =$total_time;

				  $all_process_data_arr[$dye_string]['load'] =$new_date_time_start;
				  $all_process_data_arr[$dye_string]['unload'] =$new_date_time_end;
			 }
		}
		$unload_sql = sql_select("SELECT f.batch_id, f.process_end_date as PROCESS_END_DATE, f.end_hours as END_HOURS, f.end_minutes as END_MINUTES
		from pro_batch_create_dtls b, wo_po_break_down c, pro_batch_create_mst a, pro_fab_subprocess f
		where f.batch_id=a.id and f.batch_id=b.mst_id and a.entry_form=0 and a.id=b.mst_id and a.batch_against in(1,2) and b.po_id=c.id and b.status_active=1 and b.is_deleted=0 and a.status_active=1 and a.is_deleted=0 and f.status_active=1 and f.is_deleted=0 and f.load_unload_id=1 and c.shiping_status !=3 $job_cond
		order by f.id");

		$load_hr=array();
		$load_min=array();
		$load_date=array();
		foreach ($unload_sql as $row) 
		{
			 $load_hr[$row->BATCH_ID]=$row->END_HOURS; 
			 $load_min[$row->BATCH_ID]=$row->END_MINUTES;
			 $load_date[$row->BATCH_ID]=$row->PROCESS_END_DATE;
		}
		
		foreach ($dyeing_sql as $row) 
		{
			 if($dye_dupli_chk[$row->PROCESS_DTLS_ID] =="")
			 {
				  $dye_dupli_chk[$row->PROCESS_DTLS_ID]=$row->PROCESS_DTLS_ID;
				  $dye_string = $row->PROCESS_ID."*".$row->JOB_NO."*".$row->BATCH_ID."*".$row->BATCH_NO."*".$row->EXTENTION_NO."*".$row->DOUBLE_DYEING."*".$row->FID;

				  $all_process_data_arr[$dye_string]['result'] =$row->RESULT;
				  $all_process_data_arr[$dye_string]['production'] +=$row->PRODUCTION_QTY;
				  $all_process_data_arr[$dye_string]['batch'] +=$row->BATCH_QNTY;
				  $all_process_data_arr[$dye_string]['machine_id'] =$row->MACHINE_ID;
				  
				  $load_t=$load_hr[$row->BATCH_ID].':'.$load_min[$row->BATCH_ID];
				  $unload_time=$row->END_HOURS.':'.$row->END_MINUTES;
				  $unloaded_date=$row->PROCESS_END_DATE;

				  $new_date_time_unload=($unloaded_date.' '.$unload_time.':'.'00');
				  $new_date_time_load=($load_date[$row->BATCH_ID].' '.$load_t.':'.'00');
				  $total_time=datediff(n,$new_date_time_load,$new_date_time_unload);
				  //$all_process_data_arr[$dye_string]['duration'] =floor($total_time/60).":".$total_time%60;
				  $all_process_data_arr[$dye_string]['duration'] =$total_time;

				  $all_process_data_arr[$dye_string]['load'] =$new_date_time_load;
				  $all_process_data_arr[$dye_string]['unload'] =$new_date_time_unload;
				  
			 }
		}
		unset($dyeing_sql); unset($unload_sql); unset($other_process_sql);
														  
		$all_data=array(); $batch_process_sl_chk=array();
		$i=1;
		foreach ($all_process_data_arr as $datakey => $row) 
		{
			$dataArr= explode("*",$datakey);

			$PROCESS_ID    = $dataArr[0];
			$JOB_NO        = $dataArr[1];
			$BATCH_ID      = $dataArr[2];
			$BATCH_NO      = $dataArr[3];
			$EXTENTION_NO  = $dataArr[4];
			$DOUBLE_DYEING = $dataArr[5];


			if($EXTENTION_NO =="")
			{
			$extentionNO = 0;
			}else{
			$extentionNO = $EXTENTION_NO;
			}
			if($row['production'] =="")
			{
				$BatchWeight = 0;
			}else{
				$BatchWeight = $row['production'];
			}

			/* if($dyeing_result[$row['duration']] =="")
			{
				$part = 0;
			}else{
				$part = $dyeing_result[$row['duration']];
			}

			$part = 0;
			if($DOUBLE_DYEING !=1)
			{
				$part = 1;
			}
			else if($DOUBLE_DYEING ==1 && $row['result']==4)
			{
				$part = 2;
			} */

			$batch_process_sl_chk[$BATCH_ID][$PROCESS_ID] +=1;

			if($JOB_NO && $BATCH_NO && $machine_name_arr[$row['machine_id']] && $row['duration'] && $conversion_cost_head_array[$PROCESS_ID] && $row['load'] && $row['unload'] && $dyeing_result[$row['result']])
			{
				$all_data[$i]['JobNo']=$JOB_NO;
				$all_data[$i]['BatchID']=$BATCH_ID;
				$all_data[$i]['BatchRefNo']=$BATCH_NO;
				$all_data[$i]['BatchExt']=$extentionNO;
				$all_data[$i]['BatchWeight']=$BatchWeight;
				$all_data[$i]['WeightUOM']="Kg";
				$all_data[$i]['MachineName']=$machine_name_arr[$row['machine_id']];
				$all_data[$i]['MachineID']=$row['machine_id'];
				$all_data[$i]['BatchTimeInMins']=$row['duration'];
				$all_data[$i]['Part']=$batch_process_sl_chk[$BATCH_ID][$PROCESS_ID];
				$all_data[$i]['DyeingSubProcess']=$conversion_cost_head_array[$PROCESS_ID];
				$all_data[$i]['LoadingDateTime']=$row['load'];
				$all_data[$i]['OffLoadingDateTime']=$row['unload'];
				$all_data[$i]['DyeingResult']=$dyeing_result[$row['result']];
				$i++;
			}
		}
		return $all_data;die;
   	}

	public function batch_create_data($job_id) {
			
		//$db_type=return_db_type();

		if($job_id)
		{
			$job_cond= " and d.job_no_mst like '%$job_id%'";  
		}

		$job_sql = sql_select("SELECT d.job_no_mst as JOB_NO, a.dyeing_machine as DYEING_MACHINE, a.id as BATCH_ID, a.batch_no as BATCH_NO, a.color_id as COLOR_ID, a.color_range_id as COLOR_RANGE_ID, a.double_dyeing as DOUBLE_DYEING, a.batch_against as BATCH_AGAINST, a.batch_type_id as BATCH_TYPE_ID, a.batch_sl_no as BATCH_SL_NO, a.extention_no as EXTENTION_NO, b.width_dia_type as WIDTH_DIA_TYPE, b.prod_id as PROD_ID, b.item_description as ITEM_DESCRIPTION, e.detarmination_id as DETARMINATION_ID, e.gsm as GSM, e.dia_width as DIA_WIDTH, b.body_part_id as BODY_PART_ID, g.yarn_count as YARN_COUNT, g.yarn_lot as YARN_LOT, g.stitch_length as STITCH_LENGTH, g.machine_dia as MACHINE_DIA, g.machine_gg as MACHINE_GG, sum(b.batch_qnty) as BATCH_QNTY, a.dyeing_pdo as DYEING_PDO, a.batch_sl_prefix_num as BATCH_SL_PREFIX_NUM, b.color_type as COLOR_TYPE, a.dyeing_machine as DYEING_MACHINE, a.batch_date as BATCH_DATE  from pro_batch_create_mst a, pro_batch_create_dtls b, pro_roll_details c, wo_po_break_down d, product_details_master e, pro_roll_details f, pro_grey_prod_entry_dtls g 
		where a.id=b.mst_id and b.id=c.dtls_id and b.prod_id=e.id and c.entry_form=64 and a.entry_form=0 and b.status_active=1 and b.is_deleted=0 $job_cond and b.po_id=d.id and d.shiping_status !=3 and b.roll_id=f.id and f.entry_form=2 and f.dtls_id=g.id group by d.job_no_mst, a.dyeing_machine, a.id, a.batch_no, a.color_id, a.color_range_id, a.double_dyeing, a.batch_against, a.batch_type_id, a.batch_sl_no, a.extention_no, b.width_dia_type, b.prod_id, b.item_description, e.detarmination_id, b.body_part_id, g.yarn_count, g.yarn_lot, g.stitch_length, g.machine_dia, g.machine_gg, a.dyeing_pdo, a.batch_sl_prefix_num, b.color_type, a.dyeing_machine, a.batch_date, e.gsm, e.dia_width");

		if(empty($job_sql))
		{
			return "";
			die;
		}
		$body_part = return_library_array("select id,body_part_full_name from  lib_body_part where status_active=1 and is_deleted=0 order by body_part_full_name", "id", "body_part_full_name");

		$lib_yarn_count_arr = return_library_array("select id, yarn_count from lib_yarn_count where status_active=1 and is_deleted=0", "id", "yarn_count");
		$composition = return_library_array("SELECT id,composition_name from  lib_composition_array where status_active=1 and is_deleted=0 order by composition_name", "id", "composition_name");
		$color_arr 		= return_library_array( "select id,color_name from lib_color", "id", "color_name"  );
		$buyer_arr 		= return_library_array( "select id,buyer_name from lib_buyer", "id", "buyer_name"  );
		$machine_name_arr = return_library_array("select id, machine_no from lib_machine_name", "id", "machine_no");
		$color_range = array(1 => "Dark Color", 2 => "Light Color", 3 => "Black Color", 4 => "White Color", 5 => "Average Color", 6 => "Melange", 7 => "Wash", 8 => "Scouring", 9 => "Extra Dark", 10 => "Medium Color", 11 => "Super Dark", 12 => "Royal color",13 => "Average-Double Dyeing",14 => "Dark - Double Dyeing",15 => "Black-Double Dyeing",16 => "Light-Double Dyeing",17 => "Medium-Double Dyeing",18 => "Extra Dark-Double Dyeing",19 => "Peroxide Wash",20 => "White / G.Mell / Scouring / H2o2",21 => "Green / Turquoise Color",22 => "Reactive Black",23 => "Light Royal",24 => "Dark Royal",25 => "Green / Turquoise Color- Double Dyeing",26 => "Reactive Black- Double Dyeing",27 => "Light Royal - Double Dyeing",28 => "Dark Royal - Double Dyeing",29 => "Light Melange",30 => "Dark Melange",31 => "Navy",32 => "Light Lemon");
		$recipe_array = return_library_array("select id, batch_id from pro_recipe_entry_mst where entry_form=59 and status_active=1 and is_deleted=0", "id", "batch_id");

		$color_type = array(1 => "Solid", 2 => "Stripe[Y/D]", 3 => "Cross Over [Y/D]", 4 => "Check [Y/D]", 5 => "AOP", 6 => "Solid [Y/D]", 7 => "AOP Stripe", 20 => "Florecent", 25 => "Reactive", 26 => "Melange", 27 => "Marl", 28 => "Burn Out", 29 => "Gmts Dyeing", 30 => "Cross Dyeing", 31 => "Over Dyed", 32 => "Space Y/D", 33 => "Faulty Y/D", 34 => "Solid Stripe", 35 => "One Part Dye", 36 => "Space Dyeing", 37 => "Dope Dye", 38 => "INDIGO", 39 => "Neon",40=>"RND Shade",41=>"Tie Dyed",42=>"RFD",43=>"Inject",44=>"Stripe [Y/D Melange]",45=>"AOP [Melange]",46=>"RFD Shade",47=>"Stripe [Y/D AOP]",48=>"Stripe [Y/D Burn-Out AOP]",49=>"AOP on RFD",50=>"Dip Dye",51=>"Solid[Discharge Able Dyeing]",52=>"Discharge Dyeing",53=>"Acid Wash",54=>"AOP [Pigment]",55=>"AOP [Reactive]",56=>"AOP [Discharge]",57=>"AOP [Disperse]",58=>"AOP [Acid Print]",59=>"AOP [Burn Out]",60=>"AOP [Digital Print]",61=>"Siro",62=>"Normal Wash",63=>"Solid [Y/D AOP]",64=>"Double Dyeing",65=>"Vertical Stripe",66=>"Solid[Dry hand feel]",67=>"AOP + Over Dyed",68=>"Solid [Snow Marl]",69=>"AOP Solid",70=>"Neps",71=>"Solid [Y/D Melange]",72=>"MESH",73=>"TRICOT",74=>"Vertical Stripe Y/D",75=>"Wash",76=>"Solid[Y/D AOP Melange]",77=>"AOP[Rubber Print]",78=>"AOP[Metallic Print]",79=>"Multi Neps.",80=>"Melange[Dry hand Feel]",81=>"PFD",82=>"Eng Stripe[Y/D]",83=>"Jacquard Y/D",84=>"Foil Stripe Print",85=>"Gmts Dyeing[Acid Wash]"); 

		$yes_no = array(1 => "Yes", 2 => "No");
		$batch_type_arr=array(1=>"Bulk Batch",2=>"Trail Batch");
		$batch_against = array(1 => "Buyer Order", 2 => "Re-Dyeing", 3 => "Sample", 4 => "External", 5 => "Without Booking", 6 => "Gmts Wash", 7 => "Gmts Dyeing", 8 => "Fabric Wash", 9 => "Without Job", 10 => "Gmts Printing", 11 => "Re-Wash", 12 => "Return-Re-Wash");
		$fabric_typee = array(1 => "Open Width", 2 => "Tubular", 3 => "Needle Open");


		$composition[0] = 0;
		$composition_arr = array();
		$constructtion_arr = array();
		$sql_deter = "SELECT a.ID, a.CONSTRUCTION, b.COPMPOSITION_ID, b.PERCENT from lib_yarn_count_determina_mst a, lib_yarn_count_determina_dtls b where a.id=b.mst_id";
		$deter_array = sql_select($sql_deter);
		foreach ($deter_array as $row) {
			$constructtion_arr[$row->ID] = $row->CONSTRUCTION;
			if (isset($composition_arr[$row->ID])) {
				$composition_arr[$row->ID] .= $composition[$row->COPMPOSITION_ID] . " " . $row->PERCENT . "% ";
			} else {
				if (isset($composition[$row->COPMPOSITION_ID])) {
					$composition_arr[$row->ID] = $composition[$row->COPMPOSITION_ID] . " " . $row->PERCENT . "% ";
				} else {
					$composition_arr[$row->ID] = "";
				}

			}
		}


		$all_batch_data=array(); 
		$i=1;
		foreach ($job_sql as $row) 
		{
			$count_arr = explode(",",$row->YARN_COUNT);
			$yarn_count_arr =array();
			foreach ($count_arr as $count ) {
				$yarn_count_arr[$lib_yarn_count_arr[$count]]= $lib_yarn_count_arr[$count];
			}

			$yarn_count = implode(",",$yarn_count_arr);



			if($row->EXTENTION_NO =="")
			{
				$extention_no= 0;
			}
			else
			{
				$extention_no= $row->EXTENTION_NO;
			}
			if($row->BATCH_SL_NO =="")
			{
				$batchSlNo= 0;
			}
			else
			{
				$batchSlNo= $row->BATCH_SL_NO;
			}
			if($batch_type_arr[$row->BATCH_TYPE_ID] =="")
			{
				$batchTypeId= 0;
			}
			else
			{
				$batchTypeId= $batch_type_arr[$row->BATCH_TYPE_ID];
			}

			if($row->DOUBLE_DYEING)
			{
				$IsTwoPartDye = $yes_no[$row->DOUBLE_DYEING];
			}
			else{
				$IsTwoPartDye = 0;
			}

			if($row->COLOR_RANGE_ID)
			{
				$ColorRange = $color_range[$row->COLOR_RANGE_ID];
			}
			else{
				$ColorRange = 0;
			}
			if($row->DYEING_PDO =="")
			{
				$DYEING_PDO= 0;
			}
			else
			{
				$DYEING_PDO= $row->DYEING_PDO;
			}
			if($row->BATCH_SL_PREFIX_NUM =="")
			{
				$BATCH_SL_PREFIX_NUM= 0;
			}
			else
			{
				$BATCH_SL_PREFIX_NUM= $row->BATCH_SL_PREFIX_NUM;
			}
			if($yes_no[$row->DOUBLE_DYEING] =="")
			{
				$IsTwoPartDye= 0;
			}
			else
			{
				$IsTwoPartDye= $yes_no[$row->DOUBLE_DYEING];
			}
			
			if ($color_type[$row->COLOR_TYPE] =="")
			{
				$COLOR_TYPE_NAME= 0;
			}
			else
			{
				$COLOR_TYPE_NAME= $color_type[$row->COLOR_TYPE];
			}
			
			$DYEING_MACHINE= ($row->DYEING_MACHINE=="")?0:$row->DYEING_MACHINE;
			
			if($row->JOB_NO && $row->DYEING_MACHINE && $row->BATCH_NO  && $row->COLOR_ID  && $row->BATCH_AGAINST && $row->BODY_PART_ID && $row->PROD_ID && $row->DETARMINATION_ID && $row->STITCH_LENGTH && $row->MACHINE_DIA && $row->WIDTH_DIA_TYPE && $row->YARN_LOT && $yarn_count)
			{

				$all_batch_data[$i]['JobNo']=$row->JOB_NO; //." && ". $row->DYEING_MACHINE ." && ". $row->BATCH_NO  ." && ". $row->COLOR_ID ." && ". $row->COLOR_RANGE_ID ." && ". $row->BATCH_AGAINST ." && ". $row->BODY_PART_ID ." && ". $row->PROD_ID ." && ". $row->DETARMINATION_ID ." && ". $row->STITCH_LENGTH ." && ". $row->MACHINE_DIA ." && ". $row->WIDTH_DIA_TYPE ." && ". $row->YARN_LOT ." && ". $yarn_count;
				$all_batch_data[$i]['DyeingProdRefNo']=$DYEING_PDO;
				$all_batch_data[$i]['MachineNumber']=$machine_name_arr[$row->DYEING_MACHINE];
				$all_batch_data[$i]['BatchCreationDate']=$row->BATCH_DATE;
				$all_batch_data[$i]['BatchId']=$row->BATCH_ID;
				$all_batch_data[$i]['BatchNo']=$row->BATCH_NO;
				$all_batch_data[$i]['BatchColor']=$color_arr[$row->COLOR_ID];
				$all_batch_data[$i]['FinishFabricColor']=$color_arr[$row->COLOR_ID];
				$all_batch_data[$i]['ColorRange']=$ColorRange;
				$all_batch_data[$i]['RecipeNumber']=$recipe_array[$row->BATCH_ID];
				$all_batch_data[$i]['IsTwoPartDye']=$IsTwoPartDye;
				$all_batch_data[$i]['FabricType']=$COLOR_TYPE_NAME;
				$all_batch_data[$i]['MachineId']=$DYEING_MACHINE;
				$all_batch_data[$i]['BatchAgainst']=$batch_against[$row->BATCH_AGAINST];
				$all_batch_data[$i]['BatchExt']=$extention_no;
				$all_batch_data[$i]['BatchSL']=$BATCH_SL_PREFIX_NUM;
				$all_batch_data[$i]['BatchQty']=$row->BATCH_QNTY;
				$all_batch_data[$i]['WeightUOM']="Kg";
				$all_batch_data[$i]['BatchType']=$batchTypeId;
				$all_batch_data[$i]['ItemType']=$body_part[$row->BODY_PART_ID];
				$all_batch_data[$i]['ItemCode']=$row->PROD_ID;
				$all_batch_data[$i]['FinishedFabGSM']=$row->GSM;
				$all_batch_data[$i]['GreyFabricDia']=$row->DIA_WIDTH;
				$all_batch_data[$i]['ItemDescription']=$row->ITEM_DESCRIPTION;
				$all_batch_data[$i]['Construction']=$constructtion_arr[$row->DETARMINATION_ID];
				$all_batch_data[$i]['Composition']=$composition_arr[$row->DETARMINATION_ID];
				$all_batch_data[$i]['StitchLength']=$row->STITCH_LENGTH;
				$all_batch_data[$i]['MachineDia']=$row->MACHINE_DIA;
				$all_batch_data[$i]['MachineGuage']=$row->MACHINE_GG;
				$all_batch_data[$i]['DiaType']=$fabric_typee[$row->WIDTH_DIA_TYPE];
				$all_batch_data[$i]['YarnLot']=$row->YARN_LOT;
				$all_batch_data[$i]['YarnCount']=$yarn_count;
				$all_batch_data[$i]['BatchQtyUOM']="Kg";
				$all_batch_data[$i]['BatchQty']=$row->BATCH_QNTY;
				$all_batch_data[$i]['TrimsItemUOM']="";
				$all_batch_data[$i]['TrimsItemQty']="";
			}
			
			$i++;
		}
		return $all_batch_data;
		die;

	}


	public function bundle_wise_sewing_barcode_data( $barcode_no,$operation_id,$operator_id )
	{	//print_r(2);die;
		$data_arr = array(); 

		$size_arr = return_library_array("select id, size_name from lib_size", 'id', 'size_name');
		$color_arr = return_library_array("select id, color_name from lib_color", "id", "color_name");
		$country_arr = return_library_array("select id, country_name from lib_country", 'id', 'country_name');
		$buyer_arr = return_library_array("select id, short_name from lib_buyer", 'id', 'short_name');
		$garments_item = return_library_array("select id,item_name from  lib_garment_item where status_active=1 and is_deleted=0 order by item_name", "id", "item_name");
		
	
		$year_field = "";
		if ($this->db->dbdriver == 'mysqli') {
			$year_field = "YEAR(f.insert_date)";
		} else {
			$year_field = "to_char(f.insert_date,'YYYY')";
		}

		$barcode_no = trim($barcode_no);
		$barcode_no_arr = sql_select("SELECT  COLOR_TYPE_ID,BUNDLE_NO from PPL_CUT_LAY_BUNDLE  where barcode_no='" . trim($barcode_no) . "'");

		$input_sql = "SELECT BARCODE_NO,BUNDLE_NO from PRO_GMTS_OPERATION_TRACKING where status_active=1 AND OPERATOR_ID =$operator_id and LIB_OPERATION_ID='" . trim($operation_id) . "' and barcode_no='" . trim($barcode_no) . "'";
		$input_exist_data = sql_select($input_sql);
		//print_r($input_sql);die;
		if (count($input_exist_data) > 0) 
		{
			return array(
				'message_bng' => 'বান্ডিল নং: ' . $input_exist_data[0]->BUNDLE_NO . ' ইতিমধ্যে স্ক্যান হয়েছে, দয়া করে অন্য একটি চেষ্টা করুন।',
				'message_eng' => 'Bundle No: ' . $input_exist_data[0]->BUNDLE_NO . ' is already scanned, please try another one',
				'bundle_no' => '',
				'barcode_no' => 0,
				'year' => 0,
				'color_size_id' => 0,
				'order_id' => 0,
				'item_id' => 0,
				'country_id' => 0,
				'size_id' => 0,
				'color_id' => 0,
				'cut_no' => '',
				'job_no' => '',
				'job_id' => 0,
				'buyer_name' => '',
				'buyer_id' => 0,
				'order_no' => '',
				'item' => '',
				'country' => '',
				'color' => '',
				'size' => 0,
				'qty' => 0
			);
		}
		

		$col_size_seq = "SELECT color_size_break_down_id as IDS,CUT_NO from PRO_GARMENTS_PRODUCTION_DTLS where status_active=1 and is_deleted=0 and barcode_no='$barcode_no' group by color_size_break_down_id,cut_no";
		$col_size_seq_arr = array();
		$cut_arr = array();
		foreach (sql_select($col_size_seq) as $v) {
			$col_size_seq_arr[$v->IDS] = $v->IDS;
			$cut_arr[$v->CUT_NO] = $v->CUT_NO;
		}

		$ids = implode(",", $col_size_seq_arr);
		if (count($col_size_seq_arr) < 1) {$ids = 0;}
		//if(!$ids)$ids=0;

		$cut_nos = "'" . implode("','", $cut_arr) . "'";
		if (count($cut_arr) < 1) {$cut_nos = "'0'";}
		
		$source_cond = $this->gmt_production_validation_script(4, 1,'', $cut_nos);	
		//print_r($source_cond);die;	
		$sqls = "SELECT  c.COLOR_TYPE_ID,  0 as IS_RESCAN,max(c.id) as prdid, d.id as COLORSIZEID, e.id as PO_ID,f.company_name as LC_COMPANY, f.JOB_NO, MAX($year_field) as YEAR, f.BUYER_NAME, d.ITEM_NUMBER_ID, d.COUNTRY_ID, d.SIZE_NUMBER_ID, d.COLOR_NUMBER_ID, c.cut_no,c.BUNDLE_NO,  (c.production_qnty) as PRODUCTION_QNTY, e.PO_NUMBER,c.BARCODE_NO,f.ID AS JOB_ID from PRO_GARMENTS_PRODUCTION_MST a,PRO_GARMENTS_PRODUCTION_DTLS c, wo_po_color_size_breakdown d, wo_po_break_down e, wo_po_details_master f where a.id=c.mst_id and c.color_size_break_down_id=d.id and d.po_break_down_id=e.id and e.job_id=f.id $source_cond and c.status_active=1 and c.is_deleted=0 and a.status_active=1 and a.is_deleted=0 and d.status_active in(1,2,3) and d.is_deleted=0 and e.status_active in(1,2,3) and e.is_deleted=0 and f.status_active=1 and f.is_deleted=0 and c.barcode_no='$barcode_no'    group by c.COLOR_TYPE_ID, d.id, e.id,f.company_name, f.job_no, f.buyer_name, d.item_number_id, d.country_id, d.size_number_id, d.color_number_id,c.cut_no, c.bundle_no,c.barcode_no, e.po_number,c.production_qnty,f.id";
		//print_r($sqls);die;
		$message_bng = 'বান্ডিল নং: ' . $barcode_no_arr[0]->BUNDLE_NO . ' এখনও ইনপুটের জন্য প্রস্তুত নয়।';
		$message_eng = 'Bundle No: ' . $barcode_no_arr[0]->BUNDLE_NO . ' is not yet ready for input.';

		$result = sql_select($sqls);
		if (count($result) == 0) {
			return array(
				'message_bng' => $message_bng,
				'message_eng' => $message_eng,
				'bundle_no' => '',
				'barcode_no' => 0,
				'year' => 0,
				'color_size_id' => 0,
				'order_id' => 0,
				'item_id' => 0,
				'country_id' => 0,
				'size_id' => 0,
				'color_id' => 0,
				'cut_no' => '',
				'job_no' => '',
				'job_id' => 0,
				'buyer_name' => '',
				'buyer_id' => 0,
				'order_no' => '',
				'item' => '',
				'country' => '',
				'color' => '',
				'size' => 0,
				'qty' => 0
			);
		}
		
		$query_is_scanned = "SELECT c.production_type,c.BARCODE_NO  FROM PRO_GARMENTS_PRODUCTION_DTLS c  WHERE c.production_type in (4,5) AND c.status_active = 1 AND c.is_deleted = 0  AND c.barcode_no = '$barcode_no'";

		$message_bng = 'বান্ডিল নং: ' . $barcode_no_arr[0]->BUNDLE_NO . ' এখনও ইনপুটের জন্য প্রস্তুত নয়।';
		$message_eng = 'Bundle No: ' . $barcode_no_arr[0]->BUNDLE_NO . ' is not yet ready for input.';

		$table_is_scanned = sql_select($query_is_scanned);
		
		if (count($table_is_scanned) == 0) {
			return array(
				'message_bng' => $message_bng,
				'message_eng' => $message_eng,
				'bundle_no' => '',
				'barcode_no' => 0,
				'year' => 0,
				'color_size_id' => 0,
				'order_id' => 0,
				'item_id' => 0,
				'country_id' => 0,
				'size_id' => 0,
				'color_id' => 0,
				'cut_no' => '',
				'job_no' => '',
				'job_id' => 0,
				'buyer_name' => '',
				'buyer_id' => 0,
				'order_no' => '',
				'item' => '',
				'country' => '',
				'color' => '',
				'size' => 0,
				'qty' => 0
			);
		}

		foreach ($result as $v) {

			$data_arr["message_bng"] = '';
			$data_arr["message_eng"] = '';
			$data_arr["bundle_no"] = $v->BUNDLE_NO;
			$data_arr["barcode_no"] = $v->BARCODE_NO;
			$data_arr["year"] = $v->YEAR;
			$data_arr["color_size_id"] = $v->COLORSIZEID;
			$data_arr["order_id"] = $v->PO_ID;
			$data_arr["item_id"] = $v->ITEM_NUMBER_ID;
			$data_arr["country_id"] = $v->COUNTRY_ID;
			$data_arr["size_id"] = $v->SIZE_NUMBER_ID;
			$data_arr["color_id"] = $v->COLOR_NUMBER_ID;
			$data_arr["cut_no"] = $v->CUT_NO;
			$data_arr["job_no"] = $v->JOB_NO;
			$data_arr["job_id"] = $v->JOB_ID;

			if (isset($buyer_arr[$v->BUYER_NAME])) {
				$data_arr["buyer_name"] = $buyer_arr[$v->BUYER_NAME];
			} else {
				$data_arr["buyer_name"] = "";
			}
			$data_arr["buyer_id"] = $v->BUYER_NAME;
			$data_arr["order_no"] = "$v->PO_NUMBER "; //need always string

			if (isset($garments_item[$v->ITEM_NUMBER_ID])) {
				$data_arr["item"] = $garments_item[$v->ITEM_NUMBER_ID];
			} else {
				$data_arr["item"] = "";
			}

			if (isset($country_arr[$v->COUNTRY_ID])) {
				$data_arr["country"] = $country_arr[$v->COUNTRY_ID];
			} else {
				$data_arr["country"] = "";
			}

			if (isset($color_arr[$v->COLOR_NUMBER_ID])) {
				$data_arr["color"] = $color_arr[$v->COLOR_NUMBER_ID];
			} else {
				$data_arr["color"] = "";
			}

			if (isset($size_arr[$v->SIZE_NUMBER_ID])) {
				$data_arr["size"] = $size_arr[$v->SIZE_NUMBER_ID];
			} else {
				$data_arr["size"] = 0;
			}

			$data_arr["qty"] = $v->PRODUCTION_QNTY;
		}
		return $data_arr;
	}

	// public function bundle_wise_sewing_barcode_data( $barcode_no,$operation_id )
	// {
	// 	$data_arr = array();

	// 	$size_arr = return_library_array("select id, size_name from lib_size", 'id', 'size_name');
	// 	$color_arr = return_library_array("select id, color_name from lib_color", "id", "color_name");
	// 	$country_arr = return_library_array("select id, country_name from lib_country", 'id', 'country_name');
	// 	$buyer_arr = return_library_array("select id, short_name from lib_buyer", 'id', 'short_name');
	// 	$garments_item = return_library_array("select id,item_name from  lib_garment_item where status_active=1 and is_deleted=0 order by item_name", "id", "item_name");
		
	
	// 	$year_field = "";
	// 	if ($this->db->dbdriver == 'mysqli') {
	// 		$year_field = "YEAR(f.insert_date)";
	// 	} else {
	// 		$year_field = "to_char(f.insert_date,'YYYY')";
	// 	}

	// 	$barcode_no = trim($barcode_no);
	// 	$barcode_no_arr = sql_select("SELECT  COLOR_TYPE_ID,BUNDLE_NO from PPL_CUT_LAY_BUNDLE  where barcode_no='" . trim($barcode_no) . "'");

	// 	$input_sql = "SELECT BARCODE_NO,BUNDLE_NO from PRO_GMTS_OPERATION_TRACKING where status_active=1 and LIB_OPERATION_ID='" . trim($operation_id) . "' and barcode_no='" . trim($barcode_no) . "'";
	// 	$input_exist_data = sql_select($input_sql);
	// 	//print_r($input_sql);die;
	// 	if (count($input_exist_data) > 0) 
	// 	{
	// 		return array(
	// 			'message_bng' => 'বান্ডিল নং: ' . $input_exist_data[0]->BUNDLE_NO . ' ইতিমধ্যে স্ক্যান হয়েছে, দয়া করে অন্য একটি চেষ্টা করুন।',
	// 			'message_eng' => 'Bundle No: ' . $input_exist_data[0]->BUNDLE_NO . ' is already scanned, please try another one',
	// 			'bundle_no' => '',
	// 			'barcode_no' => 0,
	// 			'year' => 0,
	// 			'color_size_id' => 0,
	// 			'order_id' => 0,
	// 			'item_id' => 0,
	// 			'country_id' => 0,
	// 			'size_id' => 0,
	// 			'color_id' => 0,
	// 			'cut_no' => '',
	// 			'job_no' => '',
	// 			'job_id' => 0,
	// 			'buyer_name' => '',
	// 			'buyer_id' => 0,
	// 			'order_no' => '',
	// 			'item' => '',
	// 			'country' => '',
	// 			'color' => '',
	// 			'size' => 0,
	// 			'qty' => 0
	// 		);
	// 	}
		

	// 	$col_size_seq = "SELECT color_size_break_down_id as IDS,CUT_NO from PRO_GARMENTS_PRODUCTION_DTLS where status_active=1 and is_deleted=0 and barcode_no='$barcode_no' group by color_size_break_down_id,cut_no";
	// 	$col_size_seq_arr = array();
	// 	$cut_arr = array();
	// 	foreach (sql_select($col_size_seq) as $v) {
	// 		$col_size_seq_arr[$v->IDS] = $v->IDS;
	// 		$cut_arr[$v->CUT_NO] = $v->CUT_NO;
	// 	}

	// 	$ids = implode(",", $col_size_seq_arr);
	// 	if (count($col_size_seq_arr) < 1) {$ids = 0;}
	// 	//if(!$ids)$ids=0;

	// 	$cut_nos = "'" . implode("','", $cut_arr) . "'";
	// 	if (count($cut_arr) < 1) {$cut_nos = "'0'";}
		
	// 	$source_cond = $this->gmt_production_validation_script(4, 1,'', $cut_nos);		
	// 	$sqls = "SELECT  c.COLOR_TYPE_ID,  0 as IS_RESCAN,max(c.id) as prdid, d.id as COLORSIZEID, e.id as PO_ID,f.company_name as LC_COMPANY, f.JOB_NO, MAX($year_field) as YEAR, f.BUYER_NAME, d.ITEM_NUMBER_ID, d.COUNTRY_ID, d.SIZE_NUMBER_ID, d.COLOR_NUMBER_ID, c.cut_no,c.BUNDLE_NO,  (c.production_qnty) as PRODUCTION_QNTY, e.PO_NUMBER,c.BARCODE_NO,f.ID AS JOB_ID from PRO_GARMENTS_PRODUCTION_MST a,PRO_GARMENTS_PRODUCTION_DTLS c, wo_po_color_size_breakdown d, wo_po_break_down e, wo_po_details_master f where a.id=c.mst_id and c.color_size_break_down_id=d.id and d.po_break_down_id=e.id and e.job_id=f.id $source_cond and c.status_active=1 and c.is_deleted=0 and a.status_active=1 and a.is_deleted=0 and d.status_active in(1,2,3) and d.is_deleted=0 and e.status_active in(1,2,3) and e.is_deleted=0 and f.status_active=1 and f.is_deleted=0 and c.barcode_no='$barcode_no'    group by c.COLOR_TYPE_ID, d.id, e.id,f.company_name, f.job_no, f.buyer_name, d.item_number_id, d.country_id, d.size_number_id, d.color_number_id,c.cut_no, c.bundle_no,c.barcode_no, e.po_number,c.production_qnty,f.id";
		
	// 	$message_bng = 'বান্ডিল নং: ' . $barcode_no_arr[0]->BUNDLE_NO . ' এখনও ইনপুটের জন্য প্রস্তুত নয়।';
	// 	$message_eng = 'Bundle No: ' . $barcode_no_arr[0]->BUNDLE_NO . ' is not yet ready for input.';

	// 	$result = sql_select($sqls);
	// 	if (count($result) == 0) {
	// 		return array(
	// 			'message_bng' => $message_bng,
	// 			'message_eng' => $message_eng,
	// 			'bundle_no' => '',
	// 			'barcode_no' => 0,
	// 			'year' => 0,
	// 			'color_size_id' => 0,
	// 			'order_id' => 0,
	// 			'item_id' => 0,
	// 			'country_id' => 0,
	// 			'size_id' => 0,
	// 			'color_id' => 0,
	// 			'cut_no' => '',
	// 			'job_no' => '',
	// 			'job_id' => 0,
	// 			'buyer_name' => '',
	// 			'buyer_id' => 0,
	// 			'order_no' => '',
	// 			'item' => '',
	// 			'country' => '',
	// 			'color' => '',
	// 			'size' => 0,
	// 			'qty' => 0
	// 		);
	// 	}

	// 	foreach ($result as $v) {

	// 		$data_arr["message_bng"] = '';
	// 		$data_arr["message_eng"] = '';
	// 		$data_arr["bundle_no"] = $v->BUNDLE_NO;
	// 		$data_arr["barcode_no"] = $v->BARCODE_NO;
	// 		$data_arr["year"] = $v->YEAR;
	// 		$data_arr["color_size_id"] = $v->COLORSIZEID;
	// 		$data_arr["order_id"] = $v->PO_ID;
	// 		$data_arr["item_id"] = $v->ITEM_NUMBER_ID;
	// 		$data_arr["country_id"] = $v->COUNTRY_ID;
	// 		$data_arr["size_id"] = $v->SIZE_NUMBER_ID;
	// 		$data_arr["color_id"] = $v->COLOR_NUMBER_ID;
	// 		$data_arr["cut_no"] = $v->CUT_NO;
	// 		$data_arr["job_no"] = $v->JOB_NO;
	// 		$data_arr["job_id"] = $v->JOB_ID;

	// 		if (isset($buyer_arr[$v->BUYER_NAME])) {
	// 			$data_arr["buyer_name"] = $buyer_arr[$v->BUYER_NAME];
	// 		} else {
	// 			$data_arr["buyer_name"] = "";
	// 		}
	// 		$data_arr["buyer_id"] = $v->BUYER_NAME;
	// 		$data_arr["order_no"] = "$v->PO_NUMBER "; //need always string

	// 		if (isset($garments_item[$v->ITEM_NUMBER_ID])) {
	// 			$data_arr["item"] = $garments_item[$v->ITEM_NUMBER_ID];
	// 		} else {
	// 			$data_arr["item"] = "";
	// 		}

	// 		if (isset($country_arr[$v->COUNTRY_ID])) {
	// 			$data_arr["country"] = $country_arr[$v->COUNTRY_ID];
	// 		} else {
	// 			$data_arr["country"] = "";
	// 		}

	// 		if (isset($color_arr[$v->COLOR_NUMBER_ID])) {
	// 			$data_arr["color"] = $color_arr[$v->COLOR_NUMBER_ID];
	// 		} else {
	// 			$data_arr["color"] = "";
	// 		}

	// 		if (isset($size_arr[$v->SIZE_NUMBER_ID])) {
	// 			$data_arr["size"] = $size_arr[$v->SIZE_NUMBER_ID];
	// 		} else {
	// 			$data_arr["size"] = 0;
	// 		}

	// 		$data_arr["qty"] = $v->PRODUCTION_QNTY;
	// 	}
	// 	return $data_arr;
	// }
	public function bundle_wise_sewing_barcode($input_data)
	{
		$input_data = json_decode($input_data);
		//print_r($input_data->barcode_no);die;
		$this->db->trans_start();
		$pc_date_time = date("d-M-Y h:i:s A",time());
		$user_id 	  = 1;
		//$mst_id = return_next_id_by_sequence(  "PRO_GMTS_OPERATION_TRACKING_SEQ", "PRO_GMTS_OPERATION_TRACKING" );
		$mst_id = return_next_id("id", "PRO_GMTS_OPERATION_TRACKING", "", "", $db_type);
		$operation_tracking = array(
			'ID'        => $mst_id,
			'COMPANY_ID' => $input_data->company_id,
			'CUT_NO' => $input_data->cut_no,
			'ITEM_NUMBER_ID' => $input_data->item_id,
			'COUNTRY_ID' => $input_data->country_id,
			'BUNDLE_NO' => $input_data->bundle_no,
			'BARCODE_NO' => $input_data->barcode_no,
			'BUNDLE_QTY' => $input_data->qty,
			'COLOR_SIZE_BREAK_DOWN_ID' => $input_data->color_size_id,
			'COLOR_ID' => $input_data->color_id,
			'SIZE_ID' => $input_data->size_id,
			'PO_BREAK_DOWN_ID' => $input_data->order_id,
			'JOB_ID' => $input_data->job_id,
			'JOB_NO' => $input_data->job_no,
			'BUYER_ID' => $input_data->buyer_id,
			'OPERATOR_ID' => $input_data->operator_id,
			'LIB_OPERATION_ID' => $input_data->lib_operation_id,
			'OPERATION_START' => date("d-M-Y h:i:s A", strtotime($input_data->operation_start)),
			'OPERATION_END' => date("d-M-Y h:i:s A", strtotime($input_data->operation_end)),
			'LINE_ID' => $input_data->line_id,
			'WS_ID' => $input_data->ws_id,
			'STATUS_ACTIVE' => 1,
			'IS_DELETED' => 0,
			'INSERTED_BY' => $user_id,
			'INSERT_DATE' => $pc_date_time
		);
		//print_r($operation_tracking);die;
		$flag = true;
		if(!empty($operation_tracking))
		{
			$flag = $this->insertData($operation_tracking, 'PRO_GMTS_OPERATION_TRACKING');
		}

		if ($this->db->trans_status() == TRUE)
		{
			if ($flag==1)
			{
				$this->db->trans_commit();
				$this->db->trans_complete();
				 return array("status" => "Success", "msg"=> "Data saved successfully.");
			}
			else
			{
				$this->db->trans_rollback();
				$this->db->trans_complete();
				return $resultset["save_msg"] = "Failed";
			}

		}
		else
		{
			$resultset["save_msg"] = "Failed";
			$this->db->trans_complete();
		}
	}



	public function get_roll_info_for_issue($barcode_no)
	{
		$check_barcode = $this->check_if_barcode_already_issued($barcode_no);
		if($check_barcode != "")
		{
			return array(
				"status" => "Failed",
				"msg" 	 => "Barcode already Issued. Issue No(s) = $check_barcode"
			);
			die;
		}

		$knitting_source = array(1 => "In-house", 2 => "In-bound Subcontract", 3 => "Out-bound Subcontract");
		$receive_basis = array(0 => "Independent", 1 => "Fabric Booking", 2 => "Knitting Plan", 4 => 'Sales Order');
		$unit_of_measurement = array(1 => "Pcs", 2 => "Dzn", 3 => "Grs", 4 => "GG", 10 => "Mg", 11 => "Gm", 12 => "Kg", 13 => "Quintal", 14 => "Ton", 15 => "Lbs", 20 => "Km", 21 => "Hm", 22 => "Dm", 23 => "Mtr", 24 => "Dcm", 25 => "CM", 26 => "MM", 27 => "Yds", 28 => "Feet", 29 => "Inch", 30 => "CFT", 31 => "SFT", 40 => "Ltr", 41 => "ML", 50 => "Roll", 51 => "Coil", 52 => "Cone", 53 => "Bag", 54 => "Box", 55 => "Drum", 56 => "Bottle", 57 => "Pack", 58 => "Set", 59 => "Can", 60 => "Each", 61 => "Gallon", 62 => "Lachi", 63 => "Pair", 64 => "Lot", 65 => "Packet", 66 => "Pot", 67 => "Book", 68 => "Culind", 69 => "Rim", 70 => "Cft", 71 => "Syp", 72 => "K.V", 73 => "CU-M3", 74 => "Bundle", 75 => "Strip", 76 => "SQM", 77 => "Ounce", 78 => "Cylinder", 79 => "Course", 80 => "Sheet", 81 => "RFT", 82 => "Square Inch", 83 => "Carton", 84 => "Thane", 85 => "Gross Yds", 86 => "Jar", 87 => "Reel", 88 => "CBM",89=>"Tub",90=>"KVA",91=>"KW",92=>"Pallet",93=>"Case");

		/* $variable_inventory=return_field_value("allocation","variable_settings_inventory","company_name='$data' and variable_list=40 and status_active=1 and is_deleted=0");
		echo $variable_inventory; */

		$variable_inventory_arr = return_library_array("SELECT allocation, company_name from variable_settings_inventory where variable_list=40 and status_active=1 and is_deleted=0", "company_name", "allocation");

		$buyer_sql = $this->getAllFieldsByAttribute("LIB_BUYER", "ID, SHORT_NAME", array("STATUS_ACTIVE" => 1));
		foreach ($buyer_sql as $row) {
			$buyer_arr[$row->ID] = $row->SHORT_NAME;
		}

		$b_part_sql = $this->getAllFieldsByAttribute("LIB_BODY_PART", "ID, BODY_PART_FULL_NAME", array("STATUS_ACTIVE" => 1));
		foreach ($b_part_sql as $row) {
			$buyer_part_arr[$row->ID] = $row->BODY_PART_FULL_NAME;
		}

		$brand_sql = $this->getAllFieldsByAttribute("LIB_BRAND", "ID, BRAND_NAME", array("STATUS_ACTIVE" => 1));
		foreach ($brand_sql as $row) {
			$brand_name_arr[$row->ID] = $row->BRAND_NAME;
		}

		$machine_sql = $this->getAllFieldsByAttribute("LIB_MACHINE_NAME", "ID, MACHINE_NO", array("STATUS_ACTIVE" => 1));
		foreach ($machine_sql as $row) {
			$machine_name_arr[$row->ID] = $row->MACHINE_NO;
		}

		$composition_arr = $constructtion_arr = array();
		$composition_sql = "select id,composition_name from  lib_composition_array where status_active=1 and is_deleted=0 order by composition_name";
		$composition_data = $this->db->query($composition_sql)->result();
		foreach ($composition_data as $row) {
			$compositions_arr[$row->ID] = $row->COMPOSITION_NAME;
		}
		$fabrication_sql = "select a.id, a.construction, b.copmposition_id, b.percent from lib_yarn_count_determina_mst a, lib_yarn_count_determina_dtls b where a.id=b.mst_id";
		$fabrication_data = $this->db->query($fabrication_sql)->result();
		foreach ($fabrication_data as $row) {
			$constructtion_arr[$row->ID] = $row->CONSTRUCTION;
			$composition_arr[$row->ID] .= $compositions_arr[$row->COPMPOSITION_ID] . " " . $row->PERCENT . "% ";
		}

		$color_range = array(1 => "Dark Color", 2 => "Light Color", 3 => "Black Color", 4 => "White Color", 5 => "Average Color", 6 => "Melange", 7 => "Wash", 8 => "Scouring", 9 => "Extra Dark", 10 => "Medium Color", 11 => "Super Dark");

		$color_sql = "select id, color_name from lib_color where status_active=1 and is_deleted=0";
		$color_data = $this->db->query($color_sql)->result();
		foreach ($color_data as $row) {
			$color_arr[$row->ID] = $row->COLOR_NAME;
		}

		$company_sql = "select id,company_name from lib_company";
		$company_data = $this->db->query($company_sql)->result();
		foreach ($company_data as $row) {
			$company_arr[$row->ID] = $row->COMPANY_NAME;
		}

		$supplier_sql = "select id, supplier_name from lib_supplier";
		$supplier_data = $this->db->query($supplier_sql)->result();
		foreach ($supplier_data as $row) {
			$supplier_arr[$row->ID] = $row->SUPPLIER_NAME;
		}

		$trans_or_issue_returned_data =array(); $order_ids_arr= array();
		$trans_store_sql=sql_select("select a.company_id as COMPANY_ID,a.to_company as TO_COMPANY, a.transfer_criteria as TRANSFER_CRITERIA, to_prod_id as PROD_ID, c.barcode_no as BARCODE_NO, c.entry_form as ENTRY_FORM, b.to_store as TO_STORE, b.to_floor_id as TO_FLOOR_ID, b.to_room as TO_ROOM, b.to_rack as TO_RACK, b.to_shelf as TO_SHELF, b.to_bin_box as TO_BIN_BOX, b.to_body_part as BODY_PART_ID, c.booking_without_order as BOOKING_WITHOUT_ORDER, c.po_breakdown_id as PO_BREAKDOWN_ID, c.is_sales as IS_SALES, b.yarn_rate as YARN_RATE, b.kniting_charge as KNITING_CHARGE, c.rate as RATE
		from  inv_item_transfer_mst a, inv_item_transfer_dtls b, pro_roll_details c
		where a.id = b.mst_id and a.entry_form in (183,180,110,83,82) and b.id=c.dtls_id and c.entry_form in(183,180,110,83,82)
		and c.re_transfer=0 and c.status_active=1 and c.is_deleted=0 and c.is_sales <> 1 and c.barcode_no in($barcode_no)
		order by c.barcode_no desc");
		$store_ids="";
		foreach($trans_store_sql as $row)
		{
			$trans_or_issue_returned_data[$row->BARCODE_NO]["to_store"]=$row->TO_STORE;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["barcode_no"]=$row->BARCODE_NO;

			$trans_or_issue_returned_data[$row->BARCODE_NO]["to_floor_id"]=$row->TO_FLOOR_ID;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["to_room"]=$row->TO_ROOM;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["to_rack"]=$row->TO_RACK;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["to_self"]=$row->TO_SHELF;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["to_bin_box"]=$row->TO_BIN_BOX;

			$trans_or_issue_returned_data[$row->BARCODE_NO]["is_sales"]=$row->IS_SALES;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["po_breakdown_id"]=$row->PO_BREAKDOWN_ID;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["booking_without_order"]=$row->BOOKING_WITHOUT_ORDER;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["to_prod_id"]=$row->PROD_ID;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["to_company"] = $row->TO_COMPANY;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["body_part_id"] = $row->BODY_PART_ID;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["yarn_rate"] = $row->YARN_RATE;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["kniting_charge"] = $row->KNITING_CHARGE;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["rate"] = $row->RATE;
			$store_ids .=$row->TO_STORE.",";

			if($row->BOOKING_WITHOUT_ORDER==0){
				$order_ids_arr[$row->PO_BREAKDOWN_ID] = $row->PO_BREAKDOWN_ID;
			}
			else{
				$samp_book_ids_arr[$row->PO_BREAKDOWN_ID]= $row->PO_BREAKDOWN_ID;
			}
		}
		unset($trans_store_sql);


		$issue_return_sql=sql_select("select b.company_id as COMPANY_ID, a.id as ID, a.barcode_no as BARCODE_NO, a.is_sales as IS_SALES, a.po_breakdown_id as PO_BREAKDOWN_ID,a.entry_form as ENTRY_FORM,a.booking_without_order as BOOKING_WITHOUT_ORDER, b.store_id as STORE_ID, c.floor_id as FLOOR_ID, c.room as ROOM, c.rack as RACK, c.self as SELF, c.bin_box as BIN_BOX, c.prod_id as PROD_ID, c.body_part_id as BODY_PART_ID, c.yarn_rate as YARN_RATE, c.kniting_charge as KNITING_CHARGE, a.rate as RATE from pro_roll_details a, inv_receive_master b, pro_grey_prod_entry_dtls c where a.mst_id=b.id and a.dtls_id=c.id and b.id=c.mst_id and a.entry_form in(84) and b.entry_form in(84) and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0 and a.re_transfer=0 and a.barcode_no in ($barcode_no)");
		foreach($issue_return_sql as $row)
		{
			$trans_or_issue_returned_data[$row->BARCODE_NO]["barcode_no"]=$row->BARCODE_NO;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["entry_form"]=$row->ENTRY_FORM;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["to_store"]=$row->STORE_ID;

			$trans_or_issue_returned_data[$row->BARCODE_NO]["to_floor_id"]=$row->FLOOR_ID;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["to_room"]=$row->ROOM;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["to_rack"]=$row->RACK;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["to_self"]=$row->SELF;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["to_bin_box"]=$row->BIN_BOX;

			$trans_or_issue_returned_data[$row->BARCODE_NO]["is_sales"]=$row->IS_SALES;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["po_breakdown_id"]=$row->PO_BREAKDOWN_ID;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["booking_without_order"]=$row->BOOKING_WITHOUT_ORDER;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["roll_table_id"]=$row->ID;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["to_company"] = $row->COMPANY_ID;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["to_prod_id"]=$row->PROD_ID;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["body_part_id"]=$row->BODY_PART_ID;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["yarn_rate"]=$row->YARN_RATE;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["kniting_charge"]=$row->KNITING_CHARGE;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["rate"]=$row->RATE;

			$store_ids .=$row->STORE_ID.",";

			if($row->BOOKING_WITHOUT_ORDER==0){
				$order_ids_arr[$row->PO_BREAKDOWN_ID] = $row->PO_BREAKDOWN_ID;
			}
			else{
				$samp_book_ids_arr[$row->PO_BREAKDOWN_ID]= $row->PO_BREAKDOWN_ID;
			}
		}
		unset($issue_return_sql);


		$sales_ord_to_ord_sql = sql_select("SELECT a.transfer_criteria as TRANSFER_CRITERIA, a.company_id as COMPANY_ID, a.to_company as TO_COMPANY, a.transfer_system_id as TRANSFER_SYSTEM_ID, c.barcode_no as BARCODE_NO, c.id as ID, c.po_breakdown_id as PO_BREAKDOWN_ID, b.from_prod_id as FROM_PROD_ID, b.to_store as STORE_ID, b.to_floor_id as TO_FLOOR_ID, b.to_room as TO_ROOM, b.to_rack as TO_RACK, b.to_shelf as TO_SHELF, b.to_bin_box as TO_BIN_BOX, b.to_body_part as TO_BODY_PART, b.to_prod_id as TO_PROD_ID,c.entry_form as ENTRY_FORM, c.booking_without_order as BOOKING_WITHOUT_ORDER, c.is_sales as IS_SALES, b.yarn_rate as YARN_RATE, b.kniting_charge as KNITING_CHARGE, c.rate as RATE
		FROM  inv_item_transfer_mst a, inv_item_transfer_dtls b, pro_roll_details c, fabric_sales_order_mst d
		WHERE c.barcode_no IN($barcode_no)  and c.entry_form in (133) and c.re_transfer=0 and b.id=c.dtls_id and c.po_breakdown_id = d.id AND a.id=b.mst_id  and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0 and c.status_active=1 and c.is_deleted=0 and d.status_active=1 and d.is_deleted=0");
		$all_sales_ids="";
		foreach($sales_ord_to_ord_sql as $row)
		{
			if ($row->TRANSFER_CRITERIA==1) 
			{
				$company_id=$row->TO_COMPANY;
				$prod_id=$row->TO_PROD_ID;
			}
			else
			{
				$company_id=$row->COMPANY_ID;
				$prod_id=$row->FROM_PROD_ID;
			}
			$trans_or_issue_returned_data[$row->BARCODE_NO]["barcode_no"]=$row->BARCODE_NO;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["entry_form"]=$row->ENTRY_FORM;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["transfer_id"]=$row->TRANSFER_SYSTEM_ID;

			$trans_or_issue_returned_data[$row->BARCODE_NO]["to_floor_id"]=$row->TO_FLOOR_ID;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["to_room"]=$row->TO_ROOM;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["to_rack"]=$row->TO_RACK;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["to_self"]=$row->TO_SHELF;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["to_bin_box"]=$row->TO_BIN_BOX;

			$trans_or_issue_returned_data[$row->BARCODE_NO]["is_sales"]=$row->IS_SALES;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["po_breakdown_id"]=$row->PO_BREAKDOWN_ID;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["booking_without_order"]=$row->BOOKING_WITHOUT_ORDER;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["to_prod_id"]=$prod_id;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["body_part_id"]=$row->TO_BODY_PART;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["to_company"]=$company_id;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["to_store"]=$row->STORE_ID;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["yarn_rate"] = $row->YARN_RATE;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["kniting_charge"] = $row->KNITING_CHARGE;
			$trans_or_issue_returned_data[$row->BARCODE_NO]["rate"] = $row->RATE;
			
			$barcode_store_arr[$row->BARCODE_NO]["trans"] = $row->STORE_ID;
			$body_part_id_data[$row->BARCODE_NO]["trans"]=$row->TO_BODY_PART;

			$all_sales_id_arr[$row->PO_BREAKDOWN_ID] = $row->PO_BREAKDOWN_ID;
			
		}
		
		unset($sales_ord_to_ord_sql);

		$production_sql = "SELECT a.id, a.company_id, a.recv_number, a.receive_basis, a.receive_date, a.booking_id, a.booking_no, a.knitting_source, a.knitting_company, a.buyer_id, c.booking_without_order, b.id as dtls_id, b.prod_id, b.febric_description_id, b.gsm, b.width, b.body_part_id,b.yarn_lot,b.brand_id,b.shift_name,b.floor_id,b.machine_no_id,c.rate,  b.yarn_count, b.uom,b.color_id,b.color_range_id, b.stitch_length, c.barcode_no, c.id as roll_id, c.roll_no, c.po_breakdown_id, c.qnty, c.reject_qnty, c.is_sales,b.kniting_charge, b.yarn_rate
		FROM inv_receive_master a, pro_grey_prod_entry_dtls b, pro_roll_details c
		WHERE a.id=b.mst_id and b.id=c.dtls_id and a.entry_form=2 and c.entry_form=2 and c.status_active=1 and c.is_deleted=0 and c.barcode_no=$barcode_no";
		$production_data = $this->db->query($production_sql)->result();$barcode_no_info=array();$production_program_no=array();
		foreach($production_data as $row)
		{
			if($row->IS_SALES !=0)
			{
				$all_sales_id_arr[$row->PO_BREAKDOWN_ID]= $row->PO_BREAKDOWN_ID;
			}
			else
			{
				if($row->BOOKING_WITHOUT_ORDER ==0)
				{
					$order_ids_arr[$row->PO_BREAKDOWN_ID]= $row->PO_BREAKDOWN_ID;
				}
				else
				{
					$samp_book_ids_arr[$row->PO_BREAKDOWN_ID]= $row->PO_BREAKDOWN_ID;
				}
			}
			$barcode_no_info[$row->BARCODE_NO]['UOM']=$unit_of_measurement[$row->UOM];

			if($row->RECEIVE_BASIS ==2)
			{
				$production_program_no[$row->BARCODE_NO]= $row->BOOKING_ID;
			}
		}

		if(!empty($order_ids_arr))
		{
			$order_ids = " and b.id in(".implode(",",$order_ids_arr).")";
			$po_sql = "SELECT a.job_no, a.buyer_name, a.insert_date, b.po_number, a.style_ref_no, b.id as po_id FROM wo_po_details_master a, wo_po_break_down b WHERE a.job_no=b.job_no_mst $order_ids";
			$po_data = $this->db->query($po_sql)->result();

			$po_details_array = array();
			foreach ($po_data as $row)
			{
				$po_details_array[$row->PO_ID]['job_no'] = $row->JOB_NO;
				$po_details_array[$row->PO_ID]['buyer_name'] = $buyer_arr[$row->BUYER_NAME];
				$po_details_array[$row->PO_ID]['style_ref_no'] = $row->STYLE_REF_NO;
				$po_details_array[$row->PO_ID]['year'] = date("Y", strtotime($row->INSERT_DATE));
				$po_details_array[$row->PO_ID]['po_number'] = $row->PO_NUMBER;
				$po_details_array[$row->PO_ID]['buyer_id'] = $row->BUYER_NAME;
			}
		}

		if(!empty($all_sales_id_arr))
		{
			$all_sales_ids= implode(",",$all_sales_id_arr);
			$sales_array=sql_select("SELECT id as po_id,job_no,job_no_prefix_num, sales_booking_no, buyer_id, po_buyer, within_group FROM fabric_sales_order_mst WHERE status_active=1 and is_deleted=0 and id in(".$all_sales_ids.")");
			$sales_arr=array();
			foreach($sales_array as $row)
			{
				if($row->WITHIN_GROUP==1)
				{
					$po_buyer = $row->PO_BUYER;
				}else{
					$po_buyer = $row->BUYER_ID;
				}
				$sales_arr[$row->PO_ID]['sales_order']=$row->JOB_NO;
				$sales_arr[$row->PO_ID]['job_no']=$row->JOB_NO_PREFIX_NUM;
				$sales_arr[$row->PO_ID]['buyer_id']=$po_buyer;
				$sales_arr[$row->PO_ID]['buyer_name']= $buyer_arr[$po_buyer];
				$sales_arr[$row->PO_ID]['sales_booking_no']=$row->SALES_BOOKING_NO;
				$sales_arr[$row->PO_ID]['within_group']=$row->WITHIN_GROUP;
			}
			unset($sales_array);
		}

		if(!empty($samp_book_ids_arr))
		{
			$all_samp_book_ids= implode(",",$samp_book_ids_arr);
			$sample_sql=sql_select("select a.id as ID, a.buyer_id as BUYER_ID, a.booking_no as BOOKING_NO from  wo_non_ord_samp_booking_mst a where a.status_active=1 and a.is_deleted=0 and a.id in (	$all_samp_book_ids)");
			$sample_data=array();
			foreach($sample_sql as $row)
			{
				$sample_data[$row->ID]["buyer_id"]=$row->BUYER_ID;
				$sample_data[$row->ID]["buyer_name"]=$buyer_arr[$row->BUYER_ID];
				$sample_data[$row->ID]["booking_no"]=$row->BOOKING_NO;
			}
		}

		$receive_sql="SELECT a.id, a.entry_form, a.company_id, a.receive_basis, a.location_id, a.booking_no, a.booking_id, a.knitting_source, a.knitting_company, b.id as dtls_id, b.prod_id as PROD_ID, b.body_part_id as BODY_PART_ID, b.febric_description_id, b.gsm, b.width, b.color_id, b.yarn_lot, b.yarn_count, b.stitch_length, b.machine_no_id, b.brand_id, a.store_id, b.floor_id as FLOOR_ID, b.room as ROOM, b.rack as RACK, b.self as SELF,  b.bin_box as BIN_BOX, b.color_range_id, c.barcode_no, c.id as roll_id, c.roll_no, c.po_breakdown_id as PO_BREAKDOWN_ID, c.qnty as QNTY, c.roll_id as roll_id_prev,c.rate,c.booking_no as bwo, c.booking_without_order as BOOKING_WITHOUT_ORDER, c.is_transfer, c.transfer_criteria,c.is_sales, b.yarn_rate as YARN_RATE, b.kniting_charge as KNITING_CHARGE, c.rate as RATE
		FROM pro_roll_details c, pro_grey_prod_entry_dtls b, inv_receive_master a
		WHERE c.barcode_no=$barcode_no and c.entry_form in(2,22,58) and c.status_active=1 and c.is_deleted=0 and b.trans_id<>0 and a.entry_form in(2,22,58) and b.id=c.dtls_id and  a.id=b.mst_id";
		$receive_data = $this->db->query($receive_sql)->result();
		foreach($receive_data as $row)
		{
			$booking_no_id = $row->BOOKING_NO;
			$color_id_show='';$color='';
			$color_id=explode(",",$row->COLOR_ID);
			foreach($color_id as $val)
			{
				if($val>0) $color_id_show.=$color_arr[$val].",";
				if($val>0) $color.=$val.",";
			}
			$color_id_show=chop($color_id_show,',');
			$color=chop($color,',');

			if($row->ENTRY_FORM==58)
			{
				$roll_id = $row->ROLL_ID_PREV;
			}
			else
			{
				$roll_id = $row->ROLL_ID;
			}

			if($trans_or_issue_returned_data[$row->BARCODE_NO]["barcode_no"])
			{
				$to_company_id = $trans_or_issue_returned_data[$row->BARCODE_NO]["to_company"];
				$to_store = $trans_or_issue_returned_data[$row->BARCODE_NO]["to_store"];
				$to_floor_id = $trans_or_issue_returned_data[$row->BARCODE_NO]["to_floor_id"];
				$to_room = $trans_or_issue_returned_data[$row->BARCODE_NO]["to_room"];
				$to_rack = $trans_or_issue_returned_data[$row->BARCODE_NO]["to_rack"];
				$to_shelf = $trans_or_issue_returned_data[$row->BARCODE_NO]["to_self"];
				$to_bin_box = $trans_or_issue_returned_data[$row->BARCODE_NO]["to_bin_box"];
				$po_breakdown_id = $trans_or_issue_returned_data[$row->BARCODE_NO]["po_breakdown_id"];
				$to_prod_id = $trans_or_issue_returned_data[$row->BARCODE_NO]["to_prod_id"];
				$body_part_id = $trans_or_issue_returned_data[$row->BARCODE_NO]["body_part_id"];
				$booking_without_order = $trans_or_issue_returned_data[$row->BARCODE_NO]["booking_without_order"];
				$is_sales = $trans_or_issue_returned_data[$row->BARCODE_NO]["is_sales"];
				$yarn_rate = $trans_or_issue_returned_data[$row->BARCODE_NO]["yarn_rate"];
				$kniting_charge = $trans_or_issue_returned_data[$row->BARCODE_NO]["kniting_charge"];
				$rate = $trans_or_issue_returned_data[$row->BARCODE_NO]["rate"];
			}
			else
			{
				$to_company_id = $row->COMPANY_ID;
				$to_store = $row->STORE_ID;
				$to_floor_id = $row->FLOOR_ID;
				$to_room =  $row->ROOM;
				$to_rack =  $row->RACK;
				$to_shelf =  $row->SELF;
				$to_bin_box = $row->BIN_BOX;
				$po_breakdown_id = $row->PO_BREAKDOWN_ID;
				$to_prod_id = $row->PROD_ID;
				$body_part_id = $row->BODY_PART_ID;
				$booking_without_order = $row->BOOKING_WITHOUT_ORDER;
				$is_sales = $row->IS_SALES;
				$yarn_rate = $row->YARN_RATE;
				$kniting_charge = $row->KNITING_CHARGE;
				$rate = $row->RATE;
			}
			$samp_booking ="";$fso_or_job_no ="";$fso_booking_no="";
			if($is_sales ==1)
			{
				$fso_or_job_no =  $sales_arr[$po_breakdown_id]['sales_order'];
				$buyer_name =  $sales_arr[$po_breakdown_id]['buyer_name'];
				$buyer_id =  $sales_arr[$po_breakdown_id]['buyer_id'];
				$fso_booking_no = $sales_arr[$po_breakdown_id]['sales_booking_no'];
			}
			else
			{
				if($booking_without_order ==0)
				{
					$buyer_id = $po_details_array[$po_breakdown_id]['buyer_id'];
					$buyer_name = $po_details_array[$po_breakdown_id]['buyer_name'];
				}
				else
				{
					$buyer_id = $sample_data[$po_breakdown_id]["buyer_id"];
					$buyer_name = $sample_data[$po_breakdown_id]["buyer_name"];
					$samp_booking = $sample_data[$po_breakdown_id]["booking_no"];
				}
				$fso_or_job_no = $po_details_array[$po_breakdown_id]['job_no'];
			}
			
			$roll_info["MasterPart"]['COMPANY_ID'] = $to_company_id;
			$roll_info["MasterPart"]['KNITTING_SOURCE_ID'] = $row->KNITTING_SOURCE;
			$roll_info["MasterPart"]['KNITTING_SOURCE'] = $knitting_source[$row->KNITTING_SOURCE];
			$roll_info["MasterPart"]['KNITTING_COMPANY_ID'] = $row->KNITTING_COMPANY;
			if ($row->KNITTING_SOURCE == 1) {
				$roll_info["MasterPart"]['KNITTING_COMPANY'] = $company_arr[$row->KNITTING_COMPANY];
			} else if ($row->KNITTING_SOURCE == 3) {
				$roll_info["MasterPart"]['KNITTING_COMPANY'] = $supplier_arr[$row->KNITTING_COMPANY];
			}

			$roll_info["DtlsPart"]['BARCODE_NO'] = $row->BARCODE_NO;
			$roll_info["DtlsPart"]['BUYER_ID'] = $buyer_id;
			$roll_info["DtlsPart"]['BUYER_NAME'] = $buyer_name;

			if ($row->KNITTING_SOURCE == 1) {
				$roll_info["DtlsPart"]['KNITTING_COMPANY'] = $company_arr[$row->KNITTING_COMPANY];
			} else if ($row->KNITTING_SOURCE == 3) {
				$roll_info["DtlsPart"]['KNITTING_COMPANY'] = $supplier_arr[$row->KNITTING_COMPANY];
			}
			$roll_info["DtlsPart"]['BOOKING_WITHOUT_ORDER'] = $booking_without_order;
			$roll_info["DtlsPart"]['BOOKING_ID'] = $row->BOOKING_ID;
			$roll_info["DtlsPart"]['SAMP_BOOKING'] = $samp_booking;
			$roll_info["DtlsPart"]['FSO_BOOKING'] = $fso_booking_no;
			$roll_info["DtlsPart"]['BODY_PART_ID'] = $body_part_id;
			$roll_info["DtlsPart"]['BODY_PART_NAME'] = $buyer_part_arr[$body_part_id];
			$roll_info["DtlsPart"]['YARN_LOT'] = $row->YARN_LOT;
			$roll_info["DtlsPart"]['BRAND_ID'] = $row->BRAND_ID;
			$roll_info["DtlsPart"]['BRAND_NAME'] = $brand_name_arr[$row->BRAND_ID];
			$roll_info["DtlsPart"]['SHIFT_NAME'] = $row->SHIFT_NAME;

			$roll_info["DtlsPart"]['STORE_ID'] = $to_store;
			$roll_info["DtlsPart"]['FLOOR_ID'] = $to_floor_id;
			$roll_info["DtlsPart"]['ROOM_ID'] = $to_room;
			$roll_info["DtlsPart"]['RACK_ID'] = $to_rack;
			$roll_info["DtlsPart"]['SHELF_ID'] = $to_shelf;
			$roll_info["DtlsPart"]['BIN_BOX_ID'] = $to_bin_box;

			$roll_info["DtlsPart"]['MACHINE_NO_ID'] = $row->MACHINE_NO_ID;
			$roll_info["DtlsPart"]['MACHINE_NAME'] = $machine_name_arr[$row->MACHINE_NO_ID];
			$roll_info["DtlsPart"]['YARN_COUNT'] = $row->YARN_COUNT;
			$roll_info["DtlsPart"]['COLOR_ID'] = $color;
			$roll_info["DtlsPart"]['COLOR_NAME'] = $color_arr[$color];
			$roll_info["DtlsPart"]['COLOR_RANGE_ID'] = $row->COLOR_RANGE_ID;
			$roll_info["DtlsPart"]['COLOR_RANGE_NAME'] = $color_range[$row->COLOR_RANGE_ID];
			$roll_info["DtlsPart"]['UOM'] = $barcode_no_info[$row->BARCODE_NO]['UOM'];
			$roll_info["DtlsPart"]['DTLS_ID'] = $row->DTLS_ID;
			$roll_info["DtlsPart"]['PROD_ID'] = $to_prod_id;
			$roll_info["DtlsPart"]['DETER_ID'] = $row->FEBRIC_DESCRIPTION_ID;
			$roll_info["DtlsPart"]['CONSTRUCTION'] = $constructtion_arr[$row->FEBRIC_DESCRIPTION_ID];
			$roll_info["DtlsPart"]['COMPOSITION'] = $composition_arr[$row->FEBRIC_DESCRIPTION_ID];
			$roll_info["DtlsPart"]['GSM'] = $row->GSM;
			$roll_info["DtlsPart"]['WIDTH'] = $row->WIDTH;
			$roll_info["DtlsPart"]['STITCH_LENGTH'] = $row->STITCH_LENGTH;
			$roll_info["DtlsPart"]['ROLL_ID'] = $roll_id;
			$roll_info["DtlsPart"]['ROLL_NO'] = $row->ROLL_NO;
			$roll_info["DtlsPart"]['PO_BREAKDOWN_ID'] = $po_breakdown_id;
			$roll_info["DtlsPart"]['PO_NUMBER'] = $po_details_array[$po_breakdown_id]['po_number'];
			$roll_info["DtlsPart"]['JOB_NO'] = $fso_or_job_no;
			$quantity = number_format($row->QNTY, 2, '.', '');
			$quantity = $quantity.' ';
			$roll_info["DtlsPart"]['QNTY'] = $quantity; //number_format($row->QNTY, 2, '.', '');
			$roll_info["DtlsPart"]['REJECT_QNTY'] = number_format($row->REJECT_QNTY, 2, '.', '');
			$roll_info["DtlsPart"]['YARN_RATE'] = $yarn_rate;
			$roll_info["DtlsPart"]['KNITING_CHARGE'] = $kniting_charge;
			$roll_info["DtlsPart"]['ROLL_RATE'] = $rate;
			$roll_info["DtlsPart"]['IS_SALES'] = $is_sales;
			$roll_info["DtlsPart"]['JOB_MIXING_VAR'] = $variable_inventory_arr[$to_company_id];
			$roll_info["DtlsPart"]['PROGRAM_NO'] = $production_program_no[$row->BARCODE_NO];
			$roll_info["status"] = "Success";
			$roll_info["msg"] = "Success";
		}
		if($roll_info)
		{
			return $roll_info;
		}
		else
		{
			return [];
		}
		
	}

	// public function get_roll_info_for_transfer($barcode_no)
	// {
	// 	$check_barcode = $this->check_if_barcode_already_issued($barcode_no);
	// 	if($check_barcode != "")
	// 	{
	// 		return array(
	// 			"status" => "Failed",
	// 			"msg" 	 => "Barcode already Issued. Issue No(s) = $check_barcode"
	// 		);
	// 		die;
	// 	}

	// 	$knitting_source = array(1 => "In-house", 2 => "In-bound Subcontract", 3 => "Out-bound Subcontract");
	// 	$receive_basis = array(0 => "Independent", 1 => "Fabric Booking", 2 => "Knitting Plan", 4 => 'Sales Order');
	// 	$unit_of_measurement = array(1 => "Pcs", 2 => "Dzn", 3 => "Grs", 4 => "GG", 10 => "Mg", 11 => "Gm", 12 => "Kg", 13 => "Quintal", 14 => "Ton", 15 => "Lbs", 20 => "Km", 21 => "Hm", 22 => "Dm", 23 => "Mtr", 24 => "Dcm", 25 => "CM", 26 => "MM", 27 => "Yds", 28 => "Feet", 29 => "Inch", 30 => "CFT", 31 => "SFT", 40 => "Ltr", 41 => "ML", 50 => "Roll", 51 => "Coil", 52 => "Cone", 53 => "Bag", 54 => "Box", 55 => "Drum", 56 => "Bottle", 57 => "Pack", 58 => "Set", 59 => "Can", 60 => "Each", 61 => "Gallon", 62 => "Lachi", 63 => "Pair", 64 => "Lot", 65 => "Packet", 66 => "Pot", 67 => "Book", 68 => "Culind", 69 => "Rim", 70 => "Cft", 71 => "Syp", 72 => "K.V", 73 => "CU-M3", 74 => "Bundle", 75 => "Strip", 76 => "SQM", 77 => "Ounce", 78 => "Cylinder", 79 => "Course", 80 => "Sheet", 81 => "RFT", 82 => "Square Inch", 83 => "Carton", 84 => "Thane", 85 => "Gross Yds", 86 => "Jar", 87 => "Reel", 88 => "CBM",89=>"Tub",90=>"KVA",91=>"KW",92=>"Pallet",93=>"Case");

	// 	/* $variable_inventory=return_field_value("allocation","variable_settings_inventory","company_name='$data' and variable_list=40 and status_active=1 and is_deleted=0");
	// 	echo $variable_inventory; */

	// 	$variable_inventory_arr = return_library_array("SELECT allocation, company_name from variable_settings_inventory where variable_list=40 and status_active=1 and is_deleted=0", "company_name", "allocation");

	// 	$buyer_sql = $this->getAllFieldsByAttribute("LIB_BUYER", "ID, SHORT_NAME", array("STATUS_ACTIVE" => 1));
	// 	foreach ($buyer_sql as $row) {
	// 		$buyer_arr[$row->ID] = $row->SHORT_NAME;
	// 	}

	// 	$b_part_sql = $this->getAllFieldsByAttribute("LIB_BODY_PART", "ID, BODY_PART_FULL_NAME", array("STATUS_ACTIVE" => 1));
	// 	foreach ($b_part_sql as $row) {
	// 		$buyer_part_arr[$row->ID] = $row->BODY_PART_FULL_NAME;
	// 	}

	// 	$brand_sql = $this->getAllFieldsByAttribute("LIB_BRAND", "ID, BRAND_NAME", array("STATUS_ACTIVE" => 1));
	// 	foreach ($brand_sql as $row) {
	// 		$brand_name_arr[$row->ID] = $row->BRAND_NAME;
	// 	}

	// 	$machine_sql = $this->getAllFieldsByAttribute("LIB_MACHINE_NAME", "ID, MACHINE_NO", array("STATUS_ACTIVE" => 1));
	// 	foreach ($machine_sql as $row) {
	// 		$machine_name_arr[$row->ID] = $row->MACHINE_NO;
	// 	}

	// 	$composition_arr = $constructtion_arr = array();
	// 	$composition_sql = "select id,composition_name from  lib_composition_array where status_active=1 and is_deleted=0 order by composition_name";
	// 	$composition_data = $this->db->query($composition_sql)->result();
	// 	foreach ($composition_data as $row) {
	// 		$compositions_arr[$row->ID] = $row->COMPOSITION_NAME;
	// 	}
	// 	$fabrication_sql = "select a.id, a.construction, b.copmposition_id, b.percent from lib_yarn_count_determina_mst a, lib_yarn_count_determina_dtls b where a.id=b.mst_id";
	// 	$fabrication_data = $this->db->query($fabrication_sql)->result();
	// 	foreach ($fabrication_data as $row) {
	// 		$constructtion_arr[$row->ID] = $row->CONSTRUCTION;
	// 		$composition_arr[$row->ID] .= $compositions_arr[$row->COPMPOSITION_ID] . " " . $row->PERCENT . "% ";
	// 	}

	// 	$color_range = array(1 => "Dark Color", 2 => "Light Color", 3 => "Black Color", 4 => "White Color", 5 => "Average Color", 6 => "Melange", 7 => "Wash", 8 => "Scouring", 9 => "Extra Dark", 10 => "Medium Color", 11 => "Super Dark");

	// 	$color_sql = "select id, color_name from lib_color where status_active=1 and is_deleted=0";
	// 	$color_data = $this->db->query($color_sql)->result();
	// 	foreach ($color_data as $row) {
	// 		$color_arr[$row->ID] = $row->COLOR_NAME;
	// 	}

	// 	$company_sql = "select id,company_name from lib_company";
	// 	$company_data = $this->db->query($company_sql)->result();
	// 	foreach ($company_data as $row) {
	// 		$company_arr[$row->ID] = $row->COMPANY_NAME;
	// 	}

	// 	$supplier_sql = "select id, supplier_name from lib_supplier";
	// 	$supplier_data = $this->db->query($supplier_sql)->result();
	// 	foreach ($supplier_data as $row) {
	// 		$supplier_arr[$row->ID] = $row->SUPPLIER_NAME;
	// 	}

	// 	$trans_or_issue_returned_data =array(); $order_ids_arr= array();
	// 	$trans_store_sql=sql_select("select a.company_id as COMPANY_ID,a.to_company as TO_COMPANY, a.transfer_criteria as TRANSFER_CRITERIA, to_prod_id as PROD_ID, c.barcode_no as BARCODE_NO, c.entry_form as ENTRY_FORM, b.to_store as TO_STORE, b.to_floor_id as TO_FLOOR_ID, b.to_room as TO_ROOM, b.to_rack as TO_RACK, b.to_shelf as TO_SHELF, b.to_bin_box as TO_BIN_BOX, b.to_body_part as BODY_PART_ID, c.booking_without_order as BOOKING_WITHOUT_ORDER, c.po_breakdown_id as PO_BREAKDOWN_ID, c.is_sales as IS_SALES, b.yarn_rate as YARN_RATE, b.kniting_charge as KNITING_CHARGE, c.rate as RATE
	// 	from  inv_item_transfer_mst a, inv_item_transfer_dtls b, pro_roll_details c
	// 	where a.id = b.mst_id and a.entry_form in (183,180,110,83,82) and b.id=c.dtls_id and c.entry_form in(183,180,110,83,82)
	// 	and c.re_transfer=0 and c.status_active=1 and c.is_deleted=0 and c.is_sales <> 1 and c.barcode_no in($barcode_no)
	// 	order by c.barcode_no desc");
	// 	$store_ids="";
	// 	foreach($trans_store_sql as $row)
	// 	{
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["to_store"]=$row->TO_STORE;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["barcode_no"]=$row->BARCODE_NO;

	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["to_floor_id"]=$row->TO_FLOOR_ID;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["to_room"]=$row->TO_ROOM;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["to_rack"]=$row->TO_RACK;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["to_self"]=$row->TO_SHELF;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["to_bin_box"]=$row->TO_BIN_BOX;

	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["is_sales"]=$row->IS_SALES;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["po_breakdown_id"]=$row->PO_BREAKDOWN_ID;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["booking_without_order"]=$row->BOOKING_WITHOUT_ORDER;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["to_prod_id"]=$row->PROD_ID;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["to_company"] = $row->TO_COMPANY;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["body_part_id"] = $row->BODY_PART_ID;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["yarn_rate"] = $row->YARN_RATE;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["kniting_charge"] = $row->KNITING_CHARGE;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["rate"] = $row->RATE;
	// 		$store_ids .=$row->TO_STORE.",";

	// 		if($row->BOOKING_WITHOUT_ORDER==0){
	// 			$order_ids_arr[$row->PO_BREAKDOWN_ID] = $row->PO_BREAKDOWN_ID;
	// 		}
	// 		else{
	// 			$samp_book_ids_arr[$row->PO_BREAKDOWN_ID]= $row->PO_BREAKDOWN_ID;
	// 		}
	// 	}
	// 	unset($trans_store_sql);


	// 	$issue_return_sql=sql_select("select b.company_id as COMPANY_ID, a.id as ID, a.barcode_no as BARCODE_NO, a.is_sales as IS_SALES, a.po_breakdown_id as PO_BREAKDOWN_ID,a.entry_form as ENTRY_FORM,a.booking_without_order as BOOKING_WITHOUT_ORDER, b.store_id as STORE_ID, c.floor_id as FLOOR_ID, c.room as ROOM, c.rack as RACK, c.self as SELF, c.bin_box as BIN_BOX, c.prod_id as PROD_ID, c.body_part_id as BODY_PART_ID, c.yarn_rate as YARN_RATE, c.kniting_charge as KNITING_CHARGE, a.rate as RATE from pro_roll_details a, inv_receive_master b, pro_grey_prod_entry_dtls c where a.mst_id=b.id and a.dtls_id=c.id and b.id=c.mst_id and a.entry_form in(84) and b.entry_form in(84) and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0 and a.re_transfer=0 and a.barcode_no in ($barcode_no)");
	// 	foreach($issue_return_sql as $row)
	// 	{
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["barcode_no"]=$row->BARCODE_NO;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["entry_form"]=$row->ENTRY_FORM;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["to_store"]=$row->STORE_ID;

	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["to_floor_id"]=$row->FLOOR_ID;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["to_room"]=$row->ROOM;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["to_rack"]=$row->RACK;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["to_self"]=$row->SELF;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["to_bin_box"]=$row->BIN_BOX;

	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["is_sales"]=$row->IS_SALES;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["po_breakdown_id"]=$row->PO_BREAKDOWN_ID;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["booking_without_order"]=$row->BOOKING_WITHOUT_ORDER;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["roll_table_id"]=$row->ID;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["to_company"] = $row->COMPANY_ID;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["to_prod_id"]=$row->PROD_ID;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["body_part_id"]=$row->BODY_PART_ID;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["yarn_rate"]=$row->YARN_RATE;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["kniting_charge"]=$row->KNITING_CHARGE;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["rate"]=$row->RATE;

	// 		$store_ids .=$row->STORE_ID.",";

	// 		if($row->BOOKING_WITHOUT_ORDER==0){
	// 			$order_ids_arr[$row->PO_BREAKDOWN_ID] = $row->PO_BREAKDOWN_ID;
	// 		}
	// 		else{
	// 			$samp_book_ids_arr[$row->PO_BREAKDOWN_ID]= $row->PO_BREAKDOWN_ID;
	// 		}
	// 	}
	// 	unset($issue_return_sql);


	// 	$sales_ord_to_ord_sql = sql_select("SELECT a.transfer_criteria as TRANSFER_CRITERIA, a.company_id as COMPANY_ID, a.to_company as TO_COMPANY, a.transfer_system_id as TRANSFER_SYSTEM_ID, c.barcode_no as BARCODE_NO, c.id as ID, c.po_breakdown_id as PO_BREAKDOWN_ID, b.from_prod_id as FROM_PROD_ID, b.to_store as STORE_ID, b.to_floor_id as TO_FLOOR_ID, b.to_room as TO_ROOM, b.to_rack as TO_RACK, b.to_shelf as TO_SHELF, b.to_bin_box as TO_BIN_BOX, b.to_body_part as TO_BODY_PART, b.to_prod_id as TO_PROD_ID,c.entry_form as ENTRY_FORM, c.booking_without_order as BOOKING_WITHOUT_ORDER, c.is_sales as IS_SALES, b.yarn_rate as YARN_RATE, b.kniting_charge as KNITING_CHARGE, c.rate as RATE
	// 	FROM  inv_item_transfer_mst a, inv_item_transfer_dtls b, pro_roll_details c, fabric_sales_order_mst d
	// 	WHERE c.barcode_no IN($barcode_no)  and c.entry_form in (133) and c.re_transfer=0 and b.id=c.dtls_id and c.po_breakdown_id = d.id AND a.id=b.mst_id  and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0 and c.status_active=1 and c.is_deleted=0 and d.status_active=1 and d.is_deleted=0");
	// 	$all_sales_ids="";
	// 	foreach($sales_ord_to_ord_sql as $row)
	// 	{
	// 		if ($row->TRANSFER_CRITERIA==1) 
	// 		{
	// 			$company_id=$row->TO_COMPANY;
	// 			$prod_id=$row->TO_PROD_ID;
	// 		}
	// 		else
	// 		{
	// 			$company_id=$row->COMPANY_ID;
	// 			$prod_id=$row->FROM_PROD_ID;
	// 		}
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["barcode_no"]=$row->BARCODE_NO;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["entry_form"]=$row->ENTRY_FORM;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["transfer_id"]=$row->TRANSFER_SYSTEM_ID;

	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["to_floor_id"]=$row->TO_FLOOR_ID;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["to_room"]=$row->TO_ROOM;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["to_rack"]=$row->TO_RACK;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["to_self"]=$row->TO_SHELF;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["to_bin_box"]=$row->TO_BIN_BOX;

	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["is_sales"]=$row->IS_SALES;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["po_breakdown_id"]=$row->PO_BREAKDOWN_ID;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["booking_without_order"]=$row->BOOKING_WITHOUT_ORDER;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["to_prod_id"]=$prod_id;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["body_part_id"]=$row->TO_BODY_PART;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["to_company"]=$company_id;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["to_store"]=$row->STORE_ID;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["yarn_rate"] = $row->YARN_RATE;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["kniting_charge"] = $row->KNITING_CHARGE;
	// 		$trans_or_issue_returned_data[$row->BARCODE_NO]["rate"] = $row->RATE;
			
	// 		$barcode_store_arr[$row->BARCODE_NO]["trans"] = $row->STORE_ID;
	// 		$body_part_id_data[$row->BARCODE_NO]["trans"]=$row->TO_BODY_PART;

	// 		$all_sales_id_arr[$row->PO_BREAKDOWN_ID] = $row->PO_BREAKDOWN_ID;
			
	// 	}
		
	// 	unset($sales_ord_to_ord_sql);

	// 	$production_sql = "SELECT a.id, a.company_id, a.recv_number, a.receive_basis, a.receive_date, a.booking_id, a.booking_no, a.knitting_source, a.knitting_company, a.buyer_id, c.booking_without_order, b.id as dtls_id, b.prod_id, b.febric_description_id, b.gsm, b.width, b.body_part_id,b.yarn_lot,b.brand_id,b.shift_name,b.floor_id,b.machine_no_id,c.rate,  b.yarn_count, b.uom,b.color_id,b.color_range_id, b.stitch_length, c.barcode_no, c.id as roll_id, c.roll_no, c.po_breakdown_id, c.qnty, c.reject_qnty, c.is_sales,b.kniting_charge, b.yarn_rate
	// 	FROM inv_receive_master a, pro_grey_prod_entry_dtls b, pro_roll_details c
	// 	WHERE a.id=b.mst_id and b.id=c.dtls_id and a.entry_form=2 and c.entry_form=2 and c.status_active=1 and c.is_deleted=0 and c.barcode_no=$barcode_no";
	// 	$production_data = $this->db->query($production_sql)->result();$barcode_no_info=array();$production_program_no=array();
	// 	foreach($production_data as $row)
	// 	{
	// 		if($row->IS_SALES !=0)
	// 		{
	// 			$all_sales_id_arr[$row->PO_BREAKDOWN_ID]= $row->PO_BREAKDOWN_ID;
	// 		}
	// 		else
	// 		{
	// 			if($row->BOOKING_WITHOUT_ORDER ==0)
	// 			{
	// 				$order_ids_arr[$row->PO_BREAKDOWN_ID]= $row->PO_BREAKDOWN_ID;
	// 			}
	// 			else
	// 			{
	// 				$samp_book_ids_arr[$row->PO_BREAKDOWN_ID]= $row->PO_BREAKDOWN_ID;
	// 			}
	// 		}
	// 		$barcode_no_info[$row->BARCODE_NO]['UOM']=$unit_of_measurement[$row->UOM];

	// 		if($row->RECEIVE_BASIS ==2)
	// 		{
	// 			$production_program_no[$row->BARCODE_NO]= $row->BOOKING_ID;
	// 		}
	// 	}

	// 	if(!empty($order_ids_arr))
	// 	{
	// 		$order_ids = " and b.id in(".implode(",",$order_ids_arr).")";
	// 		$po_sql = "SELECT a.job_no, a.buyer_name, a.insert_date, b.po_number, a.style_ref_no, b.id as po_id FROM wo_po_details_master a, wo_po_break_down b WHERE a.job_no=b.job_no_mst $order_ids";
	// 		$po_data = $this->db->query($po_sql)->result();

	// 		$po_details_array = array();
	// 		foreach ($po_data as $row)
	// 		{
	// 			$po_details_array[$row->PO_ID]['job_no'] = $row->JOB_NO;
	// 			$po_details_array[$row->PO_ID]['buyer_name'] = $buyer_arr[$row->BUYER_NAME];
	// 			$po_details_array[$row->PO_ID]['style_ref_no'] = $row->STYLE_REF_NO;
	// 			$po_details_array[$row->PO_ID]['year'] = date("Y", strtotime($row->INSERT_DATE));
	// 			$po_details_array[$row->PO_ID]['po_number'] = $row->PO_NUMBER;
	// 			$po_details_array[$row->PO_ID]['buyer_id'] = $row->BUYER_NAME;
	// 		}
	// 	}

	// 	if(!empty($all_sales_id_arr))
	// 	{
	// 		$all_sales_ids= implode(",",$all_sales_id_arr);
	// 		$sales_array=sql_select("SELECT id as po_id,job_no,job_no_prefix_num, sales_booking_no, buyer_id, po_buyer, within_group FROM fabric_sales_order_mst WHERE status_active=1 and is_deleted=0 and id in(".$all_sales_ids.")");
	// 		$sales_arr=array();
	// 		foreach($sales_array as $row)
	// 		{
	// 			if($row->WITHIN_GROUP==1)
	// 			{
	// 				$po_buyer = $row->PO_BUYER;
	// 			}else{
	// 				$po_buyer = $row->BUYER_ID;
	// 			}
	// 			$sales_arr[$row->PO_ID]['sales_order']=$row->JOB_NO;
	// 			$sales_arr[$row->PO_ID]['job_no']=$row->JOB_NO_PREFIX_NUM;
	// 			$sales_arr[$row->PO_ID]['buyer_id']=$po_buyer;
	// 			$sales_arr[$row->PO_ID]['buyer_name']= $buyer_arr[$po_buyer];
	// 			$sales_arr[$row->PO_ID]['sales_booking_no']=$row->SALES_BOOKING_NO;
	// 			$sales_arr[$row->PO_ID]['within_group']=$row->WITHIN_GROUP;
	// 		}
	// 		unset($sales_array);
	// 	}

	// 	if(!empty($samp_book_ids_arr))
	// 	{
	// 		$all_samp_book_ids= implode(",",$samp_book_ids_arr);
	// 		$sample_sql=sql_select("select a.id as ID, a.buyer_id as BUYER_ID, a.booking_no as BOOKING_NO from  wo_non_ord_samp_booking_mst a where a.status_active=1 and a.is_deleted=0 and a.id in (	$all_samp_book_ids)");
	// 		$sample_data=array();
	// 		foreach($sample_sql as $row)
	// 		{
	// 			$sample_data[$row->ID]["buyer_id"]=$row->BUYER_ID;
	// 			$sample_data[$row->ID]["buyer_name"]=$buyer_arr[$row->BUYER_ID];
	// 			$sample_data[$row->ID]["booking_no"]=$row->BOOKING_NO;
	// 		}
	// 	}

	// 	$receive_sql="SELECT a.id, a.entry_form, a.company_id, a.receive_basis, a.location_id, a.booking_no, a.booking_id, a.knitting_source, a.knitting_company, b.id as dtls_id, b.prod_id as PROD_ID, b.body_part_id as BODY_PART_ID, b.febric_description_id, b.gsm, b.width, b.color_id, b.yarn_lot, b.yarn_count, b.stitch_length, b.machine_no_id, b.brand_id, a.store_id, b.floor_id as FLOOR_ID, b.room as ROOM, b.rack as RACK, b.self as SELF,  b.bin_box as BIN_BOX, b.color_range_id, c.barcode_no, c.id as roll_id, c.roll_no, c.po_breakdown_id as PO_BREAKDOWN_ID, c.qnty as QNTY, c.roll_id as roll_id_prev,c.rate,c.booking_no as bwo, c.booking_without_order as BOOKING_WITHOUT_ORDER, c.is_transfer, c.transfer_criteria,c.is_sales, b.yarn_rate as YARN_RATE, b.kniting_charge as KNITING_CHARGE, c.rate as RATE
	// 	FROM pro_roll_details c, pro_grey_prod_entry_dtls b, inv_receive_master a
	// 	WHERE c.barcode_no=$barcode_no and c.entry_form in(2,22,58) and c.status_active=1 and c.is_deleted=0 and b.trans_id<>0 and a.entry_form in(2,22,58) and b.id=c.dtls_id and  a.id=b.mst_id";
	// 	$receive_data = $this->db->query($receive_sql)->result();
	// 	foreach($receive_data as $row)
	// 	{
	// 		$booking_no_id = $row->BOOKING_NO;
	// 		$color_id_show='';$color='';
	// 		$color_id=explode(",",$row->COLOR_ID);
	// 		foreach($color_id as $val)
	// 		{
	// 			if($val>0) $color_id_show.=$color_arr[$val].",";
	// 			if($val>0) $color.=$val.",";
	// 		}
	// 		$color_id_show=chop($color_id_show,',');
	// 		$color=chop($color,',');

	// 		if($row->ENTRY_FORM==58)
	// 		{
	// 			$roll_id = $row->ROLL_ID_PREV;
	// 		}
	// 		else
	// 		{
	// 			$roll_id = $row->ROLL_ID;
	// 		}

	// 		if($trans_or_issue_returned_data[$row->BARCODE_NO]["barcode_no"])
	// 		{
	// 			$to_company_id = $trans_or_issue_returned_data[$row->BARCODE_NO]["to_company"];
	// 			$to_store = $trans_or_issue_returned_data[$row->BARCODE_NO]["to_store"];
	// 			$to_floor_id = $trans_or_issue_returned_data[$row->BARCODE_NO]["to_floor_id"];
	// 			$to_room = $trans_or_issue_returned_data[$row->BARCODE_NO]["to_room"];
	// 			$to_rack = $trans_or_issue_returned_data[$row->BARCODE_NO]["to_rack"];
	// 			$to_shelf = $trans_or_issue_returned_data[$row->BARCODE_NO]["to_self"];
	// 			$to_bin_box = $trans_or_issue_returned_data[$row->BARCODE_NO]["to_bin_box"];
	// 			$po_breakdown_id = $trans_or_issue_returned_data[$row->BARCODE_NO]["po_breakdown_id"];
	// 			$to_prod_id = $trans_or_issue_returned_data[$row->BARCODE_NO]["to_prod_id"];
	// 			$body_part_id = $trans_or_issue_returned_data[$row->BARCODE_NO]["body_part_id"];
	// 			$booking_without_order = $trans_or_issue_returned_data[$row->BARCODE_NO]["booking_without_order"];
	// 			$is_sales = $trans_or_issue_returned_data[$row->BARCODE_NO]["is_sales"];
	// 			$yarn_rate = $trans_or_issue_returned_data[$row->BARCODE_NO]["yarn_rate"];
	// 			$kniting_charge = $trans_or_issue_returned_data[$row->BARCODE_NO]["kniting_charge"];
	// 			$rate = $trans_or_issue_returned_data[$row->BARCODE_NO]["rate"];
	// 		}
	// 		else
	// 		{
	// 			$to_company_id = $row->COMPANY_ID;
	// 			$to_store = $row->STORE_ID;
	// 			$to_floor_id = $row->FLOOR_ID;
	// 			$to_room =  $row->ROOM;
	// 			$to_rack =  $row->RACK;
	// 			$to_shelf =  $row->SELF;
	// 			$to_bin_box = $row->BIN_BOX;
	// 			$po_breakdown_id = $row->PO_BREAKDOWN_ID;
	// 			$to_prod_id = $row->PROD_ID;
	// 			$body_part_id = $row->BODY_PART_ID;
	// 			$booking_without_order = $row->BOOKING_WITHOUT_ORDER;
	// 			$is_sales = $row->IS_SALES;
	// 			$yarn_rate = $row->YARN_RATE;
	// 			$kniting_charge = $row->KNITING_CHARGE;
	// 			$rate = $row->RATE;
	// 		}
	// 		$samp_booking ="";$fso_or_job_no ="";$fso_booking_no="";
	// 		if($is_sales ==1)
	// 		{
	// 			$fso_or_job_no =  $sales_arr[$po_breakdown_id]['sales_order'];
	// 			$buyer_name =  $sales_arr[$po_breakdown_id]['buyer_name'];
	// 			$buyer_id =  $sales_arr[$po_breakdown_id]['buyer_id'];
	// 			$fso_booking_no = $sales_arr[$po_breakdown_id]['sales_booking_no'];
	// 		}
	// 		else
	// 		{
	// 			if($booking_without_order ==0)
	// 			{
	// 				$buyer_id = $po_details_array[$po_breakdown_id]['buyer_id'];
	// 				$buyer_name = $po_details_array[$po_breakdown_id]['buyer_name'];
	// 			}
	// 			else
	// 			{
	// 				$buyer_id = $sample_data[$po_breakdown_id]["buyer_id"];
	// 				$buyer_name = $sample_data[$po_breakdown_id]["buyer_name"];
	// 				$samp_booking = $sample_data[$po_breakdown_id]["booking_no"];
	// 			}
	// 			$fso_or_job_no = $po_details_array[$po_breakdown_id]['job_no'];
	// 		}
			
	// 		$roll_info["MasterPart"]['COMPANY_ID'] = $to_company_id;
	// 		$roll_info["MasterPart"]['KNITTING_SOURCE_ID'] = $row->KNITTING_SOURCE;
	// 		$roll_info["MasterPart"]['KNITTING_SOURCE'] = $knitting_source[$row->KNITTING_SOURCE];
	// 		$roll_info["MasterPart"]['KNITTING_COMPANY_ID'] = $row->KNITTING_COMPANY;
	// 		if ($row->KNITTING_SOURCE == 1) {
	// 			$roll_info["MasterPart"]['KNITTING_COMPANY'] = $company_arr[$row->KNITTING_COMPANY];
	// 		} else if ($row->KNITTING_SOURCE == 3) {
	// 			$roll_info["MasterPart"]['KNITTING_COMPANY'] = $supplier_arr[$row->KNITTING_COMPANY];
	// 		}

	// 		$roll_info["DtlsPart"]['BARCODE_NO'] = $row->BARCODE_NO;
	// 		$roll_info["DtlsPart"]['BUYER_ID'] = $buyer_id;
	// 		$roll_info["DtlsPart"]['BUYER_NAME'] = $buyer_name;

	// 		if ($row->KNITTING_SOURCE == 1) {
	// 			$roll_info["DtlsPart"]['KNITTING_COMPANY'] = $company_arr[$row->KNITTING_COMPANY];
	// 		} else if ($row->KNITTING_SOURCE == 3) {
	// 			$roll_info["DtlsPart"]['KNITTING_COMPANY'] = $supplier_arr[$row->KNITTING_COMPANY];
	// 		}
	// 		$roll_info["DtlsPart"]['BOOKING_WITHOUT_ORDER'] = $booking_without_order;
	// 		$roll_info["DtlsPart"]['BOOKING_ID'] = $row->BOOKING_ID;
	// 		$roll_info["DtlsPart"]['SAMP_BOOKING'] = $samp_booking;
	// 		$roll_info["DtlsPart"]['FSO_BOOKING'] = $fso_booking_no;
	// 		$roll_info["DtlsPart"]['BODY_PART_ID'] = $body_part_id;
	// 		$roll_info["DtlsPart"]['BODY_PART_NAME'] = $buyer_part_arr[$body_part_id];
	// 		$roll_info["DtlsPart"]['YARN_LOT'] = $row->YARN_LOT;
	// 		$roll_info["DtlsPart"]['BRAND_ID'] = $row->BRAND_ID;
	// 		$roll_info["DtlsPart"]['BRAND_NAME'] = $brand_name_arr[$row->BRAND_ID];
	// 		$roll_info["DtlsPart"]['SHIFT_NAME'] = $row->SHIFT_NAME;

	// 		$roll_info["DtlsPart"]['STORE_ID'] = $to_store;
	// 		$roll_info["DtlsPart"]['FLOOR_ID'] = $to_floor_id;
	// 		$roll_info["DtlsPart"]['ROOM_ID'] = $to_room;
	// 		$roll_info["DtlsPart"]['RACK_ID'] = $to_rack;
	// 		$roll_info["DtlsPart"]['SHELF_ID'] = $to_shelf;
	// 		$roll_info["DtlsPart"]['BIN_BOX_ID'] = $to_bin_box;

	// 		$roll_info["DtlsPart"]['MACHINE_NO_ID'] = $row->MACHINE_NO_ID;
	// 		$roll_info["DtlsPart"]['MACHINE_NAME'] = $machine_name_arr[$row->MACHINE_NO_ID];
	// 		$roll_info["DtlsPart"]['YARN_COUNT'] = $row->YARN_COUNT;
	// 		$roll_info["DtlsPart"]['COLOR_ID'] = $color;
	// 		$roll_info["DtlsPart"]['COLOR_NAME'] = $color_arr[$color];
	// 		$roll_info["DtlsPart"]['COLOR_RANGE_ID'] = $row->COLOR_RANGE_ID;
	// 		$roll_info["DtlsPart"]['COLOR_RANGE_NAME'] = $color_range[$row->COLOR_RANGE_ID];
	// 		$roll_info["DtlsPart"]['UOM'] = $barcode_no_info[$row->BARCODE_NO]['UOM'];
	// 		$roll_info["DtlsPart"]['DTLS_ID'] = $row->DTLS_ID;
	// 		$roll_info["DtlsPart"]['PROD_ID'] = $to_prod_id;
	// 		$roll_info["DtlsPart"]['DETER_ID'] = $row->FEBRIC_DESCRIPTION_ID;
	// 		$roll_info["DtlsPart"]['CONSTRUCTION'] = $constructtion_arr[$row->FEBRIC_DESCRIPTION_ID];
	// 		$roll_info["DtlsPart"]['COMPOSITION'] = $composition_arr[$row->FEBRIC_DESCRIPTION_ID];
	// 		$roll_info["DtlsPart"]['GSM'] = $row->GSM;
	// 		$roll_info["DtlsPart"]['WIDTH'] = $row->WIDTH;
	// 		$roll_info["DtlsPart"]['STITCH_LENGTH'] = $row->STITCH_LENGTH;
	// 		$roll_info["DtlsPart"]['ROLL_ID'] = $roll_id;
	// 		$roll_info["DtlsPart"]['ROLL_NO'] = $row->ROLL_NO;
	// 		$roll_info["DtlsPart"]['PO_BREAKDOWN_ID'] = $po_breakdown_id;
	// 		$roll_info["DtlsPart"]['PO_NUMBER'] = $po_details_array[$po_breakdown_id]['po_number'];
	// 		$roll_info["DtlsPart"]['JOB_NO'] = $fso_or_job_no;
	// 		$quantity = number_format($row->QNTY, 2, '.', '');
	// 		$quantity = $quantity.' ';
	// 		$roll_info["DtlsPart"]['QNTY'] = $quantity; //number_format($row->QNTY, 2, '.', '');
	// 		$roll_info["DtlsPart"]['REJECT_QNTY'] = number_format($row->REJECT_QNTY, 2, '.', '');
	// 		$roll_info["DtlsPart"]['YARN_RATE'] = $yarn_rate;
	// 		$roll_info["DtlsPart"]['KNITING_CHARGE'] = $kniting_charge;
	// 		$roll_info["DtlsPart"]['ROLL_RATE'] = $rate;
	// 		$roll_info["DtlsPart"]['IS_SALES'] = $is_sales;
	// 		$roll_info["DtlsPart"]['JOB_MIXING_VAR'] = $variable_inventory_arr[$to_company_id];
	// 		$roll_info["DtlsPart"]['PROGRAM_NO'] = $production_program_no[$row->BARCODE_NO];
	// 		$roll_info["status"] = "Success";
	// 		$roll_info["msg"] = "Success";
	// 	}
	// 	if($roll_info)
	// 	{
	// 		return $roll_info;
	// 	}
	// 	else
	// 	{
	// 		return [];
	// 	}
		
	// }
	public function get_roll_info_for_transfer($barcode_no)
	{
		$query_barcode_details = "SELECT c.BARCODE_NO, c.PO_BREAKDOWN_ID, c.QNTY,d.COMPANY_ID,c.ID as ROLL_ID
		from inv_receive_master a, pro_grey_prod_entry_dtls b, pro_roll_details c, product_details_master d
		WHERE a.id=b.mst_id and b.id=c.dtls_id and b.prod_id=d.id and b.trans_id<>0 and a.entry_form in(2,22,58,84) and c.entry_form in(2,22,58,84) and c.is_transfer!=6 and c.re_transfer=0 and c.status_active=1 and c.is_deleted=0 and c.barcode_no =$barcode_no and c.is_service=0 and c.is_sales=1
		union all
		select c.BARCODE_NO, c.PO_BREAKDOWN_ID, c.QNTY, d.COMPANY_ID,c.ID as ROLL_ID
		from inv_item_transfer_mst a, inv_item_transfer_dtls b, pro_roll_details c, product_details_master d
		WHERE a.id=b.mst_id and b.id=c.dtls_id and b.from_prod_id=d.id and a.entry_form in(133) and c.entry_form in(133) and c.re_transfer=0 and c.status_active=1 and c.is_deleted=0 and c.barcode_no = $barcode_no and c.is_service=0 and c.is_sales=1
		order by barcode_no";

		$table_barcode_details = $this->db->query($query_barcode_details)->row();

		if($table_barcode_details)
		{
			$barcode_data = [
				"MasterPart"=> [
					"COMPANY_ID" => $table_barcode_details->COMPANY_ID,
				],
				"DtlsPart" => [
					"BARCODE_NO" => $table_barcode_details->BARCODE_NO,
					"PO_BREAKDOWN_ID" => $table_barcode_details->PO_BREAKDOWN_ID,
					"ROLL_ID" => $table_barcode_details->ROLL_ID,
					"QNTY" => round($table_barcode_details->QNTY,2)
				]
			];
			$status = 200;
			$msg = "";
		}else{
			$barcode_data = [];
			$status = 404;
			$msg = "No Data Found";
		}
		

		return $data_array = 
		[
			"barcode_data" => $barcode_data,
			"status" => $status,
			"msg" => $msg,
		];
	}

	public function get_barcode_info($challan_no, $barcode)
	{
		$company_sql = "select id,company_name from lib_company";
		$company_data = $this->db->query($company_sql)->result();
		foreach ($company_data as $row) {
			$company_arr[$row->ID] = $row->COMPANY_NAME;
		}

		$composition_arr = $constructtion_arr = array();
		$composition_sql = "select id,composition_name from  lib_composition_array where status_active=1 and is_deleted=0 order by composition_name";
		$composition_data = $this->db->query($composition_sql)->result();
		foreach ($composition_data as $row) {
			$compositions_arr[$row->ID] = $row->COMPOSITION_NAME;
		}
		$fabrication_sql = "select a.id, a.construction, b.copmposition_id, b.percent from lib_yarn_count_determina_mst a, lib_yarn_count_determina_dtls b where a.id=b.mst_id";
		$fabrication_data = $this->db->query($fabrication_sql)->result();
		foreach ($fabrication_data as $row) {
			$constructtion_arr[$row->ID] = $row->CONSTRUCTION;
			$composition_arr[$row->ID] .= $compositions_arr[$row->COPMPOSITION_ID] . " " . $row->PERCENT . "% ";
		}

		$brand_array = return_library_array("SELECT id, brand_name as brand_name from lib_brand where status_active=1 and is_deleted=0", "id", "brand_name");

		$machine_sql = "select id, MACHINE_NO from LIB_MACHINE_NAME where status_active=1 and is_deleted=0";
		$machine_data = $this->db->query($machine_sql)->result();
		foreach ($machine_data as $row) {
			$machine_name_arr[$row->ID] = $row->MACHINE_NO;
		}

		$color_sql = "select id, color_name from lib_color where status_active=1 and is_deleted=0";
		$color_data = $this->db->query($color_sql)->result();
		foreach ($color_data as $row) {
			$color_arr[$row->ID] = $row->COLOR_NAME;
		}

		$challan_cond ="";
		if($challan_no)
		{
			$challan_cond = "and a.sys_number='$challan_no'";
		}

		$scan_barcode_cond ="";
		if($barcode)
		{
			$scan_barcode_cond = "and c.barcode_no='$barcode'";
		}


		$challan_sql = "select a.id, a.sys_number_prefix_num,a.sys_number,a.delevery_date, a.company_id, a.order_status, a.location_id, a.buyer_id, c.barcode_no, b.id as dtls_id, c.id as roll_id, c.is_sales, c.po_breakdown_id, c.booking_without_order
		from pro_grey_prod_delivery_mst a, pro_grey_prod_delivery_dtls b, pro_roll_details c
		where a.id=b.mst_id and b.id=c.dtls_id and b.barcode_num=c.barcode_no $challan_cond $scan_barcode_cond and a.entry_form in(56) and c.entry_form in(56) and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0 and c.is_deleted=0 and c.status_active=1 order by c.id";
		$challan_data = $this->db->query($challan_sql)->result();
		$delivery_barcode_arr = array();
		foreach ($challan_data as $row) {
			$delivery_barcode_arr[$row->BARCODE_NO] = $row->BARCODE_NO;
			$delivery_rowo[$row->BARCODE_NO]["DELIVERY_ID"] = $row->ID;
			$delivery_rowo[$row->BARCODE_NO]["SYS_NUMBER_PREFIX_NUM"] = $row->SYS_NUMBER_PREFIX_NUM;
			$delivery_rowo[$row->BARCODE_NO]["SYS_NUMBER"] = $row->SYS_NUMBER;
			$delivery_rowo[$row->BARCODE_NO]["DELEVERY_DATE"] = $row->DELEVERY_DATE;

			if($row->BOOKING_WITHOUT_ORDER == 1)
			{
				$non_ord_id_arr[$row->PO_BREAKDOWN_ID] = $row->PO_BREAKDOWN_ID;
			}
			else if($row->IS_SALES == 0)
			{
				$order_id_arr[$row->PO_BREAKDOWN_ID] = $row->PO_BREAKDOWN_ID;
			}
			else
			{
				$sales_id_arr[$row->PO_BREAKDOWN_ID] = $row->PO_BREAKDOWN_ID;
			}
		}

		if(!empty($delivery_barcode_arr)){
			$barcode_nos = implode(",",$delivery_barcode_arr);
			$check_barcode = $this->check_if_barcode_already_received($barcode_nos);
			$pre_rcv_barcode_sql = "SELECT b.recv_number,c.barcode_no FROM pro_roll_details c,inv_receive_master b WHERE c.entry_form in(58) and c.barcode_no in($barcode_nos) and c.status_active=1 and c.is_deleted=0 and c.mst_id=b.id and b.entry_form=58 and b.status_active=1";
			$pre_rcv_barcode = $this->db->query($pre_rcv_barcode_sql)->result();

			foreach ($pre_rcv_barcode as $val)
			{
				$pre_rcv_mrr_arr[$val->BARCODE_NO] = $val->BARCODE_NO;
			}
		}

		$non_ord_samp_booking_id = implode(",",array_filter($non_ord_id_arr));
		if($non_ord_samp_booking_id!="")
		{
			$sqlsamplnoOrderSql = "select id,insert_date,buyer_id from wo_non_ord_samp_booking_mst where id in($non_ord_samp_booking_id) and status_active=1 and is_deleted=0";
			$sqlsamplnoOrder = $this->db->query($sqlsamplnoOrderSql)->result();
			foreach ($sqlsamplnoOrder as $row) {
				$no_order_details_array[$row->ID]['buyer_id'] = $buyer_array[$row->BUYER_ID];
				$no_order_details_array[$row->ID]['year'] = date("Y", strtotime($row->INSERT_DATE));
			}
		}

		$order_id_arr = array_filter($order_id_arr);
		$order_ids = implode(",",$order_id_arr);
		if(!empty($order_id_arr))
		{
			if($db_type==2 && count($order_id_arr)>999)
			{
				$order_id_chunk_arr =array_chunk($order_id_arr, 999);
				$all_order_id_cond=" and (";
				foreach ($order_id_chunk_arr as $value)
				{
					$all_order_id_cond .="b.id in (".implode(",", $value).") or ";
				}
				$all_order_id_cond=chop($all_order_id_cond,"or ");
				$all_order_id_cond.=")";
			}
			else
			{
				$all_order_id_cond=" and b.id in ($order_ids)";
			}

			$po_sql = "SELECT a.job_no, a.buyer_name, a.insert_date, b.po_number, a.style_ref_no, b.id as po_id, c.booking_no FROM wo_po_details_master a, wo_po_break_down b, wo_booking_dtls c WHERE a.id=b.job_id and b.id=c.po_break_down_id $all_order_id_cond";
			$po_data = $this->db->query($po_sql)->result();
			$po_details_array = array();
			foreach ($po_data as $row)
			{
				$po_details_array[$row->PO_ID]['job_no'] = $row->JOB_NO;
				$po_details_array[$row->PO_ID]['booking_no'] = $row->BOOKING_NO;
			}
		}

		$sales_id_arr = array_filter($sales_id_arr);
		$sales_ids = implode(",",$sales_id_arr);
		if(!empty($sales_id_arr))
		{
			if($db_type==2 && count($sales_id_arr)>999)
			{
				$sales_id_chunk_arr =array_chunk($sales_id_arr, 999);
				$all_sales_id_cond=" and (";
				foreach ($sales_id_chunk_arr as $value)
				{
					$all_sales_id_cond .="id in (".implode(",", $value).") or ";
				}
				$all_sales_id_cond=chop($all_sales_id_cond,"or ");
				$all_sales_id_cond.=")";
			}
			else
			{
				$all_sales_id_cond=" and id in ($sales_ids)";
			}

			$po_sql = "SELECT job_no, sales_booking_no, id FROM fabric_sales_order_mst WHERE status_active=1 $all_order_id_cond";
			$po_data = $this->db->query($po_sql)->result();
			$po_details_array = array();
			foreach ($po_data as $row)
			{
				$sales_details_array[$row->ID]['job_no'] = $row->JOB_NO;
				$sales_details_array[$row->ID]['booking_no'] = $row->SALES_BOOKING_NO;
			}
			unset($po_data);
		}

		$roll_rowo = $barcode_array = $order_ids_arr = array();
		if (!empty($delivery_barcode_arr)) {

			$production_sql = "SELECT a.id, a.company_id, a.recv_number,a.location_id, a.receive_basis, a.receive_date, a.booking_id, a.booking_no, a.knitting_source, a.knitting_company, a.buyer_id, c.booking_without_order, b.id as dtls_id, b.prod_id, b.febric_description_id, b.gsm, b.width, b.body_part_id,b.yarn_lot,b.brand_id,b.shift_name,b.floor_id,b.machine_no_id,c.rate,  b.yarn_count, b.uom,b.color_id,b.color_range_id, b.stitch_length, c.barcode_no, c.id as roll_id, c.roll_no, c.po_breakdown_id, c.qnty, c.reject_qnty, c.is_sales,b.kniting_charge, b.yarn_rate
			FROM inv_receive_master a, pro_grey_prod_entry_dtls b, pro_roll_details c
			WHERE a.id=b.mst_id and b.id=c.dtls_id and a.entry_form=2 and c.entry_form=2 and c.status_active=1 and c.is_deleted=0 and c.barcode_no in (" . implode(",", $delivery_barcode_arr) . ")";
			$production_data = $this->db->query($production_sql)->result();
		}


		if (!empty($production_data))
		{
			$i=0;
			foreach ($production_data as $row)
			{
				if($pre_rcv_mrr_arr[$row->BARCODE_NO]=="")
				{
					$color_id_show='';
					$color_id=explode(",",$row->COLOR_ID);
					foreach($color_id as $val)
					{
						if($val>0) $color_id_show.=$color_arr[$val].",";
					}
					$color_id_show=chop($color_id_show,',');

					$quantity = number_format($row->QNTY, 2, '.', '');
					$quantity = $quantity.' ';

					$roll_rowo["MasterPart"]['status'] = 'Success';
					$roll_rowo["MasterPart"]['msg'] = '';
					$roll_rowo["MasterPart"]['COMPANY_ID'] = $row->COMPANY_ID;
					$roll_rowo["MasterPart"]['SYS_NUMBER'] = $delivery_rowo[$row->BARCODE_NO]["SYS_NUMBER"];

					$roll_rowo["DtlsPart"][$i]['BARCODE_NO'] = $row->BARCODE_NO;
					$roll_rowo["DtlsPart"][$i]['ROLL_NO'] = $row->ROLL_NO;
					$roll_rowo["DtlsPart"][$i]['QNTY'] = $quantity; //number_format($row->QNTY, 2, '.', '');

					$job_no=$booking_no="";
					if($row->BOOKING_WITHOUT_ORDER == 0)
					{
						if( $row->IS_SALES ==0)
						{
							$job_no = $po_details_array[$row->PO_BREAKDOWN_ID]['job_no'];
							$booking_no = $po_details_array[$row->PO_BREAKDOWN_ID]['booking_no'];
						}
						else
						{
							$job_no = $sales_details_array[$row->PO_BREAKDOWN_ID]['job_no'];
							$booking_no = $sales_details_array[$row->PO_BREAKDOWN_ID]['booking_no'];
						}
					}

					$roll_rowo["DtlsPart"][$i]['JOB_NO'] = $job_no;
					$roll_rowo["DtlsPart"][$i]['BOOKING_NO'] = $booking_no;

					$program_no="";
					if($row->RECEIVE_BASIS ==2)
					{
						$program_no= $row->BOOKING_ID;
					}
					$roll_rowo["DtlsPart"][$i]['PROGRAM_NO'] = $program_no;

					$roll_rowo["DtlsPart"][$i]['CONSTRUCTION'] = $constructtion_arr[$row->FEBRIC_DESCRIPTION_ID];
					$roll_rowo["DtlsPart"][$i]['COMPOSITION'] = $composition_arr[$row->FEBRIC_DESCRIPTION_ID];
					$roll_rowo["DtlsPart"][$i]['GSM'] = $row->GSM;
					$roll_rowo["DtlsPart"][$i]['WIDTH'] = $row->WIDTH;
					$roll_rowo["DtlsPart"][$i]['COLOR_NAME'] = $color_id_show;
					$roll_rowo["DtlsPart"][$i]['YARN_LOT'] = $row->YARN_LOT;
					$roll_rowo["DtlsPart"][$i]['STITCH_LENGTH'] = $row->STITCH_LENGTH.' ';
					$roll_rowo["DtlsPart"][$i]['BRAND_ID'] = $brand_array[$row->BRAND_ID];
					$roll_rowo["DtlsPart"][$i]['SYS_NUMBER'] = $delivery_rowo[$row->BARCODE_NO]["SYS_NUMBER"];
					$roll_rowo["DtlsPart"][$i]['MACHINE_NAME'] =$machine_name_arr[$row->MACHINE_NO_ID];

					$i++;
				}
			}
		}
		if(!empty($roll_rowo)){
			return $roll_rowo;
		}
		else
		{
			return array("MasterPart"=>array("status"=> "Failed","msg"=> "This Delivery Challan / Barcode is not valid. Please scan again."));
		}
	}

	public function roll_delivery_barcode_receive($plan_obj)
	{
		$response_obj = json_decode($plan_obj);

		$pc_date_time = date("d-M-Y h:i:s A",time());
		$receive_date = date("d-M-Y");

		$mst_row = $response_obj->resultset->MasterPart;
		$mst_row->DELIVERY_NUMBER;
		$mst_row->COMPANY_ID;
		$mst_row->RECEIVE_DATE;
		$mst_row->STORE_ROOM_RACK_ID;
		

		// CHECK IF BARCODES ARE ALREADY RECEIVED
		foreach ($response_obj->resultset->DtlsPart as $dtls_row)
		{
			$all_barcodeNo_arr[$dtls_row->BARCODE_NO] =$dtls_row->BARCODE_NO;
		}
		if(!empty($all_barcodeNo_arr))
		{
			$barcod_NOs = implode(",", $all_barcodeNo_arr);
			$all_barcode_no_cond=""; $barCond="";
			if($db_type==2 && count($all_barcodeNo_arr)>999)
			{
				$all_barcodeNo_arr_chunk=array_chunk($all_barcodeNo_arr,999) ;
				foreach($all_barcodeNo_arr_chunk as $chunk_arr)
				{
					$chunk_arr_value=implode(",",$chunk_arr);
					$barCond.=" c.barcode_no in($chunk_arr_value) or ";
				}

				$all_barcode_no_cond.=" and (".chop($barCond,'or ').")";
			}
			else
			{
				$all_barcode_no_cond=" and c.barcode_no in($barcod_NOs)";
			}

			$pre_rcv_barcode_sql = "SELECT b.recv_number,c.barcode_no FROM pro_roll_details c,inv_receive_master b WHERE c.entry_form in(58) $all_barcode_no_cond and c.status_active=1 and c.is_deleted=0 and c.mst_id=b.id and b.entry_form=58 and b.status_active=1";
			$pre_rcv_barcode = $this->db->query($pre_rcv_barcode_sql)->result();

			foreach ($pre_rcv_barcode as $val)
			{
				$pre_rcv_mrr_arr[$val->RECV_NUMBER] = $val->RECV_NUMBER;
			}
			if(!empty($pre_rcv_mrr_arr)){
				$pre_rcv_mrr = implode(", ", $pre_rcv_mrr_arr);
				return array("MasterPart"=>array("status"=> "Failed","msg"=> "Barcode(s) already Received. Receive ID(s) = $pre_rcv_mrr"));
				die;
			}
		}

		$variable_inventory_sql = "select company_name, store_method from variable_settings_inventory  where item_category_id=13 and variable_list=21 and status_active=1 and is_deleted=0 and rack_balance=1 and company_name=$mst_row->COMPANY_ID";
		$variable_inventory_res = $this->db->query($variable_inventory_sql)->result();
		foreach ($variable_inventory_res as $row) {
			$STORE_METHOD = $row->STORE_METHOD;
		}

		//a.location_id, a.store_id, a.floor_id, a.room_id, a.rack_id, a.shelf_id, a.bin_id

		if($STORE_METHOD==1)
		{
			$room_rack_variable_maintain_cond = " and a.store_id= $mst_row->STORE_ROOM_RACK_ID";
		}
		else if($STORE_METHOD==2)
		{
			$room_rack_variable_maintain_cond = " and a.floor_id= $mst_row->STORE_ROOM_RACK_ID";
		}
		else if($STORE_METHOD==3)
		{
			$room_rack_variable_maintain_cond = " and a.room_id= $mst_row->STORE_ROOM_RACK_ID";
		}
		else if($STORE_METHOD==4)
		{
			$room_rack_variable_maintain_cond = " and a.rack_id= $mst_row->STORE_ROOM_RACK_ID";
		}
		else if($STORE_METHOD==5)
		{
			$room_rack_variable_maintain_cond = " and a.shelf_id= $mst_row->STORE_ROOM_RACK_ID";
		}
		else if($STORE_METHOD==6)
		{
			$room_rack_variable_maintain_cond = " and a.bin_id= $mst_row->STORE_ROOM_RACK_ID";
		}
		else
		{
			$room_rack_variable_maintain_cond = " and a.store_id= $mst_row->STORE_ROOM_RACK_ID";
		}

		$lib_room_rack_self_sql = "select a.location_id, a.store_id, a.floor_id, a.room_id, a.rack_id, a.shelf_id, a.bin_id from lib_floor_room_rack_dtls a where a.floor_room_rack_dtls_id=$mst_row->STORE_ROOM_RACK_ID and a.status_active=1 $room_rack_variable_maintain_cond";
		$lib_room_rack_self_res = $this->db->query($lib_room_rack_self_sql)->result();

		if(empty($lib_room_rack_self_res))
		{
			return array("MasterPart"=>array("status"=> "Failed","msg"=> "Location not found according to variable setup"));
		}

		foreach ($lib_room_rack_self_res as $row) {
			$LOCATION_ID = $row->LOCATION_ID;
			$STORE_ID = $row->STORE_ID;

			if( $row->FLOOR_ID)
			{
				$FLOOR_ID = $row->FLOOR_ID;
			}else{
				$FLOOR_ID =0;
			}
			if( $row->ROOM_ID)
			{
				$ROOM_ID = $row->ROOM_ID;
			}else{
				$ROOM_ID =0;
			}
			if($row->RACK_ID)
			{
				$RACK_ID = $row->RACK_ID;
			}else{
				$RACK_ID =0;
			}
			if( $row->SHELF_ID)
			{
				$SHELF_ID = $row->SHELF_ID;
			}else{
				$SHELF_ID =0;
			}
			if( $row->BIN_ID)
			{
				$BIN_ID = $row->BIN_ID;
			}else{
				$BIN_ID =0;
			}	
			
		}

		$challan_sql = "select a.id, a.sys_number_prefix_num,a.sys_number,a.delevery_date, a.company_id, a.order_status, a.location_id, a.buyer_id, c.barcode_no, b.id as dtls_id, c.id as roll_id, c.is_sales, c.po_breakdown_id, c.booking_without_order
		from pro_grey_prod_delivery_mst a, pro_grey_prod_delivery_dtls b, pro_roll_details c
		where a.id=b.mst_id and b.id=c.dtls_id and b.barcode_num=c.barcode_no and a.sys_number='$mst_row->DELIVERY_NUMBER' and a.entry_form in(56) and c.entry_form in(56) and a.status_active=1 and a.is_deleted=0 and b.status_active=1 and b.is_deleted=0 and c.is_deleted=0 and c.status_active=1 $all_barcode_no_cond order by c.id";
		$challan_data = $this->db->query($challan_sql)->result();

		if(empty($challan_data))
		{
			return array("MasterPart"=>array("status"=> "Failed","msg"=> "Barcode(s) Not Found in delivery challan"));
		}

		$delivery_barcode_arr = array();
		foreach ($challan_data as $row) {
			$delivery_barcode_arr[$row->BARCODE_NO] = $row->BARCODE_NO;
			$DELIVERY_ID = $row->ID;
		}

		$roll_rowo = array();
		if (!empty($delivery_barcode_arr)) 
		{

			$production_sql = "SELECT a.id, a.company_id, a.recv_number,a.location_id, a.receive_basis, a.receive_date, a.booking_id, a.booking_no, a.knitting_source, a.knitting_company, a.buyer_id, c.booking_without_order, b.id as dtls_id, b.prod_id, b.febric_description_id, b.gsm, b.width, b.body_part_id,b.yarn_lot,b.brand_id,b.shift_name,b.floor_id,b.machine_no_id,c.rate,  b.yarn_count, b.uom,b.color_id,b.color_range_id, b.stitch_length, c.barcode_no, c.id as roll_id, c.roll_no, c.po_breakdown_id, c.qnty, c.reject_qnty, c.is_sales,b.kniting_charge, b.yarn_rate
			FROM inv_receive_master a, pro_grey_prod_entry_dtls b, pro_roll_details c
			WHERE a.id=b.mst_id and b.id=c.dtls_id and a.entry_form=2 and c.entry_form=2 and c.status_active=1 and c.is_deleted=0 and c.barcode_no in (" . implode(",", $delivery_barcode_arr) . ")";
			$production_data = $this->db->query($production_sql)->result();

			foreach ($production_data as $row)
			{
				//$LOCATION_ID = $row->LOCATION_ID;
				$BOOKING_WITHOUT_ORDER = $row->BOOKING_WITHOUT_ORDER;
				$KNITTING_COMPANY_ID = $row->KNITTING_COMPANY;
				$KNITTING_SOURCE_ID = $row->KNITTING_SOURCE;
				$KNITTING_LOCATION_ID = $row->LOCATION_ID;

				$roll_rowo[$row->BARCODE_NO]['BARCODE_NO'] = $row->BARCODE_NO;
				$roll_rowo[$row->BARCODE_NO]['PROD_ID'] = $row->PROD_ID;
				$roll_rowo[$row->BARCODE_NO]['BRAND_ID'] = $row->BRAND_ID;
				$roll_rowo[$row->BARCODE_NO]['UOM'] = $row->UOM;
				$roll_rowo[$row->BARCODE_NO]['QNTY'] = $row->QNTY;
				$roll_rowo[$row->BARCODE_NO]['REJECT_QNTY'] = $row->REJECT_QNTY;
				$roll_rowo[$row->BARCODE_NO]['MACHINE_NO_ID'] = $row->MACHINE_NO_ID;
				$roll_rowo[$row->BARCODE_NO]['BOOKING_WITHOUT_ORDER'] = $row->BOOKING_WITHOUT_ORDER;
				$roll_rowo[$row->BARCODE_NO]['BODY_PART_ID'] = $row->BODY_PART_ID;
				$roll_rowo[$row->BARCODE_NO]['FEBRIC_DESCRIPTION_ID'] = $row->FEBRIC_DESCRIPTION_ID;
				$roll_rowo[$row->BARCODE_NO]['GSM'] = $row->GSM;
				$roll_rowo[$row->BARCODE_NO]['WIDTH'] = $row->WIDTH;
				$roll_rowo[$row->BARCODE_NO]['PO_BREAKDOWN_ID'] = $row->PO_BREAKDOWN_ID;
				$roll_rowo[$row->BARCODE_NO]['YARN_LOT'] = $row->YARN_LOT;
				$roll_rowo[$row->BARCODE_NO]['YARN_COUNT'] = $row->YARN_COUNT;
				$roll_rowo[$row->BARCODE_NO]['SHIFT_NAME'] = $row->SHIFT_NAME;
				$roll_rowo[$row->BARCODE_NO]['COLOR_ID'] = $row->COLOR_ID;
				$roll_rowo[$row->BARCODE_NO]['COLOR_RANGE_ID'] = $row->COLOR_RANGE_ID;
				$roll_rowo[$row->BARCODE_NO]['STITCH_LENGTH'] = $row->STITCH_LENGTH;
				$roll_rowo[$row->BARCODE_NO]['BOOKING_NO'] = $row->BOOKING_NO;
				$roll_rowo[$row->BARCODE_NO]['ROLL_ID'] = $row->ROLL_ID;
				$roll_rowo[$row->BARCODE_NO]['ROLL_NO'] = $row->ROLL_NO;
				$roll_rowo[$row->BARCODE_NO]['RATE'] = $row->RATE;
				$roll_rowo[$row->BARCODE_NO]['KNITING_CHARGE'] = $row->KNITING_CHARGE;
				$roll_rowo[$row->BARCODE_NO]['YARN_RATE'] = $row->YARN_RATE;
				$roll_rowo[$row->BARCODE_NO]['IS_SALES'] = $row->IS_SALES;


			}
		}

		$this->db->trans_start();
		$mst_row = $response_obj->resultset->MasterPart;
		if($mst_row)
		{

			$id=return_next_id_by_sequence( "INV_RECEIVE_MASTER_PK_SEQ","INV_RECEIVE_MASTER","","",0,"",0,0,0,0,0,0,0 );
			$new_mrr_number = explode("*", return_next_id_by_sequence("INV_RECEIVE_MASTER_PK_SEQ", "INV_RECEIVE_MASTER","",1,1,"KNGFRR",58,date("Y",time()),13 ));
			$receive_mrr = $new_mrr_number[0];
			$receive_mst_data = array(
				'ID'           => $id,
				'RECV_NUMBER_PREFIX'  => $new_mrr_number[1],
				'RECV_NUMBER_PREFIX_NUM'  => $new_mrr_number[2],
				'RECV_NUMBER'  => $receive_mrr,
				'ENTRY_FORM'  => 58,
				'ITEM_CATEGORY'  => 13,
				'RECEIVE_BASIS'  => 10,
				'COMPANY_ID'  => $mst_row->COMPANY_ID,
				'LOCATION_ID'  => $LOCATION_ID,
				'RECEIVE_DATE'  => $receive_date,
				'CHALLAN_NO'  => '',
				'BOOKING_ID'  => $DELIVERY_ID,
				'BOOKING_NO'  => $mst_row->DELIVERY_NUMBER,
				'BOOKING_WITHOUT_ORDER'  => $BOOKING_WITHOUT_ORDER,
				'STORE_ID'  => $STORE_ID,
				'LOCATION_ID'  => $LOCATION_ID,
				'KNITTING_SOURCE'  => $KNITTING_SOURCE_ID,
				'KNITTING_COMPANY'  => $KNITTING_COMPANY_ID,
				'KNITTING_LOCATION_ID'  => $KNITTING_LOCATION_ID,
				'YARN_ISSUE_CHALLAN_NO'  => '',
				'REMARKS'  => '',
				'FABRIC_NATURE'  => 2,
				'INSERTED_BY'  => $mst_row->USER_ID,
				'INSERT_DATE'  => $pc_date_time
			);
			if(!empty($receive_mst_data)){
				$this->insertData($receive_mst_data, 'INV_RECEIVE_MASTER');
			}
		}

		

		foreach ($response_obj->resultset->DtlsPart as $dtls_row)
		{
			$id_trans = return_next_id_by_sequence("INV_TRANSACTION_PK_SEQ", "inv_transaction", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
			$id_dtls = return_next_id_by_sequence("PRO_GREY_PROD_DTLS_PK_SEQ", "pro_grey_prod_entry_dtls", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
			$id_roll = return_next_id_by_sequence("PRO_ROLL_DTLS_PK_SEQ", "pro_roll_details", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
			$id_prop = return_next_id_by_sequence("ORDER_WISE_PROP_PK_SEQ", "order_wise_pro_details", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);


			$cons_rate = ($roll_rowo[$dtls_row->BARCODE_NO]['RATE'])*1; 
			$cons_amount = ($roll_rowo[$dtls_row->BARCODE_NO]['QNTY']) * $cons_rate;

			
			$receive_trans_data = array(
				'ID'        => $id_trans,
				'MST_ID'   => $id,
				'RECEIVE_BASIS' => 10,
				'PI_WO_BATCH_NO' => $id_dtls,
				'COMPANY_ID' => $mst_row->COMPANY_ID,
				'PROD_ID' => $roll_rowo[$dtls_row->BARCODE_NO]['PROD_ID'],
				'ITEM_CATEGORY' => 13,
				'TRANSACTION_TYPE' => 1,
				'TRANSACTION_DATE' => $receive_date,
				'STORE_ID' => $STORE_ID,
				'FLOOR_ID' => $FLOOR_ID,
				'ROOM' => $ROOM_ID,
				'RACK' => $RACK_ID,
				'SELF' => $SHELF_ID,
				'BIN_BOX' => $BIN_ID,
				'BRAND_ID' => $roll_rowo[$dtls_row->BARCODE_NO]['BRAND_ID'],
				'ORDER_UOM' => $roll_rowo[$dtls_row->BARCODE_NO]['UOM'],
				'ORDER_QNTY' =>$roll_rowo[$dtls_row->BARCODE_NO]['QNTY'],
				'CONS_UOM' => $roll_rowo[$dtls_row->BARCODE_NO]['UOM'],
				'CONS_QUANTITY' => $roll_rowo[$dtls_row->BARCODE_NO]['QNTY'],
				'CONS_AMOUNT' => $cons_amount,
				'CONS_RATE' => $cons_rate,
				'CONS_REJECT_QNTY' => $roll_rowo[$dtls_row->BARCODE_NO]['REJECT_QNTY'],
				'BALANCE_QNTY' => $roll_rowo[$dtls_row->BARCODE_NO]['QNTY'],
				'MACHINE_ID' => $roll_rowo[$dtls_row->BARCODE_NO]['MACHINE_NO_ID'],
				'BOOKING_WITHOUT_ORDER' => $roll_rowo[$dtls_row->BARCODE_NO]['BOOKING_WITHOUT_ORDER'],
				'INSERTED_BY' => $mst_row->USER_ID,
				'INSERT_DATE' => $pc_date_time
			);

			$receive_dtls_data = array(
				'ID'        => $id_dtls,
				'MST_ID'   => $id,
				'TRANS_ID' => $id_trans,
				'PROD_ID' => $roll_rowo[$dtls_row->BARCODE_NO]['PROD_ID'],
				'BODY_PART_ID' => $roll_rowo[$dtls_row->BARCODE_NO]['BODY_PART_ID'],
				'FEBRIC_DESCRIPTION_ID' => $roll_rowo[$dtls_row->BARCODE_NO]['FEBRIC_DESCRIPTION_ID'],
				'GSM' => $roll_rowo[$dtls_row->BARCODE_NO]['GSM'],
				'WIDTH' => $roll_rowo[$dtls_row->BARCODE_NO]['WIDTH'],
				'FLOOR_ID' =>$FLOOR_ID,
				'ROOM' =>$ROOM_ID,
				'RACK' =>$RACK_ID,
				'SELF' =>$SHELF_ID,
				'BIN_BOX' =>$BIN_ID,
				'NO_OF_ROLL' => 1,
				'ORDER_ID' => $roll_rowo[$dtls_row->BARCODE_NO]['PO_BREAKDOWN_ID'],
				'GREY_RECEIVE_QNTY' => $roll_rowo[$dtls_row->BARCODE_NO]['QNTY'],
				'REJECT_FABRIC_RECEIVE' => $roll_rowo[$dtls_row->BARCODE_NO]['REJECT_QNTY'],
				'UOM' => $roll_rowo[$dtls_row->BARCODE_NO]['UOM'],
				'YARN_LOT' => $roll_rowo[$dtls_row->BARCODE_NO]['YARN_LOT'],
				'YARN_COUNT' => $roll_rowo[$dtls_row->BARCODE_NO]['YARN_COUNT'],
				'BRAND_ID' => $roll_rowo[$dtls_row->BARCODE_NO]['BRAND_ID'],
				'SHIFT_NAME' => $roll_rowo[$dtls_row->BARCODE_NO]['SHIFT_NAME'],
				'MACHINE_NO_ID' => $roll_rowo[$dtls_row->BARCODE_NO]['MACHINE_NO_ID'],
				'COLOR_ID' =>$roll_rowo[$dtls_row->BARCODE_NO]['COLOR_ID'],
				'COLOR_RANGE_ID' => $roll_rowo[$dtls_row->BARCODE_NO]['COLOR_RANGE_ID'],
				'STITCH_LENGTH' =>  $roll_rowo[$dtls_row->BARCODE_NO]['STITCH_LENGTH'],
				'KNITING_CHARGE' =>  $roll_rowo[$dtls_row->BARCODE_NO]['KNITING_CHARGE'],
				'YARN_RATE' =>  $roll_rowo[$dtls_row->BARCODE_NO]['YARN_RATE'],
				'INSERTED_BY' => $mst_row->USER_ID,
				'INSERT_DATE' => $pc_date_time
			);

			$receive_roll_data = array(
				'ID'        => $id_roll,
				'MST_ID'   => $id,
				'DTLS_ID' => $id_dtls,
				'PO_BREAKDOWN_ID' => $roll_rowo[$dtls_row->BARCODE_NO]['PO_BREAKDOWN_ID'],
				'ENTRY_FORM' => 58,
				'QC_PASS_QNTY' => $roll_rowo[$dtls_row->BARCODE_NO]['QNTY'],
				'QNTY' => $roll_rowo[$dtls_row->BARCODE_NO]['QNTY'],
				'ROLL_ID' => $roll_rowo[$dtls_row->BARCODE_NO]['ROLL_ID'],
				'ROLL_NO' => $roll_rowo[$dtls_row->BARCODE_NO]['ROLL_NO'],
				'BARCODE_NO' => $dtls_row->BARCODE_NO,
				'BOOKING_NO' => $roll_rowo[$dtls_row->BARCODE_NO]['BOOKING_NO'],
				'BOOKING_WITHOUT_ORDER' => $roll_rowo[$dtls_row->BARCODE_NO]['BOOKING_WITHOUT_ORDER'],
				'IS_SALES' => $roll_rowo[$dtls_row->BARCODE_NO]['IS_SALES'],
				'INSERTED_BY' => $mst_row->USER_ID,
				'INSERT_DATE' => $pc_date_time
			);

			$receive_prop_data = array(
				'ID'        => $id_prop,
				'TRANS_ID' => $id_trans,
				'TRANS_TYPE' => 1,
				'DTLS_ID' => $id_dtls,
				'ENTRY_FORM' => 58,
				'PO_BREAKDOWN_ID' => $roll_rowo[$dtls_row->BARCODE_NO]['PO_BREAKDOWN_ID'],
				'QUANTITY' => $roll_rowo[$dtls_row->BARCODE_NO]['QNTY'],
				'PROD_ID' => $roll_rowo[$dtls_row->BARCODE_NO]['PROD_ID'],
				'IS_SALES' => $roll_rowo[$dtls_row->BARCODE_NO]['IS_SALES'],
				'INSERTED_BY' => $mst_row->USER_ID,
				'INSERT_DATE' => $pc_date_time
			);

			if(!empty($receive_trans_data)){
				$this->insertData($receive_trans_data, 'INV_TRANSACTION');
			}
			if(!empty($receive_dtls_data)){
				$this->insertData($receive_dtls_data, 'PRO_GREY_PROD_ENTRY_DTLS');
			}
			if(!empty($receive_roll_data)){
				$this->insertData($receive_roll_data, 'PRO_ROLL_DETAILS');
			}
			if(!empty($receive_prop_data)){
				$this->insertData($receive_prop_data, 'ORDER_WISE_PRO_DETAILS');
			}

			$prodData_array[$roll_rowo[$dtls_row->BARCODE_NO]['PROD_ID']]+=$roll_rowo[$dtls_row->BARCODE_NO]['QNTY'];
			$prodData_amount[$roll_rowo[$dtls_row->BARCODE_NO]['PROD_ID']]+=$cons_amount;
			$all_prod_id_arr[$roll_rowo[$dtls_row->BARCODE_NO]['PROD_ID']]=$roll_rowo[$dtls_row->BARCODE_NO]['PROD_ID'];

		}


		//=================================

	
		$all_prod_id=implode(",",$all_prod_id_arr);
		$prodResult=sql_select("select id, current_stock,stock_value,avg_rate_per_unit from product_details_master where id in($all_prod_id)");
		foreach($prodResult as $row)
		{
			$rcv_qty=$prodData_array[$row->ID];
			$rcv_amount=$prodData_amount[$row->ID];
			$current_stock=$row->CURRENT_STOCK  + $rcv_qty;
			$stock_value=$row->STOCK_VALUE + $rcv_amount;
			if($current_stock > 0)
			{
				$avg_rate=$stock_value/$current_stock;
			}
			else
			{
				$avg_rate=0;
			}		

			if(is_nan($avg_rate))
				$avg_rate=0;
			// if Qty is zero then rate & value will be zero
			if ($current_stock<=0) 
			{
				$stock_value=0;
				$avg_rate=0;
			}

			$product_table_update = "UPDATE product_details_master SET last_purchased_qnty=$rcv_qty, current_stock='$current_stock', stock_value='$stock_value', avg_rate_per_unit='$avg_rate',  updated_by=$mst_row->USER_ID, update_date='$pc_date_time' WHERE id=$row->ID";
			$this->db->query($product_table_update);
		}

		//========================

		$this->db->trans_complete();
		if ($this->db->trans_status() == TRUE) {
			return array("MasterPart"=>array("status"=> "Success","msg"=> "Receive ID = $receive_mrr"));
		} else {
			return array("MasterPart"=>array("status"=> "Failed","msg"=> "Receive ID = $receive_mrr"));
		}
	}

	function kd_plan_status($save_obj) 
	{
		$response_obj = json_decode($save_obj);

		if ($response_obj->status == true) 
		{
			$this->db->trans_start();
			$ref_no = $response_obj->ref_no;
			$entry_form = $response_obj->entry_form;

			if($entry_form ==1) // Job No
			{
				$job_table_update = "UPDATE WO_PO_DETAILS_MASTER SET kd_plan_status=0, kd_plan_complete=1 WHERE job_no='$ref_no'";
				$this->db->query($job_table_update);

				$booking_table_update = "UPDATE WO_BOOKING_DTLS SET kd_plan_status=0, kd_plan_complete=1 WHERE job_no='$ref_no'";
				$this->db->query($booking_table_update);
			}


			$this->db->trans_complete();
			if ($this->db->trans_status() == TRUE) {
				return $resultset["status"] = "Successful";
			} else {
				$resultset["status"] = "Failed";
			}
		} else {
			return $resultset["status"] = "Failed";
		}
	}

	function style_wise_operation_list_model_backup($JOB_NO_MST,$PO_BREAK_DOWN_ID,$ITEM_NUMBER_ID,$COUNTRY_ID,$LINE_ID,$STYLE_NUMBER,$USER_ID)
	{
		//Color Query start
		$query_LIB_COLOR = "select ID,COLOR_NAME FROM LIB_COLOR where STATUS_ACTIVE = 1 AND IS_DELETED = 0";
		$table_LIB_COLOR = $this->db->query($query_LIB_COLOR)->result();

		foreach($table_LIB_COLOR as $row){
			$lib_color[$row->ID] = ['COLOR_NAME'=>$row->COLOR_NAME];
		}
		//Color Query end

		$country_arr 	= return_library_array("select id, country_name from lib_country", 'id', 'country_name');

		//Size Query start
		$query_LIB_SIZE = "select ID,SIZE_NAME FROM LIB_SIZE where STATUS_ACTIVE = 1 AND IS_DELETED = 0";
		$table_LIB_SIZE = $this->db->query($query_LIB_SIZE)->result();

		foreach($table_LIB_SIZE as $row){
			$lib_size[$row->ID] = ['SIZE_NAME'=>$row->SIZE_NAME];
		}
		//Size Query end

		$sew_fin_reject_type_for_arr = array(1=>"Fabric", 2=>"Sewing", 3=>"Measurement", 4=>"Spot", 5=>"Shade", 6=>"Hole", 7=>"Cutting", 8=>"Wash", 9=>"Print", 10=>"Twisting", 11=>"Conta",12 => "Color Spot",13 => "Crease Mark",14 => "Dirty Spot",15 => "Distinguish",16 => "Dusted",17 => "Dyeline",18 => "Emb Rejection ",19 => "Embroidery",20 => "Fabric (Z) Hole",21 => "HTS Problem Cutting",22 => "HTS Problem Finishing",23 => "Iron Spot",24 => "Knot",25 => "M/C Knife  Cut",26 => "Measurement (+-)",27 => "Needle Cut",28 => "Oil Spot",29 => "Part Mistake",30 => "Part Shade",31 => "Patta",32 => "Pleat",33 => "Print Reject",34 => "Runing Shade",35 => "Scissor Cut",36 => "Slub",37 => "Softner Mark",38 => "Tag Gun Rej",39 => "Twist",40 => "Uneven Dyeing",41 => "Yarn Missing",42 => "Yarn Contamination",43=>"DIRTY MARK",44=>"FAB FAULT",45=>"SEW IN COMPLETE",46=>"SHADING",47=>"REP DAMAGE",48=>"OTHERS-1",49=>"OTHERS-2",100=>"Others");
		asort($sew_fin_reject_type_for_arr);
		foreach($sew_fin_reject_type_for_arr as $reject_id=>$reject)
		{
			$lib_reject[] = ['ID'=>$reject_id,'NAME'=>$reject];
		}

		$sew_fin_spot_defect_type_for = array(1 => "Dirty Stain", 2 => "Oil Stain");
		asort($sew_fin_spot_defect_type_for);
		foreach($sew_fin_spot_defect_type_for as $spot_id=>$spot)
		{
			$lib_spot[] = ['ID'=>$spot_id,'NAME'=>$spot];
		}

		$sew_fin_alter_defect_type_for = array(1 => "Fab Fault/ Colour Variation", 2 => "Run of seam", 3 => "Open Seam", 4 => "Skip Stitch", 5 => "Uneven Top Stitch", 6 => "Broken Stitch", 7 => "Loose Stitch", 8 => "Irregular Stitch", 9 => "Puckering", 10 => "Label Wrong/Mistake", 11 => "Slanted At Label", 12 => "Rawadge", 13 => "Tack Missing", 14 => "Tack Position Wrong", 15 => "Up Down", 16 => "Label Missing", 17 => "Shading", 18 => "Pleat", 19 => "Twisting", 20 => "Irregular Gathering", 21 => "Uncut Thread", 22 => "Button Missing", 23 => "Button Misplace", 24 => "Print Defect", 25 => "Poor Shape", 26 => "Yarn Contamination", 27 => "Slub", 28 => "Others", 29 => "Seam Reversed", 30 => "Needle Mark", 31 => "Bad Ten shire", 32 => "Over Stitch", 33 => "Incorrect SPI", 34 => "Uneven Seam Allowance", 35 => "Crocked Label", 36 => "Joint/Gathering Stitch", 37 => "Uneven Shape", 38 => "Cut Stitch", 39 => "Thread Missing", 40 => "Hole", 41 => "OPEN STC", 42 => "Hi-Low", 43 => "TENSION LOOSE/TIGHT", 44 => "Down Stitch", 45 => "Needle Cut", 46 => "SIZE MISTAKE", 47=> "REJECT", 48 => "RUN OFF STC", 49 => "Incomplete Stitch", 50 => "WAIST / CHEST", 51 => "HIP / SWEEP", 52 => "THIGH / F/BK LENGTH", 53 => "INSEAM / SLV LENGTH", 54 => "Point Up-Down", 55 => "Side Slit up-Down", 56 => "Slanted at Placket", 57 => "Tack Revers", 58 => "Hole/ Damage/ Reject", 59 => "Measurement Problem", 60 => "Eyelet Problem", 61 => "Zipper Problem", 62 => "Poor Iron", 63 => "Scissor Cut/Cut Damage",64 => "Slanted at Loop",65 => "Slanted",66 => "MISSING",67=>"OIL /DIRTY SPOT",68=>"MISTAKE",69=>"UN-EVEN STC",70=>"Uneven Hem",71=>"Shiny Mark",72=>"Emb Placement Wrong",73=>"Glue Mark",74=>"Process Missing",75=>"Both Sleeve Up-Down",76=>"Pull Yarn",77=>"Drawstring Up-Down",78=>"Cracking",79=>"Waviness",80=>"Both Shoulder Up-Down",81=>"Label Position Wrong",82=>"Single Stitch",83=>"Print/HTL Placement Wrong",84=>"Loop Missing",85=>"Belt Missing",86=>"Crease Mark",87=>"Tal Part",88=>"Patta",89=>"Looseness",90=>"Missing Yarn",91=>"Knot",92=>"Roping",93=>"Bartack Placement Wrong",94=>"Drawstring Cap Open",95=>"Pocket Uneven",96=>"V-Tack Missing",97=>"V-Tack Slanted",98=>"Embroidary Broken",99=>"Bartack Missing", 100=>"Projection", 101=>"Broken Button", 102=>"Check Miss-match", 103=>"Exposed", 104=>"Reverse",105 => "Button Half Stitch", 106=> "Hole Missing", 107=>"Oil Spot", 108=>"Dirty Spot");
		asort($sew_fin_alter_defect_type_for);
		foreach($sew_fin_alter_defect_type_for as $alter_id=>$alter)
		{
			$lib_alter[] = ['ID'=>$alter_id,'NAME'=>$alter];
		}
		//DEFECT Query end
		$garments_item_group_name = return_field_value("commercial_name","lib_garment_item","status_active=1 and is_deleted=0 and id=$ITEM_NUMBER_ID","commercial_name");
		$lib_operation = [];
		if($garments_item_group_name!="")
		{
			$item_group_wise_operation_list_sql = "SELECT B.ID,B.OPERATION_NAME FROM LIB_GARMENT_ITEM A,LIB_SEWING_OPERATION_ENTRY B WHERE A.ID=B.GMT_ITEM_ID AND A.COMMERCIAL_NAME='".$garments_item_group_name."' AND A.STATUS_ACTIVE = 1 AND A.IS_DELETED = 0 AND B.STATUS_ACTIVE = 1 AND B.IS_DELETED = 0 AND B.IS_QC=1";
			$item_group_wise_operation_list = $this->db->query($item_group_wise_operation_list_sql)->result();
			foreach($item_group_wise_operation_list as $row){
				$lib_operation[] = ['ID'=>$row->ID,'NAME'=>$row->OPERATION_NAME];
			}
		}

		//SEWING_OPERATION Query end
		$current_date = date("d-M-Y");
		$prod_sql = "select A.PO_BREAK_DOWN_ID,B.PRODUCTION_QNTY,B.REPLACE_QTY,B.RECTIFIED_QTY,B.REJECT_QTY, B.ALTER_QTY, B.SPOT_QTY, B.COLOR_SIZE_BREAK_DOWN_ID AS COL_SIZE_ID,B.PRODUCTION_TYPE,C.COLOR_NUMBER_ID,a.PRODUCTION_DATE,a.INSERTED_BY from pro_garments_production_mst a, pro_garments_production_dtls b,wo_po_color_size_breakdown c
		where a.id=b.mst_id and b.color_size_break_down_id=c.id and a.status_active=1 and b.status_active=1 and b.is_deleted=0 and b.production_type in(4,5) and c.status_active=1 and c.JOB_NO_MST='".$JOB_NO_MST."' AND a.item_number_id = $ITEM_NUMBER_ID and a.sewing_line=$LINE_ID";//  AND a.country_id = $COUNTRY_ID
		$prod_res = $this->db->query($prod_sql)->result();
		$prod_data_array = $color_wise_production_array=array();
		$event_wise_prod_data_array = [];
		foreach($prod_res as $v)
		{
			if($v->PRODUCTION_TYPE == 4)
			{
				$prod_data_array[$v->COL_SIZE_ID][$v->PRODUCTION_TYPE] += $v->PRODUCTION_QNTY;
			}
			
			if($v->PRODUCTION_TYPE == 5)
			{
				$prod_data_output_array[$v->COL_SIZE_ID][$v->PRODUCTION_TYPE] += $v->PRODUCTION_QNTY+$v->REJECT_QTY;//+$v->ALTER_QTY+$v->SPOT_QTY
			}
			
			$production_date = strtotime($v->PRODUCTION_DATE);
			if($production_date == strtotime($current_date) && $v->PRODUCTION_TYPE == 5 && $v->INSERTED_BY == $USER_ID)
			{
				$event_wise_prod_data_array[$v->COL_SIZE_ID]["good"] += $v->PRODUCTION_QNTY;
				$event_wise_prod_data_array[$v->COL_SIZE_ID]["reject"] += $v->REJECT_QTY;
				$event_wise_prod_data_array[$v->COL_SIZE_ID]["alter"] += $v->ALTER_QTY;
				$event_wise_prod_data_array[$v->COL_SIZE_ID]["spot"] += $v->SPOT_QTY;
				$event_wise_prod_data_array[$v->COL_SIZE_ID]["rectified"] += $v->RECTIFIED_QTY;
			}

			if($production_date == strtotime($current_date) && $v->PRODUCTION_TYPE == 5)
			{
				$color_wise_production_array[$v->COLOR_NUMBER_ID]["good"] += $v->PRODUCTION_QNTY;
				$color_wise_production_array[$v->COLOR_NUMBER_ID]["reject"] += $v->REJECT_QTY;
				$color_wise_production_array[$v->COLOR_NUMBER_ID]["alter"] += $v->ALTER_QTY;
				$color_wise_production_array[$v->COLOR_NUMBER_ID]["spot"] += $v->SPOT_QTY;
				$color_wise_production_array[$v->COLOR_NUMBER_ID]["rectified"] += $v->RECTIFIED_QTY;
				$color_wise_production_array[$v->COLOR_NUMBER_ID]["color_output_qnty"] += $v->PRODUCTION_QNTY;
			}
		}
		// ===================================
		// echo "<pre>";
		// print_r($prod_data_array);die;
		$wo_po_color_size_breakdown_query = "select a.ID,a.JOB_NO_MST,a.PO_BREAK_DOWN_ID,a.COUNTRY_ID,b.PO_NUMBER,a.COLOR_NUMBER_ID,a.SIZE_NUMBER_ID from wo_po_color_size_breakdown a, wo_po_break_down b where a.po_break_down_id=b.id AND a.JOB_NO_MST ='$JOB_NO_MST' AND a.status_active = 1 AND a.is_deleted = 0 ORDER BY a.size_order ASC";// AND a.country_id = $COUNTRY_ID

  		$wo_po_color_size_breakdown_table = $this->db->query($wo_po_color_size_breakdown_query)->result();
		$datarArr=array();
		$total_input_qnty=$total_output_qnty=0;
		foreach($wo_po_color_size_breakdown_table as $row){
			$responseArr['job_id'] = $row->JOB_NO_MST;
			$datarArr['po_break_down_id'][$row->PO_BREAK_DOWN_ID] = [
				'po_id' => $row->PO_BREAK_DOWN_ID,
				'po_number' => $row->PO_NUMBER
			];
			$total_input_qnty += $prod_data_array[$row->ID][4]*1;
			$total_output_qnty += $prod_data_output_array[$row->ID][5]*1;
			
			$datarArr['color'][$row->PO_BREAK_DOWN_ID][$row->COLOR_NUMBER_ID]=[
				'po_break_down_id' => $row->PO_BREAK_DOWN_ID,
				'colour_id' => $row->COLOR_NUMBER_ID,
				'colour_name' =>$lib_color [$row->COLOR_NUMBER_ID]["COLOR_NAME"],
				'color_output_qnty' => $color_wise_production_array[$row->COLOR_NUMBER_ID]["color_output_qnty"]*1,
			];

			$datarArr['country'][$row->PO_BREAK_DOWN_ID][$row->COLOR_NUMBER_ID][$row->COUNTRY_ID]=[
				'po_break_down_id' 	=> $row->PO_BREAK_DOWN_ID,
				'colour_id' 		=> $row->COLOR_NUMBER_ID,
				'country_id' 		=> $row->COUNTRY_ID,
				'country_name' 		=> $country_arr[$row->COUNTRY_ID],
				'country_output_qnty' => $color_wise_production_array[$row->COLOR_NUMBER_ID]["color_output_qnty"]*1,
			];

			$datarArr['size'][$row->PO_BREAK_DOWN_ID][]=[
				'po_break_down_id' => $row->PO_BREAK_DOWN_ID,
				'country_id' => $row->COUNTRY_ID,
				'color_size_breakdown_id' => $row->ID,
				'colour_id' => $row->COLOR_NUMBER_ID,
				'colour_name' =>$lib_color [$row->COLOR_NUMBER_ID]["COLOR_NAME"],
				'size_id' => $row->SIZE_NUMBER_ID,
				'size_name' => $lib_size [$row->SIZE_NUMBER_ID]["SIZE_NAME"],
				'input_qnty' => $prod_data_array[$row->ID][4]*1,
				'output_qnty' => $prod_data_output_array[$row->ID][5]*1,
				'good' => $event_wise_prod_data_array[$row->ID]["good"]*1,
				'reject' => $event_wise_prod_data_array[$row->ID]["reject"]*1,
				'alter' => $event_wise_prod_data_array[$row->ID]["alter"]*1,
				'spot' => $event_wise_prod_data_array[$row->ID]["spot"]*1,
				'rectified' => $event_wise_prod_data_array[$row->ID]["rectified"]*1
			];
		}

		$po_break_down_idArr=array();
		foreach($datarArr['po_break_down_id'] as $rows){
			$po_break_down_idArr[]=$rows;
		}

		$colorArr=array();
		foreach($datarArr['color'] as $po_rows){
			foreach($po_rows as $rows){
				$colorArr[]=$rows;
			}
		}

		$countryArr=array();
		foreach($datarArr['country'] as $po_rows){
			foreach($po_rows as $color_rows){
				foreach($color_rows as $rows){
					$countryArr[]=$rows;
				}
			}
		}

		$responseArr['po_ids'] = $po_break_down_idArr;
		$responseArr['color'] = $colorArr;
		$responseArr['country'] = $countryArr;

		$sizeArr=array();
		foreach($datarArr['size'] as $po_rows){
			foreach($po_rows as $rows){
				$sizeArr[]=$rows;
			}
		}
		$responseArr['size'] = $sizeArr;

		$responseArr['operation'] = $lib_operation;

		$responseArr['reject_list'] = $lib_reject;
		$responseArr['alter_list'] = $lib_alter;
		$responseArr['spot_list'] = $lib_spot;


		return $responseArr;
	}

	function style_wise_operation_list_model($JOB_NO_MST,$PO_BREAK_DOWN_ID,$ITEM_NUMBER_ID,$LINE_ID,$STYLE_NUMBER,$USER_ID)
	{
		//Color Query start
		$query_LIB_COLOR = "select ID,COLOR_NAME FROM LIB_COLOR where STATUS_ACTIVE = 1 AND IS_DELETED = 0";
		$table_LIB_COLOR = $this->db->query($query_LIB_COLOR)->result();

		foreach($table_LIB_COLOR as $row){
			$lib_color[$row->ID] = ['COLOR_NAME'=>$row->COLOR_NAME];
		}
		//Color Query end

		$country_arr 	= return_library_array("select id, country_name from lib_country", 'id', 'country_name');

		//Size Query start
		$query_LIB_SIZE = "select ID,SIZE_NAME FROM LIB_SIZE where STATUS_ACTIVE = 1 AND IS_DELETED = 0";
		$table_LIB_SIZE = $this->db->query($query_LIB_SIZE)->result();

		foreach($table_LIB_SIZE as $row){
			$lib_size[$row->ID] = ['SIZE_NAME'=>$row->SIZE_NAME];
		}
		//Size Query end

		$sew_fin_reject_type_for_arr = array(1=>"Fabric", 2=>"Sewing", 3=>"Measurement", 4=>"Spot", 5=>"Shade", 6=>"Hole", 7=>"Cutting", 8=>"Wash", 9=>"Print", 10=>"Twisting", 11=>"Conta",12 => "Color Spot",13 => "Crease Mark",14 => "Dirty Spot",15 => "Distinguish",16 => "Dusted",17 => "Dyeline",18 => "Emb Rejection ",19 => "Embroidery",20 => "Fabric (Z) Hole",21 => "HTS Problem Cutting",22 => "HTS Problem Finishing",23 => "Iron Spot",24 => "Knot",25 => "M/C Knife  Cut",26 => "Measurement (+-)",27 => "Needle Cut",28 => "Oil Spot",29 => "Part Mistake",30 => "Part Shade",31 => "Patta",32 => "Pleat",33 => "Print Reject",34 => "Runing Shade",35 => "Scissor Cut",36 => "Slub",37 => "Softner Mark",38 => "Tag Gun Rej",39 => "Twist",40 => "Uneven Dyeing",41 => "Yarn Missing",42 => "Yarn Contamination",43=>"DIRTY MARK",44=>"FAB FAULT",45=>"SEW IN COMPLETE",46=>"SHADING",47=>"REP DAMAGE",48=>"OTHERS-1",49=>"OTHERS-2",100=>"Others");
		asort($sew_fin_reject_type_for_arr);
		foreach($sew_fin_reject_type_for_arr as $reject_id=>$reject)
		{
			$lib_reject[] = ['ID'=>$reject_id,'NAME'=>$reject];
		}

		$sew_fin_spot_defect_type_for = array(1 => "Dirty Stain", 2 => "Oil Stain");
		asort($sew_fin_spot_defect_type_for);
		foreach($sew_fin_spot_defect_type_for as $spot_id=>$spot)
		{
			$lib_spot[] = ['ID'=>$spot_id,'NAME'=>$spot];
		}

		$sew_fin_alter_defect_type_for = array(1 => "Fab Fault/ Colour Variation", 2 => "Run of seam", 3 => "Open Seam", 4 => "Skip Stitch", 5 => "Uneven Top Stitch", 6 => "Broken Stitch", 7 => "Loose Stitch", 8 => "Irregular Stitch", 9 => "Puckering", 10 => "Label Wrong/Mistake", 11 => "Slanted At Label", 12 => "Rawadge", 13 => "Tack Missing", 14 => "Tack Position Wrong", 15 => "Up Down", 16 => "Label Missing", 17 => "Shading", 18 => "Pleat", 19 => "Twisting", 20 => "Irregular Gathering", 21 => "Uncut Thread", 22 => "Button Missing", 23 => "Button Misplace", 24 => "Print Defect", 25 => "Poor Shape", 26 => "Yarn Contamination", 27 => "Slub", 28 => "Others", 29 => "Seam Reversed", 30 => "Needle Mark", 31 => "Bad Ten shire", 32 => "Over Stitch", 33 => "Incorrect SPI", 34 => "Uneven Seam Allowance", 35 => "Crocked Label", 36 => "Joint/Gathering Stitch", 37 => "Uneven Shape", 38 => "Cut Stitch", 39 => "Thread Missing", 40 => "Hole", 41 => "OPEN STC", 42 => "Hi-Low", 43 => "TENSION LOOSE/TIGHT", 44 => "Down Stitch", 45 => "Needle Cut", 46 => "SIZE MISTAKE", 47=> "REJECT", 48 => "RUN OFF STC", 49 => "Incomplete Stitch", 50 => "WAIST / CHEST", 51 => "HIP / SWEEP", 52 => "THIGH / F/BK LENGTH", 53 => "INSEAM / SLV LENGTH", 54 => "Point Up-Down", 55 => "Side Slit up-Down", 56 => "Slanted at Placket", 57 => "Tack Revers", 58 => "Hole/ Damage/ Reject", 59 => "Measurement Problem", 60 => "Eyelet Problem", 61 => "Zipper Problem", 62 => "Poor Iron", 63 => "Scissor Cut/Cut Damage",64 => "Slanted at Loop",65 => "Slanted",66 => "MISSING",67=>"OIL /DIRTY SPOT",68=>"MISTAKE",69=>"UN-EVEN STC",70=>"Uneven Hem",71=>"Shiny Mark",72=>"Emb Placement Wrong",73=>"Glue Mark",74=>"Process Missing",75=>"Both Sleeve Up-Down",76=>"Pull Yarn",77=>"Drawstring Up-Down",78=>"Cracking",79=>"Waviness",80=>"Both Shoulder Up-Down",81=>"Label Position Wrong",82=>"Single Stitch",83=>"Print/HTL Placement Wrong",84=>"Loop Missing",85=>"Belt Missing",86=>"Crease Mark",87=>"Tal Part",88=>"Patta",89=>"Looseness",90=>"Missing Yarn",91=>"Knot",92=>"Roping",93=>"Bartack Placement Wrong",94=>"Drawstring Cap Open",95=>"Pocket Uneven",96=>"V-Tack Missing",97=>"V-Tack Slanted",98=>"Embroidary Broken",99=>"Bartack Missing", 100=>"Projection", 101=>"Broken Button", 102=>"Check Miss-match", 103=>"Exposed", 104=>"Reverse",105 => "Button Half Stitch", 106=> "Hole Missing", 107=>"Oil Spot", 108=>"Dirty Spot");
		asort($sew_fin_alter_defect_type_for);
		foreach($sew_fin_alter_defect_type_for as $alter_id=>$alter)
		{
			$lib_alter[] = ['ID'=>$alter_id,'NAME'=>$alter];
		}
		//DEFECT Query end
		$garments_item_group_name = return_field_value("commercial_name","lib_garment_item","status_active=1 and is_deleted=0 and id=$ITEM_NUMBER_ID","commercial_name");
		$lib_operation = [];
		if($garments_item_group_name!="")
		{
			$item_group_wise_operation_list_sql = "SELECT B.ID,B.OPERATION_NAME FROM LIB_GARMENT_ITEM A,LIB_SEWING_OPERATION_ENTRY B WHERE A.ID=B.GMT_ITEM_ID AND A.COMMERCIAL_NAME='".$garments_item_group_name."' AND A.STATUS_ACTIVE = 1 AND A.IS_DELETED = 0 AND B.STATUS_ACTIVE = 1 AND B.IS_DELETED = 0 AND B.IS_QC=1";
			$item_group_wise_operation_list = $this->db->query($item_group_wise_operation_list_sql)->result();
			foreach($item_group_wise_operation_list as $row){
				$lib_operation[] = ['ID'=>$row->ID,'NAME'=>$row->OPERATION_NAME];
			}
		}

		//SEWING_OPERATION Query end
		$current_date = date("d-M-Y");
		$prod_sql = "select A.PO_BREAK_DOWN_ID,A.COUNTRY_ID,B.PRODUCTION_QNTY,B.REPLACE_QTY,B.RECTIFIED_QTY,B.REJECT_QTY, B.ALTER_QTY, B.SPOT_QTY, B.COLOR_SIZE_BREAK_DOWN_ID AS COL_SIZE_ID,B.PRODUCTION_TYPE,C.COLOR_NUMBER_ID,a.PRODUCTION_DATE,a.INSERTED_BY from pro_garments_production_mst a, pro_garments_production_dtls b,wo_po_color_size_breakdown c
		where a.id=b.mst_id and b.color_size_break_down_id=c.id and a.status_active=1 and b.status_active=1 and b.is_deleted=0 and b.production_type in(4,5) and c.status_active=1 and c.JOB_NO_MST='".$JOB_NO_MST."' AND a.item_number_id = $ITEM_NUMBER_ID and a.sewing_line=$LINE_ID";//  AND a.country_id = $COUNTRY_ID
		$prod_res = $this->db->query($prod_sql)->result();
		$prod_data_array = $color_wise_production_array=array();
		$event_wise_prod_data_array = [];
		foreach($prod_res as $v)
		{
			if($v->PRODUCTION_TYPE == 4)
			{
				$prod_data_array[$v->COL_SIZE_ID][$v->PRODUCTION_TYPE] += $v->PRODUCTION_QNTY;
				$country_wise_input_array[$v->PO_BREAK_DOWN_ID][$v->COLOR_NUMBER_ID][$v->COUNTRY_ID]["country_input_qnty"] += $v->PRODUCTION_QNTY;
				$po_wise_input_array[$v->PO_BREAK_DOWN_ID] += $v->PRODUCTION_QNTY;
				$color_wise_input_array[$v->COLOR_NUMBER_ID]["color_input_qnty"] += $v->PRODUCTION_QNTY;
			}
			
			if($v->PRODUCTION_TYPE == 5)
			{
				$prod_data_output_array[$v->COL_SIZE_ID][$v->PRODUCTION_TYPE] += $v->PRODUCTION_QNTY+$v->REJECT_QTY;//+$v->ALTER_QTY+$v->SPOT_QTY
			}
			
			$production_date = strtotime($v->PRODUCTION_DATE);
			if($production_date == strtotime($current_date) && $v->PRODUCTION_TYPE == 5 && $v->INSERTED_BY == $USER_ID)
			{
				$event_wise_prod_data_array[$v->COL_SIZE_ID]["good"] += $v->PRODUCTION_QNTY;
				$event_wise_prod_data_array[$v->COL_SIZE_ID]["reject"] += $v->REJECT_QTY;
				$event_wise_prod_data_array[$v->COL_SIZE_ID]["alter"] += $v->ALTER_QTY;
				$event_wise_prod_data_array[$v->COL_SIZE_ID]["spot"] += $v->SPOT_QTY;
				$event_wise_prod_data_array[$v->COL_SIZE_ID]["rectified"] += $v->RECTIFIED_QTY;
			}

			if($production_date == strtotime($current_date) && $v->PRODUCTION_TYPE == 5)
			{
				$color_wise_production_array[$v->COLOR_NUMBER_ID]["good"] += $v->PRODUCTION_QNTY;
				$color_wise_production_array[$v->COLOR_NUMBER_ID]["reject"] += $v->REJECT_QTY;
				$color_wise_production_array[$v->COLOR_NUMBER_ID]["alter"] += $v->ALTER_QTY;
				$color_wise_production_array[$v->COLOR_NUMBER_ID]["spot"] += $v->SPOT_QTY;
				$color_wise_production_array[$v->COLOR_NUMBER_ID]["rectified"] += $v->RECTIFIED_QTY;
				$color_wise_production_array[$v->COLOR_NUMBER_ID]["color_output_qnty"] += $v->PRODUCTION_QNTY;

				$country_wise_production_array[$v->PO_BREAK_DOWN_ID][$v->COLOR_NUMBER_ID][$v->COUNTRY_ID]["good"] += $v->PRODUCTION_QNTY;
				$country_wise_production_array[$v->PO_BREAK_DOWN_ID][$v->COLOR_NUMBER_ID][$v->COUNTRY_ID]["reject"] += $v->REJECT_QTY;
				$country_wise_production_array[$v->PO_BREAK_DOWN_ID][$v->COLOR_NUMBER_ID][$v->COUNTRY_ID]["alter"] += $v->ALTER_QTY;
				$country_wise_production_array[$v->PO_BREAK_DOWN_ID][$v->COLOR_NUMBER_ID][$v->COUNTRY_ID]["spot"] += $v->SPOT_QTY;
				$country_wise_production_array[$v->PO_BREAK_DOWN_ID][$v->COLOR_NUMBER_ID][$v->COUNTRY_ID]["rectified"] += $v->RECTIFIED_QTY;
				$country_wise_production_array[$v->PO_BREAK_DOWN_ID][$v->COLOR_NUMBER_ID][$v->COUNTRY_ID]["country_output_qnty"] += $v->PRODUCTION_QNTY;
			}
		}
		// ===================================

		$query_defect = "SELECT * FROM LIB_SEWING_DEFECT_MST WHERE STATUS_ACTIVE = 1 AND IS_DELETED = 0 and ENTRY_PAGE_ID = 500 ORDER BY DEFECT_SERIAL_NO ASC";
		$table_defect = $this->db->query($query_defect)->result();
		$defect_arr = array();
		foreach($table_defect as $row){
			$defect_arr[$row->DEFECT_TYPE][] =[
				"ID" => $row->ID,
				"NAME" => $row->SHORT_NAME,
				"DEFECT_SERIAL_NO" => $row->DEFECT_SERIAL_NO,
			]; 
		}

		$wo_po_color_size_breakdown_query = "select a.ID,a.JOB_NO_MST,a.PO_BREAK_DOWN_ID,a.COUNTRY_ID,b.PO_NUMBER,a.COLOR_NUMBER_ID,a.SIZE_NUMBER_ID from wo_po_color_size_breakdown a, wo_po_break_down b where a.po_break_down_id=b.id AND a.JOB_NO_MST ='$JOB_NO_MST' AND a.status_active = 1 AND a.is_deleted = 0 ORDER BY a.size_order ASC";// AND a.country_id = $COUNTRY_ID

  		$wo_po_color_size_breakdown_table = $this->db->query($wo_po_color_size_breakdown_query)->result();
		$datarArr=array();
		$total_input_qnty=$total_output_qnty=0;
		foreach($wo_po_color_size_breakdown_table as $row){
			$responseArr['job_id'] = $row->JOB_NO_MST;

			$po_wise_input = $po_wise_input_array[$row->PO_BREAK_DOWN_ID]*1;
			if($po_wise_input>0)
			{
				$datarArr['po_break_down_id'][$row->PO_BREAK_DOWN_ID] = [
					'po_id' 	=> $row->PO_BREAK_DOWN_ID,
					'po_number' => $row->PO_NUMBER
				];
			}
			
			$total_input_qnty  += $prod_data_array[$row->ID][4]*1;
			$total_output_qnty += $prod_data_output_array[$row->ID][5]*1;
			
			$color_input_qnty = $color_wise_input_array[$row->COLOR_NUMBER_ID]["color_input_qnty"]*1;
			if($color_input_qnty>0)
			{
				$datarArr['color'][$row->PO_BREAK_DOWN_ID][$row->COLOR_NUMBER_ID]=[
					'po_break_down_id' 	=> $row->PO_BREAK_DOWN_ID,
					'colour_id' 		=> $row->COLOR_NUMBER_ID,
					'colour_name' 		=> $lib_color [$row->COLOR_NUMBER_ID]["COLOR_NAME"],
					'color_input_qnty' => $color_input_qnty,
					'color_output_qnty' => $color_wise_production_array[$row->COLOR_NUMBER_ID]["color_output_qnty"]*1,
				];
			}

			$country_wise_input = $country_wise_input_array[$row->PO_BREAK_DOWN_ID][$row->COLOR_NUMBER_ID][$row->COUNTRY_ID]["country_input_qnty"]*1;
			if($country_wise_input>0)
			{
				$datarArr['country'][$row->PO_BREAK_DOWN_ID][$row->COLOR_NUMBER_ID][$row->COUNTRY_ID]=[
					'po_break_down_id' 		=> $row->PO_BREAK_DOWN_ID,
					'colour_id' 			=> $row->COLOR_NUMBER_ID,
					'country_id' 			=> $row->COUNTRY_ID,
					'country_name' 			=> strtoupper($country_arr[$row->COUNTRY_ID]),
					'country_output_qnty' 	=> $country_wise_production_array[$row->PO_BREAK_DOWN_ID][$row->COLOR_NUMBER_ID][$row->COUNTRY_ID]["country_output_qnty"]*1,
				];
			}
			

			$datarArr['size'][$row->PO_BREAK_DOWN_ID][]=[
				'po_break_down_id' 			=> $row->PO_BREAK_DOWN_ID,
				'country_id' 				=> $row->COUNTRY_ID,
				'country_name' 				=> $country_arr[$row->COUNTRY_ID],
				'color_size_breakdown_id' 	=> $row->ID,
				'colour_id' 				=> $row->COLOR_NUMBER_ID,
				'colour_name' 				=> $lib_color [$row->COLOR_NUMBER_ID]["COLOR_NAME"],
				'size_id' 					=> $row->SIZE_NUMBER_ID,
				'size_name' 				=> $lib_size [$row->SIZE_NUMBER_ID]["SIZE_NAME"],
				'input_qnty' 				=> $prod_data_array[$row->ID][4]*1,
				'output_qnty' 				=> $prod_data_output_array[$row->ID][5]*1,
				'good' 						=> $event_wise_prod_data_array[$row->ID]["good"]*1,
				'reject' 					=> $event_wise_prod_data_array[$row->ID]["reject"]*1,
				'alter' 					=> $event_wise_prod_data_array[$row->ID]["alter"]*1,
				'spot' 						=> $event_wise_prod_data_array[$row->ID]["spot"]*1,
				'rectified' 				=> $event_wise_prod_data_array[$row->ID]["rectified"]*1
			];
		}

		$po_break_down_idArr=array();
		foreach($datarArr['po_break_down_id'] as $rows){
			$po_break_down_idArr[]=$rows;
		}

		$colorArr=array();
		foreach($datarArr['color'] as $po_rows){
			foreach($po_rows as $rows){
				$colorArr[]=$rows;
			}
		}

		$countryArr=array();
		foreach($datarArr['country'] as $po_rows){
			foreach($po_rows as $color_rows){
				foreach($color_rows as $rows){
					$countryArr[]=$rows;
				}
			}
		}

		$responseArr['po_ids'] = $po_break_down_idArr;
		$responseArr['color'] = $colorArr;
		$responseArr['country'] = $countryArr;

		$sizeArr=array();
		foreach($datarArr['size'] as $po_rows){
			foreach($po_rows as $rows){
				$sizeArr[]=$rows;
			}
		}
		$responseArr['size'] = $sizeArr;

		$responseArr['operation'] = $lib_operation;

		$responseArr['reject_list'] =($defect_arr[3]) ? $defect_arr[3] : $lib_reject;
		$responseArr['alter_list']  = ($defect_arr[1]) ? $defect_arr[1] : $lib_alter;
		$responseArr['spot_list']   = ($defect_arr[2]) ? $defect_arr[2] : $lib_spot;


		return $responseArr;
	}

	function active_qc_session_list()
	{
		$line_library = return_library_array("SELECT ID,LINE_NAME from lib_sewing_line", "id", "line_name");
		
		$config_data = $this->db->query("SELECT a.ID,F.FLOOR_NAME, d.LINE_NUMBER, A.DEVICE_ID,B.ITEM_NAME, A.PO_NUMBER,A.JOB_NO,A.INTERNAL_REF,A.INSERTED_BY as USER_ID, g.USER_NAME, g.USER_FULL_NAME
			from tabwise_sewing_line a,lib_garment_item b, prod_resource_mst d,lib_prod_floor f, user_passwd g
			where a.status_active=1 and a.item_number_id=b.id and a.sewing_line=d.id and a.floor_id=f.id and a.inserted_by=g.id")->result();
		if(!empty($config_data))
		{
			$i = 0;
			foreach($config_data as $row)
			{
				$line_numbers = explode(",", $row->LINE_NUMBER);
				$line_names = "";
				foreach($line_numbers as $line)
				{
					$line_names .= $line_library[$line] . ", ";
				}
				$line_names = rtrim($line_names, ", ");

				$responseArr[$i]["ROWID"] = $row->ID;
				$responseArr[$i]["FLOOR_NAME"] = $row->FLOOR_NAME;
				$responseArr[$i]["LINE_NUMBER"] = $line_names;
				$responseArr[$i]["DEVICE_ID"] = $row->DEVICE_ID;
				$responseArr[$i]["ITEM_NAME"] = $row->ITEM_NAME;
				$responseArr[$i]["PO_NUMBER"] = $row->PO_NUMBER;
				$responseArr[$i]["JOB_NO"] = $row->JOB_NO;
				$responseArr[$i]["INTERNAL_REF"] = $row->INTERNAL_REF;
				$responseArr[$i]["USER_ID"] = $row->USER_ID;
				$responseArr[$i]["USER_NAME"] = $row->USER_NAME;
				$responseArr[$i]["USER_FULL_NAME"] = $row->USER_FULL_NAME;
				$i++;
			}
		}
		return $responseArr;
	}

	function color_size_wise_in_out($COLOR_SIZE_ID, $sewing_line, $PO_BREAK_DOWN_ID, $ITEM_NUMBER_ID,$COUNTRY_ID, $USER_ID)
	{
		$current_date = date("d-M-Y");
		$prev_qty_sql = "SELECT B.COLOR_SIZE_BREAK_DOWN_ID,B.PRODUCTION_QNTY,B.REJECT_QTY,B.PRODUCTION_TYPE,B.REPLACE_QTY,B.RECTIFIED_QTY,B.REJECT_QTY, B.ALTER_QTY, B.SPOT_QTY,C.COLOR_NUMBER_ID,a.PRODUCTION_DATE,a.INSERTED_BY from pro_garments_production_mst a, pro_garments_production_dtls b,wo_po_color_size_breakdown c where a.id=b.mst_id and b.color_size_break_down_id=c.id and b.status_active=1 and b.is_deleted=0 and b.production_type in(4,5) and c.status_active=1 and a.sewing_line=$sewing_line and c.po_break_down_id = $PO_BREAK_DOWN_ID AND a.item_number_id = $ITEM_NUMBER_ID AND a.country_id = $COUNTRY_ID";// and b.color_size_break_down_id=$color_size_id

		$receive_result = sql_select($prev_qty_sql);
		$prev_qty_array = $color_wise_production_array = array();
		$i=0;
		foreach ($receive_result as $row) 
		{
			if($row->PRODUCTION_TYPE == 4)
			{
				$prod_data_array[$row->COLOR_SIZE_BREAK_DOWN_ID][$row->PRODUCTION_TYPE] += $row->PRODUCTION_QNTY;
			}
			
			if($row->PRODUCTION_TYPE == 5 && $row->COLOR_SIZE_BREAK_DOWN_ID == $COLOR_SIZE_ID)
			{
				$prod_data_output_array[$row->COLOR_SIZE_BREAK_DOWN_ID][$row->PRODUCTION_TYPE] += $row->PRODUCTION_QNTY+$row->REJECT_QTY;//+$row->RECTIFIED_QTY+(($row->ALTER_QTY+$row->SPOT_QTY)-$row->RECTIFIED_QTY)
			}

			$production_date = strtotime($row->PRODUCTION_DATE);
			if($production_date == strtotime($current_date) && $row->PRODUCTION_TYPE == 5 && $row->INSERTED_BY == $USER_ID)
			{
				if($row->COLOR_SIZE_BREAK_DOWN_ID == $COLOR_SIZE_ID)
				{
					$event_wise_prod_data_array["good"] += $row->PRODUCTION_QNTY;
					$event_wise_prod_data_array["reject"] += $row->REJECT_QTY;
					$event_wise_prod_data_array["alter"] += $row->ALTER_QTY;
					$event_wise_prod_data_array["spot"] += $row->SPOT_QTY;
					$event_wise_prod_data_array["rectified"] += $row->RECTIFIED_QTY;
				}
			}
			$i++;
		}

		$responseArr["in_qnty"] = $prod_data_array[$COLOR_SIZE_ID][4]*1;
		$responseArr["total_out_qnty"] = $prod_data_output_array[$COLOR_SIZE_ID][5]*1;
		$responseArr["out_qnty"] = ($event_wise_prod_data_array["good"]+$event_wise_prod_data_array["reject"])*1;//+$event_wise_prod_data_array["alter"]+$event_wise_prod_data_array["spot"]
		$responseArr["good"] = $event_wise_prod_data_array["good"]*1;
		$responseArr["reject"] = $event_wise_prod_data_array["reject"]*1;
		$responseArr["alter"] = $event_wise_prod_data_array["alter"]*1;
		$responseArr["spot"] = $event_wise_prod_data_array["spot"]*1;
		$responseArr["rectified"] = $event_wise_prod_data_array["rectified"]*1;

		return $responseArr;
	}

	function type_wise_in_out($TYPE, $COLOR_ID,$sewing_line, $PO_BREAK_DOWN_ID, $ITEM_NUMBER_ID,$COUNTRY_ID, $USER_ID)
	{
		$current_date = date("d-M-Y");
		$prev_qty_sql = "SELECT B.COLOR_SIZE_BREAK_DOWN_ID,B.PRODUCTION_QNTY,B.REJECT_QTY,B.PRODUCTION_TYPE,B.REPLACE_QTY,B.REJECT_QTY, B.ALTER_QTY, B.SPOT_QTY,C.COLOR_NUMBER_ID,c.SIZE_NUMBER_ID,a.PRODUCTION_DATE,a.INSERTED_BY from pro_garments_production_mst a, pro_garments_production_dtls b,wo_po_color_size_breakdown c where a.id=b.mst_id and b.color_size_break_down_id=c.id and b.status_active=1 and b.is_deleted=0 and b.production_type in(4,5) and c.status_active=1 and a.sewing_line=$sewing_line and a.po_break_down_id = $PO_BREAK_DOWN_ID AND a.item_number_id = $ITEM_NUMBER_ID AND C.COLOR_NUMBER_ID=$COLOR_ID  AND a.country_id = $COUNTRY_ID";

		$receive_result = sql_select($prev_qty_sql);
		$prev_qty_array = $color_wise_production_array = array();
		$i=0;
		foreach ($receive_result as $row) 
		{
			if($row->PRODUCTION_TYPE == 4)
			{
				$prod_data_array[$row->COLOR_SIZE_BREAK_DOWN_ID][$row->PRODUCTION_TYPE] += $row->PRODUCTION_QNTY+$row->REPLACE_QTY;
			}
			
			if($row->PRODUCTION_TYPE == 5 && $row->COLOR_SIZE_BREAK_DOWN_ID == $COLOR_SIZE_ID)
			{
				$prod_data_output_array[$row->COLOR_SIZE_BREAK_DOWN_ID][$row->PRODUCTION_TYPE] += $row->PRODUCTION_QNTY+$row->REJECT_QTY+$row->ALTER_QTY+$row->SPOT_QTY;
			}

			$production_date = strtotime($row->PRODUCTION_DATE);
			// echo $row->INSERTED_BY ."==". $USER_ID."<br />";
			if($production_date == strtotime($current_date) && $row->PRODUCTION_TYPE == 5 && $row->INSERTED_BY == $USER_ID)
			{
				
				if($row->COLOR_NUMBER_ID == $COLOR_ID)
				{
					$event_wise_prod_data_array[$row->SIZE_NUMBER_ID]["good"] += $row->PRODUCTION_QNTY;
					$event_wise_prod_data_array[$row->SIZE_NUMBER_ID]["reject"] += $row->REJECT_QTY;
					$event_wise_prod_data_array[$row->SIZE_NUMBER_ID]["alter"] += $row->ALTER_QTY;
					$event_wise_prod_data_array[$row->SIZE_NUMBER_ID]["spot"] += $row->SPOT_QTY;
					$event_wise_prod_data_array[$row->SIZE_NUMBER_ID]["rectified"] += $row->REPLACE_QTY;
				}
			}
			$i++;
		}

		$sizeGoodArr=array();
		$i=0;
		foreach($event_wise_prod_data_array as $size_id=>$row)
		{
			$sizeGoodArr[$i]["size_id"]=$size_id;
			$sizeGoodArr[$i]["good"]=$row["good"];
			$sizeGoodArr[$i]["alter"]=$row["alter"];
			$sizeGoodArr[$i]["spot"]=$row["spot"];
			$sizeGoodArr[$i]["reject"]=$row["reject"];
			$sizeGoodArr[$i]["rectified"]=$row["rectified"];
			$i++;
		}

		$responseArr["in_qnty"] = $prod_data_array[$COLOR_SIZE_ID][4]*1;
		$responseArr["total_out_qnty"] = $prod_data_output_array[$COLOR_SIZE_ID][5]*1;
		$responseArr["out_qnty"] = ($event_wise_prod_data_array["good"]+$event_wise_prod_data_array["reject"]+$event_wise_prod_data_array["alter"]+$event_wise_prod_data_array["spot"])*1;
		$responseArr["size_qnty"] = $sizeGoodArr;

		return $responseArr;
	}

	function defected_details_list_to_rectify($job_id, $po_id, $color_id, $sewing_line, $user_id, $gmt_item_id)
	{ 
		$sew_fin_reject_type_for_arr = array(1=>"Fabric", 2=>"Sewing", 3=>"Measurement", 4=>"Spot", 5=>"Shade", 6=>"Hole", 7=>"Cutting", 8=>"Wash", 9=>"Print", 10=>"Twisting", 11=>"Conta",12 => "Color Spot",13 => "Crease Mark",14 => "Dirty Spot",15 => "Distinguish",16 => "Dusted",17 => "Dyeline",18 => "Emb Rejection ",19 => "Embroidery",20 => "Fabric (Z) Hole",21 => "HTS Problem Cutting",22 => "HTS Problem Finishing",23 => "Iron Spot",24 => "Knot",25 => "M/C Knife  Cut",26 => "Measurement (+-)",27 => "Needle Cut",28 => "Oil Spot",29 => "Part Mistake",30 => "Part Shade",31 => "Patta",32 => "Pleat",33 => "Print Reject",34 => "Runing Shade",35 => "Scissor Cut",36 => "Slub",37 => "Softner Mark",38 => "Tag Gun Rej",39 => "Twist",40 => "Uneven Dyeing",41 => "Yarn Missing",42 => "Yarn Contamination",43=>"DIRTY MARK",44=>"FAB FAULT",45=>"SEW IN COMPLETE",46=>"SHADING",47=>"REP DAMAGE",48=>"OTHERS-1",49=>"OTHERS-2",100=>"Others");

		$sew_fin_spot_defect_type_for = array(1 => "Dirty Stain", 2 => "Oil Stain");

		$sew_fin_alter_defect_type_for = array(1 => "Fab Fault/ Colour Variation", 2 => "Run of seam", 3 => "Open Seam", 4 => "Skip Stitch", 5 => "Uneven Top Stitch", 6 => "Broken Stitch", 7 => "Loose Stitch", 8 => "Irregular Stitch", 9 => "Puckering", 10 => "Label Wrong/Mistake", 11 => "Slanted At Label", 12 => "Rawadge", 13 => "Tack Missing", 14 => "Tack Position Wrong", 15 => "Up Down", 16 => "Label Missing", 17 => "Shading", 18 => "Pleat", 19 => "Twisting", 20 => "Irregular Gathering", 21 => "Uncut Thread", 22 => "Button Missing", 23 => "Button Misplace", 24 => "Print Defect", 25 => "Poor Shape", 26 => "Yarn Contamination", 27 => "Slub", 28 => "Others", 29 => "Seam Reversed", 30 => "Needle Mark", 31 => "Bad Ten shire", 32 => "Over Stitch", 33 => "Incorrect SPI", 34 => "Uneven Seam Allowance", 35 => "Crocked Label", 36 => "Joint/Gathering Stitch", 37 => "Uneven Shape", 38 => "Cut Stitch", 39 => "Thread Missing", 40 => "Hole", 41 => "OPEN STC", 42 => "Hi-Low", 43 => "TENSION LOOSE/TIGHT", 44 => "Down Stitch", 45 => "Needle Cut", 46 => "SIZE MISTAKE", 47=> "REJECT", 48 => "RUN OFF STC", 49 => "Incomplete Stitch", 50 => "WAIST / CHEST", 51 => "HIP / SWEEP", 52 => "THIGH / F/BK LENGTH", 53 => "INSEAM / SLV LENGTH", 54 => "Point Up-Down", 55 => "Side Slit up-Down", 56 => "Slanted at Placket", 57 => "Tack Revers", 58 => "Hole/ Damage/ Reject", 59 => "Measurement Problem", 60 => "Eyelet Problem", 61 => "Zipper Problem", 62 => "Poor Iron", 63 => "Scissor Cut/Cut Damage",64 => "Slanted at Loop",65 => "Slanted",66 => "MISSING",67=>"OIL /DIRTY SPOT",68=>"MISTAKE",69=>"UN-EVEN STC",70=>"Uneven Hem",71=>"Shiny Mark",72=>"Emb Placement Wrong",73=>"Glue Mark",74=>"Process Missing",75=>"Both Sleeve Up-Down",76=>"Pull Yarn",77=>"Drawstring Up-Down",78=>"Cracking",79=>"Waviness",80=>"Both Shoulder Up-Down",81=>"Label Position Wrong",82=>"Single Stitch",83=>"Print/HTL Placement Wrong",84=>"Loop Missing",85=>"Belt Missing",86=>"Crease Mark",87=>"Tal Part",88=>"Patta",89=>"Looseness",90=>"Missing Yarn",91=>"Knot",92=>"Roping",93=>"Bartack Placement Wrong",94=>"Drawstring Cap Open",95=>"Pocket Uneven",96=>"V-Tack Missing",97=>"V-Tack Slanted",98=>"Embroidary Broken",99=>"Bartack Missing", 100=>"Projection", 101=>"Broken Button", 102=>"Check Miss-match", 103=>"Exposed", 104=>"Reverse",105 => "Button Half Stitch", 106=> "Hole Missing", 107=>"Oil Spot", 108=>"Dirty Spot");

		$library_defect_list_sql = "SELECT ID,DEFECT_TYPE,DEFECT_POINT_ID,SHORT_NAME FROM LIB_SEWING_DEFECT_MST WHERE STATUS_ACTIVE = 1 AND IS_DELETED = 0 and ENTRY_PAGE_ID = 500 ORDER BY DEFECT_SERIAL_NO ASC";
		$library_defect_list_data = $this->db->query($library_defect_list_sql)->result();
		
		if(!empty($library_defect_list_data))
		{
			foreach($library_defect_list_data as $row){
				if($row->DEFECT_TYPE==3)
				{
					$lib_sew_fin_reject_type_for_arr[$row->ID] = $row->SHORT_NAME;
				}
				if($row->DEFECT_TYPE==2)
				{
					$lib_sew_fin_spot_defect_type_for[$row->ID] = $row->SHORT_NAME;
				}
				if($row->DEFECT_TYPE==1)
				{
					$lib_sew_fin_alter_defect_type_for[$row->ID] = $row->SHORT_NAME;
				}
			}
		}
		
		$sew_fin_alter_defect_type_for = ($lib_sew_fin_alter_defect_type_for) ? $lib_sew_fin_alter_defect_type_for : $sew_fin_alter_defect_type_for;
		$sew_fin_spot_defect_type_for = (!empty($lib_sew_fin_spot_defect_type_for))?$lib_sew_fin_spot_defect_type_for:$sew_fin_spot_defect_type_for;
		$sew_fin_reject_type_for_arr = (!empty($lib_sew_fin_reject_type_for_arr))?$lib_sew_fin_reject_type_for_arr:$sew_fin_reject_type_for_arr;

		$production_dtls_sql = "select x.PO_BREAK_DOWN_ID,x.PO_NUMBER,x.MST_ID,x.PRODUCTION_DATE,x.DTLS_ID,sum(x.REPLACE_QTY) as REPLACE_QTY,sum(x.REJECT_QTY) as REJECT_QTY, sum(x.ALTER_QTY) as ALTER_QTY, sum(x.SPOT_QTY) as SPOT_QTY,sum(x.RECTIFIED_QTY) as RECTIFIED_QTY,x.COL_SIZE_ID from(
		SELECT a.PO_BREAK_DOWN_ID,d.PO_NUMBER, B.MST_ID,a.PRODUCTION_DATE,B.ID as DTLS_ID,B.REPLACE_QTY,B.REJECT_QTY, B.ALTER_QTY, B.SPOT_QTY,B.RECTIFIED_QTY, B.COLOR_SIZE_BREAK_DOWN_ID AS COL_SIZE_ID,B.ID from pro_garments_production_mst a, pro_garments_production_dtls b, wo_po_color_size_breakdown c, wo_po_break_down d
		where a.id=b.mst_id and b.color_size_break_down_id=c.id and c.po_break_down_id=d.id and b.status_active=1 and b.is_deleted=0 and b.production_type=5 and c.color_number_id = $color_id and a.status_active=1 and a.po_break_down_id=$po_id and a.item_number_id=$gmt_item_id and b.status_active=1 and (b.alter_qty + b.spot_qty) <> b.rectified_qty and a.sewing_line=$sewing_line and a.inserted_by=$user_id) x group by x.po_break_down_id,x.po_number,x.mst_id,x.production_date,x.DTLS_ID,x.col_size_id";

		$production_dtls_data = $this->db->query($production_dtls_sql)->result();
		foreach($production_dtls_data as $v)
		{
			$dtls_data_arr[$v->DTLS_ID]["PO_BREAK_DOWN_ID"] = $v->PO_BREAK_DOWN_ID;
			$dtls_data_arr[$v->DTLS_ID]["PO_NUMBER"] = $v->PO_NUMBER;
			$dtls_id_arr[$v->DTLS_ID] = $v->DTLS_ID;
			$dtls_data_arr[$v->DTLS_ID]["alter"] += $v->ALTER_QTY;
			$dtls_data_arr[$v->DTLS_ID]["spot"] += $v->SPOT_QTY;
			$dtls_data_arr[$v->DTLS_ID]["rectified"] += $v->RECTIFIED_QTY;
			$dtls_data_arr[$v->DTLS_ID]["production_date"] += $v->PRODUCTION_DATE;
		}
		$dtls_ids = implode(",", $dtls_id_arr);

		if($dtls_ids!="")
		{
			/*$defect_dtls_sql = "select A.MST_ID, A.DTLS_ID, LISTAGG(CAST(A.OPERATION_ID AS VARCHAR2(4000)),',') WITHIN GROUP ( ORDER BY A.OPERATION_ID) as OPERATION_IDS,	LISTAGG(CAST(A.DEFECT_POINT_ID AS VARCHAR2(4000)),',') WITHIN GROUP ( ORDER BY A.DEFECT_POINT_ID) as DEFECT_POINT_IDS, C.ID as COL_SIZE_ID, C.COLOR_NUMBER_ID,C.SIZE_NUMBER_ID from PRO_GMTS_PROD_DFT a,pro_garments_production_dtls b, wo_po_color_size_breakdown c
			where a.dtls_id=b.id and b.COLOR_SIZE_BREAK_DOWN_ID=c.id and a.dtls_id in($dtls_ids)
			group by a.mst_id, a.dtls_id, C.ID, c.color_number_id,c.size_number_id";*/

			$defect_dtls_sql = "select A.MST_ID, A.DTLS_ID, A.DEFECT_TYPE_ID,A.OPERATION_ID,	A.DEFECT_POINT_ID,B.ID AS DTLS_PIECE_ID, C.ID as COL_SIZE_ID, C.COLOR_NUMBER_ID,C.SIZE_NUMBER_ID from PRO_GMTS_PROD_DFT a,pro_garments_prod_dtls_piece b, wo_po_color_size_breakdown c
			where a.dtls_piece_id=b.id and b.COLOR_SIZE_BREAK_DOWN_ID=c.id and a.dtls_id in($dtls_ids) and a.is_rectified is null and a.DEFECT_TYPE_ID!=3
			group by B.ID,a.mst_id, a.dtls_id,A.DEFECT_TYPE_ID, A.OPERATION_ID, A.DEFECT_POINT_ID, C.ID, c.color_number_id,c.size_number_id order by B.ID";

			$defect_dtls_data = $this->db->query($defect_dtls_sql)->result();
			$operation_id_arr = $defect_id_arr = array();
			if(!empty($defect_dtls_data))
			{
				foreach($defect_dtls_data as $row)
				{
					$operation_id_arr[$row->OPERATION_ID] = $row->OPERATION_ID;
					$defect_id_arr[$row->DEFECT_POINT_ID] = $row->DEFECT_POINT_ID;
					$dtls_id_arr[$row->MST_ID] = $row->MST_ID;
				}
			}
		}
		
		$operation_ids = array_unique(explode(",", implode(",", $operation_id_arr)));
		$defect_point_ids = array_unique(explode(",", implode(",", $defect_id_arr)));
		$operation_ids = implode(",", $operation_id_arr);
		$mst_ids = implode(",", $dtls_id_arr);
		if($mst_ids=="")
		{
			$i=0;
			$responseArr[$i]["MST_ID"] = 0;
			$responseArr[$i]["DTLS_ID"] = 0;
			$responseArr[$i]["OPERATION_NAME"] = 0;
			$responseArr[$i]["ALTER_QTY"] = 0;
			$responseArr[$i]["SPOT_QTY"] = 0;
			$responseArr[$i]["PRODUCTION_DATE"] = 0;
			$responseArr[$i]["DEFECT_NAMES"] = "";
			$responseArr[$i]["COLOR_NAME"] = "";
			$responseArr[$i]["SIZE_NAME"] = "";

			return $responseArr;
		}
		$operation_name_arr = array();
		if($operation_ids !="")
		{
			$operation_info_sql = "select ID,OPERATION_NAME from lib_sewing_operation_entry d where id in($operation_ids)";
			$operation_info_data = $this->db->query($operation_info_sql)->result();
			foreach($operation_info_data as $v)
			{
				$operation_name_arr[$v->ID] = $v->OPERATION_NAME;
			}
		}

		$defect_info_sql = "SELECT DTLS_ID,DEFECT_TYPE_ID,DEFECT_POINT_ID,DEFECT_QTY from PRO_GMTS_PROD_DFT WHERE mst_id in($mst_ids)";
		$defect_info_data = $this->db->query($defect_info_sql)->result();

		foreach($defect_info_data as $v)
		{
			if($v->DEFECT_TYPE_ID==3)
			{
				$defect_name_arr[$v->DEFECT_POINT_ID] = $sew_fin_reject_type_for_arr[$v->DEFECT_POINT_ID];
			}
			if($v->DEFECT_TYPE_ID==2)
			{
				$defect_name_arr[$v->DEFECT_POINT_ID] = $sew_fin_spot_defect_type_for[$v->DEFECT_POINT_ID];
			}
			if($v->DEFECT_TYPE_ID==1)
			{
				$defect_name_arr[$v->DEFECT_POINT_ID] = $sew_fin_alter_defect_type_for[$v->DEFECT_POINT_ID];
			}
		}
		// echo "<pre>";
		// print_r($defect_name_arr);
		// echo "</pre>";
		$size_arr = return_library_array("select id, size_name from lib_size", 'id', 'size_name');
		$color_arr = return_library_array("select id, color_name from lib_color", "id", "color_name");

		$i=0;
		if(!empty($defect_dtls_data))
		{
			foreach($defect_dtls_data as $row)
			{
				$operation_ids = $row->OPERATION_IDS;
				$operation_names = "";
				foreach($operation_ids as $oprtn)
				{
					$operation_names .= "";
				}

				if($row->DEFECT_TYPE_ID==3)
				{
					$defect_type_name = "REJECT";
				}
				if($row->DEFECT_TYPE_ID==2)
				{
					$defect_type_name = "SPOT";
				}
				if($row->DEFECT_TYPE_ID==1)
				{
					$defect_type_name = "ALTER";
				}
				
				$responseArr[$i]["PO_BREAK_DOWN_ID"] = $dtls_data_arr[$row->DTLS_ID]["PO_BREAK_DOWN_ID"];
				$responseArr[$i]["PO_NUMBER"] = $dtls_data_arr[$row->DTLS_ID]["PO_NUMBER"];
				$responseArr[$i]["MST_ID"] = $row->MST_ID;
				$responseArr[$i]["DTLS_ID"] = $row->DTLS_ID;
				$responseArr[$i]["DTLS_PIECE_ID"] = $row->DTLS_PIECE_ID;
				$responseArr[$i]["OPERATION_NAME"] = $operation_name_arr[$row->OPERATION_ID];
				$responseArr[$i]["OPERATION_ID"] = $row->OPERATION_ID;
				$responseArr[$i]["ALTER_QTY"] = $dtls_data_arr[$row->DTLS_ID]["alter"];
				$responseArr[$i]["SPOT_QTY"] = $dtls_data_arr[$row->DTLS_ID]["spot"];
				$responseArr[$i]["RECTIFIED_QTY"] = $dtls_data_arr[$row->DTLS_ID]["rectified"];
				$responseArr[$i]["PRODUCTION_DATE"] = $dtls_data_arr[$row->DTLS_ID]["production_date"];
				$responseArr[$i]["COL_SIZE_ID"] = $row->COL_SIZE_ID;
				$responseArr[$i]["DEFECT_TYPE_ID"] = $row->DEFECT_TYPE_ID;
				$responseArr[$i]["DEFECT_TYPE_NAME"] = $defect_type_name;
				$responseArr[$i]["DEFECT_NAMES"] = rtrim($defect_name_arr[$row->DEFECT_POINT_ID],", ");
				$responseArr[$i]["COLOR_ID"] = $row->COLOR_NUMBER_ID;
				$responseArr[$i]["COLOR_NAME"] = $color_arr[$row->COLOR_NUMBER_ID];
				$responseArr[$i]["SIZE_ID"] = $row->SIZE_NUMBER_ID;
				$responseArr[$i]["SIZE_NAME"] = $size_arr[$row->SIZE_NUMBER_ID];
				$i++;
			}
		}

		return $responseArr;
	}

	function defected_gmts_details_list_to_rectify($job_id, $po_id, $color_id, $sewing_line, $user_id, $gmt_item_id)
	{
		$sew_fin_reject_type_for_arr = array(1=>"Fabric", 2=>"Sewing", 3=>"Measurement", 4=>"Spot", 5=>"Shade", 6=>"Hole", 7=>"Cutting", 8=>"Wash", 9=>"Print", 10=>"Twisting", 11=>"Conta",12 => "Color Spot",13 => "Crease Mark",14 => "Dirty Spot",15 => "Distinguish",16 => "Dusted",17 => "Dyeline",18 => "Emb Rejection ",19 => "Embroidery",20 => "Fabric (Z) Hole",21 => "HTS Problem Cutting",22 => "HTS Problem Finishing",23 => "Iron Spot",24 => "Knot",25 => "M/C Knife  Cut",26 => "Measurement (+-)",27 => "Needle Cut",28 => "Oil Spot",29 => "Part Mistake",30 => "Part Shade",31 => "Patta",32 => "Pleat",33 => "Print Reject",34 => "Runing Shade",35 => "Scissor Cut",36 => "Slub",37 => "Softner Mark",38 => "Tag Gun Rej",39 => "Twist",40 => "Uneven Dyeing",41 => "Yarn Missing",42 => "Yarn Contamination",43=>"DIRTY MARK",44=>"FAB FAULT",45=>"SEW IN COMPLETE",46=>"SHADING",47=>"REP DAMAGE",48=>"OTHERS-1",49=>"OTHERS-2",100=>"Others");

		$sew_fin_spot_defect_type_for = array(1 => "Dirty Stain", 2 => "Oil Stain");

		$sew_fin_alter_defect_type_for = array(1 => "Fab Fault/ Colour Variation", 2 => "Run of seam", 3 => "Open Seam", 4 => "Skip Stitch", 5 => "Uneven Top Stitch", 6 => "Broken Stitch", 7 => "Loose Stitch", 8 => "Irregular Stitch", 9 => "Puckering", 10 => "Label Wrong/Mistake", 11 => "Slanted At Label", 12 => "Rawadge", 13 => "Tack Missing", 14 => "Tack Position Wrong", 15 => "Up Down", 16 => "Label Missing", 17 => "Shading", 18 => "Pleat", 19 => "Twisting", 20 => "Irregular Gathering", 21 => "Uncut Thread", 22 => "Button Missing", 23 => "Button Misplace", 24 => "Print Defect", 25 => "Poor Shape", 26 => "Yarn Contamination", 27 => "Slub", 28 => "Others", 29 => "Seam Reversed", 30 => "Needle Mark", 31 => "Bad Ten shire", 32 => "Over Stitch", 33 => "Incorrect SPI", 34 => "Uneven Seam Allowance", 35 => "Crocked Label", 36 => "Joint/Gathering Stitch", 37 => "Uneven Shape", 38 => "Cut Stitch", 39 => "Thread Missing", 40 => "Hole", 41 => "OPEN STC", 42 => "Hi-Low", 43 => "TENSION LOOSE/TIGHT", 44 => "Down Stitch", 45 => "Needle Cut", 46 => "SIZE MISTAKE", 47=> "REJECT", 48 => "RUN OFF STC", 49 => "Incomplete Stitch", 50 => "WAIST / CHEST", 51 => "HIP / SWEEP", 52 => "THIGH / F/BK LENGTH", 53 => "INSEAM / SLV LENGTH", 54 => "Point Up-Down", 55 => "Side Slit up-Down", 56 => "Slanted at Placket", 57 => "Tack Revers", 58 => "Hole/ Damage/ Reject", 59 => "Measurement Problem", 60 => "Eyelet Problem", 61 => "Zipper Problem", 62 => "Poor Iron", 63 => "Scissor Cut/Cut Damage",64 => "Slanted at Loop",65 => "Slanted",66 => "MISSING",67=>"OIL /DIRTY SPOT",68=>"MISTAKE",69=>"UN-EVEN STC",70=>"Uneven Hem",71=>"Shiny Mark",72=>"Emb Placement Wrong",73=>"Glue Mark",74=>"Process Missing",75=>"Both Sleeve Up-Down",76=>"Pull Yarn",77=>"Drawstring Up-Down",78=>"Cracking",79=>"Waviness",80=>"Both Shoulder Up-Down",81=>"Label Position Wrong",82=>"Single Stitch",83=>"Print/HTL Placement Wrong",84=>"Loop Missing",85=>"Belt Missing",86=>"Crease Mark",87=>"Tal Part",88=>"Patta",89=>"Looseness",90=>"Missing Yarn",91=>"Knot",92=>"Roping",93=>"Bartack Placement Wrong",94=>"Drawstring Cap Open",95=>"Pocket Uneven",96=>"V-Tack Missing",97=>"V-Tack Slanted",98=>"Embroidary Broken",99=>"Bartack Missing", 100=>"Projection", 101=>"Broken Button", 102=>"Check Miss-match", 103=>"Exposed", 104=>"Reverse",105 => "Button Half Stitch", 106=> "Hole Missing", 107=>"Oil Spot", 108=>"Dirty Spot");

		$defect_dtls_sql = "SELECT B.MST_ID,a.PRODUCTION_DATE,B.REPLACE_QTY,B.REJECT_QTY, B.ALTER_QTY, B.SPOT_QTY,B.RECTIFIED_QTY, B.COLOR_SIZE_BREAK_DOWN_ID AS COL_SIZE_ID,B.ID,b.OPERATION_ID
		from pro_garments_production_mst a, pro_garments_production_dtls b, wo_po_color_size_breakdown c
		where a.id=b.mst_id and b.color_size_break_down_id=c.id and b.status_active=1 and b.is_deleted=0 and b.production_type=5 and c.color_number_id = $color_id and a.status_active=1 and a.po_break_down_id=$po_id and a.item_number_id=$gmt_item_id and b.status_active=1 and (b.alter_qty + b.spot_qty) <> b.rectified_qty and a.sewing_line=$sewing_line and a.inserted_by=$user_id";

		$defect_dtls_data = $this->db->query($defect_dtls_sql)->result();
		//print_r($defect_dtls_data);
		foreach($defect_dtls_data as $v)
		{
			$dtls_id_arr[$v->MST_ID] = $v->MST_ID;
			$operation_id_arr[$v->OPERATION_ID] = $v->OPERATION_ID;
			$color_size_id_arr[$v->COL_SIZE_ID] = $v->COL_SIZE_ID;
		}
		$mst_ids = implode(",", $dtls_id_arr);
		$operation_ids = implode(",", $operation_id_arr);
		if($mst_ids=="")
		{
			$i=0;
			$responseArr[$i]["MST_ID"] = 0;
			$responseArr[$i]["DTLS_ID"] = 0;
			$responseArr[$i]["OPERATION_NAME"] = 0;
			$responseArr[$i]["ALTER_QTY"] = 0;
			$responseArr[$i]["SPOT_QTY"] = 0;
			$responseArr[$i]["PRODUCTION_DATE"] = 0;
			$responseArr[$i]["DEFECT_NAMES"] = "";
			$responseArr[$i]["COLOR_NAME"] = "";
			$responseArr[$i]["SIZE_NAME"] = "";

			return $responseArr;
		}

		$operation_name_arr = array();
		if($operation_ids!="")
		{
			$operation_info_sql = "select ID,OPERATION_NAME from lib_sewing_operation_entry d where id in($operation_ids)";
			$operation_info_data = $this->db->query($operation_info_sql)->result();
			
			foreach($operation_info_data as $v)
			{
				$operation_name_arr[$v->ID] = $v->OPERATION_NAME;
			}
		}
		

		$defect_info_sql = "SELECT DTLS_ID,DEFECT_TYPE_ID,DEFECT_POINT_ID,DEFECT_QTY from PRO_GMTS_PROD_DFT WHERE mst_id in($mst_ids)";
		$defect_info_data = $this->db->query($defect_info_sql)->result();

		foreach($defect_info_data as $v)
		{
			if($v->DEFECT_TYPE_ID==3)
			{
				$defect_name_arr[$v->DTLS_ID] .= $sew_fin_reject_type_for_arr[$v->DEFECT_POINT_ID] . ", ";
			}
			if($v->DEFECT_TYPE_ID==2)
			{
				$defect_name_arr[$v->DTLS_ID] .= $sew_fin_spot_defect_type_for[$v->DEFECT_POINT_ID] . ", ";
			}
			if($v->DEFECT_TYPE_ID==1)
			{
				$defect_name_arr[$v->DTLS_ID] .= $sew_fin_alter_defect_type_for[$v->DEFECT_POINT_ID] . ", ";
			}
		}

		$size_arr = return_library_array("select id, size_name from lib_size", 'id', 'size_name');
		$color_arr = return_library_array("select id, color_name from lib_color", "id", "color_name");

		$color_size_id_ids = implode(",", $color_size_id_arr);
		$color_size_info_sql = "SELECT ID, SIZE_NUMBER_ID, COLOR_NUMBER_ID from WO_PO_COLOR_SIZE_BREAKDOWN WHERE id in($color_size_id_ids)";
		$color_size_info_data = $this->db->query($color_size_info_sql)->result();

		foreach($color_size_info_data as $v)
		{
			$color_size_arr[$v->ID]["COLOR_NAME"] = $color_arr[$v->COLOR_NUMBER_ID];			
			$color_size_arr[$v->ID]["SIZE_NAME"] = $size_arr[$v->SIZE_NUMBER_ID];			
		}

		$i=0;
		foreach($defect_dtls_data as $v)
		{
			$responseArr[$i]["MST_ID"] = $v->MST_ID;
			$responseArr[$i]["DTLS_ID"] = $v->ID;
			$responseArr[$i]["OPERATION_NAME"] = $operation_name_arr[$v->OPERATION_ID];
			$responseArr[$i]["ALTER_QTY"] = $v->ALTER_QTY;
			$responseArr[$i]["SPOT_QTY"] = $v->SPOT_QTY;
			$responseArr[$i]["RECTIFIED_QTY"] = $v->RECTIFIED_QTY;
			$responseArr[$i]["PRODUCTION_DATE"] = $v->PRODUCTION_DATE;
			$responseArr[$i]["COL_SIZE_ID"] = $v->COL_SIZE_ID;
			$responseArr[$i]["DEFECT_NAMES"] = rtrim($defect_name_arr[$v->ID],", ");
			$responseArr[$i]["COLOR_NAME"] = $color_size_arr[$v->COL_SIZE_ID]["COLOR_NAME"];
			$responseArr[$i]["SIZE_NAME"] = $color_size_arr[$v->COL_SIZE_ID]["SIZE_NAME"];
			$i++;
		}

		return $responseArr;


	}

	function inactive_sewing_config($save_obj) 
	{
		$response_obj = json_decode($save_obj);

		if ($response_obj->status == true) 
		{
			$this->db->trans_start();
			$row_id = $response_obj->row_id;
			
			$this->db->query("UPDATE tabwise_sewing_line SET status_active=0, is_deleted=1 where id=$row_id");


			$this->db->trans_complete();
			if ($this->db->trans_status() == TRUE) {
				return $resultset["status"] = "Successful";
			} else {
				$resultset["status"] = "Failed";
			}
		} else {
			return $resultset["status"] = "Failed";
		}
	}
	
	function get_company_image() 
	{
		$com_image = $this->db->query("select image_location from common_photo_library where is_deleted= 0 and form_name='group_logo' order by id desc")->row();
		return ($com_image=="")?"images/header/header_logo.png":$com_image->image_location;
	}
	
	function fab_hanger_archive_meeting($post_data){
		
		$post_data = json_decode($post_data);
		$buyer_name = $post_data->BUYER_NAME;
		
		$meeting_minutes = $post_data->MEETING_MINUTES;
		$inserted_by = $post_data->INSERTED_BY;
		$insert_date = date("d-M-Y h:i:s a");
		$meeting_date = $insert_date;
		$max_id_mis = $this->get_max_value("WO_FAB_HANGER_ARCHIVE_MEETING", "ID") + 1;
		$max_id_dtls = $this->get_max_value("WO_FAB_HANGER_ARCHIVE_MEETING_DTLS", "ID") + 1;

		$this->db->trans_begin();

		$insert_query = "INSERT INTO WO_FAB_HANGER_ARCHIVE_MEETING (ID,BUYER_NAME,MEETING_DATETIME,MEETING_MINUTES,IS_DELETED,STATUS_ACTIVE,INSERTED_BY,INSERT_DATE)VALUES($max_id_mis,'".$buyer_name."','".$meeting_date."','".$meeting_minutes."','0','1',$inserted_by,'".$insert_date."')";
		$this->db->query($insert_query);

		foreach($post_data->ARCHIVE_DETAILS as $row){
			$archive_meeting_dtls[]=[
				"ID" => $max_id_dtls,
				"MST_ID" => $max_id_mis,
				"ARCHIVE_ID" => $row->ID,
				"IS_DELETED" => 0,
				"STATUS_ACTIVE" => 1,
				"INSERTED_BY" => $inserted_by,
				"INSERT_DATE" => $insert_date,
			];
			$max_id_dtls++;
		}
		$this->db->insert_batch("WO_FAB_HANGER_ARCHIVE_MEETING_DTLS", $archive_meeting_dtls);
		//print_r($meeting_date);die;

		if ($this->db->trans_status() === FALSE)
			{
        		$this->db->trans_rollback();
				$resultset["status"] = "Failed";
			}
			else
			{
        		$this->db->trans_commit();
				//$this->db->trans_rollback();
				return $resultset["status"] = "Successful";
			}		
	}

	public function sewing_barcode_scan_v2($company = 0, $barcode = "", $type) 
	{

		$data_arr = array(); 

		$size_arr 		= return_library_array("select id, size_name from lib_size", 'id', 'size_name');
		$color_arr 		= return_library_array("select id, color_name from lib_color", "id", "color_name");
		$country_arr 	= return_library_array("select id, country_name from lib_country", 'id', 'country_name');
		$buyer_arr 		= return_library_array("select id, short_name from lib_buyer", 'id', 'short_name');
		$garments_item 	= return_library_array("select id,item_name from  lib_garment_item where status_active=1 and is_deleted=0 order by item_name", "id", "item_name");

		$year_field = "";
		if ($this->db->dbdriver == 'mysqli') {
			$year_field = "YEAR(f.insert_date)";
		} else {
			$year_field = "to_char(f.insert_date,'YYYY')";
		}

		$barcode = trim($barcode);
		$barcode_no_sql = "SELECT  COLOR_TYPE_ID,BUNDLE_NO from PPL_CUT_LAY_BUNDLE where barcode_no='$barcode'";
		$barcode_no_arr = $this->db->query($barcode_no_sql)->result();

		if ($type == 4) {
			$input_sql = "SELECT a.barcode_no,a.bundle_no,b.sys_number from pro_garments_production_dtls a,pro_gmts_delivery_mst b
			where a.delivery_mst_id =b.id and a.status_active=1 and b.status_active=1 and a.production_type=4 and a.barcode_no='$barcode'";
			$input_exist_data = $this->db->query($input_sql)->row();
			if (count($input_exist_data) > 0) {
				return array("status" => "Failed", "msg"=> "Bundle No: " . $input_exist_data->BUNDLE_NO . " is already scanned. Challan No = ".$input_exist_data->SYS_NUMBER.". Please try another.");
				die;
			}

		}
		else if ($type == 5) {

			$sql_mst_output_data=$this->db->query("SELECT a.sys_number,a.sewing_line, sum(c.production_qnty+c.reject_qty+c.alter_qty+c.spot_qty-c.replace_qty) as production_qnty,c.bundle_no,sum(c.production_qnty+c.reject_qty) as act_prod_qty
				from pro_gmts_delivery_mst a, pro_garments_production_dtls c where a.id=c.delivery_mst_id and c.production_type=5 and a.status_active=1 and a.is_deleted=0  and c.status_active=1 and c.is_deleted=0 and c.barcode_no='$barcode' group by a.sys_number,a.sewing_line,c.bundle_no")->result();

			foreach ($sql_mst_output_data as $row)
			{
				$production_qnty[$row->SEWING_LINE][$row->BUNDLE_NO]+=$row->PRODUCTION_QNTY;
				$act_production_qnty[$row->SEWING_LINE][$row->BUNDLE_NO]+=$row->ACT_PROD_QTY;
				$sys_number[$row->SEWING_LINE][$row->BUNDLE_NO]=$row->SYS_NUMBER;

			}
			
			$sql_mst_input_data=$this->db->query("SELECT a.sewing_line, sum(c.production_qnty) as production_qnty,c.bundle_no
				from pro_gmts_delivery_mst a, pro_garments_production_dtls c where a.id=c.delivery_mst_id and c.production_type=4 and a.status_active=1 and a.is_deleted=0  and c.status_active=1 and c.is_deleted=0 and c.barcode_no='$barcode' group by a.sewing_line,c.bundle_no")->result();
			$kk=0;
			foreach ($sql_mst_input_data as $row)
			{
				if( $row->PRODUCTION_QNTY-$act_production_qnty[$row->SEWING_LINE][$row->BUNDLE_NO]==0)
				{
					$msg="Duplicate scan found for bundle no:- ".$row->BUNDLE_NO." in Challan no: ".$sys_number[$row->SEWING_LINE][$row->BUNDLE_NO];
					return array("status" => "Failed", "msg"=> $msg);
					die;
				}
				if( $row->PRODUCTION_QNTY-$production_qnty[$row->SEWING_LINE][$row->BUNDLE_NO]==0)
				{
					$rescan_info=$this->db->query("SELECT c.barcode_no, (sum( case when c.is_rescan=0 then  c.alter_qty+c.spot_qty else 0 end)-sum(case when c.is_rescan=0 and c.replace_qty>c.reject_qty then c.replace_qty-c.reject_qty else 0 end ))-sum(case when c.is_rescan=2 then c.production_qnty else 0 end ) as qty,a.sewing_line from pro_gmts_delivery_mst  a, pro_garments_production_dtls c where  a.id=c.delivery_mst_id  and c.production_type=5 and a.status_active=1 and a.is_deleted=0 and c.barcode_no='$barcode' and c.status_active=1 and c.is_deleted=0 group by c.barcode_no,a.sewing_line")->row();

					$rescan_qty_total=$row->PRODUCTION_QNTY-$rescan_info->QTY;
					if($rescan_qty_total == 0)
					{
						$msg="Duplicate scan found for bundle no:- ".$row->BUNDLE_NO." in Challan no: ".$sys_number[$row->SEWING_LINE][$row->BUNDLE_NO];
						return array("status" => "Failed", "msg"=> $msg);
						die;
					}

				}
			} 

			$output_sql_rescan = "SELECT a.bundle_no,b.sys_number,sum(case when a.is_rescan=0 then (a.reject_qty+a.spot_qty+a.alter_qty)-a.replace_qty else 0 end )-sum(case when a.is_rescan > 0 then a.production_qnty else 0 end) as production_qnty
			from pro_garments_production_dtls a,pro_gmts_delivery_mst b
			where a.status_active=1 and a.production_type=5 and a.barcode_no='$barcode' and a.delivery_mst_id=b.id and b.status_active=1 and b.production_type=5
			group by a.bundle_no,b.sys_number";
			$output_rescan_data = sql_select($output_sql_rescan);
			$balance_qty=0;
			foreach($output_rescan_data as $rows){
				$balance_qty+=$rows->PRODUCTION_QNTY;
			}

			if($balance_qty<=0 && count($output_rescan_data) > 0){
				return array("status" => "Failed", "msg"=> "Bundle No: " . $input_exist_data->BUNDLE_NO . " is already scanned. Challan No = ".$input_exist_data->SYS_NUMBER.". Please try another.");
				die;
				return array(
					'message_bng' => '',
					'message_eng' => '',
					'bundle_no' => '',
					'barcode_no' => 0,
					'year' => 0,
					'color_size_id' => 0,
					'order_id' => 0,
					'item_id' => 0,
					'country_id' => 0,
					'size_id' => 0,
					'color_id' => 0,
					'cut_no' => '',
					'job_no' => 0,
					'buyer' => '',
					'order_no' => '',
					'item' => '',
					'country' => '',
					'color' => '',
					'size' => '',
					'qty' => 0,
					'is_rescan' => 0,
					'color_type_id' => 0,
				);

			}

			if (count($output_rescan_data) > 0) {

				// $sqls = "SELECT A.COMPANY_ID,a.LOCATION,a.FLOOR_ID,a.SEWING_LINE, c.COLOR_TYPE_ID, max(c.id) as prdid, d.id as COLORSIZEID, e.id as PO_ID,f.company_name as LC_COMPANY, f.JOB_NO_PREFIX_NUM, MAX($year_field) as YEAR, f.BUYER_NAME, d.ITEM_NUMBER_ID, d.COUNTRY_ID, d.SIZE_NUMBER_ID, d.COLOR_NUMBER_ID, c.cut_no,c.BUNDLE_NO, (sum( case when c.is_rescan=0 then  c.alter_qty+c.spot_qty else 0 end)-sum(case when c.is_rescan=0 and c.replace_qty>c.reject_qty then c.replace_qty-c.reject_qty else 0 end ))-sum(case when c.is_rescan=2 then c.production_qnty else 0 end ) as PRODUCTION_QNTY, e.PO_NUMBER,c.BARCODE_NO,1 as IS_RESCAN from PRO_GARMENTS_PRODUCTION_MST a,PRO_GARMENTS_PRODUCTION_DTLS c, WO_PO_COLOR_SIZE_BREAKDOWN d, WO_PO_BREAK_DOWN e, WO_PO_DETAILS_MASTER f where a.id=c.mst_id and c.color_size_break_down_id=d.id and d.po_break_down_id=e.id and e.job_no_mst=f.job_no and c.production_type =5 and c.status_active=1 and c.is_deleted=0 and a.status_active=1 and a.is_deleted=0 and d.status_active in(1,2,3) and d.is_deleted=0 and e.status_active in(1,2,3) and e.is_deleted=0 and f.status_active=1 and f.is_deleted=0 and c.barcode_no='$barcode' group by A.COMPANY_ID,a.LOCATION,a.FLOOR_ID,a.SEWING_LINE, c.COLOR_TYPE_ID,d.id, e.id,f.company_name, f.job_no_prefix_num, f.buyer_name, d.item_number_id, d.country_id, d.size_number_id, d.color_number_id,c.cut_no, c.bundle_no,c.barcode_no, e.po_number order by c.cut_no, length(c.bundle_no) asc, c.bundle_no asc";

				$sqls = "SELECT A.COMPANY_ID,a.LOCATION,a.FLOOR_ID,a.SEWING_LINE, c.COLOR_TYPE_ID, max(c.id) as prdid, d.id as COLORSIZEID, e.id as PO_ID,f.company_name as LC_COMPANY, f.JOB_NO_PREFIX_NUM, MAX($year_field) as YEAR, f.BUYER_NAME, d.ITEM_NUMBER_ID, d.COUNTRY_ID, d.SIZE_NUMBER_ID, d.COLOR_NUMBER_ID, c.cut_no,c.BUNDLE_NO, (sum( case when c.is_rescan=0 then  c.alter_qty+c.spot_qty else 0 end)-sum(case when c.is_rescan=0 then c.replace_qty else 0 end ))-sum(case when c.is_rescan=2 then c.production_qnty else 0 end ) as PRODUCTION_QNTY, e.PO_NUMBER,c.BARCODE_NO,1 as IS_RESCAN from PRO_GARMENTS_PRODUCTION_MST a,PRO_GARMENTS_PRODUCTION_DTLS c, WO_PO_COLOR_SIZE_BREAKDOWN d, WO_PO_BREAK_DOWN e, WO_PO_DETAILS_MASTER f where a.id=c.mst_id and c.color_size_break_down_id=d.id and d.po_break_down_id=e.id and e.job_no_mst=f.job_no and c.production_type =5 and c.status_active=1 and c.is_deleted=0 and a.status_active=1 and a.is_deleted=0 and d.status_active in(1,2,3) and d.is_deleted=0 and e.status_active in(1,2,3) and e.is_deleted=0 and f.status_active=1 and f.is_deleted=0 and c.barcode_no='$barcode' group by A.COMPANY_ID,a.LOCATION,a.FLOOR_ID,a.SEWING_LINE, c.COLOR_TYPE_ID,d.id, e.id,f.company_name, f.job_no_prefix_num, f.buyer_name, d.item_number_id, d.country_id, d.size_number_id, d.color_number_id,c.cut_no, c.bundle_no,c.barcode_no, e.po_number order by c.cut_no, length(c.bundle_no) asc, c.bundle_no asc";
				//print_r($sqls);die;
				$result = sql_select($sqls);
				if (count($result) < 1) {
					return array(
						'message_bng' => '',
						'message_eng' => '',
						'bundle_no' => '',
						'barcode_no' => 0,
						'year' => 0,
						'color_size_id' => 0,
						'order_id' => 0,
						'item_id' => 0,
						'country_id' => 0,
						'size_id' => 0,
						'color_id' => 0,
						'cut_no' => '',
						'job_no' => 0,
						'buyer' => '',
						'order_no' => '',
						'item' => '',
						'country' => '',
						'color' => '',
						'size' => '',
						'replace_qty' => 0,
						'qty' => 0,
						'is_rescan' => 1,
						'color_type_id' => 0,
					);
				}

				$data_arr = array();
				foreach ($result as $v) {
					if($v->PRODUCTION_QNTY<=0){
						return array("status" => "Failed", "msg"=> "Bundle No: " . $input_exist_data->BUNDLE_NO . " is already scanned. Challan No = ".$input_exist_data->SYS_NUMBER.". Please try another.");
						die;
					}
					$data_arr["MasterPart"]["COMPANY_ID"] = $v->COMPANY_ID;
					$data_arr["MasterPart"]["PRODUCTION_TYPE"] = $type;
					$data_arr["MasterPart"]["BUNDLE_NO"] = $v->BUNDLE_NO;
					$data_arr["MasterPart"]["BARCODE_NO"] = $v->BARCODE_NO;
					$data_arr["MasterPart"]["YEAR"] = $v->YEAR;
					$data_arr["MasterPart"]["COLOR_SIZE_ID"] = $v->COLORSIZEID;
					$data_arr["MasterPart"]["ORDER_ID"] = $v->PO_ID;
					$data_arr["MasterPart"]["ITEM_ID"] = $v->ITEM_NUMBER_ID;
					$data_arr["MasterPart"]["COUNTRY_ID"] = $v->COUNTRY_ID;
					$data_arr["MasterPart"]["SIZE_ID"] = $v->SIZE_NUMBER_ID;
					$data_arr["MasterPart"]["COLOR_ID"] = $v->COLOR_NUMBER_ID;
					$data_arr["MasterPart"]["CUT_NO"] = $v->CUT_NO;
					$data_arr["MasterPart"]["JOB_NO"] = $v->JOB_NO_PREFIX_NUM;
					$data_arr["MasterPart"]["LOCATION_ID"] = $v->LOCATION;
					$data_arr["MasterPart"]["FLOOR_ID"] = $v->FLOOR_ID;
					$data_arr["MasterPart"]["SEWING_LINE"] = $v->SEWING_LINE;

					if (isset($buyer_arr[$v->BUYER_NAME])) {
						$data_arr["MasterPart"]["BUYER"] = $buyer_arr[$v->BUYER_NAME];
					} else {
						$data_arr["MasterPart"]["BUYER"] = "";
					}

					$data_arr["MasterPart"]["ORDER_NO"] = "$v->PO_NUMBER";

					if (isset($garments_item[$v->ITEM_NUMBER_ID])) {
						$data_arr["MasterPart"]["ITEM"] = $garments_item[$v->ITEM_NUMBER_ID];
					} else {
						$data_arr["MasterPart"]["ITEM"] = "";
					}

					if (isset($country_arr[$v->COUNTRY_ID])) {
						$data_arr["MasterPart"]["COUNTRY"] = $country_arr[$v->COUNTRY_ID];
					} else {
						$data_arr["MasterPart"]["COUNTRY"] = "";
					}

					if (isset($color_arr[$v->COLOR_NUMBER_ID])) {
						$data_arr["MasterPart"]["COLOR"] = $color_arr[$v->COLOR_NUMBER_ID];
					} else {
						$data_arr["MasterPart"]["COLOR"] = "";
					}

					if (isset($size_arr[$v->SIZE_NUMBER_ID])) {
						$data_arr["MasterPart"]["SIZE"] = $size_arr[$v->SIZE_NUMBER_ID];
					} else {
						$data_arr["MasterPart"]["SIZE"] = 0;
					}

					$data_arr["MasterPart"]["QTY"] = $v->PRODUCTION_QNTY;
					$data_arr["MasterPart"]["IS_RESCAN"] = $v->IS_RESCAN;

					if (isset($cut_lay_rowo[0]->COLOR_TYPE_ID)) {
						$data_arr["MasterPart"]["COLOR_TYPE_ID"] = $cut_lay_rowo[0]->COLOR_TYPE_ID;
					} else {
						$data_arr["MasterPart"]["COLOR_TYPE_ID"] = 0;
					}
				}

				return $data_arr;

			}

		}

		$col_size_seq = "SELECT color_size_break_down_id as IDS,CUT_NO from PRO_GARMENTS_PRODUCTION_DTLS where status_active=1 and is_deleted=0 and barcode_no='$barcode' group by color_size_break_down_id,cut_no";
		$col_size_seq_arr = array();
		$cut_arr = array();
		foreach (sql_select($col_size_seq) as $v) {
			$col_size_seq_arr[$v->IDS] = $v->IDS;
			$cut_arr[$v->CUT_NO] = $v->CUT_NO;
		}
		
		$ids = implode(",", $col_size_seq_arr);
		if (count($col_size_seq_arr) < 1) {$ids = 0;}

		$cut_nos = "'" . implode("','", $cut_arr) . "'";
		if (count($cut_arr) < 1) {$cut_nos = "'0'";}

		$source_sql = "SELECT PRECEDING_OP from pro_production_sequence where CURRENT_OPERATION='$type' and COL_SIZE_ID in($ids) and CUTTING_NO in($cut_nos) ";
		$source_val = 0;
		foreach (sql_select($source_sql) as $vl) {
			$source_val = $vl->PRECEDING_OP;
		}
		$source_cond = $source_val;
		
		$sewing_data_sql="SELECT a.sys_number, a.company_id, a.location_id, a.embel_name, a.embel_type, a.serving_company, a.floor_id, a.sewing_line, a.organic, a.production_source, a.delivery_date
		from pro_gmts_delivery_mst a, pro_garments_production_dtls c where a.id=c.delivery_mst_id and c.barcode_no='$barcode' and c.production_type=4 and a.status_active=1 and a.is_deleted=0  and c.status_active=1 and c.is_deleted=0 group by a.sys_number, a.company_id,a.location_id, a.embel_name, a.embel_type, a.serving_company,a.floor_id,a.sewing_line,a.organic,a.production_source,a.delivery_date";
		$sewing_data = $this->db->query($sewing_data_sql)->row();

		$sqls = "SELECT  a.LOCATION,a.FLOOR_ID,a.SEWING_LINE, c.COLOR_TYPE_ID,  0 as IS_RESCAN,max(c.id) as prdid, d.id as COLORSIZEID, e.id as PO_ID,f.company_name as LC_COMPANY, f.JOB_NO_PREFIX_NUM, MAX($year_field) as YEAR, f.BUYER_NAME, d.ITEM_NUMBER_ID, d.COUNTRY_ID, d.SIZE_NUMBER_ID, d.COLOR_NUMBER_ID, c.cut_no,c.BUNDLE_NO, sum(c.production_qnty) as PRODUCTION_QNTY, e.PO_NUMBER,c.BARCODE_NO,A.COMPANY_ID from PRO_GARMENTS_PRODUCTION_MST a,PRO_GARMENTS_PRODUCTION_DTLS c, wo_po_color_size_breakdown d, wo_po_break_down e, wo_po_details_master f where a.id=c.mst_id and c.color_size_break_down_id=d.id and d.po_break_down_id=e.id and e.job_no_mst=f.job_no and c.production_type = 4 and c.status_active=1 and c.is_deleted=0 and a.status_active=1 and a.is_deleted=0 and d.status_active in(1,2,3) and d.is_deleted=0 and e.status_active in(1,2,3) and e.is_deleted=0 and f.status_active=1 and f.is_deleted=0 and c.barcode_no='$barcode' group by a.location,a.floor_id,a.sewing_line, c.COLOR_TYPE_ID, d.id, e.id,f.company_name, f.job_no_prefix_num, f.buyer_name, d.item_number_id, d.country_id, d.size_number_id, d.color_number_id,c.cut_no, c.bundle_no,c.barcode_no, e.po_number,a.company_id";

		if ($type == 5)
		{
			$message = 'Bundle No: ' . $barcode_no_arr[0]->BUNDLE_NO . ' is not ready for output.';
		}
		else if ($type == 4)
		{
			$message = 'Bundle No: ' . $barcode_no_arr[0]->BUNDLE_NO . ' is not ready for input.';
		}

		$result = sql_select($sqls);
		if (count($result) == 0) {
			return array("status" => "Failed", "msg"=> $message);
			die;
		}

		foreach ($result as $v) {
			$data_arr["MasterPart"]["COMPANY_ID"] = $v->COMPANY_ID;
			$data_arr["MasterPart"]["PRODUCTION_TYPE"] = $type;
			$data_arr["MasterPart"]["BUNDLE_NO"] = $v->BUNDLE_NO;
			$data_arr["MasterPart"]["BARCODE_NO"] = $v->BARCODE_NO;
			$data_arr["MasterPart"]["YEAR"] = $v->YEAR;
			$data_arr["MasterPart"]["COLOR_SIZE_ID"] = $v->COLORSIZEID;
			$data_arr["MasterPart"]["ORDER_ID"] = $v->PO_ID;
			$data_arr["MasterPart"]["ITEM_ID"] = $v->ITEM_NUMBER_ID;
			$data_arr["MasterPart"]["COUNTRY_ID"] = $v->COUNTRY_ID;
			$data_arr["MasterPart"]["SIZE_ID"] = $v->SIZE_NUMBER_ID;
			$data_arr["MasterPart"]["COLOR_ID"] = $v->COLOR_NUMBER_ID;
			$data_arr["MasterPart"]["CUT_NO"] = $v->CUT_NO;
			$data_arr["MasterPart"]["JOB_NO"] = $v->JOB_NO_PREFIX_NUM;
			$data_arr["MasterPart"]["LOCATION_ID"] = $v->LOCATION;
			$data_arr["MasterPart"]["FLOOR_ID"] = $sewing_data->FLOOR_ID;
			$data_arr["MasterPart"]["SEWING_LINE"] = $sewing_data->SEWING_LINE;

			if (isset($buyer_arr[$v->BUYER_NAME])) {
				$data_arr["MasterPart"]["BUYER"] = $buyer_arr[$v->BUYER_NAME];
			} else {
				$data_arr["MasterPart"]["BUYER"] = "";
			}

			$data_arr["MasterPart"]["ORDER_NO"] = "$v->PO_NUMBER";

			if (isset($garments_item[$v->ITEM_NUMBER_ID])) {
				$data_arr["MasterPart"]["ITEM"] = $garments_item[$v->ITEM_NUMBER_ID];
			} else {
				$data_arr["MasterPart"]["ITEM"] = "";
			}

			if (isset($country_arr[$v->COUNTRY_ID])) {
				$data_arr["MasterPart"]["COUNTRY"] = $country_arr[$v->COUNTRY_ID];
			} else {
				$data_arr["MasterPart"]["COUNTRY"] = "";
			}

			if (isset($color_arr[$v->COLOR_NUMBER_ID])) {
				$data_arr["MasterPart"]["COLOR"] = $color_arr[$v->COLOR_NUMBER_ID];
			} else {
				$data_arr["MasterPart"]["COLOR"] = "";
			}

			if (isset($size_arr[$v->SIZE_NUMBER_ID])) {
				$data_arr["MasterPart"]["SIZE"] = $size_arr[$v->SIZE_NUMBER_ID];
			} else {
				$data_arr["MasterPart"]["SIZE"] = 0;
			}

			$data_arr["MasterPart"]["QTY"] = $v->PRODUCTION_QNTY;
			$data_arr["MasterPart"]["IS_RESCAN"] = $v->IS_RESCAN;

			if (isset($cut_lay_rowo[0]->COLOR_TYPE_ID)) {
				$data_arr["MasterPart"]["COLOR_TYPE_ID"] = $cut_lay_rowo[0]->COLOR_TYPE_ID;
			} else {
				$data_arr["MasterPart"]["COLOR_TYPE_ID"] = 0;
			}

		}
		return $data_arr;
	}

	public function program_create_data($job_id) {
		
		//$db_type=return_db_type();

		if($job_id)
		{
			$job_cond= " and e.job_no_mst like '%$job_id%'";  
		}

		$job_sql = sql_select("SELECT e.job_id as JOB_ID, e.job_no_mst as JOB_NO, b.program_date AS PROGRAM_DATE, b.knitting_pdo as KNITTING_PDO, b.id as PROGRAM_NO, b.knitting_source as KNITTING_SOURCE, b.knitting_party as KNITTING_PARTY, b.color_range as COLOR_RANGE, a.body_part_id as BODY_PART_ID, a.booking_no as BOOKING_NO, a.determination_id as DETERMINATION_ID, c.gsm_weight as GSM_WEIGHT, c.dia as BOOKIN_DIA, b.fabric_dia as PROGRAM_DIA, b.machine_dia as MACHINE_DIA, b.machine_gg as MACHINE_GG, b.stitch_length as STITCH_LENGTH, a.color_type_id as COLOR_TYPE_ID, a.width_dia_type as WIDTH_DIA_TYPE, b.color_id as COLOR_ID, sum(c.program_qnty) as PROGRAM_QNTY from ppl_planning_info_entry_mst a, ppl_planning_info_entry_dtls b, ppl_planning_entry_plan_dtls c, wo_po_break_down e
		where a.id=b.mst_id and b.id=c.dtls_id and c.po_id=e.id and a.is_deleted=0 and a.status_active=1 and b.is_deleted=0 and b.status_active=1 and c.is_deleted=0 
		and c.status_active=1 and c.is_sales =0 $job_cond group by e.job_id, e.job_no_mst, b.program_date, b.knitting_pdo, b.id, b.knitting_source, b.knitting_party, b.color_range, a.BODY_PART_ID, a.booking_no, a.determination_id, c.gsm_weight, c.dia, b.fabric_dia, b.machine_dia, b.machine_gg, b.stitch_length, a.color_type_id, a.width_dia_type, b.color_id");


		$composition = return_library_array("SELECT id,composition_name from  lib_composition_array where status_active=1 and is_deleted=0 order by composition_name", "id", "composition_name");
		$color_arr 		= return_library_array( "select id,color_name from lib_color", "id", "color_name"  );

		$composition[0] = 0;
		$composition_arr = array();
		$constructtion_arr = array();
		$sql_deter = "SELECT a.ID, a.CONSTRUCTION, b.COPMPOSITION_ID, b.PERCENT from lib_yarn_count_determina_mst a, lib_yarn_count_determina_dtls b where a.id=b.mst_id and b.status_active=1 order by b.id asc";
		$data_array = sql_select($sql_deter);
		foreach ($data_array as $row) {
			$constructtion_arr[$row->ID] = $row->CONSTRUCTION;
			if (isset($composition_arr[$row->ID])) {
				$composition_arr[$row->ID] .= $composition[$row->COPMPOSITION_ID] . " " . $row->PERCENT . "% ";
			} else {
				if (isset($composition[$row->COPMPOSITION_ID])) {
					$composition_arr[$row->ID] = $composition[$row->COPMPOSITION_ID] . " " . $row->PERCENT . "% ";
				} else {
					$composition_arr[$row->ID] = "";
				}

			}
		}

		$color_type = array(1 => "Solid", 2 => "Stripe[Y/D]", 3 => "Cross Over [Y/D]", 4 => "Check [Y/D]", 5 => "AOP", 6 => "Solid [Y/D]", 7 => "AOP Stripe", 20 => "Florecent", 25 => "Reactive", 26 => "Melange", 27 => "Marl", 28 => "Burn Out", 29 => "Gmts Dyeing", 30 => "Cross Dyeing", 31 => "Over Dyed", 32 => "Space Y/D", 33 => "Faulty Y/D", 34 => "Solid Stripe", 35 => "One Part Dye", 36 => "Space Dyeing", 37 => "Dope Dye", 38 => "INDIGO", 39 => "Neon",40=>"RND Shade",41=>"Tie Dyed",42=>"RFD",43=>"Inject",44=>"Stripe [Y/D Melange]",45=>"AOP [Melange]",46=>"RFD Shade",47=>"Stripe [Y/D AOP]",48=>"Stripe [Y/D Burn-Out AOP]",49=>"AOP on RFD",50=>"Dip Dye",51=>"Solid[Discharge Able Dyeing]",52=>"Discharge Dyeing",53=>"Acid Wash",54=>"AOP [Pigment]",55=>"AOP [Reactive]",56=>"AOP [Discharge]",57=>"AOP [Disperse]",58=>"AOP [Acid Print]",59=>"AOP [Burn Out]",60=>"AOP [Digital Print]",61=>"Siro",62=>"Normal Wash",63=>"Solid [Y/D AOP]",64=>"Double Dyeing",65=>"Vertical Stripe",66=>"Solid[Dry hand feel]",67=>"AOP + Over Dyed",68=>"Solid [Snow Marl]",69=>"AOP Solid",70=>"Neps",71=>"Solid [Y/D Melange]",72=>"MESH",73=>"TRICOT",74=>"Vertical Stripe Y/D",75=>"Wash");

		$color_range_arr = array(1 => "Dark Color", 2 => "Light Color", 3 => "Black Color", 4 => "White Color", 5 => "Average Color", 6 => "Melange", 7 => "Wash", 8 => "Scouring", 9 => "Extra Dark", 10 => "Medium Color", 11 => "Super Dark", 12 => "Royal color",13 => "Average-Double Dyeing",14 => "Dark - Double Dyeing",15 => "Black-Double Dyeing",16 => "Light-Double Dyeing",17 => "Medium-Double Dyeing",18 => "Extra Dark-Double Dyeing",19 => "Peroxide Wash",20 => "White / G.Mell / Scouring / H2o2",21 => "Green / Turquoise Color",22 => "Reactive Black",23 => "Light Royal",24 => "Dark Royal",25 => "Green / Turquoise Color- Double Dyeing",26 => "Reactive Black- Double Dyeing",27 => "Light Royal - Double Dyeing",28 => "Dark Royal - Double Dyeing",29 => "Light Melange",30 => "Dark Melange",31 => "Navy",32 => "Light Lemon");

		if($job_id)
		{
			$job_cond= " and a.job_no like '%$job_id%'";  
		}
		$booking_sql = sql_select("SELECT a.booking_no as BOOKING_NO, a.job_no as JOB_NO, b.body_part_id as BODY_PART_ID, a.fabric_color_id as FABRIC_COLOR_ID, b.lib_yarn_count_deter_id as DETER_ID, a.gsm_weight as GSM_WEIGHT, a.dia_width as DIA_WIDTH
		from wo_booking_dtls a, wo_pre_cost_fabric_cost_dtls b
		where a.pre_cost_fabric_cost_dtls_id=b.id $job_cond and a.status_active=1 and b.status_active=1"); // and e.job_id=$job_id

		$booking_data=array();
		foreach ($booking_sql as $row) 
		{
			$booking_data[$row->BOOKING_NO][$row->BODY_PART_ID][$row->FABRIC_COLOR_ID][$row->DETER_ID]['GSM'] .=$row->GSM_WEIGHT.",";
			$booking_data[$row->BOOKING_NO][$row->BODY_PART_ID][$row->FABRIC_COLOR_ID][$row->DETER_ID]['DIA'] .=$row->DIA_WIDTH.",";
		}

		$knitting_source_arr=array(1=>'In-house',3=>'Outbound-subcontact');

		$company_sql = "select id,company_name from lib_company";
		$company_data = $this->db->query($company_sql)->result();
		foreach ($company_data as $row) {
			$company_arr[$row->ID] = $row->COMPANY_NAME;
		}

		$supplier_sql = "select id, supplier_name from lib_supplier";
		$supplier_data = $this->db->query($supplier_sql)->result();
		foreach ($supplier_data as $row) {
			$supplier_arr[$row->ID] = $row->SUPPLIER_NAME;
		}

		$body_part = return_library_array("select id,body_part_full_name from  lib_body_part where status_active=1 and is_deleted=0 order by body_part_full_name", "id", "body_part_full_name");

		$al_job_data=array();
		$i=1;
		foreach ($job_sql as $row) 
		{
			
			if($row->PROGRAM_DATE)
			{
				$PROGRAM_DATE = date("d-M-Y",strtotime($row->PROGRAM_DATE));
			}
			else
			{
				$PROGRAM_DATE ="";
			}

			if($row->KNITTING_SOURCE ==1)
			{
				$knitting_company= $company_arr[$row->KNITTING_PARTY];
			}
			else
			{
				
				$knitting_company= $supplier_arr[$row->KNITTING_PARTY];
			}

			$gsm_weight = implode(",",array_unique(explode(",",chop($booking_data[$row->BOOKING_NO][$row->BODY_PART_ID][$row->COLOR_ID][$row->DETERMINATION_ID]['GSM'],","))));
			$dia_width = implode(",",array_unique(explode(",",chop($booking_data[$row->BOOKING_NO][$row->BODY_PART_ID][$row->COLOR_ID][$row->DETERMINATION_ID]['DIA'],","))));

			$al_job_data[$i]['JobNo']=$row->JOB_NO;
			$al_job_data[$i]['ProgramCreationDate']=$PROGRAM_DATE;
			$al_job_data[$i]['KnitProdRefNo']=$row->KNITTING_PDO;
			$al_job_data[$i]['ProgarmID']=$row->PROGRAM_NO;
			$al_job_data[$i]['ProgarmNo']=$row->PROGRAM_NO;

			$al_job_data[$i]['KnittingSource']=$knitting_source_arr[$row->KNITTING_SOURCE];
			$al_job_data[$i]['KnittingCom']=$knitting_company;
			$al_job_data[$i]['ColorRange']=$color_range_arr[$row->COLOR_RANGE];
			$al_job_data[$i]['ProgramQty']=$row->PROGRAM_QNTY;
			$al_job_data[$i]['WeightUOM']="Kg";
			$al_job_data[$i]['ItemType']=$body_part[$row->BODY_PART_ID];
			$al_job_data[$i]['GreigeItemCode']=$row->DETERMINATION_ID;
			$al_job_data[$i]['GreigeItemDescription']=$constructtion_arr[$row->DETERMINATION_ID].', '.$composition_arr[$row->DETERMINATION_ID].', '.$row->GSM_WEIGHT.', '.$row->BOOKIN_DIA;
			$al_job_data[$i]['Construction']=$constructtion_arr[$row->DETERMINATION_ID];
			$al_job_data[$i]['Composition']=$composition_arr[$row->DETERMINATION_ID];
			$al_job_data[$i]['StitchLength']=$row->STITCH_LENGTH;

			$al_job_data[$i]['MachineDia']=$row->MACHINE_DIA;
			$al_job_data[$i]['MachineGuage']=$row->MACHINE_GG;

			$al_job_data[$i]['GreyFabricDia']=$row->BOOKIN_DIA;
			$al_job_data[$i]['ProgramDia']=$row->PROGRAM_DIA;
			$al_job_data[$i]['FinFabricGSM']=$gsm_weight;

			$al_job_data[$i]['FinishFabricColor']=$color_arr[$row->COLOR_ID];

			
			
			$al_job_data[$i]['FabricType']=$color_type[$row->COLOR_TYPE_ID];
			$al_job_data[$i]['DiaType']=$color_range_arr[$row->WIDTH_DIA_TYPE];
			$i++;
			
		}
		return $al_job_data;
		die;

	}

	public function insert_fcm_token($user_id,$device_id,$fcm_token,$device_type='')
	{
		$insert_date = date("d-M-Y");
		$this->db->trans_begin();
        $FCM_TOKEN=return_field_value("FCM_TOKEN AS FCM_TOKEN","APPROVAL_NOTI_USER_DEVICES","USER_ID=$user_id and DEVICE_ID = '".$device_id."'","FCM_TOKEN");
        if(empty($FCM_TOKEN))
        {
            $ID = return_next_id('ID','APPROVAL_NOTI_USER_DEVICES');
            $fcm_token_data = array(
                array(
                    "ID" => $ID,
                    "USER_ID" => $user_id,
                    "DEVICE_ID" => $device_id,
                    "FCM_TOKEN" => $fcm_token,
                    "INSERT_DATE" => $insert_date,
					"DEVICE_TYPE" => $device_type
                )
            );
    
            $this->db->insert_batch("APPROVAL_NOTI_USER_DEVICES", $fcm_token_data);
        }
        else 
        {
           $res = execute_query("UPDATE APPROVAL_NOTI_USER_DEVICES SET FCM_TOKEN ='".$fcm_token."', DEVICE_TYPE ='".$device_type."' WHERE  USER_ID = $user_id and DEVICE_ID = '".$device_id."'");
           if($res !=1)
           {
                $this->db->trans_rollback();
                return 0;
           }
        }
       

		if ($this->db->trans_status() === FALSE)
		{
			$this->db->trans_rollback();
            return 0;
		}
		else
		{
			$this->db->trans_commit();
            return 1;
		}
	
	}

	public function sewing_output_configaration_level($company_id){

		$query_pro_variable = "SELECT COMPANY_NAME,SEWING_PRODUCTION,VARIABLE_LIST,INSERTED_BY FROM VARIABLE_SETTINGS_PRODUCTION WHERE VARIABLE_LIST =83 and company_name=$company_id and status_active=1 and is_deleted=0";
		$table_pro_variable = $this->db->query($query_pro_variable)->row();

		$data = [
			"COMPANY_ID" => ($table_pro_variable->COMPANY_NAME)? $table_pro_variable->COMPANY_NAME : 0,
			"VARIABLE_ID" => ($table_pro_variable->SEWING_PRODUCTION)? $table_pro_variable->SEWING_PRODUCTION : 0
		];
		return $data;

	}

	// public function inventory_library ($company_id,$floor_get,$room_get,$rack_get,$shelf_get,$floor_id,$room_id,$rack_id,$shelf_id){

	// 	$condition = "";

	// 	if($room_id){
	// 		$condition .= " and b.ROOM_ID = $room_id";
	// 	}
	// 	if($floor_id){
	// 		$condition .= " and b.FLOOR_ID = $floor_id";
	// 	}

	// 	if($rack_id){
	// 		$condition = " and b.RACK_ID = $rack_id";
	// 	}

	// 	if($shelf_id){
	// 		$condition = " and b.SHELF_ID = $shelf_id";
	// 	}

	// 	if($floor_get==1){
			 
	// 		// if($floor_id){
	// 		// 	$condition .= " and b.FLOOR_ID = $floor_id";
	// 		// }
	// 		$query_floor_lib = "SELECT a.FLOOR_ROOM_RACK_ID,a.FLOOR_ROOM_RACK_NAME FROM LIB_FLOOR_ROOM_RACK_MST a,LIB_FLOOR_ROOM_RACK_DTLS b WHERE a.STATUS_ACTIVE = 1 and a.IS_DELETED = 0 and a.FLOOR_ROOM_RACK_ID=b.FLOOR_ID and a.COMPANY_ID = $company_id $condition";
	// 		$table_floor_lib = $this->db->query($query_floor_lib)->result();
	// 	}

	// 	if($room_get==1){			
	// 		$query_room_lib = "SELECT a.FLOOR_ROOM_RACK_ID,a.FLOOR_ROOM_RACK_NAME FROM LIB_FLOOR_ROOM_RACK_MST a,LIB_FLOOR_ROOM_RACK_DTLS b WHERE a.STATUS_ACTIVE = 1 and a.IS_DELETED = 0 and a.FLOOR_ROOM_RACK_ID=b.ROOM_ID and a.COMPANY_ID = $company_id $condition";
	// 		$table_room_lib = $this->db->query($query_room_lib)->result();
	// 	}

	// 	if($rack_get==1){
	// 		// if($rack_id){
	// 		// 	$condition = " and b.RACK_ID = $rack_id";
	// 		// }
	// 		$query_rack_lib = "SELECT a.FLOOR_ROOM_RACK_ID,a.FLOOR_ROOM_RACK_NAME FROM LIB_FLOOR_ROOM_RACK_MST a,LIB_FLOOR_ROOM_RACK_DTLS b WHERE a.STATUS_ACTIVE = 1 and a.IS_DELETED = 0 and a.FLOOR_ROOM_RACK_ID=b.RACK_ID and a.COMPANY_ID = $company_id $condition";
	// 		$table_rack_lib = $this->db->query($query_rack_lib)->result();
	// 	}

	// 	if($shelf_get==1){
	// 		// if($shelf_id){
	// 		// 	$condition = " and b.SHELF_ID = $shelf_id";
	// 		// }
	// 		$query_shelf_lib = "SELECT a.FLOOR_ROOM_RACK_ID,a.FLOOR_ROOM_RACK_NAME FROM LIB_FLOOR_ROOM_RACK_MST a,LIB_FLOOR_ROOM_RACK_DTLS b WHERE a.STATUS_ACTIVE = 1 and a.IS_DELETED = 0 and a.FLOOR_ROOM_RACK_ID=b.SHELF_ID and a.COMPANY_ID = $company_id $condition";
	// 		$table_shelf_lib = $this->db->query($query_shelf_lib)->result();
	// 	}

	// 	$data = [
	// 		"FLOOR" => ($table_floor_lib)? $table_floor_lib : [],
	// 		"ROOM" => ($table_room_lib)? $table_room_lib : [],
	// 		"RACK" => ($table_rack_lib)? $table_rack_lib : [],
	// 		"SHELF" => ($table_shelf_lib)? $table_shelf_lib : [],
	// 	];

	// 	return $data;
	// }

	public function bundle_data_for_cutting_store_receive($barcode_no){
		$success_status = 0;
		$msg = "";
		$query_bundle = "SELECT b.BARCODE_NO,b.BUNDLE_NO,e.SIZE_NUMBER_ID,e.COLOR_NUMBER_ID,a.COMPANY_ID,d.ID as PO_BREAKDOWN_ID, d.PO_NUMBER,c.BUYER_NAME,b.PRODUCTION_QNTY as QC_PASS_QNTY,f.FLOOR_ID,g.SIZE_QTY FROM PRO_GARMENTS_PRODUCTION_MST a,PRO_GARMENTS_PRODUCTION_DTLS b,WO_PO_DETAILS_MASTER c,WO_PO_BREAK_DOWN d,WO_PO_COLOR_SIZE_BREAKDOWN e,PPL_CUT_LAY_MST f,PPL_CUT_LAY_BUNDLE g WHERE a.id = b.MST_ID and c.ID = d.JOB_ID and d.ID = e.PO_BREAK_DOWN_ID and b.COLOR_SIZE_BREAK_DOWN_ID = e.ID and a.PO_BREAK_DOWN_ID = d.ID and f.ID = g.MST_ID and g.BARCODE_NO = b.BARCODE_NO and a.PRODUCTION_TYPE = 1 and a.STATUS_ACTIVE = 1 and a.IS_DELETED = 0 and b.STATUS_ACTIVE = 1 and b.IS_DELETED = 0 and c.STATUS_ACTIVE = 1 and c.IS_DELETED = 0 and d.STATUS_ACTIVE = 1 and d.IS_DELETED = 0 and e.STATUS_ACTIVE = 1 and e.IS_DELETED = 0 and f.STATUS_ACTIVE = 1 and f.IS_DELETED = 0 and g.STATUS_ACTIVE = 1 and g.IS_DELETED = 0 and b.BARCODE_NO = '$barcode_no'";
		
		$table_bundle = $this->db->query($query_bundle)->row();

		if(!empty($table_bundle)){
			$lib_buyer = $this->db->query("SELECT BUYER_NAME FROM LIB_BUYER WHERE ID = $table_bundle->BUYER_NAME")->row();
			$lib_company = $this->db->query("SELECT COMPANY_NAME FROM LIB_COMPANY WHERE ID = $table_bundle->COMPANY_ID")->row();
			$lib_size = $this->db->query("SELECT SIZE_NAME FROM LIB_SIZE WHERE ID = $table_bundle->SIZE_NUMBER_ID")->row();
			$lib_color = $this->db->query("SELECT COLOR_NAME FROM LIB_COLOR WHERE ID = $table_bundle->COLOR_NUMBER_ID")->row();
			$lib_floor = $this->db->query("select company_id, location_id,client_id, floor_name,group_name,floor_serial_no, production_process,status_active,id from lib_prod_floor where ID =$table_bundle->FLOOR_ID")->row();
			$success_status = 1;
		}else{
			$msg.="**No Data Found on this Barcode**";
			$success_status = 0;
		}
		
		//print_r($lib_buyer->BUYER_NAME);die;
		$data = [
			"BUNDLE_NO" => $table_bundle->BUNDLE_NO,
			"BARCODE_NO" => $table_bundle->BARCODE_NO,
			"PO_BREAKDOWN_ID" => $table_bundle->PO_BREAKDOWN_ID,
			"PO_NUMBER" => $table_bundle->PO_NUMBER,
			"BUYER_ID" => $table_bundle->BUYER_NAME,
			"BUYER_NAME" => $lib_buyer->BUYER_NAME,
			"QC_PASS_QNTY" => $table_bundle->QC_PASS_QNTY,
			"COMPANY_ID" => $table_bundle->COMPANY_ID,
			"COMPANY_NAME" => $lib_company->COMPANY_NAME,
			"SIZE_ID" => $table_bundle->SIZE_NUMBER_ID,
			"SIZE_NAME" => $lib_size->SIZE_NAME,
			"COLOR_NUMBER_ID" => $table_bundle->COLOR_NUMBER_ID,
			"COLOR_NAME" => $lib_color->COLOR_NAME,
			"CUTTING_FLOOR_ID" => $table_bundle->FLOOR_ID,
			"CUTTING_FLOOR_NAME" => $lib_floor->FLOOR_NAME,
			"PRODUCTION_QNTY" => $table_bundle->SIZE_QTY,
			"PUB_MSG" => $msg,
			"SUCCESS_STATUS" => $success_status,
		];
		
		return $data;
	}
	
	public function bundle_data_save_for_cutting_store($response_arr){
		$status = 0;
		$response_obj = json_decode($response_arr);
		
		$save_arr = array();
		$barcode_arr = array();
		foreach($response_obj as $row){
			$barcode_arr[]=$row->BARCODE_NO;
		}
		$barcodes = implode(",",$barcode_arr);
		//print_r($barcodes);die;
		$query_recv_barcode = "SELECT BARCODE_NO FROM BUNDLE_DATA_RECV_ISSUE_FOR_CUT WHERE BARCODE_NO in ($barcodes) and STATUS_ACTIVE = 1 and IS_DELETED = 0";
		$table_recv_barcode = $this->db->query($query_recv_barcode)->result();
		$saved_barcode = array();
		if(!empty($table_recv_barcode)){
			
			foreach($table_recv_barcode as $row){
				$saved_barcode[]=$row->BARCODE_NO;
			}

		}
		//print_r($saved_barcode);die;
		$is_saved_this_barcode_count = 0;
		$id = $this->get_max_value("BUNDLE_DATA_RECV_ISSUE_FOR_CUT", "ID") + 1;
		foreach($response_obj as $row)
		{
			if($saved_barcode){
				$is_saved_this_barcode = in_array($row->BARCODE_NO,$saved_barcode);
				if($is_saved_this_barcode==true){
					$is_saved_this_barcode_count++;
					continue;
				}
			}
			
			$save_arr[]=[
				"ID"=> $id,
				"BUNDLE_NO"=> $row->BUNDLE_NO,
				"BARCODE_NO"=> $row->BARCODE_NO,
				"PO_BREAKDOWN_ID"=> $row->PO_BREAKDOWN_ID,
				"PO_NUMBER"=> $row->PO_NUMBER,
				"BUYER_ID"=> $row->BUYER_ID,
				"COMPANY_ID"=> $row->COMPANY_ID,
				"QC_PASS_QNTY"=> $row->QC_PASS_QNTY,
				"SIZE_ID"=> $row->SIZE_ID,
				"COLOR_NUMBER_ID"=> $row->COLOR_NUMBER_ID,
				"COLOR_NAME"=> $row->COLOR_NAME,
				"CUTTING_FLOOR_ID"=> $row->CUTTING_FLOOR_ID,
				"FL_RO_RACK_DTL_ID"=> $row->FL_RO_RACK_DTL_ID,
				"RECEIVE_QNTY_KG"=> $row->RECEIVE_QNTY_KG,
				"PRODUCTION_QNTY"=> $row->PRODUCTION_QNTY,
				"RECV_DATE"=> date("d-M-Y h:i:s a", time()),
				"RECV_USER_ID"=> $row->USER_ID,
				"IS_ISSUED"=> 0,
				"STATUS_ACTIVE"=> 1,
				"IS_DELETED"=> 0,
			];
			$id++;
		}
		//print_r($is_saved_this_barcode_count);die;
		if (count($save_arr)) {
			$status = $this->db->insert_batch("BUNDLE_DATA_RECV_ISSUE_FOR_CUT", $save_arr);
		}

		$data = [
			"DUPLICATE_DATA" =>$is_saved_this_barcode_count,
			"SAVED_DATA" =>$status,
		];
		return $data;
	}

	public function bundle_data_from_receive_rack($barcode_no){
		$msg = "";
		$success_status= 0;
		$query_recv_bundle = "SELECT BUNDLE_NO,BARCODE_NO,PO_BREAKDOWN_ID,PO_NUMBER,BUYER_ID,COMPANY_ID,QC_PASS_QNTY,SIZE_ID,COLOR_NUMBER_ID,COLOR_NAME,CUTTING_FLOOR_ID,RECEIVE_QNTY_KG,RECV_DATE,RECV_USER_ID,FL_RO_RACK_DTL_ID,PRODUCTION_QNTY FROM BUNDLE_DATA_RECV_ISSUE_FOR_CUT WHERE STATUS_ACTIVE = 1 and IS_DELETED = 0 and IS_ISSUED = 0 and BARCODE_NO = '$barcode_no'";
		
		$table_recv_bundle = $this->db->query($query_recv_bundle)->row();

		if(!empty($table_recv_bundle)){
			
			$lib_buyer = $this->db->query("SELECT BUYER_NAME FROM LIB_BUYER WHERE STATUS_ACTIVE = 1 and IS_DELETED = 0 and ID = $table_recv_bundle->BUYER_ID")->row();
			$lib_company = $this->db->query("SELECT COMPANY_NAME FROM LIB_COMPANY WHERE STATUS_ACTIVE = 1 and IS_DELETED = 0 and ID = $table_recv_bundle->COMPANY_ID")->row();
			$lib_size = $this->db->query("SELECT SIZE_NAME FROM LIB_SIZE WHERE STATUS_ACTIVE = 1 and IS_DELETED = 0 and ID = $table_recv_bundle->SIZE_ID")->row();
			$lib_color = $this->db->query("SELECT COLOR_NAME FROM LIB_COLOR WHERE ID = $table_recv_bundle->COLOR_NUMBER_ID")->row();
			$lib_cutting_floor = $this->db->query("SELECT company_id, location_id,client_id, floor_name,group_name,floor_serial_no, production_process,status_active,id from lib_prod_floor where ID = $table_recv_bundle->CUTTING_FLOOR_ID")->row();
			$lib_recv_rack = $this->db->query("SELECT a.FLOOR_ROOM_RACK_NAME FROM LIB_FLOOR_ROOM_RACK_MST a,LIB_FLOOR_ROOM_RACK_DTLS b WHERE a.STATUS_ACTIVE = 1 and a.IS_DELETED = 0 and a.FLOOR_ROOM_RACK_ID=b.RACK_ID and b.FLOOR_ROOM_RACK_DTLS_ID =$table_recv_bundle->FL_RO_RACK_DTL_ID")->row();
			$success_status = 1;
		}else{
			$msg.="**No Data Found on this Barcode**";
			//$success_status = 0;
		}
		
		//print_r($lib_buyer->BUYER_NAME);die;
		$data = [
			"BUNDLE_NO" => $table_recv_bundle->BUNDLE_NO,
			"BARCODE_NO" => $table_recv_bundle->BARCODE_NO,
			"PO_BREAKDOWN_ID" => $table_recv_bundle->PO_BREAKDOWN_ID,
			"PO_NUMBER" => $table_recv_bundle->PO_NUMBER,
			"BUYER_ID" => $table_recv_bundle->BUYER_ID,
			"BUYER_NAME" => $lib_buyer->BUYER_NAME,
			"QC_PASS_QNTY" => $table_recv_bundle->QC_PASS_QNTY,
			"COMPANY_ID" => $table_recv_bundle->COMPANY_ID,
			"COMPANY_NAME" => $lib_company->COMPANY_NAME,
			"SIZE_ID" => $table_recv_bundle->SIZE_ID,
			"SIZE_NAME" => $lib_size->SIZE_NAME,
			"COLOR_NUMBER_ID" => $table_recv_bundle->COLOR_NUMBER_ID,
			"COLOR_NAME" => $lib_color->COLOR_NAME,
			"CUTTING_FLOOR_ID" => $table_recv_bundle->CUTTING_FLOOR_ID,
			"CUTTING_FLOOR_NAME" => $lib_cutting_floor->FLOOR_NAME,
			"RECV_RACK_ID" => $table_recv_bundle->FL_RO_RACK_DTL_ID,
			"RECV_RACK_NAME" => $lib_recv_rack->FLOOR_ROOM_RACK_NAME,
			"PRODUCTION_QNTY" => $table_recv_bundle->PRODUCTION_QNTY,
			"PUB_MSG" => $msg,
			"SUCCESS_STATUS" => $success_status,
		];
		
		return $data;
	}

	public function bundle_data_issue_from_recv_rack($response_arr){

		$status = 0;
		$msg = "";
		$response_obj = json_decode($response_arr);
		$barcode_arr = array();
		foreach($response_obj->barcodes as $row){
			$barcode_arr[$row->barcode]=$row->barcode;
		}
		$barcodes = implode(",",$barcode_arr);
		

		//$query_recv_table = "SELECT ID,IS_ISSUED FROM BUNDLE_DATA_RECV_ISSUE_FOR_CUT WHERE STATUS_ACTIVE = 1 and IS_DELETED = 0 and BARCODE_NO in ($barcodes)";
		//$table_recv = $this->db->query($query_recv_table)->row();
		//print_r($response_obj->user_id);die;
		if(!empty($barcodes)){

				$today = date("d-M-Y h:i:s a", time()); //d-M-Y h:i:s a
				//print_r($today);die;
				$status = $this->db->query("UPDATE BUNDLE_DATA_RECV_ISSUE_FOR_CUT SET IS_ISSUED=1, ISSUE_USER_ID=$response_obj->user_id, ISSUE_DATE = '$today' where BARCODE_NO in ($barcodes)");
				//print_r($status);die;
				if($status==1){
					$msg.="Barcode Issued";
					$status = 1;
				}else{
					$msg.="**Failed**";
				}

			
		}else{
			$msg.="**No Barcode Found**";
		}
		
		$data = [
			"status" => $status,
			"msg" => $msg,
		];
		return $data;
	}

	// public function grn_wise_yarn_data($grn_no)
	// {
	// 	$msg = "";
	// 	$success_status= 0;
	// 	$query_yarn_grn = "SELECT a.ID,a.RECV_NUMBER,a.COMPANY_ID,a.INSERT_DATE,a.RECEIVE_BASIS,a.RECEIVE_PURPOSE,a.LOAN_PARTY,a.BOOKING_NO,a.CHALLAN_NO,a.EXCHANGE_RATE,a.CURRENCY_ID,a.SUPPLIER_ID ,a.STORE_ID,a.SOURCE,b.ID as DTLS_ID,b.WO_PI_ID,b.LOT,b.WO_PI_DTLS_ID,b.WO_PI_NO,b.YARN_COUNT,b.YARN_COMP_TYPE1ST,b.YARN_COMP_PERCENT1ST,b.YARN_TYPE,b.COLOR_NAME,b.UOM,b.WO_PI_QUANTITY,b.COLOR_NAME,b.PARKING_QUANTITY,b.LOSE_CONE,b.RATE,b.AVG_RATE,b.AMOUNT,b.CONS_AMOUNT,b.NO_OF_BAG,b.CONE_PER_BAG,b.WEIGHT_PER_BAG,b.WEIGHT_CONE,b.INSERTED_BY,b.BRAND_NAME FROM INV_RECEIVE_MASTER a,QUARANTINE_PARKING_DTLS b 
	// 	WHERE a.ID = b.MST_ID and a.ENTRY_FORM = 529 and a.IS_APPROVED = 1 and b.IS_QC_PASS = 1 and a.ITEM_CATEGORY = 1 and a.STATUS_ACTIVE=1 and a.IS_DELETED = 0 and b.STATUS_ACTIVE =1 and b.IS_DELETED = 0 and a.RECV_NUMBER = '$grn_no'";
	// 	//print_r($query_yarn_grn);die;
	// 	$table_yarn_grn = $this->db->query($query_yarn_grn)->result();

	// 	if(!empty($table_yarn_grn)){
			
	// 		$company_query = $this->db->query("SELECT ID,COMPANY_NAME FROM LIB_COMPANY WHERE STATUS_ACTIVE = 1 and IS_DELETED = 0 ")->result();
	// 		$company_arr = array();
	// 		foreach($company_query as $row){
	// 			$company_arr[$row->ID] = $row->COMPANY_NAME;
	// 		}

	// 		$yarn_count = $this->db->query("SELECT ID,YARN_COUNT FROM LIB_YARN_COUNT WHERE STATUS_ACTIVE = 1 and IS_DELETED = 0 ")->result();
	// 		$yarn_count_arr = array();
	// 		foreach($yarn_count as $row){
	// 			$yarn_count_arr[$row->ID] = $row->YARN_COUNT;
	// 		}

	// 		$lib_yarn_type = $this->db->query("SELECT YARN_TYPE_ID,YARN_TYPE_SHORT_NAME FROM LIB_YARN_TYPE WHERE STATUS_ACTIVE = 1 and IS_DELETED = 0 ")->result();
	// 		$lib_yarn_type_arr = array();
	// 		foreach($lib_yarn_type as $row){
	// 			$lib_yarn_type_arr[$row->YARN_TYPE_ID] = $row->YARN_TYPE_SHORT_NAME;
	// 		}

	// 		$lib_composition = $this->db->query("SELECT ID,COMPOSITION_NAME FROM lib_composition_array WHERE STATUS_ACTIVE = 1 and IS_DELETED = 0 ")->result();
	// 		$composition_array = array();
	// 		foreach($lib_composition as $row){
	// 			$composition_array[$row->ID] = $row->COMPOSITION_NAME;
	// 		}

	// 		$lib_color = $this->db->query("SELECT ID,COLOR_NAME FROM LIB_COLOR WHERE STATUS_ACTIVE = 1 and IS_DELETED = 0 ")->result();
	// 		$color_array = array();
	// 		foreach($lib_color as $row){
	// 			$color_array[$row->ID] = $row->COLOR_NAME;
	// 		}

	// 		$lib_supplier = $this->db->query("SELECT ID,SUPPLIER_NAME FROM LIB_SUPPLIER WHERE STATUS_ACTIVE = 1 and IS_DELETED = 0 ")->result();
	// 		$supplier_array = array();
	// 		foreach($lib_supplier as $row){
	// 			$supplier_array[$row->ID] = $row->SUPPLIER_NAME;
	// 		}

	// 		$lib_store = $this->db->query("SELECT ID,STORE_NAME FROM LIB_STORE_LOCATION WHERE STATUS_ACTIVE = 1 and IS_DELETED = 0 ")->result();
	// 		$store_array = array();
	// 		foreach($lib_store as $row){
	// 			$store_array[$row->ID] = $row->STORE_NAME;
	// 		}

	// 		$unit_of_measurement = array(1 => "Pcs", 2 => "Dzn", 3 => "Grs", 4 => "GG", 10 => "Mg", 11 => "Gm", 12 => "Kg", 13 => "Quintal", 14 => "Ton", 15 => "Lbs", 20 => "Km", 21 => "Hm", 22 => "Dm", 23 => "Mtr", 24 => "Dcm", 25 => "CM", 26 => "MM", 27 => "Yds", 28 => "Feet", 29 => "Inch", 30 => "CFT", 31 => "SFT", 40 => "Ltr", 41 => "ML", 50 => "Roll", 51 => "Coil", 52 => "Cone", 53 => "Bag", 54 => "Box", 55 => "Drum", 56 => "Bottle", 57 => "Pack", 58 => "Set", 59 => "Can", 60 => "Each", 61 => "Gallon", 62 => "Lachi", 63 => "Pair", 64 => "Lot", 65 => "Packet", 66 => "Pot", 67 => "Book", 68 => "Culind", 69 => "Ream", 70 => "Cft", 71 => "Syp", 72 => "K.V", 73 => "CU-M3", 74 => "Bundle", 75 => "Strip", 76 => "SQM", 77 => "Ounce", 78 => "Cylinder", 79 => "Course", 80 => "Sheet", 81 => "RFT", 82 => "Square Inch", 83 => "Carton", 84 => "Thane", 85 => "Gross Yds", 86 => "Jar", 87 => "Reel", 88 => "CBM",89=>"Tub",90=>"KVA",91=>"KW",92=>"Pallet",93=>"Case",94=>"Job",95=>"KIT",96=>"Watt-Peak");

	// 		$yarn_issue_purpose = array(1 => "Knitting", 2 => "Yarn Dyeing", 3 => "Sales", 4 => "Sample With Order", 5 => "Loan", 6 => "Sample-material", 7 => "Yarn Test", 8 => "Sample Without Order", 9 => "Sewing Production", 10 => "Fabric Test", 11 => "Fabric Dyeing", 12 => "Reconning", 13 => "Machine Wash", 14 => "Topping", 15 => "Twisting", 16 => "Grey Yarn", 26 => "Damage", 27 => "Pilferage", 28 => "Expired", 29 => "Stolen", 30 => "Audit/Adjustment", 31 => "Scrap Store", 32 => "ETP", 33 => "WTP", 34 => "Wash", 35 => "Re Wash", 36 => "Sewing", 37 => "Dyeing", 38 => "Re-Waxing", 39 => "Moisturizing", 40 => "Lab Test", 41 => "Cutting", 42 => "Finishing", 43 => "Dyed Yarn Purchase", 44 => "Re Process", 45 => "Used Cone Sale", 46 => "Dryer", 47 => "Linking", 48 => "Boiler", 49 => "Generator", 50 => "Doubling", 51 => "Punda", 52 => "AOP", 53 => "Production", 54 => "Narrow Fabric", 56 => "General Use", 58 => "RND", 59 => "Sample", 60 => "Expose", 61 => "Gmts Wash", 62 => "Continuous Machine", 63=>"Waxing", 64=>"Extra Purpose", 65=>"Washing", 66=>"ECR" , 67 => "Admin", 68 => "Printing", 69=>"RMG", 70=>"Green Agro", 71=>"QAD", 72=>"CIVIL", 73=>"Maintenance", 74=>"Trims Production",75=>"Yarn Production",76=>"R-O Plant",77=>"Print",78=>"Other/Adjustment",79=>"Recycling", 80=>"Leftover", 81=>"Mercerization",82=>"Singeing",83=>"Embroidery"); 

	// 		$currency = array(1 => "BDT", 2 => "USD", 3 => "EURO", 4 => "CHF", 5 => "SGD", 6 => "Pound", 7 => "YEN");

	// 		$rec_basis = [
	// 			1=>"PI Based",
	// 			2=>"WO/Booking Based",
	// 			4=>"Independent",
	// 		];

	// 		$source_arr = [
	// 			1=>"Import Foreign",
	// 			2=>"EPZ",
	// 			3=>"Import Local",
	// 		];
			
	// 		$success_status = 1;
	// 	}else{
	// 		$msg.="**No Data Found on this GRN**";
	// 		//$success_status = 0;
	// 	}
		
	// 	//print_r($lib_buyer->BUYER_NAME);die;
	// 	$mst = array();
	// 	$dtls = array();
	// 	//print_r($table_yarn_grn);die;
	// 	foreach($table_yarn_grn as $row){

	// 		$mst = [
	// 			"ID" => $row->ID,
	// 			"RECV_NUMBER" => $row->RECV_NUMBER,
	// 			"COMPANY_ID" => $row->COMPANY_ID,
	// 			"COMPANY_NAME" => $company_arr[$row->COMPANY_ID],
	// 			"RECEIVE_PURPOSE_ID" => $row->RECEIVE_PURPOSE,
	// 			"RECEIVE_PURPOSE" => $yarn_issue_purpose[$row->RECEIVE_PURPOSE],
	// 			"RECEIVE_BASIS_ID" => $row->RECEIVE_BASIS,
	// 			"RECEIVE_BASIS" => $rec_basis[$row->RECEIVE_BASIS],
	// 			"BOOKING_NO" => $row->BOOKING_NO,
	// 			"SUPPLIER_ID" => $row->SUPPLIER_ID,
	// 			"SUPPLIER_NAME" => $supplier_array[$row->SUPPLIER_ID],
	// 			"SOURCE_ID" => $row->SOURCE,
	// 			"SOURCE_NAME" => $source_arr[$row->SOURCE],
	// 			"PARKING_DATE" => date("d-M-Y",strtotime($row->INSERT_DATE)),
				
	// 			"LOAN_PARTY_ID" => $row->LOAN_PARTY,
	// 			"LOAN_PARTY" => ($supplier_array[$row->LOAN_PARTY]) ? $supplier_array[$row->LOAN_PARTY] : "",
				
	// 			"CHALLAN_NO" => $row->CHALLAN_NO,
	// 			"STORE_ID" => $row->STORE_ID,
	// 			"STORE_NAME" => ($store_array[$row->STORE_ID])? $store_array[$row->STORE_ID] : "",
	// 			"EXCHANGE_RATE" => $row->EXCHANGE_RATE,
	// 			"CURRENCY_ID" => $row->CURRENCY_ID,
	// 			"CURRENCY_NAME" => $currency[$row->CURRENCY_ID],
	// 			"PUB_MSG" => $msg,
	// 			"SUCCESS_STATUS" => $success_status,				

	// 		];
	// 		$dtls[] = [
	// 			"DTLS_ID" => $row->DTLS_ID,
	// 			"NO_OF_BAG" => $row->NO_OF_BAG,
	// 			"WEIGHT_PER_BAG" => number_format($row->WEIGHT_PER_BAG,2),
	// 			"LOOSE_BAG_WT" => number_format($row->PARKING_QUANTITY-($row->WEIGHT_PER_BAG*$row->NO_OF_BAG),2),
	// 			"CON_PER_BAG" => $row->CONE_PER_BAG,
	// 			"LOOSE_CON" => $row->LOSE_CONE,
	// 			"WT_PER_CON" => number_format($row->PARKING_QUANTITY/(($row->CONE_PER_BAG*$row->NO_OF_BAG)+$row->LOSE_CONE)),
	// 			"LOT" => $row->LOT,
	// 			"BRAND_NAME" => ($row->BRAND_NAME)?$row->BRAND_NAME : "",
	// 			"COLOR_ID" =>$row->COLOR_NAME,
	// 			"COLOR_NAME" =>$color_array[$row->COLOR_NAME],
	// 			"YARN_TYPE_ID" => $row->YARN_TYPE,
	// 			"YARN_TYPE" => $lib_yarn_type_arr[$row->YARN_TYPE],
	// 			"YARN_COMP_TYPE_ID" => $row->YARN_COMP_TYPE1ST,			
	// 			"YARN_COMP_TYPE" => $composition_array[$row->YARN_COMP_TYPE1ST],			
	// 			"YARN_COUNT_ID" => $row->YARN_COUNT,
	// 			"YARN_COUNT" => $yarn_count_arr[$row->YARN_COUNT],
	// 			"UOM_ID" => $row->UOM,
	// 			"UOM" => $unit_of_measurement[$row->UOM],
	// 			"WO_PI_QUANTITY" => $row->WO_PI_QUANTITY,
	// 			"PARKING_QUANTITY" => number_format($row->PARKING_QUANTITY,2),
	// 			"RATE" => $row->RATE,
	// 			"AVG_RATE" => $row->AVG_RATE,
	// 			"AMOUNT" => $row->AMOUNT,
	// 			"CONS_AMOUNT" => number_format($row->CONS_AMOUNT,2),				
	// 			"WEIGHT_CONE" => number_format($row->WEIGHT_CONE,2),
	// 			"INSERTED_BY" => $row->INSERTED_BY,
				
	// 		];
	// 	}
	// 	$mst["YARN_RECEIVE_DTLS"] = $dtls;
	// 	if($dtls){
	// 		$success_status = 1;
	// 	}
	// 	$mst["SUCCESS_STATUS"] = $success_status;
	// 	$mst["PUB_MSG"] = "";
	// 	//print_r($mst);die;
	// 	return $mst;
	// }

	public function grn_wise_yarn_data($grn_no)
	{
		// print_r(5);
		// die;
		$msg = "";
		$success_status = 0;
		$query_yarn_grn = "SELECT a.EMP_ID as GRN_ID,a.RCVD_BOOK_NO as GRN_NO,a.ID as MRR_ID,a.RECV_NUMBER as MRR_NO,b.RFID_NO,b.TRANS_ID FROM INV_RECEIVE_MASTER a,RFID_YARN_DTLS b WHERE  a.RCVD_BOOK_NO = '$grn_no' and a.RECEIVE_BASIS = 19 and a.ITEM_CATEGORY = 1 and a.STATUS_ACTIVE = 1 and a.IS_DELETED = 0 and b.STATUS_ACTIVE = 1 and b.IS_DELETED = 0 and a.IS_RFID = 1 and b.ITEM_CATEGORY =1 and a.ID = b.RCV_MST_ID";
		//print_r($query_yarn_grn);die;
		$table_yarn_grn = $this->db->query($query_yarn_grn)->result();
		$rfids = array();
		$mst = array();
		$mrr_arr = array();
		
		if (!empty($table_yarn_grn)) 
		{
			foreach($table_yarn_grn as $row){
				$rfids[$row->MRR_ID][]=[
					"RFID_NO" => $row->RFID_NO,
					"TRANS_ID" => ($row->TRANS_ID) ? $row->TRANS_ID : 0,
				];
			}
			
			foreach($table_yarn_grn as $row){
				
				$mst = [
					"GRN_ID" => $row->GRN_ID,
					"GRN_NO" => $row->GRN_NO,
					"MRR_ID" => $row->MRR_ID,				
					"MRR_NO" => $row->MRR_NO,				
					"RFIDS" => $rfids[$row->MRR_ID],				
					
				];
			}
		} else {
			$msg .= "No Data Found on this GRN";
		}

		return $mst;
	}



	public function grn_wise_yarn_data_save_v2($response_arr){
		$status = 0;
		$msg = "";
		$this->db->trans_begin();
		$response_obj = json_decode($response_arr);

		$query_quarantine_park_dtls  = "SELECT * FROM QUARANTINE_PARKING_DTLS WHERE ID = $response_obj->DTLS_ID and STATUS_ACTIVE = 1 and IS_DELETED = 0";
		$table_quarantine_park_dtls = $this->db->query($query_quarantine_park_dtls)->row();

		if(empty($table_quarantine_park_dtls)){
			$msg.=" ***No Quanrantine dtls data Found";
			return [];
		}

		$query_inv_rec_mst = "SELECT * FROM INV_RECEIVE_MASTER WHERE ID = $response_obj->MASTER_ID and STATUS_ACTIVE = 1 and IS_DELETED = 0";
		$table_inv_rec_mst = $this->db->query($query_inv_rec_mst)->row();
		if(empty($table_inv_rec_mst)){
			$msg.=" ***No Inv Rec mst data Found";
			return [];
		}
		//return_next_id_by_sequence("PRO_GMTS_PROD_DFT_SEQ", "PRO_GMTS_PROD_DFT", "", "", 0, "", 0, 0, 0, 0, 0, 0, 0);
		$new_trims_recv_system_id = explode("*", return_next_id_by_sequence("INV_RECEIVE_MASTER_PK_SEQ", "inv_receive_master","",1,$table_inv_rec_mst->COMPANY_ID,'YRV',1,date("Y",time()),1 ));
		//print_r($new_trims_recv_system_id);die;

		$msg.= "***New inv_mst system id = $new_trims_recv_system_id[0]";
		$query_check_inv_rcv_mst = "SELECT ID FROM INV_RECEIVE_MASTER WHERE EMP_ID = $response_obj->MASTER_ID";
		$table_inv_old_row = $this->db->query($query_check_inv_rcv_mst)->row();

		if(empty($table_inv_old_row)){
			$inv_rec_mst_id = return_next_id('ID','INV_RECEIVE_MASTER');
			$msg.= " ***New inv_mst_id = $inv_rec_mst_id";
			$table_inv_rec_mst->EMP_ID = $table_inv_rec_mst->ID; //grn_wo_pi_id
			$table_inv_rec_mst->RCVD_BOOK_NO = $table_inv_rec_mst->RECV_NUMBER; //grn_wo_pi_no
			$table_inv_rec_mst->ID = $inv_rec_mst_id;
			$table_inv_rec_mst->RECV_NUMBER_PREFIX_NUM = round($new_trims_recv_system_id[2]);
			$table_inv_rec_mst->RECV_NUMBER_PREFIX = $new_trims_recv_system_id[1];
			$table_inv_rec_mst->RECV_NUMBER = $new_trims_recv_system_id[0];
			$table_inv_rec_mst->ENTRY_FORM = 1;
			$table_inv_rec_mst->INSERTED_BY = $response_obj->USER_ID;
			$table_inv_rec_mst->INSERT_DATE = date("d-M-Y h:i:s a", time());
			$table_inv_rec_mst->IS_MULTI = 1;
			$table_inv_rec_mst->RECEIVE_BASIS = 19;
			
			//$table_inv_rec_mst->booking_no = $table_inv_rec_mst->BOOKING_NO;
			
			$table_inv_rec_mst->IS_APPROVED = 0;
			$table_inv_rec_mst->APPROVED_SEQU_BY = 0;
			
			$status = $this->insertData($table_inv_rec_mst,"INV_RECEIVE_MASTER");
		}else{
			$inv_rec_mst_id = $table_inv_old_row->ID;
			$table_inv_rec_mst->UPDATED_BY = $response_obj->USER_ID;
			$table_inv_rec_mst->UPDATE_DATE = date("d-M-Y", time());
			$this->db->query("UPDATE INV_RECEIVE_MASTER SET UPDATED_BY=$response_obj->USER_ID, UPDATE_DATE='".date("d-M-Y h:i:s a", time())."' WHERE ID = $table_inv_old_row->ID");
			$msg.= " ***old inv_mst_id = $inv_rec_mst_id";
			//print_r("***");
		}
		//print_r($table_inv_rec_mst);die;
		
		
		
		//print_r($table_quarantine_park_dtls);die;
		$check_product=$this->return_product_id(
			$table_quarantine_park_dtls->YARN_COUNT, 
			$table_quarantine_park_dtls->YARN_COMP_TYPE1ST, 
			0, 
			$table_quarantine_park_dtls->YARN_COMP_PERCENT1ST, 
			0, 
			$table_quarantine_park_dtls->YARN_TYPE,
			$table_quarantine_park_dtls->COLOR_NAME, 
			"$table_quarantine_park_dtls->LOT", 
			0, 
			$table_inv_rec_mst->COMPANY_ID, 
			$table_inv_rec_mst->SUPPLIER_ID, 
			0, 
			$table_quarantine_park_dtls->UOM, 
			$table_quarantine_park_dtls->YARN_TYPE, 
			$table_quarantine_park_dtls->YARN_COMP_TYPE1ST, 
			$table_inv_rec_mst->RECEIVE_PURPOSE, 
			0);
			
		$expString = explode("***", $check_product);
		if ($expString[0] == true && $expString[0] != "")
			{
				
				$prodMSTID = $expString[1];
				$msg.=" ***prod_id= $prodMSTID";
				
			}
			else
			{
				//print_r($expString);die;
				$field_array_prod_insert = $expString[1];
				$data_array_prod_insert = $expString[2];
				//echo "10**".$expString[0]."=".$expString[0];oci_rollback($con);disconnect($con);die;
				//echo "10**"."insert into product_details_master (".$field_array_prod_insert.") values ".$data_array_prod_insert;oci_rollback($con);disconnect($con);die;
				$insertR = sql_insert("PRODUCT_DETAILS_MASTER", $field_array_prod_insert, $data_array_prod_insert, 0);
				$prodMSTID = $expString[3];
				$msg.=" ***New prod_id= $prodMSTID";
			}

			

		$inv_trans_id = return_next_id('ID','INV_TRANSACTION');
		//$parking_save_arr = array();
	
	
		$parking_save_arr = [
			"ID" => $inv_trans_id,
			"MST_ID" => $table_inv_rec_mst->MASTER_ID,
			"IS_EXCEL" => 1,
			"RECEIVE_BASIS" => $table_inv_rec_mst->RECEIVE_BASIS,
			"PI_WO_BATCH_NO" => $table_quarantine_park_dtls->WO_PI_ID,
			"PI_WO_REQ_DTLS_ID" => $table_quarantine_park_dtls->WO_PI_DTLS_ID,
			"COMPANY_ID" => $table_inv_rec_mst->COMPANY_ID,
			"SUPPLIER_ID" => $table_inv_rec_mst->SUPPLIER_ID,
			"INSERTED_BY" =>  $response_obj->USER_ID,
			"TRANSACTION_TYPE" => 1,
			"TRANSACTION_DATE" => date("d-M-Y", time()),
			"INSERT_DATE" => date("d-M-Y", time()),
			"ENTRY_FORM" => 1,
			"IS_DELETED" => 0,
			"STATUS_ACTIVE" =>1,
			"PRODUCT_CODE" => $table_quarantine_park_dtls->PRODUCT_CODE,
			"ORDER_UOM" => $table_quarantine_park_dtls->UOM,
			"ORDER_QNTY" => $table_quarantine_park_dtls->PARKING_QUANTITY,
			"ORDER_RATE" => $table_quarantine_park_dtls->RATE,
			"DYE_CHARGE" => $table_quarantine_park_dtls->DYEING_CHARGE,
			"CONS_AVG_RATE" => $table_quarantine_park_dtls->AVG_RATE,
			"ORDER_AMOUNT" => $table_quarantine_park_dtls->AMOUNT,
			"CONS_AMOUNT" => $table_quarantine_park_dtls->CONS_AMOUNT,
			"NO_OF_BAGS" => $table_quarantine_park_dtls->NO_OF_BAG,
			"CONE_PER_BAG" => $table_quarantine_park_dtls->CONE_PER_BAG,
			"NO_LOOSE_CONE" => $table_quarantine_park_dtls->LOSE_CONE,
			"WEIGHT_PER_BAG" => $table_quarantine_park_dtls->WEIGHT_PER_BAG,
			"WEIGHT_PER_CONE" => $table_quarantine_park_dtls->WEIGHT_CONE,
			"REMARKS" => $table_quarantine_park_dtls->REMARKS,
			"ITEM_CATEGORY" => $table_quarantine_park_dtls->ITEM_CATEGORY_ID,
			"ORDER_ILE" => $table_quarantine_park_dtls->ILE_PERCENT,
			"STORE_ID" => $table_inv_rec_mst->STORE_ID,
			"FLOOR_ID" => $table_quarantine_park_dtls->FLOOR_ID,
			"ROOM" => $table_quarantine_park_dtls->ROOM,
			"RACK" => $table_quarantine_park_dtls->RACK,
			"BIN_BOX" => $table_quarantine_park_dtls->BIN_BOX,
			"GREY_QUANTITY" => $table_quarantine_park_dtls->GREY_QUANTITY,
			"PROD_ID" => $prodMSTID,
			"ORIGIN_PROD_ID" => $prodMSTID,
			"CONS_UOM" => $table_quarantine_park_dtls->UOM,
			"CONS_QUANTITY" => $table_quarantine_park_dtls->CONS_AMOUNT,
			"CONS_RATE" => $table_quarantine_park_dtls->AVG_RATE,
			"BALANCE_QNTY" => $table_quarantine_park_dtls->PARKING_QUANTITY,
			"BALANCE_AMOUNT" => $table_quarantine_park_dtls->CONS_AMOUNT,
			"ORDER_ILE_COST" => 0,
			"SELF" => 0,
			"CONS_ILE" => $table_quarantine_park_dtls->AVG_RATE*$table_quarantine_park_dtls->AVG_RATE,
			"CONS_ILE_COST" => $table_quarantine_park_dtls->AVG_RATE*$table_quarantine_park_dtls->AVG_RATE,
		];
		
		//$status = $this->db->insert_batch("INV_TRANSACTION", $parking_save_arr);
		$this->insertData($parking_save_arr,"INV_TRANSACTION");
		//print_r($parking_save_arr);die;
		$yarn_rfid_dtls_id = return_next_id('ID','RFID_YARN_DTLS');
		$rfid_save_arr = array();
		foreach($response_obj->RFID as  $row){
			
			$rfid_save_arr[] = [
				'ID' => $yarn_rfid_dtls_id,
				'MST_ID' => $inv_rec_mst_id,
				'TRANS_ID' => $inv_trans_id,
				'TRANS_TYPE' => 1,
				'ITEM_CATEGORY' => 1,
				'RFID_NO' => $row->EPCID,
				'ENTRY_FORM' => 1,
				'INSERT_DATE' => date("d-M-Y",time()),
				'STATUS_ACTIVE' => 1,
				'IS_DELETED' => 0,
			];
			$yarn_rfid_dtls_id++;
		}
		//print_r($rfid_save_arr);die;
		$status = $this->db->insert_batch("RFID_YARN_DTLS", $rfid_save_arr);
		
		if ($this->db->trans_status() === FALSE) {
			$this->db->trans_rollback();
			$msg.=" ***Status = Rollbacked";
		} else {
			$this->db->trans_commit();
			//$this->db->trans_rollback();
			$msg.= " ***Status = Commited";
		}
		return $msg;

	}


	function return_product_id($yarncount, $composition_one, $composition_two, $percentage_one, $percentage_two, $yarntype, $color, $yarnlot, $prodCode, $company, $supplier, $store, $uom, $yarn_type, $composition, $cbo_receive_purpose, $hdnPayMode)
	{

		$composition_one = str_replace("'", "", $composition_one);
		$composition_two = str_replace("'", "", $composition_two);
		$percentage_one = str_replace("'", "", $percentage_one);
		$percentage_two = str_replace("'", "", $percentage_two);
		$yarntype = str_replace("'", "", $yarntype);
		$color = str_replace("'", "", $color);
		$yarncount = str_replace("'", "", $yarncount);
		if ($percentage_one == "") $percentage_one = 0;
		if ($percentage_two == "") $percentage_two = 0;
		$cbo_receive_purpose = str_replace("'", "", $cbo_receive_purpose);
		if($cbo_receive_purpose==2 || $cbo_receive_purpose==12 || $cbo_receive_purpose==15 || $cbo_receive_purpose==38 || $cbo_receive_purpose==43 || $cbo_receive_purpose==46 || $cbo_receive_purpose==50 || $cbo_receive_purpose==51 ) $dyed_type=1; else $dyed_type=2;
		if($cbo_receive_purpose==15) $is_twisted=1; else $is_twisted=0;
		
		//for pay mode
		$payMode = str_replace("'", "", $hdnPayMode);
		$is_within_group = 0;
		if($payMode == 3 || $payMode == 5)
		{
			$is_within_group = 1;
		}

		//NOTE :- Yarn category array ID=1
		$conp2_cond="";
		if($composition_two!="") $conp2_cond=" and yarn_comp_type2nd=$composition_two and yarn_comp_percent2nd=$percentage_two";
		$whereCondition = "yarn_count_id=$yarncount and yarn_comp_type1st=$composition_one and yarn_comp_percent1st=$percentage_one $conp2_cond and yarn_type=$yarntype and color=$color and company_id=$company and supplier_id=$supplier and item_category_id=1 and lot='$yarnlot' and status_active=1 and is_deleted=0"; //and store_id=$store
		$prodMSTID = return_field_value("id", "product_details_master", "$whereCondition","");
		//return "select id from product_details_master where $whereCondition";die;
		$insertResult = true;
		if ($prodMSTID == false || $prodMSTID == "")
		{
			// new product create here--------------------------//
			$yarn_count_arr = return_library_array("select id, yarn_count from lib_yarn_count", 'id', 'yarn_count');
			$color_name_arr = return_library_array("select id, color_name from lib_color where status_active=1 and is_deleted=0", 'id', 'color_name');

			$compositionPart = $composition[$composition_one] . " " . $percentage_one;
			if ($percentage_two != 0) {
				$compositionPart .= " " . $composition[$composition_two] . " " . $percentage_two;
			}

			//$yarn_count.','.$composition.','.$ytype.','.$color;
			$product_name_details = $yarn_count_arr[$yarncount] . " " . $compositionPart . " " . $yarn_type[$yarntype] . " " . $color_name_arr[$color];
			$product_name_details = str_replace(array("\r", "\n"), '', $product_name_details);
			
			$prodMSTID = return_next_id_by_sequence("PRODUCT_DETAILS_MASTER_PK_SEQ", "product_details_master", $con);
			$field_array = "id,company_id,supplier_id,item_category_id,product_name_details,lot,item_code,unit_of_measure,yarn_count_id,yarn_comp_type1st,yarn_comp_percent1st,yarn_comp_type2nd,yarn_comp_percent2nd,yarn_type,color,dyed_type,inserted_by,insert_date,is_twisted,is_within_group";
			$data_array = "(" . $prodMSTID . "," . $company . "," . $supplier . ",1,'" . $product_name_details . "','" . $yarnlot . "'," . $prodCode . "," . $uom . "," . $yarncount . "," . $composition_one . "," . $percentage_one . ",'" . $composition_two . "','" . $percentage_two . "'," . $yarntype . "," . $color . ",'" . $dyed_type . "','" . $user_id . "','" . $pc_date_time . "',".$is_twisted.",".$is_within_group.")";
			//echo $field_array."<br>".$data_array."--".$product_name_details;die;
			$insertResult = false;
			//$insertResult = sql_insert("product_details_master",$field_array,$data_array,1);
		}
		if ($insertResult == true) {
			return $insertResult . "***" . $prodMSTID;
		} else {
			return $insertResult . "***" . $field_array . "***" . $data_array . "***" . $prodMSTID;
		}
	}

	public function rfid_yarn_store_location_update($response_arr)
	{
		$status = 0;
		$msg = "";
		$this->db->trans_begin();
		$response_obj = json_decode($response_arr);

		//print_r($response_obj->RFIDS);die;
		//{ "MRR_ID": "79835", "FLOOR_ROOM_RACK_DTLS_ID": "1282", "USER_ID": "165", "RFIDS": [ { "RFID_NO": "ABC123", "TRANS_ID": 12 }, { "RFID_NO": "KMS456", "TRANS_ID": 0 } ] }
		$query_room_rack_table = "SELECT * FROM LIB_FLOOR_ROOM_RACK_DTLS WHERE STATUS_ACTIVE = 1 and IS_DELETED = 0 and FLOOR_ROOM_RACK_DTLS_ID=$response_obj->FLOOR_ROOM_RACK_DTLS_ID";
		$table_room_rack_table = $this->db->query($query_room_rack_table)->row();
		//print_r($query_room_rack_table);die;

		$store_id = ($table_room_rack_table->STORE_ID)? $table_room_rack_table->STORE_ID : 0;
		$floor_id = ($table_room_rack_table->FLOOR_ID)? $table_room_rack_table->FLOOR_ID : 0;
		$room_id = ($table_room_rack_table->ROOM_ID)? $table_room_rack_table->ROOM_ID : 0;
		$rack_id = ($table_room_rack_table->RACK_ID)? $table_room_rack_table->RACK_ID : 0;
		$shelf_id = ($table_room_rack_table->SHELF_ID)? $table_room_rack_table->SHELF_ID : 0;
		$bin_id = ($table_room_rack_table->BIN_ID)? $table_room_rack_table->BIN_ID: 0;

		$rfid_array = array();
		foreach($response_obj->RFIDS as $row){
			$rfid_array[$row->RFID_NO]=$row->RFID_NO;
		}

		$rfids = "'".implode("','",$rfid_array)."'";
		//print_r($rfids);die;

		$query_yarn_grn = "SELECT a.EMP_ID as GRN_ID,a.RCVD_BOOK_NO as GRN_NO,a.ID as MRR_ID,a.RECV_NUMBER as MRR_NO,b.RFID_NO,b.TRANS_ID,c.PARKING_DTLS_ID,c.PROD_ID,a.COMPANY_ID,a.SUPPLIER_ID,b.BAG_WEIGHT FROM INV_RECEIVE_MASTER a,RFID_YARN_DTLS b,RFID_YARN_MST c WHERE a.ID = $response_obj->MRR_ID and a.RECEIVE_BASIS = 19 and a.ITEM_CATEGORY = 1 and a.STATUS_ACTIVE = 1 and a.IS_DELETED = 0 and b.STATUS_ACTIVE = 1 and b.IS_DELETED = 0 and a.IS_RFID = 1 and b.ITEM_CATEGORY = 1 and a.ID = b.RCV_MST_ID and c.ID = b.RFID_MST_ID and b.RFID_NO in ($rfids)";
		
		$table_yarn_grn = $this->db->query($query_yarn_grn)->result();
		//print_r($query_yarn_grn);die;
		$prod_id =array();
		$parking_dtls_id =array();
		$rfid_product_wise =array();
		$parking_dtls_id_by_prod_id = array();
		$prod_id_2 = array();
		$parking_dtls_id_2 = array();
		$rfid_by_product = array();
		$mrr_id_by_prod_id = array();
		$company_id_by_prod_id = array();
		$supplier_by_prod_id = array();
		$parking_id_by_prod_id = array();
		$weight_by_prod_id = array();
		//print_r($query_yarn_grn);die;
 		foreach($table_yarn_grn as $row){
			$prod_id[$row->RFID_NO] = $row->PROD_ID;
			$parking_dtls_id[$row->RFID_NO] = $row->PARKING_DTLS_ID;
			$parking_dtls_id_2[$row->PARKING_DTLS_ID] = $row->PARKING_DTLS_ID;
			//$rfid_product_wise[$row->PROD_ID] =;
			$prod_id_2[$row->PROD_ID] = $row->PROD_ID;
			$parking_dtls_id_by_prod_id[$row->PROD_ID] = $row->PARKING_DTLS_ID;
			$rfid_by_product[$row->PROD_ID][]=$row->RFID_NO;
			$weight_by_prod_id[$row->PROD_ID]+=$row->BAG_WEIGHT;
			$mrr_id_by_prod_id[$row->PROD_ID] = $row->MRR_ID;
			$company_id_by_prod_id[$row->PROD_ID] = $row->COMPANY_ID;
			$supplier_by_prod_id[$row->PROD_ID] = $row->SUPPLIER_ID;
			$parking_id_by_prod_id[$row->PROD_ID] = $row->PARKING_DTLS_ID;
		}
		//print_r($prod_id_2);die;
		$product_id_str = implode(",",$prod_id_2);
		$query_inv_trans_old_row = "SELECT * FROM INV_TRANSACTION WHERE STATUS_ACTIVE = 1 and IS_DELETED = 0 and MST_ID = $response_obj->MRR_ID and IS_EXCEL = 1 and RECEIVE_BASIS = 19 and STORE_ID = $store_id and FLOOR_ID = $floor_id and ROOM = $room_id and RACK = $rack_id and BIN_BOX = $bin_id and SELF=$shelf_id and PROD_ID in($product_id_str)";

		$table_inv_trans_old_row = $this->db->query($query_inv_trans_old_row)->result();
		//print_r($query_inv_trans_old_row);die;
		$old_trans_table_data= array();
		$old_trans_row_id= array();
		$old_num_of_bag= array();
		$old_cons_amount = array();
		$old_cons_quantity = array();
		$old_balance_qnty = array();
		if($table_inv_trans_old_row)
		{
			foreach($table_inv_trans_old_row as $row)
			{
				$old_trans_table_data[$row->MST_ID][$row->PROD_ID][$store_id][$floor_id][$room_id][$rack_id][$shelf_id][$bin_id] = 1;
				$old_trans_row_id[$row->MST_ID][$row->PROD_ID][$store_id][$floor_id][$room_id][$rack_id][$shelf_id][$bin_id] = $row->ID;
				$old_num_of_bag[$row->MST_ID][$row->PROD_ID][$store_id][$floor_id][$room_id][$rack_id][$shelf_id][$bin_id] = $row->NO_OF_BAGS;
				$old_cons_amount[$row->MST_ID][$row->PROD_ID][$store_id][$floor_id][$room_id][$rack_id][$shelf_id][$bin_id] = $row->CONS_AMOUNT;
				$old_cons_quantity[$row->MST_ID][$row->PROD_ID][$store_id][$floor_id][$room_id][$rack_id][$shelf_id][$bin_id] = $row->CONS_QUANTITY;
				$old_balance_qnty[$row->MST_ID][$row->PROD_ID][$store_id][$floor_id][$room_id][$rack_id][$shelf_id][$bin_id] = $row->BALANCE_QNTY;
			}			
		}



		$parking_dtls_id_str = implode(",",$parking_dtls_id_2);
		$query_quarantine_park_dtls  = "SELECT * FROM QUARANTINE_PARKING_DTLS WHERE ID in ($parking_dtls_id_str) AND STATUS_ACTIVE = 1 and IS_DELETED = 0";
		$table_quarantine_park_dtls = $this->db->query($query_quarantine_park_dtls)->result();
		//print_r($table_quarantine_park_dtls);die;
		$quarantine_table_data = array();
		foreach($table_quarantine_park_dtls as $row){
			$quarantine_table_data[$row->ID]=[
				"ID" => $row->ID,
				"WO_PI_ID" => $row->WO_PI_ID,
				"WO_PI_DTLS_ID" => $row->WO_PI_DTLS_ID,
				"PRODUCT_CODE" => $row->PRODUCT_CODE,
				"UOM" => $row->UOM,
				"PARKING_QUANTITY" => $row->PARKING_QUANTITY,
				"RATE" => $row->RATE,
				"DYEING_CHARGE" => $row->DYEING_CHARGE,
				"AVG_RATE" => $row->AVG_RATE,
				"AMOUNT" => $row->AMOUNT,
				"CONS_AMOUNT" => $row->CONS_AMOUNT,
				"NO_OF_BAG" => $row->NO_OF_BAG,
				"CONE_PER_BAG" => $row->CONE_PER_BAG,
				"LOSE_CONE" => $row->LOSE_CONE,
				"WEIGHT_PER_BAG" => $row->WEIGHT_PER_BAG,
				"WEIGHT_CONE" => $row->WEIGHT_CONE,
				"REMARKS" => $row->REMARKS,
				"ITEM_CATEGORY_ID" => $row->ITEM_CATEGORY_ID,
				"ILE_PERCENT" => $row->ILE_PERCENT,
				"GREY_QUANTITY" => $row->GREY_QUANTITY,
				"UOM" => $row->UOM,
				"PARKING_QUANTITY" => $row->PARKING_QUANTITY,
			];
		}
		$inv_trans_id = return_next_id('ID', 'INV_TRANSACTION');
		$update_data_arr= array();
		$save_data_arr= array();
		$trans_id_by_prod_id= array();
		//print_r($table_inv_trans_old_row);die;
		foreach($prod_id_2 as $prod_id_row)
		{
			$count_rfid_by_product[$prod_id_row] = count($rfid_by_product[$prod_id_row]);

			if($old_trans_table_data[$response_obj->MRR_ID][$prod_id_row][$store_id][$floor_id][$room_id][$rack_id][$shelf_id][$bin_id]){
				//print_r(4);die;
				//update event
				$update_data_arr[]=[
					"ID" => $old_trans_row_id[$response_obj->MRR_ID][$prod_id_row][$store_id][$floor_id][$room_id][$rack_id][$shelf_id][$bin_id]+$count_rfid_by_product[$prod_id_row],
					"ORDER_AMOUNT" => $quarantine_table_data["AMOUNT"],
					"CONE_PER_BAG" => $quarantine_table_data["CONE_PER_BAG"],
					"NO_LOOSE_CONE" => $quarantine_table_data["LOSE_CONE"],
					"CONS_QUANTITY" => $old_cons_quantity[$row->MST_ID][$row->PROD_ID][$store_id][$floor_id][$room_id][$rack_id][$shelf_id][$bin_id]+($weight_by_prod_id[$prod_id_row]/$count_rfid_by_product[$prod_id_row]),
					"BALANCE_QNTY" => $old_balance_qnty[$row->MST_ID][$row->PROD_ID][$store_id][$floor_id][$room_id][$rack_id][$shelf_id][$bin_id]+($weight_by_prod_id[$prod_id_row]),
					"BALANCE_AMOUNT" => $quarantine_table_data["CONS_AMOUNT"],
					"GREY_QUANTITY" => $quarantine_table_data["GREY_QUANTITY"],
					"CONS_AMOUNT" => $old_cons_amount[$response_obj->MRR_ID][$prod_id_row][$store_id][$floor_id][$room_id][$rack_id][$shelf_id][$bin_id]+(($weight_by_prod_id[$prod_id_row]/$count_rfid_by_product[$prod_id_row])*$quarantine_table_data[$parking_dtls_id_by_prod_id[$prod_id_row]]["RATE"]) > 0 ?? 0,
					"NO_OF_BAGS" => $old_num_of_bag[$response_obj->MRR_ID][$prod_id_row][$store_id][$floor_id][$room_id][$rack_id][$shelf_id][$bin_id]+$count_rfid_by_product[$prod_id_row],
				];
				$msg.=" update +1 ";
			}else{
				$trans_id_by_prod_id[$prod_id_row]=$inv_trans_id;
				//print_r($count_rfid_by_product);die;
				//insert event
				$save_data_arr[] = [
					"ID" => $inv_trans_id,
					"MST_ID" => $mrr_id_by_prod_id[$prod_id_row],
					"IS_EXCEL" => 1,
					"RECEIVE_BASIS" => 19,
					"PI_WO_BATCH_NO" => $quarantine_table_data[$parking_dtls_id_by_prod_id[$prod_id_row]]["WO_PI_ID"],
					"PI_WO_REQ_DTLS_ID" => $quarantine_table_data[$parking_dtls_id_by_prod_id[$prod_id_row]]["WO_PI_DTLS_ID"],
					"COMPANY_ID" => $company_id_by_prod_id[$prod_id_row],
					"SUPPLIER_ID" => $supplier_by_prod_id[$prod_id_row],
					"INSERTED_BY" =>  $response_obj->USER_ID,
					"TRANSACTION_TYPE" => 1,
					"TRANSACTION_DATE" => date("d-M-Y", time()),
					"INSERT_DATE" => date("d-M-Y h:i:s a", time()),
					"ENTRY_FORM" => 1,
					"IS_DELETED" => 0,
					"STATUS_ACTIVE" => 1,
					"PRODUCT_CODE" => $quarantine_table_data[$parking_dtls_id_by_prod_id[$prod_id_row]]["PRODUCT_CODE"],
					"ORDER_UOM" => $quarantine_table_data[$parking_dtls_id_by_prod_id[$prod_id_row]]["UOM"],					
					"ORDER_RATE" => $quarantine_table_data[$parking_dtls_id_by_prod_id[$prod_id_row]]["RATE"],
					"DYE_CHARGE" => $quarantine_table_data[$parking_dtls_id_by_prod_id[$prod_id_row]]["DYEING_CHARGE"],
					"CONS_AVG_RATE" => $quarantine_table_data[$parking_dtls_id_by_prod_id[$prod_id_row]]["AVG_RATE"],					
					"CONE_PER_BAG" => $quarantine_table_data[$parking_dtls_id_by_prod_id[$prod_id_row]]["CONE_PER_BAG"],
					"NO_LOOSE_CONE" => $quarantine_table_data[$parking_dtls_id_by_prod_id[$prod_id_row]]["LOSE_CONE"],
					"WEIGHT_PER_BAG" => $quarantine_table_data[$parking_dtls_id_by_prod_id[$prod_id_row]]["WEIGHT_PER_BAG"],
					"WEIGHT_PER_CONE" => $quarantine_table_data[$parking_dtls_id_by_prod_id[$prod_id_row]]["WEIGHT_CONE"],
					"REMARKS" => $quarantine_table_data[$parking_dtls_id_by_prod_id[$prod_id_row]]["REMARKS"],
					"ITEM_CATEGORY" => $quarantine_table_data[$parking_dtls_id_by_prod_id[$prod_id_row]]["ITEM_CATEGORY_ID"],
					"ORDER_ILE" => $quarantine_table_data[$parking_dtls_id_by_prod_id[$prod_id_row]]["ILE_PERCENT"],
					"STORE_ID" => $store_id,
					"FLOOR_ID" => $floor_id,
					"ROOM" => $room_id,
					"RACK" => $rack_id,
					"BIN_BOX" => $bin_id,
					"PROD_ID" => $prod_id_row,
					"ORIGIN_PROD_ID" => $prod_id_row,
					"CONS_UOM" => $quarantine_table_data[$parking_dtls_id_by_prod_id[$prod_id_row]]["UOM"],					
					"CONS_RATE" => $quarantine_table_data[$parking_dtls_id_by_prod_id[$prod_id_row]]["AVG_RATE"],					
					"ORDER_ILE_COST" => 0,
					"SELF" => $shelf_id,
					"PARKING_DTLS_ID" => $quarantine_table_data[$parking_dtls_id_by_prod_id[$prod_id_row]]["ID"],
					"CONS_ILE" => $quarantine_table_data[$parking_dtls_id_by_prod_id[$prod_id_row]]["AVG_RATE"] * $quarantine_table_data[$parking_dtls_id_by_prod_id[$prod_id_row]]["AVG_RATE"],
					"CONS_ILE_COST" => $quarantine_table_data[$parking_dtls_id_by_prod_id[$prod_id_row]]["AVG_RATE"] * $quarantine_table_data[$parking_dtls_id_by_prod_id[$prod_id_row]]["AVG_RATE"],
					"BALANCE_QNTY" => $weight_by_prod_id[$prod_id_row],
					"BALANCE_AMOUNT" => $quarantine_table_data[$parking_dtls_id_by_prod_id[$prod_id_row]]["CONS_AMOUNT"],
					"CONS_QUANTITY" => $weight_by_prod_id[$prod_id_row],
					"CONS_AMOUNT" => $weight_by_prod_id[$prod_id_row]*$quarantine_table_data[$parking_dtls_id_by_prod_id[$prod_id_row]]["RATE"],
					"NO_OF_BAGS" => $count_rfid_by_product[$prod_id_row],
					"GREY_QUANTITY" => $quarantine_table_data[$parking_dtls_id_by_prod_id[$prod_id_row]]["GREY_QUANTITY"],
					"ORDER_QNTY" =>$weight_by_prod_id[$prod_id_row],
					"ORDER_AMOUNT" => $quarantine_table_data[$parking_dtls_id_by_prod_id[$prod_id_row]]["AMOUNT"],
				];
				$inv_trans_id++;	
				$msg.=" insert +1 ";
				
			}
		}
		//print_r($save_data_arr);die;
		//print_r($save_data_arr);die;
		//$this->db->trans_begin();
		if($save_data_arr){
			
			$status = $this->db->insert_batch("INV_TRANSACTION",$save_data_arr);
			//$this->db->insert_batch("BUNDLE_DATA_RECV_ISSUE_FOR_CUT", $save_arr)
			//print_r($status);die;
			$msg.=" inserted ";
		}

		if($update_data_arr){
			$this->db->update_batch('INV_TRANSACTION', $update_data_arr, 'id');
			$msg.=" Updated ";
		}
		
		$trans_update_arr = array();
			foreach($table_yarn_grn as  $row){
				$trans_update_arr[] = [
					"TRANS_ID" => $trans_id_by_prod_id[$row->PROD_ID],
					"RFID_NO" => $row->RFID_NO,
				];
			}
		$status = $this->db->update_batch('RFID_YARN_DTLS', $trans_update_arr, 'RFID_NO');
		//print_r($status);die;

		if ($this->db->trans_status() === TRUE) {

			$status_2 = $this->db->trans_commit();
			$msg.=" Commited ";			
			//$resultset["status"] = "Failed";
		} else {
			$this->db->trans_rollback();
			$msg.=" Rolled back ";

		}
		//$status_2 = $this->db->trans_commit();
		return $msg;
	}

	public function purchase_req_dtls_by_mst_id($req_mst_id)
	{
		$query_purchase_req_dtls ="SELECT b.ITEM_CATEGORY_ID,b.ITEM_GROUP_ID,b.ITEM_SUB_GROUP_ID,b.ITEM_DESCRIPTION,b.PRODUCT_NAME_DETAILS,b.ITEM_SIZE,b.ID as PROD_ID,a.CONS_UOM,a.QUANTITY,a.RATE,a.AMOUNT,a.STOCK FROM INV_PURCHASE_REQUISITION_DTLS a,PRODUCT_DETAILS_MASTER b WHERE a.PRODUCT_ID=b.ID and a.MST_ID=$req_mst_id and a.STATUS_ACTIVE =1 and a.IS_DELETED =0 and b.STATUS_ACTIVE =1 and b.IS_DELETED =0";
		$table_purchase_req_dtls = $this->db->query($query_purchase_req_dtls)->result();

		$purchase_req_dtls_arr=array();


		if($table_purchase_req_dtls){
			$status = 200;
			$msg = "Data Found";
			$lib_item_category_list = return_library_array("SELECT ID,SHORT_NAME from LIB_ITEM_CATEGORY_LIST", "ID", "SHORT_NAME");
			$lib_item_group = return_library_array("SELECT ID,ITEM_NAME from LIB_ITEM_GROUP", "ID", "ITEM_NAME");
			$lib_item_sub_group = return_library_array("SELECT ID,SUB_GROUP_NAME from LIB_ITEM_SUB_GROUP", "ID", "ITEM_NAME");
			$lib_supplier = return_library_array("SELECT ID,SUPPLIER_NAME from LIB_SUPPLIER", "ID", "SUPPLIER_NAME");
			$unit_of_measurement = array(1 => "Pcs", 2 => "Dzn", 3 => "Grs", 4 => "GG", 10 => "Mg", 11 => "Gm", 12 => "Kg", 13 => "Quintal", 14 => "Ton", 15 => "Lbs", 20 => "Km", 21 => "Hm", 22 => "Dm", 23 => "Mtr", 24 => "Dcm", 25 => "CM", 26 => "MM", 27 => "Yds", 28 => "Feet", 29 => "Inch", 30 => "CFT", 31 => "SFT", 40 => "Ltr", 41 => "ML", 50 => "Roll", 51 => "Coil", 52 => "Cone", 53 => "Bag", 54 => "Box", 55 => "Drum", 56 => "Bottle", 57 => "Pack", 58 => "Set", 59 => "Can", 60 => "Each", 61 => "Gallon", 62 => "Lachi", 63 => "Pair", 64 => "Lot", 65 => "Packet", 66 => "Pot", 67 => "Book", 68 => "Culind", 69 => "Ream", 70 => "Cft", 71 => "Syp", 72 => "K.V", 73 => "CU-M3", 74 => "Bundle", 75 => "Strip", 76 => "SQM", 77 => "Ounce", 78 => "Cylinder", 79 => "Course", 80 => "Sheet", 81 => "RFT", 82 => "Square Inch", 83 => "Carton", 84 => "Thane", 85 => "Gross Yds", 86 => "Jar", 87 => "Reel", 88 => "CBM",89=>"Tub",90=>"KVA",91=>"KW",92=>"Pallet",93=>"Case",94=>"Job",95=>"KIT",96=>"Watt-Peak",97=>"NOS",98=>"NR");

			$prod_id_arr = array();
			foreach($table_purchase_req_dtls as $row){
				$prod_id_arr[$row->PROD_ID]=$row->PROD_ID;
			}
			$prod_ids_str = implode(",",$prod_id_arr);
			//print_r($prod_ids_str );die;
			$query_last_supplier_rate = "SELECT max(b.ID), b.PROD_ID,b.CONS_RATE,b.SUPPLIER_ID FROM INV_TRANSACTION b WHERE b.PROD_ID in ($prod_ids_str) and b.transaction_type=1 and b.status_active=1 and b.is_deleted=0 group by b.prod_id,b.cons_rate,b.supplier_id";
			$table_last_supplier_rate = $this->db->query($query_last_supplier_rate)->result();
			$last_rate = array();
			$last_supplier = array();
			foreach($table_last_supplier_rate as $row){
				$last_rate[$row->PROD_ID] = $row->CONS_RATE;
				$last_supplier[$row->PROD_ID] = $row->SUPPLIER_ID;
			}
			//print_r($last_supplier);die;
		}else{
			$status = 404;
			$msg = "No Data Found in Database";
		}

		foreach($table_purchase_req_dtls as $row){
			$purchase_req_dtls_arr[] = [
                "ITEM_CATEGORY" => $lib_item_category_list[$row->ITEM_CATEGORY_ID],
                "ITEM_GROUP" => $lib_item_group[$row->ITEM_GROUP_ID],
                "ITEM_SUB_GROUP" => $lib_item_sub_group[$row->ITEM_SUB_GROUP_ID],
                "ITEM_SIZE" => $row->ITEM_SIZE,
                "ITEM_DESCRIPTION" => $row->ITEM_DESCRIPTION,
                "PRODUCT_NAME_DETAILS" => $row->PRODUCT_NAME_DETAILS,
                "CONS_UOM" => $unit_of_measurement[$row->CONS_UOM],
                "QUANTITY" => $row->QUANTITY,
                "RATE" => $row->RATE,
                "AMOUNT" => $row->AMOUNT,
                "STOCK" => $row->STOCK,
                "LAST_RATE" => $last_rate[$row->PROD_ID],
                "LAST_SUPPLIER" => $lib_supplier[$last_supplier[$row->PROD_ID]],
            ];
        }
		$data_arr = [
			"DATA" => $purchase_req_dtls_arr,
			"MSG" => $msg,
			"STATUS" => $status,
		];
		return $data_arr;
		//print_r($table_purchase_req_dtls);die;
	}

	public function roll_wise_grey_sales_order_to_sales_order_out($response)
	{
		$msg = "";
		$response = json_decode($response);
		$cbo_company_id = $response->resultset->MasterPart->COMPANY_ID;
		$txt_challan_no = $response->resultset->MasterPart->TXT_CHALLAN_NO;
		$app_user_id = $response->resultset->MasterPart->APP_USER_ID;
		$room_rack_dtls_id = $response->resultset->MasterPart->ROOM_RACK_DTLS_ID;
		$remarks = $response->resultset->MasterPart->REMARKS;
		$txt_transfer_date = date("y-M-d",time());
		$pc_date_time = date("y-M-d h:i:s a",time());
		$cbo_transfer_criteria = 0;
		$cbo_purpose_id = 0;
		$hid_to_color_id = 0;
		$txt_driver_name = "";
		$txt_mobile_no = "";
		$txt_vehicle_no = "";
		$txt_remark = "";
		$item_catagory = 13;
		$inserted_by = $app_user_id;
		$entry_form = 133;
		
		
		$txt_to_order_id = 0;
		$txt_from_order_id = 0001;
		$txt_requisition_no = 0;
		$txt_requisition_id = 0;
		$msg.="*Company id = $cbo_company_id*";
		$query_room_rack_table = "SELECT * FROM LIB_FLOOR_ROOM_RACK_DTLS a WHERE a.FLOOR_ROOM_RACK_DTLS_ID = $room_rack_dtls_id and a.STATUS_ACTIVE = 1 and a.IS_DELETED = 0";
		$table_room_rack_table = $this->db->query($query_room_rack_table)->row();

		if(empty($table_room_rack_table->FLOOR_ID)){
			$table_room_rack_table->FLOOR_ID = 0;
		}
		if(empty($table_room_rack_table->ROOM_ID)){
			$table_room_rack_table->ROOM_ID = 0;
		}
		if(empty($table_room_rack_table->RACK_ID)){
			$table_room_rack_table->RACK_ID = 0;
		}
		if(empty($table_room_rack_table->SHELF_ID)){
			$table_room_rack_table->SHELF_ID = 0;
		}
		if(empty($table_room_rack_table->BIN_ID)){
			$table_room_rack_table->BIN_ID = 0;
		}
		$barcode_arr = array();
		foreach($response->resultset->DtlsPart as $row)
		{
			$barcode_arr[$row->BARCODE_NO] = $row->BARCODE_NO;
			$roll_id_arr[$row->ROLL_ID] = $row->ROLL_ID;
		}
		$barcodes_str = implode(",",$barcode_arr);
		$roll_id_str = implode(",",$roll_id_str);
		$msg.="* Room_rack_dtls_id = $room_rack_dtls_id* Barcodes = $barcodes_str*";
		if($barcodes_str)
		{
			$query_barcode_details = "SELECT a.id,a.COMPANY_ID, a.entry_form, a.receive_basis, a.BOOKING_ID, b.prod_id, b.yarn_lot, b.color_id as color_names, b.yarn_count, b.stitch_length, b.brand_id, b.body_part_id, b.floor_id, b.room, b.rack, b.self, b.bin_box, c.id as roll_id, c.barcode_no, c.po_breakdown_id, c.roll_no, c.qnty, c.roll_id as roll_id_prev, c.rate,c.amount,b.UOM,c.QNTY as ROLL_WEIGHT, 1 as type,c.booking_no,a.store_id, d.detarmination_id, d.gsm, d.dia_width, e.id, e.job_no, e.job_no_prefix_num, to_char(e.insert_date,'YYYY') as year, e.delivery_date, e.style_ref_no, e.buyer_id, e.booking_id as ORDER_ID, e.sales_booking_no,e.po_buyer, e.within_group
			from inv_receive_master a, pro_grey_prod_entry_dtls b, pro_roll_details c, fabric_sales_order_mst e, product_details_master d 
			WHERE a.id=b.mst_id and b.id=c.dtls_id and b.prod_id=d.id and c.po_breakdown_id=e.id and b.trans_id<>0 and a.entry_form in(2,22,58,84) and c.entry_form in(2,22,58,84) and c.is_transfer!=6 and c.re_transfer=0 and c.status_active=1 and c.is_deleted=0 and c.is_service=0 and c.barcode_no in ($barcodes_str)
			union all 
			select a.id,a.COMPANY_ID, a.entry_form, 0 as receive_basis, 0 as BOOKING_ID, b.from_prod_id as prod_id, b.yarn_lot, b.color_names, b.y_count as yarn_count, b.stitch_length, b.brand_id, b.to_body_part as body_part_id, b.to_floor_id as floor_id, b.to_room as room, b.to_rack as rack, b.to_shelf as self, b.to_bin_box as bin_box, c.id as roll_id, c.barcode_no, c.po_breakdown_id, c.roll_no, c.qnty, c.roll_id as roll_id_prev, c.rate,c.amount,b.UOM,c.QNTY as ROLL_WEIGHT, 2 as type, c.booking_no, b.to_store as store_id, d.detarmination_id, d.gsm, d.dia_width, e.id, e.job_no, e.job_no_prefix_num, to_char(e.insert_date,'YYYY') as year, e.delivery_date, e.style_ref_no, e.buyer_id, e.booking_id as ORDER_ID, e.sales_booking_no,e.po_buyer, e.within_group  		
			from inv_item_transfer_mst a, inv_item_transfer_dtls b, pro_roll_details c, fabric_sales_order_mst e, product_details_master d WHERE a.id=b.mst_id and b.id=c.dtls_id and b.from_prod_id=d.id and c.po_breakdown_id=e.id and a.entry_form in(133) and c.entry_form in(133) and c.re_transfer=0 and c.status_active=1 and c.is_deleted=0 and c.is_service=0 and c.barcode_no in ($barcodes_str)";
			//print_r($query_barcode_details);die;
			$table_barcode_details = $this->db->query($query_barcode_details)->result();
			$order_id_by_barcode = array();
			$company_id_by_barcode = array();
			$save_data_by_barcode = array();
			$order_id = 0;
			$roll_data_by_barcode = array();
			foreach($table_barcode_details as $row)
			{
				$order_id_by_barcode[$row->BARCODE_NO] = $row->ORDER_ID;
				$company_id_by_barcode[$row->BARCODE_NO] = $row->COMPANY_ID;
				$order_id = $row->ORDER_ID;
				$body_part_id = $row->BODY_PART_ID;
				$roll_data_by_barcode[$row->BARCODE_NO]["PROD_ID"] = ($row->PROD_ID) ? $row->PROD_ID : 0;
				$roll_data_by_barcode[$row->BARCODE_NO]["UOM"] = ($row->UOM) ? $row->UOM : 0;
				$roll_data_by_barcode[$row->BARCODE_NO]["ROLL_WEIGHT"] = ($row->ROLL_WEIGHT)? $row->ROLL_WEIGHT : 0;
				$roll_data_by_barcode[$row->BARCODE_NO]["RATE"] = ($row->RATE)? $row->RATE : 0;
				$roll_data_by_barcode[$row->BARCODE_NO]["CONS_AMOUNT"] = $row->RATE*$row->ROLL_WEIGHT;
				$roll_data_by_barcode[$row->BARCODE_NO]["STITCH_LENGTH"] = ($row->STITCH_LENGTH) ? $row->STITCH_LENGTH : 0;
				$roll_data_by_barcode[$row->BARCODE_NO]["BODY_PART_ID"] = ($row->BODY_PART_ID) ? $row->BODY_PART_ID :0;
				$roll_data_by_barcode[$row->BARCODE_NO]["YARN_COUNT"] = ($row->YARN_COUNT)? $row->YARN_COUNT : 0;
				$roll_data_by_barcode[$row->BARCODE_NO]["BRAND_ID"] = ($row->BRAND_ID) ? $row->BRAND_ID : 0;
				$roll_data_by_barcode[$row->BARCODE_NO]["YARN_LOT"] = ($row->YARN_LOT) ? $row->YARN_LOT : 0 ;
				$roll_data_by_barcode[$row->BARCODE_NO]["COLOR_NAMES"] = ($row->COLOR_NAMES)?$row->COLOR_NAMES:0;
				$roll_data_by_barcode[$row->BARCODE_NO]["PO_BREAKDOWN_ID"] = ($row->PO_BREAKDOWN_ID) ? $row->PO_BREAKDOWN_ID : 0;
				$roll_data_by_barcode[$row->BARCODE_NO]["QNTY"] = ($row->QNTY)?$row->QNTY : 0;
				$roll_data_by_barcode[$row->BARCODE_NO]["BOOKING_NO"] = ($row->BOOKING_NO)? $row->BOOKING_NO : 0;
				$roll_data_by_barcode[$row->BARCODE_NO]["ROLL_NO"] = ($row->ROLL_NO)? $row->ROLL_NO : 0;
				$roll_data_by_barcode[$row->BARCODE_NO]["ROLL_ID_PREV"] = ($row->ROLL_ID_PREV) ? $row->ROLL_ID_PREV : 0;
				$roll_data_by_barcode[$row->BARCODE_NO]["ROLL_ID"] = ($row->ROLL_ID)  ? $row->ROLL_ID : 0;
				$roll_data_by_barcode[$row->BARCODE_NO]["ENTRY_FORM"] = $row->ENTRY_FORM;
				$roll_data_by_barcode[$row->BARCODE_NO]["RECEIVE_BASIS"] = ($row->RECEIVE_BASIS) ? $row->RECEIVE_BASIS : 0;
				$roll_data_by_barcode[$row->BARCODE_NO]["BOOKING_NO"] = ($row->BOOKING_NO) ? $row->BOOKING_NO : "";
				$roll_data_by_barcode[$row->BARCODE_NO]["BOOKING_ID"] = ($row->BOOKING_ID) ? $row->BOOKING_ID : 0;
				$roll_data_by_barcode[$row->BARCODE_NO]["BARCODE_NO"] = ($row->BARCODE_NO) ? $row->BARCODE_NO : 0;
				
			}
			//print_r($roll_data_by_barcode);die;
			$inv_item_transfer_mst_id = return_next_id('ID', 'INV_ITEM_TRANSFER_MST');
			//print_r($cbo_company_id);die;
			$new_transfer_system_id = explode("*", return_next_id_by_sequence("INV_ITEM_TRANSFER_MST_PK_SEQ", "INV_ITEM_TRANSFER_MST", "", 1, $cbo_company_id, 'GSTST', 133, date("Y", time()), 13));
			$msg.="*new inv_item_trans_mst name = $new_transfer_system_id*";
			$save_data_inv_item_transfer_mst = [
												"ID" => $inv_item_transfer_mst_id,
												"TRANSFER_PREFIX" => $new_transfer_system_id[1],
												"TRANSFER_PREFIX_NUMBER" => $new_transfer_system_id[2],
												"TRANSFER_SYSTEM_ID" => $new_transfer_system_id[0],
												"COMPANY_ID" => $cbo_company_id,
												"CHALLAN_NO" => "",
												"TRANSFER_DATE" => $txt_transfer_date,
												"TRANSFER_CRITERIA" => 2,
												"TO_COMPANY" => $cbo_company_id,
												"FROM_ORDER_ID" => $order_id,
												"TO_ORDER_ID" => $order_id,
												"ITEM_CATEGORY" => 13,
												"TRANSFER_REQU_NO" => 0,
												"TRANSFER_REQU_ID" => 0,
												"PURPOSE" => 0,
												"TO_COLOR_ID" => 0,
												"DRIVER_NAME" => 0,
												"INSERTED_BY" => $app_user_id,
												"INSERT_DATE" => $pc_date_time,
												"STATUS_ACTIVE" => 1,
												"IS_DELETED" => 0,
												"ENTRY_FORM" => 133,
												"FROM_STORE_ID" => $table_room_rack_table->STORE_ID,
												"BODY_PART_ID" => $body_part_id,
												"REMARKS" => $remarks,
											];
			
			//$this->db->insert("INV_ITEM_TRANSFER_MST", $save_data_inv_item_transfer_mst);
		
			$programArr = return_library_array("SELECT b.BARCODE_NO, a.BOOKING_ID from INV_RECEIVE_MASTER a, PRO_ROLL_DETAILS b where a.id=b.mst_id and a.entry_form=2 and a.receive_basis=2 and b.entry_form=2 and b.barcode_no in($barcodes_str) and b.status_active=1 and b.is_deleted=0", "barcode_no", "booking_id");

			$trans_id = return_next_id('ID', 'INV_TRANSACTION');
			$tran_dtls_id = return_next_id('ID', 'INV_ITEM_TRANSFER_DTLS');
			$order_wise_prod_dtls_id = return_next_id('ID', 'ORDER_WISE_PRO_DETAILS');
			$pro_roll_details_id = return_next_id('ID', 'PRO_ROLL_DETAILS');

			$save_arr_trans_table = array();
			$save_arr_inv_item_transfer_dtls = array();
			$save_arr_order_wise_prod_details = array();
			$$save_arr_pro_roll_details = array();
			foreach($response->resultset->DtlsPart as $row)
			{
				if(empty($roll_data_by_barcode[$row->BARCODE_NO]["BARCODE_NO"])){
					$status = 404;
					break;
				}
				$program_no = '';
				if ($roll_data_by_barcode[$row->BARCODE_NO]["ENTRY_FORM"] == 2) {
					if ($roll_data_by_barcode[$row->BARCODE_NO]["RECEIVE_BASIS"] == 2) $program_no = $roll_data_by_barcode[$row->BARCODE_NO]["BOOKING_ID"];
				} else if ($roll_data_by_barcode[$row->BARCODE_NO]["ENTRY_FORM"] == 58 || $roll_data_by_barcode[$row->BARCODE_NO]["ENTRY_FORM"] == 84) {
					$program_no = $programArr[$row->BARCODE_NO];

				} else if ($roll_data_by_barcode[$row->BARCODE_NO]["ENTRY_FORM"] == 133) {
					$program_no = $roll_data_by_barcode[$row->BARCODE_NO]["BOOKING_NO"];

				} else if ($roll_data_by_barcode[$row->BARCODE_NO]["ENTRY_FORM"] == 22) {
					$program_no = $roll_data_by_barcode[$row->BARCODE_NO]["BOOKING_NO"];
				}

				$save_arr_trans_table[] = [
					"ID" => $trans_id,
					"MST_ID" => $inv_item_transfer_mst_id,
					"COMPANY_ID" => $cbo_company_id,
					"PROD_ID" => $roll_data_by_barcode[$row->BARCODE_NO]["PROD_ID"],
					"ITEM_CATEGORY" => 13,
					"TRANSACTION_TYPE" => 6,
					"TRANSACTION_DATE" => $txt_transfer_date,
					"ORDER_ID" => $order_id_by_barcode[$row->BARCODE_NO],
					"CONS_UOM" => $roll_data_by_barcode[$row->BARCODE_NO]["UOM"],
					"CONS_QUANTITY" => $roll_data_by_barcode[$row->BARCODE_NO]["ROLL_WEIGHT"],
					"CONS_RATE" => $roll_data_by_barcode[$row->BARCODE_NO]["RATE"],
					"CONS_AMOUNT" => $roll_data_by_barcode[$row->BARCODE_NO]["CONS_AMOUNT"],
					"FLOOR_ID" => $table_room_rack_table->FLOOR_ID,
					"ROOM" => $table_room_rack_table->ROOM_ID,
					"RACK" => $table_room_rack_table->RACK_ID,
					"SELF" => $table_room_rack_table->SHELF_ID,
					"BIN_BOX" => $table_room_rack_table->BIN_ID,
					"PROGRAM_NO" => $program_no,
					"STITCH_LENGTH" => $roll_data_by_barcode[$row->BARCODE_NO]["STITCH_LENGTH"],
					"STORE_ID" => $table_room_rack_table->STORE_ID,
					"INSERTED_BY" => $app_user_id,
					"INSERT_DATE" => $pc_date_time,
					"BODY_PART_ID" => $roll_data_by_barcode[$row->BARCODE_NO]["BODY_PART_ID"],
				];

				$save_arr_inv_item_transfer_dtls[] = [
					"ID" => $tran_dtls_id,
					"MST_ID" => $inv_item_transfer_mst_id,
					"TRANS_ID" => $trans_id,
					"FROM_PROD_ID" => $roll_data_by_barcode[$row->BARCODE_NO]["PROD_ID"],
					"TO_PROD_ID" => $roll_data_by_barcode[$row->BARCODE_NO]["PROD_ID"],
					"ITEM_CATEGORY" => 13,
					"TRANSFER_QNTY" => $roll_data_by_barcode[$row->BARCODE_NO]["ROLL_WEIGHT"],
					"ROLL" => 1,
					"RATE" => $roll_data_by_barcode[$row->BARCODE_NO]["RATE"],
					"TRANSFER_VALUE" => $roll_data_by_barcode[$row->BARCODE_NO]["CONS_AMOUNT"],
					"UOM" => $roll_data_by_barcode[$row->BARCODE_NO]["UOM"],
					"Y_COUNT" => $roll_data_by_barcode[$row->BARCODE_NO]["YARN_COUNT"],
					"BRAND_ID" => $roll_data_by_barcode[$row->BARCODE_NO]["BRAND_ID"],
					"YARN_LOT" => $roll_data_by_barcode[$row->BARCODE_NO]["YARN_LOT"],
					"COLOR_NAMES" => $roll_data_by_barcode[$row->BARCODE_NO]["COLOR_NAMES"],
					"FLOOR_ID" => $table_room_rack_table->FLOOR_ID,
					"ROOM" => $table_room_rack_table->ROOM_ID,
					"RACK" => $table_room_rack_table->RACK_ID,
					"SHELF" => $table_room_rack_table->SHELF_ID,
					"BIN_BOX" => $table_room_rack_table->BIN_ID,
					"FROM_PROGRAM" => $program_no,
					"TO_PROGRAM" => $program_no,
					"STITCH_LENGTH" => $roll_data_by_barcode[$row->BARCODE_NO]["STITCH_LENGTH"],
					"FROM_STORE" => $table_room_rack_table->STORE_ID,
					"TRANSFER_REQU_DTLS_ID" => 0,
					"INSERTED_BY" => $app_user_id,
					"INSERT_DATE" => $pc_date_time,
					"BODY_PART_ID" => $roll_data_by_barcode[$row->BARCODE_NO]["BODY_PART_ID"],
					"TO_BODY_PART" => $roll_data_by_barcode[$row->BARCODE_NO]["BODY_PART_ID"],
				];

				$save_arr_order_wise_prod_details[] = [
					"ID" => $order_wise_prod_dtls_id,
					"TRANS_ID" => $trans_id,
					"TRANS_TYPE" => 6,
					"ENTRY_FORM" => 133,
					"DTLS_ID" => $tran_dtls_id,
					"PO_BREAKDOWN_ID" => $roll_data_by_barcode[$row->BARCODE_NO]["PO_BREAKDOWN_ID"],
					"PROD_ID" => $roll_data_by_barcode[$row->BARCODE_NO]["PROD_ID"],
					"QUANTITY" => $roll_data_by_barcode[$row->BARCODE_NO]["ROLL_WEIGHT"],
					"IS_SALES" => 1,
					"INSERTED_BY" => $app_user_id,
					"INSERT_DATE" => $pc_date_time,
				];

				//$field_array_roll = "id, barcode_no, mst_id, dtls_id, po_breakdown_id, entry_form, qnty, rate, amount, booking_no, roll_no, roll_id, from_roll_id, is_transfer, transfer_criteria,is_sales, re_transfer, inserted_by, insert_date";
				$save_arr_pro_roll_details[] = [
					"ID" => $pro_roll_details_id,
					"BARCODE_NO" => $row->BARCODE_NO,
					"MST_ID" => $inv_item_transfer_mst_id,
					"DTLS_ID" => $tran_dtls_id,
					"PO_BREAKDOWN_ID" => $roll_data_by_barcode[$row->BARCODE_NO]["PO_BREAKDOWN_ID"],
					"ENTRY_FORM" => 133,
					"QNTY" => $roll_data_by_barcode[$row->BARCODE_NO]["QNTY"],
					"RATE" => 0,
					"AMOUNT" => 0,
					"BOOKING_NO" => $roll_data_by_barcode[$row->BARCODE_NO]["BOOKING_NO"],
					"ROLL_NO" => $roll_data_by_barcode[$row->BARCODE_NO]["ROLL_NO"],
					"ROLL_ID" => $roll_data_by_barcode[$row->BARCODE_NO]["ROLL_ID_PREV"],
					"FROM_ROLL_ID" => $roll_data_by_barcode[$row->BARCODE_NO]["ROLL_ID"],
					"IS_TRANSFER" => 6,
					"TRANSFER_CRITERIA" => 2,
					"IS_SALES" => 1,
					"RE_TRANSFER" => 0,
					"INSERTED_BY" => $app_user_id,
					"INSERT_DATE" => $pc_date_time,
				];

				
				//$msg.="";
				$trans_id++;
				$tran_dtls_id++;
				$order_wise_prod_dtls_id++;
				$pro_roll_details_id++;
			}

			if($status != 404)
			{

			
			//print_r($save_arr_pro_roll_details);die;
				$this->db->trans_begin();
				$this->db->insert("INV_ITEM_TRANSFER_MST", $save_data_inv_item_transfer_mst);
				$this->db->insert_batch("INV_TRANSACTION", $save_arr_trans_table);
				$this->db->insert_batch("INV_ITEM_TRANSFER_DTLS", $save_arr_inv_item_transfer_dtls);
				$this->db->insert_batch("ORDER_WISE_PRO_DETAILS", $save_arr_order_wise_prod_details);
				$this->db->insert_batch("PRO_ROLL_DETAILS", $save_arr_pro_roll_details);
				//$this->db->update_batch("PRO_ROLL_DETAILS", $update_arr_pro_roll_details, "ID");
				
				if ($this->db->trans_status() === FALSE)
				{
					$this->db->trans_rollback();
					$status = 405;
					$msg = "Transaction Failed";
					$data_arr = [
						"MSG" => $msg,
						"STATUS" => $status,
					];
					return $data_arr;
				}else{
					$this->db->trans_commit();

					$status = 200;
					$msg = "Transaction Successful";
					$data_arr = [
						"MSG" => $msg,
						"STATUS" => $status,
					];
					return $data_arr;
				}
			}
			else
			{
				$msg = "No Barcode Found";
				$data_arr = [
					"MSG" => $msg,
					"STATUS" => $status,
				];
				return $data_arr;
			}

		}
		else
		{
			$status = 404;
            $msg = "No Barcode Found";
            $data_arr = [
                "MSG" => $msg,
                "STATUS" => $status,
            ];
            return $data_arr;
		}
		
	}

	public function roll_wise_grey_sales_order_to_sales_order_in($response)
	{	$msg = "";
		$response = json_decode($response);
		$cbo_company_id = $response->resultset->MasterPart->COMPANY_ID;
		$txt_challan_no = $response->resultset->MasterPart->TXT_CHALLAN_NO;
		$app_user_id = $response->resultset->MasterPart->APP_USER_ID;
		$room_rack_dtls_id = $response->resultset->MasterPart->ROOM_RACK_DTLS_ID;
		$txt_transfer_date = date("y-M-d",time());
		$pc_date_time = date("y-M-d h:i:s a",time());
		$cbo_transfer_criteria = 0;
		$cbo_purpose_id = 0;
		$hid_to_color_id = 0;
		$txt_driver_name = "";
		$txt_mobile_no = "";
		$txt_vehicle_no = "";
		$txt_remark = "";
		$item_catagory = 13;
		$inserted_by = $app_user_id;
		$entry_form = 133;
		
		
		$txt_to_order_id = 0;
		$txt_from_order_id = 0001;
		$txt_requisition_no = 0;
		$txt_requisition_id = 0;

		$query_room_rack_table = "SELECT * FROM LIB_FLOOR_ROOM_RACK_DTLS a WHERE a.FLOOR_ROOM_RACK_DTLS_ID = $room_rack_dtls_id and a.STATUS_ACTIVE = 1 and a.IS_DELETED = 0";
		$table_room_rack_table = $this->db->query($query_room_rack_table)->row();

		if(empty($table_room_rack_table->FLOOR_ID)){
			$table_room_rack_table->FLOOR_ID = 0;
		}
		if(empty($table_room_rack_table->ROOM_ID)){
			$table_room_rack_table->ROOM_ID = 0;
		}
		if(empty($table_room_rack_table->RACK_ID)){
			$table_room_rack_table->RACK_ID = 0;
		}
		if(empty($table_room_rack_table->SHELF_ID)){
			$table_room_rack_table->SHELF_ID = 0;
		}
		if(empty($table_room_rack_table->BIN_ID)){
			$table_room_rack_table->BIN_ID = 0;
		}
		$barcode_arr = array();
		foreach($response->resultset->DtlsPart as $row)
		{
			$barcode_arr[$row->BARCODE_NO] = $row->BARCODE_NO;
			$roll_id_arr[$row->ROLL_ID] = $row->ROLL_ID;
		}
		$barcodes_str = implode(",",$barcode_arr);
		$roll_id_str = implode(",",$roll_id_str);
		$msg.="*Company = $cbo_company_id**Barcodes = $barcodes_str**Room_rack_dtls_id =$room_rack_dtls_id*";
		if($barcodes_str)
		{
			$query_barcode_old_mst_ids = "SELECT max(a.ID) as PREV_PRO_ROLL_DETAILS_ID,a.BARCODE_NO,a.MST_ID,a.DTLS_ID FROM PRO_ROLL_DETAILS a WHERE a.STATUS_ACTIVE=1 and a.IS_DELETED =0 and a.ENTRY_FORM = 133 and a.BARCODE_NO in ($barcodes_str) GROUP BY a.BARCODE_NO,a.MST_ID,a.DTLS_ID";

			$table_barcode_old_mst_ids = $this->db->query($query_barcode_old_mst_ids)->result();

			$mst_id_by_barcode = array();
			$dtls_id_by_barcode = array();
			foreach($table_barcode_old_mst_ids as $row)
			{
				$mst_id_by_barcode[$row->BARCODE_NO] = $row->MST_ID;
				$dtls_id_by_barcode[$row->BARCODE_NO] = $row->DTLS_ID;
			}



			$query_barcode_details = "SELECT a.id,a.COMPANY_ID, a.ENTRY_FORM, a.RECEIVE_BASIS, a.BOOKING_ID, b.prod_id, b.yarn_lot, b.color_id as color_names, b.yarn_count, b.stitch_length, b.brand_id, b.body_part_id, b.floor_id, b.room, b.rack, b.self, b.bin_box, c.id as roll_id, c.barcode_no, c.po_breakdown_id, c.roll_no, c.qnty, c.roll_id as roll_id_prev, c.rate,c.amount,b.UOM,c.QNTY as ROLL_WEIGHT, 1 as type,c.booking_no,a.store_id, d.detarmination_id, d.gsm, d.dia_width, e.id, e.job_no, e.job_no_prefix_num, to_char(e.insert_date,'YYYY') as year, e.delivery_date, e.style_ref_no, e.buyer_id, e.booking_id as ORDER_ID, e.sales_booking_no,e.po_buyer, e.within_group
			from inv_receive_master a, pro_grey_prod_entry_dtls b, pro_roll_details c, fabric_sales_order_mst e, product_details_master d 
			WHERE a.id=b.mst_id and b.id=c.dtls_id and b.prod_id=d.id and c.po_breakdown_id=e.id and b.trans_id<>0 and a.entry_form in(2,22,58,84) and c.entry_form in(2,22,58,84) and c.is_transfer!=6 and c.re_transfer=0 and c.status_active=1 and c.is_deleted=0 and c.is_service=0 and c.barcode_no in ($barcodes_str)
			union all 
			select a.id,a.COMPANY_ID, a.entry_form, 0 as receive_basis, 0 as BOOKING_ID, b.from_prod_id as prod_id, b.yarn_lot, b.color_names, b.y_count as yarn_count, b.stitch_length, b.brand_id, b.to_body_part as body_part_id, b.to_floor_id as floor_id, b.to_room as room, b.to_rack as rack, b.to_shelf as self, b.to_bin_box as bin_box, c.id as roll_id, c.barcode_no, c.po_breakdown_id, c.roll_no, c.qnty, c.roll_id as roll_id_prev, c.rate,c.amount,b.UOM,c.QNTY as ROLL_WEIGHT, 2 as type, c.booking_no, b.to_store as store_id, d.detarmination_id, d.gsm, d.dia_width, e.id, e.job_no, e.job_no_prefix_num, to_char(e.insert_date,'YYYY') as year, e.delivery_date, e.style_ref_no, e.buyer_id, e.booking_id as ORDER_ID, e.sales_booking_no,e.po_buyer, e.within_group  		
			from inv_item_transfer_mst a, inv_item_transfer_dtls b, pro_roll_details c, fabric_sales_order_mst e, product_details_master d WHERE a.id=b.mst_id and b.id=c.dtls_id and b.from_prod_id=d.id and c.po_breakdown_id=e.id and a.entry_form in(133) and c.entry_form in(133) and c.re_transfer=0 and c.status_active=1 and c.is_deleted=0 and c.is_service=0 and c.barcode_no in ($barcodes_str)";
			//print_r($query_barcode_details);die;
			$table_barcode_details = $this->db->query($query_barcode_details)->result();
			$order_id_by_barcode = array();
			$company_id_by_barcode = array();
			$save_data_by_barcode = array();
			$roll_data_by_barcode = array();
			$order_id = 0;
			foreach($table_barcode_details as $row)
			{	
				$order_id_by_barcode[$row->BARCODE_NO] = $row->ORDER_ID;
				$company_id_by_barcode[$row->BARCODE_NO] = $row->COMPANY_ID;
				$order_id = $row->ORDER_ID;
				$body_part_id = $row->BODY_PART_ID;
				$roll_data_by_barcode[$row->BARCODE_NO]["PROD_ID"] = $row->PROD_ID;
				$roll_data_by_barcode[$row->BARCODE_NO]["UOM"] = $row->UOM;
				$roll_data_by_barcode[$row->BARCODE_NO]["ROLL_WEIGHT"] = $row->ROLL_WEIGHT;
				$roll_data_by_barcode[$row->BARCODE_NO]["RATE"] = $row->RATE;
				$roll_data_by_barcode[$row->BARCODE_NO]["CONS_AMOUNT"] = $row->RATE*$row->ROLL_WEIGHT;
				$roll_data_by_barcode[$row->BARCODE_NO]["STITCH_LENGTH"] = $row->STITCH_LENGTH;
				$roll_data_by_barcode[$row->BARCODE_NO]["BODY_PART_ID"] = $row->BODY_PART_ID;
				$roll_data_by_barcode[$row->BARCODE_NO]["YARN_COUNT"] = $row->YARN_COUNT;
				$roll_data_by_barcode[$row->BARCODE_NO]["BRAND_ID"] = $row->BRAND_ID;
				$roll_data_by_barcode[$row->BARCODE_NO]["YARN_LOT"] = $row->YARN_LOT;
				$roll_data_by_barcode[$row->BARCODE_NO]["COLOR_NAMES"] = $row->COLOR_NAMES;
				$roll_data_by_barcode[$row->BARCODE_NO]["PO_BREAKDOWN_ID"] = $row->PO_BREAKDOWN_ID;
				$roll_data_by_barcode[$row->BARCODE_NO]["QNTY"] = $row->QNTY;
				$roll_data_by_barcode[$row->BARCODE_NO]["BOOKING_NO"] = $row->BOOKING_NO;
				$roll_data_by_barcode[$row->BARCODE_NO]["ROLL_NO"] = $row->ROLL_NO;
				$roll_data_by_barcode[$row->BARCODE_NO]["ROLL_ID_PREV"] = $row->ROLL_ID_PREV;
				$roll_data_by_barcode[$row->BARCODE_NO]["ROLL_ID"] = $row->ROLL_ID;
				$roll_data_by_barcode[$row->BARCODE_NO]["ENTRY_FORM"] = $row->ENTRY_FORM;
				$roll_data_by_barcode[$row->BARCODE_NO]["RECEIVE_BASIS"] = $row->RECEIVE_BASIS;
				$roll_data_by_barcode[$row->BARCODE_NO]["RECEIVE_BASIS"] = $row->RECEIVE_BASIS;
				$roll_data_by_barcode[$row->BARCODE_NO]["BOOKING_NO"] = $row->BOOKING_NO;
				$roll_data_by_barcode[$row->BARCODE_NO]["BOOKING_ID"] = $row->BOOKING_ID;
			}			
			
			//$this->db->insert("INV_ITEM_TRANSFER_MST", $save_data_inv_item_transfer_mst);
		
			$programArr = return_library_array("SELECT b.BARCODE_NO, a.BOOKING_ID from INV_RECEIVE_MASTER a, PRO_ROLL_DETAILS b where a.id=b.mst_id and a.entry_form=2 and a.receive_basis=2 and b.entry_form=2 and b.BARCODE_NO in($barcodes_str) and b.status_active=1 and b.is_deleted=0", "barcode_no", "booking_id");

			$trans_id = return_next_id('ID', 'INV_TRANSACTION');

			$order_wise_prod_dtls_id = return_next_id('ID', 'ORDER_WISE_PRO_DETAILS');
			//$pro_roll_details_id = return_next_id('ID', 'PRO_ROLL_DETAILS');

			

			$save_arr_trans_table = array();
			$save_arr_inv_item_transfer_dtls = array();
			$save_arr_order_wise_prod_details = array();
			$$save_arr_pro_roll_details = array();
			foreach($response->resultset->DtlsPart as $row)
			{
				$program_no = '';
				if ($roll_data_by_barcode[$row->BARCODE_NO]["ENTRY_FORM"] == 2) {
					if ($roll_data_by_barcode[$row->BARCODE_NO]["RECEIVE_BASIS"] == 2) $program_no = $roll_data_by_barcode[$row->BARCODE_NO]["BOOKING_ID"];
				} else if ($roll_data_by_barcode[$row->BARCODE_NO]["ENTRY_FORM"] == 58 || $roll_data_by_barcode[$row->BARCODE_NO]["ENTRY_FORM"] == 84) {
					$program_no = $programArr[$row->BARCODE_NO];

				} else if ($roll_data_by_barcode[$row->BARCODE_NO]["ENTRY_FORM"] == 133) {
					$program_no = $roll_data_by_barcode[$row->BARCODE_NO]["BOOKING_NO"];

				} else if ($roll_data_by_barcode[$row->BARCODE_NO]["ENTRY_FORM"] == 22) {
					$program_no = $roll_data_by_barcode[$row->BARCODE_NO]["BOOKING_NO"];
				}

				$save_arr_trans_table[] = [
					"ID" => $trans_id,
					"MST_ID" => $mst_id_by_barcode[$row->BARCODE_NO],
					"COMPANY_ID" => $cbo_company_id,
					"PROD_ID" => $roll_data_by_barcode[$row->BARCODE_NO]["PROD_ID"],
					"ITEM_CATEGORY" => 13,
					"TRANSACTION_TYPE" => 5,
					"TRANSACTION_DATE" => $txt_transfer_date,
					"ORDER_ID" => $order_id_by_barcode[$row->BARCODE_NO],
					"CONS_UOM" => $roll_data_by_barcode[$row->BARCODE_NO]["UOM"],
					"CONS_QUANTITY" => $roll_data_by_barcode[$row->BARCODE_NO]["ROLL_WEIGHT"],
					"CONS_RATE" => $roll_data_by_barcode[$row->BARCODE_NO]["RATE"],
					"CONS_AMOUNT" => $roll_data_by_barcode[$row->BARCODE_NO]["CONS_AMOUNT"],
					"FLOOR_ID" => $table_room_rack_table->FLOOR_ID,
					"ROOM" => $table_room_rack_table->ROOM_ID,
					"RACK" => $table_room_rack_table->RACK_ID,
					"SELF" => $table_room_rack_table->SHELF_ID,
					"BIN_BOX" => $table_room_rack_table->BIN_ID,
					"PROGRAM_NO" => $program_no,
					"STITCH_LENGTH" => $roll_data_by_barcode[$row->BARCODE_NO]["STITCH_LENGTH"],
					"STORE_ID" => $table_room_rack_table->STORE_ID,
					"INSERTED_BY" => $app_user_id,
					"INSERT_DATE" => $pc_date_time,
					"BODY_PART_ID" => $roll_data_by_barcode[$row->BARCODE_NO]["BODY_PART_ID"],
				];


				$save_arr_order_wise_prod_details[] = [
					"ID" => $order_wise_prod_dtls_id,
					"TRANS_ID" => $trans_id,
					"TRANS_TYPE" => 5,
					"ENTRY_FORM" => 133,
					"DTLS_ID" => $dtls_id_by_barcode[$row->BARCODE_NO],
					"PO_BREAKDOWN_ID" => $roll_data_by_barcode[$row->BARCODE_NO]["PO_BREAKDOWN_ID"],
					"PROD_ID" => $roll_data_by_barcode[$row->BARCODE_NO]["PROD_ID"],
					"QUANTITY" => $roll_data_by_barcode[$row->BARCODE_NO]["ROLL_WEIGHT"],
					"IS_SALES" => 1,
					"INSERTED_BY" => $app_user_id,
					"INSERT_DATE" => $pc_date_time,
				];

				$update_arr_inv_item_transfer_dtls[]=[
					"ID" => (int)$dtls_id_by_barcode[$row->BARCODE_NO],
					"TO_TRANS_ID" => (int)$trans_id,
					"TO_FLOOR_ID" => (int)$table_room_rack_table->FLOOR_ID,
					"TO_ROOM" => (int)$table_room_rack_table->ROOM_ID,
					"TO_RACK" => (int)$table_room_rack_table->RACK_ID,
					"TO_SHELF" => (int)$table_room_rack_table->FLOOR_ID,
					"TO_BIN_BOX" => (int)$table_room_rack_table->BIN_ID,
					"TO_STORE" => (int)$table_room_rack_table->STORE_ID,
				];
				

				$dtls_id_table = $dtls_id_by_barcode[$row->BARCODE_NO];
				$msg.="*Loop Barcode = $row->BARCODE_NO** DTLS_ID = $dtls_id_table** New Transaction ID = $trans_id* new order_wise id = $order_wise_prod_dtls_id**";
				$trans_id++;
				$order_wise_prod_dtls_id++;
			}

			//print_r($update_arr_inv_item_transfer_dtls);die;

            $this->db->trans_begin();
			$this->db->insert_batch("INV_TRANSACTION", $save_arr_trans_table);
			$this->db->insert_batch("ORDER_WISE_PRO_DETAILS", $save_arr_order_wise_prod_details);
			$this->db->update_batch("INV_ITEM_TRANSFER_DTLS", $update_arr_inv_item_transfer_dtls, "ID");

			if ($this->db->trans_status() === FALSE)
			{
                $this->db->trans_rollback();
				$status = 405;
				$msg .= "Transaction Failed";
				$data_arr = [
					"MSG" => $msg,
					"STATUS" => $status,
				];
				return $data_arr;
            }else{
				$this->db->trans_commit();

				$status = 200;
				$msg .= "Transaction Successful";
				$data_arr = [
					"MSG" => $msg,
					"STATUS" => $status,
				];
				return $data_arr;
			}

		}
		else
		{
			$status = 404;
            $msg = "No Barcode Found";
            $data_arr = [
                "MSG" => $msg,
                "STATUS" => $status,
            ];
            return $data_arr;
		}
		
	}

}//end class;
	



